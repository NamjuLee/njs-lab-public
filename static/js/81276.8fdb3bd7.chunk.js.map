{"version":3,"file":"static/js/81276.8fdb3bd7.chunk.js","mappings":"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","sources":["njslab/app-legacy/Implementation/Demos/Demo4AppSmartDrawing/Core/CanvasSD.ts","njslab/app-legacy/Implementation/Demos/Demo4AppSmartDrawing/Lib/NVector3.ts","njslab/app-legacy/NJSCore/IO/FirebaseWrapper.ts","njslab/app-legacy/Implementation/Demos/Demo4AppSmartDrawing/Implementation/SmartDrawing/index.ts","njslab/app-legacy/Implementation/Demos/Demo4AppSmartDrawing/Implementation/index.ts","njslab/app-legacy/Implementation/Demos/Demo4AppSmartDrawing/index.ts"],"sourcesContent":["import { AppML } from '..';\r\n// import { NVector3 } from '../Lib/NVector3';\r\n\r\n// import { DouglasPeucker } from '../Lib/DouglasPeucker';\r\n// import { tf } from '@tensorflow/tfjs';\r\n// import { NODE_ENVS } from '@tensorflow/tfjs-core/dist/test_util';\r\nexport class CanvasSD {\r\n    app: AppML;\r\n    ctx: CanvasRenderingContext2D;\r\n    canvas: HTMLCanvasElement;\r\n    vs: number[][] = [];\r\n    isDown: boolean = false;\r\n    radius: number = 3;\r\n    div: HTMLElement;\r\n    constructor(app: AppML) {\r\n        this.app = app;\r\n\r\n        const div = document.getElementById('classText');\r\n        if (div) { this.div = div; }\r\n        this.canvas = document.createElement('canvas');\r\n        if (this.app.host) {\r\n            this.app.host.appendChild(this.canvas);\r\n            this.canvas.width = 300; // this.app.host.clientWidth;\r\n            this.canvas.height = 300; // this.app.host.clientHeight;\r\n        }\r\n        this.canvas.style.background = '#ffffff';\r\n        this.canvas.style.margin = '20px';\r\n        this.canvas.style.zIndex = '1';\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        if (ctx !== null) { this.ctx = ctx; }\r\n        this.app.Init(this.ctx);\r\n        this.InitEvent();\r\n        this.Loop();\r\n    }\r\n    InitEvent() {\r\n        this.canvas.onmousedown = (ev: MouseEvent) => {\r\n            // console.log('dn');\r\n            this.isDown = true;\r\n            this.vs = [];\r\n        };\r\n        this.canvas.onmouseup = (ev: MouseEvent) => {\r\n            // console.log('dn');\r\n            this.isDown = false;\r\n            const result = this.app.implementation.smartDrawing.Predict(this.vs);\r\n            this.div.innerHTML = 'class: ' + result;\r\n            // console.debug(`pridiction:%c ${result} from MC model`, 'background: #4e2c7e; color: white');\r\n        };\r\n        this.canvas.onmousemove = (ev: MouseEvent) => {\r\n            if (!this.isDown) { return; }\r\n            this.vs.push([ev.offsetX, ev.offsetY]);\r\n            this.Loop();\r\n        };\r\n\r\n    }\r\n    // DotProductProcess(vs: number[][]) {\r\n\r\n    //     const nvs: NVector3[] = []\r\n    //     for (let i = 0; i < vs.length; ++i) {\r\n    //         nvs.push(new NVector3(vs[i][0], vs[i][1]))\r\n    //     }\r\n    //     console.log(nvs);\r\n\r\n    //     const length = 500;\r\n    //     const vsBySimplifyPath = DouglasPeucker.SimplifyPath(nvs, 5);\r\n\r\n    //     const nvsArray:number[][] = []\r\n    //     for (let i = 0 ; i < vsBySimplifyPath.length; ++i) {\r\n    //         nvsArray.push([vsBySimplifyPath[i].x, vsBySimplifyPath[i].y])\r\n    //     }\r\n    //     console.log(nvsArray);\r\n\r\n    //     console.log('vec len:', vsBySimplifyPath.length * 0.1);\r\n    //     let dotValue = NVector3.ComputeDotProducts(nvsArray);\r\n    //     dotValue = this.GetInterpolatedArray(dotValue, length);\r\n    //     dotValue.push(vsBySimplifyPath.length * 0.1);\r\n    //     // AFreehandSmartDrawing.dotArrayForTrainSimplify.push(dotValue);\r\n\r\n    //     let vArray = [];\r\n    //     for (let i = 0; i < vsBySimplifyPath.length; ++i) { vArray.push(vsBySimplifyPath[i].x, vsBySimplifyPath[i].y); }\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrainSimplify.push(vArray);\r\n\r\n    //     dotValue = NVector3.ComputeDotProducts(vs);\r\n    //     dotValue = this.GetInterpolatedArray(dotValue, length);\r\n    //     dotValue.push(vsBySimplifyPath.length * 0.1);\r\n    //     // AFreehandSmartDrawing.dotArrayForTrainOrigin.push(dotValue);\r\n\r\n    //     vArray = [];\r\n    //     for (let i = 0; i < vs.length; ++i) { vArray.push(vs[i][0], vs[i][1]); }\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrainOrigin.push(vArray);\r\n\r\n    //     // const resizeData = MathUtility.GetInterpolatedArray(dotValue, 500);\r\n    //     // console.log(resizeData);\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrain.push(resizeData);\r\n    // }\r\n\r\n    Loop() {\r\n        this.UpdateBG();\r\n\r\n        if (this.vs.length === 0) { return; }\r\n        // this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.lineWidth = 2;\r\n        this.ctx.fillStyle = 'rgba(250, 50, 15, 0.2)';\r\n        this.ctx.strokeStyle = 'rgba(250, 50, 15, 0.5)';\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.vs[0][0], this.vs[0][1]);\r\n        for (let i = 1; i < this.vs.length; ++i) {\r\n            this.ctx.lineTo(this.vs[i][0], this.vs[i][1]);\r\n        }\r\n        this.ctx.stroke();\r\n        for (let i of this.vs) {\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(i[0], i[1], this.radius, 0, 3.14 * 2);\r\n            this.ctx.closePath();\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n    public Clear() {\r\n        this.vs = [];\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.UpdateBG();\r\n    }\r\n    public UpdateBG() {\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = '#ddaadd';\r\n        this.ctx.fill();\r\n    }\r\n}","// import { ConcaveCore } from './ConcaveCore';\r\n// import { CPoint } from '../../AppDrawing/Canvas/CGeometry/CPoint';\r\n// import { UNIT, MathUtility } from '../Utilities/MathUtility';\r\n\r\n// import { NWebassemblyController } from '../../../Webassembly/Core/NWebassemblyController/NWebassemblyController';\r\n\r\nexport class NVector3 {\r\n  static eps: number = 0.0000001;\r\n  static origin: NVector3 = new NVector3(0, 0, 0);\r\n\r\n  x: number = 0.0;\r\n  y: number = 0.0;\r\n  z: number = 0.0;\r\n  w: number = 0.0;\r\n  long: number = 0.0;\r\n  lat: number = 0.0;\r\n  ele: number = 0.0;\r\n  proX: number = 0.0;\r\n  proY: number = 0.0;\r\n  proZ: number = 0.0;\r\n  alt: number = 0.0;\r\n  d: boolean = true;\r\n  isModified: boolean = false;\r\n\r\n  // tslint:disable-next-line:no-any\r\n  parent: any;\r\n\r\n  static GetVecforGraphicApp(long: number, lat: number, ele: number, proX: number, proY: number, proZ: number) {\r\n    let v = new NVector3(0, 0, 0);\r\n    v.long = long; v.lat = lat; v.ele = ele; v.proX = proX; v.proY = proY; v.proZ = proZ;\r\n    return v;\r\n  }\r\n  static DeepCopy(v: NVector3): NVector3 {\r\n    const out = new NVector3(v.x, v.y, v.z);\r\n    out.long = v.long; out.lat = v.lat;\r\n    out.proX = v.proX; out.proY = v.proY; out.proZ = v.proZ;\r\n    return out;\r\n  }\r\n  static Dot(a: NVector3, b: NVector3) {\r\n    return a.x * b.x + a.y * b.y + a.z * b.z;\r\n  }\r\n\r\n  // https://stackoverflow.com/questions/25122185/measuring-area-with-n-amount-of-gps-coordinates // no concave\r\n  static GetAreayConvexGPS(vec: NVector3[]) {\r\n\r\n    let lats = [], longs = [];\r\n    for (let i = 0; i < vec.length; ++i) {\r\n      lats.push(vec[i].lat); longs.push(vec[i].long);\r\n    }\r\n    lats.push(vec[0].lat); longs.push(vec[0].long); // make sure to add the first term to the end of both arrays\r\n\r\n    let latsSum = 0, longSum = 0; // get the average center point of the polygon\r\n\r\n    for (let i = lats.length; i--;) {\r\n      latsSum += lats[i]; longSum += longs[i];\r\n    }\r\n\r\n    let latOrigin = latsSum / lats.length;\r\n    let lonOrigin = longSum / longs.length;\r\n\r\n    // translate origin to (0,0) by shifting lat long and calculate the standard angle of the point\r\n    let angles = new Array(lats.length);\r\n\r\n    for (let j = lats.length; j--;) {\r\n      lats[j] -= latOrigin;\r\n      longs[j] -= lonOrigin;\r\n\r\n      if (longs[j] >= 0 && lats[j] >= 0) {\r\n        angles[j] = Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\r\n      } else if (longs[j] < 0 && lats[j] >= 0) {\r\n        angles[j] = 90 + Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\r\n      } else if (longs[j] < 0 && lats[j] < 0) {\r\n        angles[j] = 180 + Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\r\n      } else if (longs[j] >= 0 && lats[j] < 0) {\r\n        angles[j] = 270 + Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\r\n      }\r\n    }\r\n\r\n    // re-arrange the points from least to greatest angle\r\n    let curAng, curLat, curLon;\r\n\r\n    for (let l = 0; l < angles.length; l++) {\r\n      for (let k = 0; k < angles.length - 1; k++) {\r\n        curAng = angles[k];\r\n        curLat = lats[k];\r\n        curLon = longs[k];\r\n\r\n        if (curAng < angles[k + 1]) {\r\n          angles[k] = angles[k + 1];\r\n          lats[k] = lats[k + 1];\r\n          longs[k] = longs[k + 1];\r\n\r\n          angles[k + 1] = curAng;\r\n          lats[k + 1] = curLat;\r\n          longs[k + 1] = curLon;\r\n        }\r\n      }\r\n    }\r\n\r\n    // calculate area for irregular polygon\r\n    let sum1 = 0, sum2 = 0;\r\n\r\n    for (let t = 0; t < lats.length; t++) {\r\n      if (t !== lats.length - 1) {\r\n        sum1 += lats[t] * longs[t + 1];\r\n        sum2 += longs[t] * lats[t + 1];\r\n      } else {\r\n        sum1 += lats[t] * longs[0];\r\n        sum2 += longs[t] * lats[0];\r\n      }\r\n    }\r\n\r\n    let area = (sum1 - sum2) / 2.0;\r\n    // console.log('Area: ' + area * 6378137.0 * 6378137.0 / 2.0);\r\n    return area * 20; // * 6378137.0 * 6378137.0 / 2.0;\r\n  }\r\n  static ScalarRev_V_S_OUT(v: NVector3, s: number, out: NVector3) {\r\n    out.x = s * v.x;\r\n    out.y = s * v.y;\r\n    out.z = s * v.z;\r\n    return out;\r\n  }\r\n  static Add(v0: NVector3, v1: NVector3): NVector3 {\r\n    return new NVector3(v0.x + v1.x, v0.y + v1.y, v0.z + v1.z);\r\n  }\r\n  static Sub(v0: NVector3, v1: NVector3): NVector3 {\r\n    return new NVector3(v0.x - v1.x, v0.y - v1.y, v0.z - v1.z);\r\n  }\r\n  static Clone(v: NVector3): NVector3 {\r\n    return NVector3.DeepCopy(v);\r\n  }\r\n  static ZAxis(): NVector3 {\r\n    return new NVector3(0, 0, 1);\r\n  }\r\n  static YAxis(): NVector3 {\r\n    return new NVector3(0, 1, 0);\r\n  }\r\n  static Zero(): NVector3 {\r\n    return new NVector3(0, 0, 0);\r\n  }\r\n  static Origin(): NVector3 {\r\n    return new NVector3(0, 0, 0);\r\n  }\r\n  static Plus(v1: NVector3, v2: NVector3): NVector3 {\r\n    return new NVector3(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);\r\n  }\r\n  static Scale(v: NVector3, s: number): NVector3 {\r\n    return new NVector3(v.x * s, v.y * s, v.z * s);\r\n  }\r\n  static MidVec(v1: NVector3, v2: NVector3): NVector3 {\r\n    return new NVector3((v1.x + v2.x) * 0.5, (v1.y + v2.y) * 0.5, (v1.z + v2.z) * 0.5);\r\n  }\r\n  static CompareTwoVectors(v0: NVector3, v1: NVector3): boolean {\r\n    if (v0.x !== v1.x || v0.y !== v1.y || v0.z !== v1.z) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  static Length(v: NVector3): number {\r\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n  }\r\n  static Normalize(v: NVector3): NVector3 {\r\n    let len: number = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    return new NVector3(v.x / len, v.y / len, v.z / len);\r\n  }\r\n  // https://web.archive.org/web/20090214201206/http://valis.cs.uiuc.edu:80/~sariel/research/CG/compgeom/msg00827.html\r\n  static GetArea(vs: NVector3[]) {\r\n    let area = 0;\r\n    // // double center2dx = 0;\r\n    // // double center2dy = 0;\r\n    // for (let i = 0; i < vs.length - 1; i++) {\r\n    //   // tmreal t = 2 * vs[i].X * vs[i + 0].Y + vs[i].Y * vs[i + 1].X + vs[i].X * vs[i + 1].Y + 2 * vs[i + 1].X * vs[i + 1].Y;\r\n    //   area += (vs[i].x - vs[i + 1].x) * (vs[i].y + vs[i + 1].y);\r\n    //   // center2d.x += (+vs[i].X - vs[i + 1].X) * t;\r\n    //   // center2d.y += (-vs[i].Y + vs[i + 1].Y) * t;\r\n    // }\r\n    // area *= 0.5;\r\n    // // center2dx *= 1 / (6 * area);\r\n    // // center2dy *= 1 / (6 * area);\r\n    // return area;\r\n\r\n    for (let i = 0, l = vs.length; i < l; i++) {\r\n      let addX = vs[i].x;\r\n      let addY = vs[i === vs.length - 1 ? 0 : i + 1].y;\r\n      let subX = vs[i === vs.length - 1 ? 0 : i + 1].x;\r\n      let subY = vs[i].y;\r\n\r\n      area += (addX * addY * 0.5);\r\n      area -= (subX * subY * 0.5);\r\n    }\r\n\r\n    return Math.abs(area);\r\n  }\r\n  static GetAreaByLongLat(vs: NVector3[]) {\r\n    let area = 0;\r\n    // double center2dx = 0;\r\n    // double center2dy = 0;\r\n    for (let i = 0; i < vs.length - 1; i++) {\r\n      // tmreal t = 2 * vs[i].X * vs[i + 0].Y + vs[i].Y * vs[i + 1].X + vs[i].X * vs[i + 1].Y + 2 * vs[i + 1].X * vs[i + 1].Y;\r\n      area += (vs[i].long - vs[i + 1].long) * (vs[i].lat + vs[i + 1].lat);\r\n      // center2d.x += (+vs[i].X - vs[i + 1].X) * t;\r\n      // center2d.y += (-vs[i].Y + vs[i + 1].Y) * t;\r\n    }\r\n    area *= 0.5;\r\n    // center2dx *= 1 / (6 * area);\r\n    // center2dy *= 1 / (6 * area);\r\n    return area;\r\n  }\r\n  static GetGeoArea(vs: NVector3[]) {\r\n    let area = 0;\r\n    for (let i = 0; i < vs.length - 1; i++) {\r\n      area += (vs[i].x - vs[i + 1].x) * (vs[i].y + vs[i + 1].y);\r\n    }\r\n    area *= 0.5;\r\n    return Math.abs(area);\r\n  }\r\n  static GetGeoAreaBbyLongLat(vs: NVector3[]) {\r\n    let area = 0;\r\n    for (let i = 0; i < vs.length - 1; i++) {\r\n      area += (vs[i].long - vs[i + 1].long) * (vs[i].lat + vs[i + 1].lat);\r\n    }\r\n    area *= 0.5;\r\n    return Math.abs(area);\r\n  }\r\n  // static GetIndexByShortDistance(v: NVector3, vs: NVector3[]): number[] {\r\n  //   let index = -1;\r\n  //   let dis = Number.MAX_SAFE_INTEGER;\r\n  //   for (let i = 0; i < vs.length; ++i) {\r\n  //     let distance = NVector3.Distance(v, vs[i]);\r\n  //     if (distance < dis) {\r\n  //       dis = distance;\r\n  //       index = i;\r\n  //     }\r\n  //   }\r\n  //   return [index, dis];\r\n  // }\r\n  static Distance(v0: NVector3, v1: NVector3): number {\r\n    return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\r\n    // return NWebassemblyController.ctrller.Distance(v0.x, v0.y, v0.z, v1.x, v1.y, v1.z);\r\n  }\r\n  static Distance2(v1: NVector3, v2: NVector3): number {\r\n    let d: number =\r\n      (v1.x - v2.x) * (v1.x - v2.x) +\r\n      (v1.y - v2.y) * (v1.y - v2.y) +\r\n      (v1.z - v2.z) * (v1.z - v2.z);\r\n    return d;\r\n  }\r\n  static DotProduct(v1: NVector3, v2: NVector3): number {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n  }\r\n  static CrossProduct(v1: NVector3, v2: NVector3): NVector3 {\r\n    return new NVector3(\r\n      v1.y * v2.z - v1.z * v2.y,\r\n      v1.z * v2.x - v1.x * v2.z,\r\n      v1.x * v2.y - v1.y * v2.x\r\n    );\r\n  }\r\n  static DivideByNum(v0: NVector3, v1: NVector3, n: number = 5): NVector3[] {\r\n    let vs: NVector3[] = [];\r\n    let xOff = (v1.x - v0.x) / n;\r\n    let yOff = (v1.y - v0.y) / n;\r\n    let zOff = (v1.z - v0.z) / n;\r\n    for (let j = 0; j < n; ++j) {\r\n      let x = v0.x + xOff * j;\r\n      let y = v0.y + yOff * j;\r\n      let z = v0.z + zOff * j;\r\n      vs.push(new NVector3(x, y, z));\r\n    }\r\n    return vs;\r\n  }\r\n  // static DistancefromGeoV(v0: NVector3, v1: NVector3, unit: UNIT = CGeometry.appDrawing.activeCommands.unit): number {\r\n  //   let dis = NVector3.KMeterFromGeoGPSPos(v0, v1);\r\n  //   if (unit === UNIT.METER) { return dis * 1000; }\r\n  //   if (unit === UNIT.KM) { return dis; }\r\n  //   if (unit === UNIT.MILE) { return MathUtility.MilesFromKM(dis); }\r\n  //   return -1;\r\n  // }\r\n  static KMeterFromGeoGPSPos(gV0: NVector3, gV1: NVector3): number {\r\n    let R = 6378.137; // Radius of earth in KM // a = Equatorial radius (6,378.1370 km) // b = Polar radius (6,356.7523 km)\r\n    let dLat = gV1.lat * Math.PI / 180 - gV0.lat * Math.PI / 180;\r\n    let dLon = gV1.long * Math.PI / 180 - gV0.long * Math.PI / 180;\r\n    let a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(gV0.lat * Math.PI / 180) *\r\n      Math.cos(gV1.lat * Math.PI / 180) *\r\n      Math.sin(dLon / 2) *\r\n      Math.sin(dLon / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let d = R * c;\r\n    return d; // * 1000; // meters\r\n  }\r\n  static KMeterByTwoGeoPos(long0: number, lat0: number, long1: number, lat1: number) {\r\n    let v0 = new NVector3(0, 0); v0.long = long0; v0.lat = lat0;\r\n    let v1 = new NVector3(0, 0); v1.long = long1; v1.lat = lat1;\r\n    return NVector3.KMeterFromGeoGPSPos(v0, v1);\r\n  }\r\n  static KMeterFromGPSPos(gV0: NVector3, gV1: NVector3): number {\r\n    let R = 6378.137; // Radius of earth in KM // a = Equatorial radius (6,378.1370 km) // b = Polar radius (6,356.7523 km)\r\n    let dLat = gV1.y * Math.PI / 180 - gV0.y * Math.PI / 180;\r\n    let dLon = gV1.x * Math.PI / 180 - gV0.x * Math.PI / 180;\r\n    let a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(gV0.y * Math.PI / 180) *\r\n      Math.cos(gV1.y * Math.PI / 180) *\r\n      Math.sin(dLon / 2) *\r\n      Math.sin(dLon / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let d = R * c;\r\n    return d; // * 1000; // meters\r\n  }\r\n  static Get1KM_Long_ByGeoUnit(long: number = 0, lat: number = 0): number {\r\n    let v = new NVector3(long, lat, 0);\r\n    let addition = 0.0;\r\n    for (let i = 0; i < 10000; ++i) {\r\n      let dis = NVector3.KMeterFromGPSPos(v, new NVector3(v.x + addition, v.y, v.z));\r\n      if (1 < dis && dis < 1.001) {\r\n        // console.log('result long', i, dis);\r\n        return v.x + addition;\r\n      }\r\n      addition += 0.00001;\r\n    }\r\n    return -1;\r\n  }\r\n  static Get1KM_lat_ByGeoUnit(long: number = 0, lat: number = 0): number {\r\n    let v = new NVector3(long, lat, 0);\r\n    let addition = 0.0;\r\n    for (let i = 0; i < 10000; ++i) {\r\n      let dis = NVector3.KMeterFromGPSPos(v, new NVector3(v.x, v.y + addition, v.z));\r\n      if (1 < dis && dis < 1.001) {\r\n        // console.log('result lat', i, dis);\r\n        return v.y + addition;\r\n      }\r\n      addition += 0.00001;\r\n    }\r\n    return -1;\r\n  }\r\n  static Get1KM_Lat_Long_GeoUnit(long: number = 0, lat: number = 0): NVector3 {\r\n    let lng = NVector3.Get1KM_Long_ByGeoUnit(long, lat);\r\n    let la = NVector3.Get1KM_lat_ByGeoUnit(long, lat);\r\n    return new NVector3(lng, la, 0);\r\n  }\r\n  // ............................................................................ vec compute\r\n  // static CalculateFalloff(pts: NVector3[], pt: NVector3, s: number, f: number): number {\r\n  //   let newValue = 0.0;\r\n  //   for (let i = 0; i < pts.length; ++i) {\r\n  //     // let v = NJS.PointUtils.CalculateFalloff(pt, pts[i], s, f);\r\n  //     // newValue += v;\r\n  //   }\r\n  //   return newValue;\r\n  // }\r\n  static CalculateFalloff(pt: NVector3, attractor: NVector3, strength: number, falloff: number): number {\r\n    let v: NVector3 = attractor.Sub(pt);\r\n    let dist: number = v.Length();\r\n    return dist * (strength * Math.exp(-falloff * dist * dist));\r\n  }\r\n  static Attractor(pt: NVector3, attractor: NVector3, strength: number, falloff: number): NVector3 {\r\n    let v: NVector3 = attractor.Sub(pt);\r\n    v.Unitize();\r\n    let dist = v.Length();\r\n    return v.Mult(strength * Math.exp(-falloff * dist * dist));\r\n  }\r\n  static Explosion(pt: NVector3, Explosion: NVector3, strength: number, falloff: number): NVector3 {\r\n    let v = Explosion.Sub(pt);\r\n    v.Unitize();\r\n    let dist = v.Length();\r\n    return v.Mult(-(strength * Math.exp(-falloff * dist * dist)));\r\n  }\r\n  static Rotor(pt: NVector3, rotor: NVector3, strength: number, falloff: number): NVector3 {\r\n    let v = rotor.Sub(pt);\r\n    v.Unitize();\r\n    // v.Rotate(3.141592 / 2, NVector3.zAxis);\r\n    // let dist: number = v.Length;\r\n    // return (v.Mult (strength * (Math.exp(-falloff * dist * dist))));\r\n    return NVector3.Origin();\r\n  }\r\n\r\n  // ............................................................................ vec angle\r\n  static GetAngleBetween(v0: NVector3, v1: NVector3) {\r\n    return Math.atan2(v1.x - v0.x, v1.y - v0.y);\r\n  }\r\n  // .................................................\r\n  static GetCosAngleByTwoVectors(v0: NVector3, v1: NVector3): number {\r\n    return NVector3.DotProduct(NVector3.Normalize(v0), NVector3.Normalize(v1));\r\n  }\r\n  static GetAngleByTwoVectorsRadian(v0: NVector3, v1: NVector3): number {\r\n    return Math.acos(NVector3.GetCosAngleByTwoVectors(v0, v1));\r\n  }\r\n  static GetAngleByTwoVectors(v0: NVector3, v1: NVector3): number {\r\n    return NVector3.GetAngleByTwoVectorsRadian(v0, v1) * 180.0 / Math.PI;\r\n  }\r\n  static GetRotationByWorldCoodinate(v: NVector3): number {\r\n    let origin = new NVector3(1, 0, 0);\r\n    return NVector3.GetAngleByTwoVectors(origin, v);\r\n  }\r\n  static GetRotationByWorldCoodinateByTwo(v0: NVector3, v1: NVector3): number {\r\n    let v = v1.Sub(v0);\r\n    let origin = new NVector3(1, 0, 0);\r\n    if (v.y > 0) {\r\n      return NVector3.GetAngleByTwoVectors(origin, v) * -1;\r\n    } else {\r\n      return NVector3.GetAngleByTwoVectors(origin, v);\r\n    }\r\n  }\r\n  // ............................................................................\r\n  // static ToJSon(v) {\r\n  // var p = {\r\n  //             'point': [],\r\n  //             'primitive': 'point',\r\n  //             'units': {\r\n  //             'point': 'meters'\r\n  //         }\r\n  // }\r\n  // p.point = [v.x , v.y, v.z];\r\n  // return p;\r\n  // }\r\n  static ComputeDotProducts(vs: NVector3[]) {\r\n    let out: number[] = [];\r\n    for (let i = 0; i < vs.length; ++i) {\r\n      // let v0: NVector3 = NVector3.Origin();\r\n      // let v1: NVector3;\r\n      if (i < vs.length - 1) {\r\n        let v0 = new NVector3(vs[i].x, vs[i].y, vs[i].z);\r\n        let v1 = new NVector3(vs[i + 1].x, vs[i + 1].y, vs[i + 1].z);\r\n\r\n        v1.x -= v0.x;\r\n        v1.y -= v0.y;\r\n        v1.z -= v0.z;\r\n\r\n        let dot = NVector3.DotProduct(new NVector3(1, 0, 0), NVector3.Normalize(v1));\r\n        if (Number.isNaN(dot)) {\r\n          out.push(out[out.length - 1]);\r\n        } else {\r\n          out.push(dot);\r\n        }\r\n\r\n      } else {\r\n        let v0 = new NVector3(vs[i].x, vs[i].y, vs[i].z);\r\n        let v1 = new NVector3(vs[0].x, vs[0].y, vs[0].z);\r\n\r\n        v1.x -= v0.x;\r\n        v1.y -= v0.y;\r\n        v1.z -= v0.z;\r\n\r\n        let dot = NVector3.DotProduct(new NVector3(1, 0, 0), NVector3.Normalize(v1));\r\n        if (Number.isNaN(dot)) {\r\n          out.push(out[out.length - 1]);\r\n        } else {\r\n          out.push(dot);\r\n        }\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n  static ComputeDotProductsWithCenter(vs: NVector3[]) {\r\n    let cp = NVector3.GetCenterVecFromVecs(vs);\r\n    let out = [];\r\n    for (let i = 0; i < vs.length; ++i) {\r\n      let v0: NVector3;\r\n      let v1: NVector3;\r\n      if (i < vs.length - 1) {\r\n        v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\r\n        v1 = new NVector3(vs[i + 1].x - cp.x, vs[i + 1].y - cp.y, vs[i + 1].z - cp.z);\r\n      } else {\r\n        v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\r\n        v1 = new NVector3(vs[0].x - cp.x, vs[0].y - cp.y, vs[0].z - cp.z);\r\n      }\r\n      let dot = NVector3.DotProduct(NVector3.Normalize(v0), NVector3.Normalize(v1));\r\n      out.push(dot);\r\n    }\r\n    return out;\r\n  }\r\n  static GetXYDimForCircle(vs: NVector3[]) {\r\n    let cp = NVector3.GetCenterVecFromVecs(vs);\r\n    // let out = [];\r\n    let xx: number = 0;\r\n    let yy: number = 0;\r\n    let len = vs.length;\r\n    for (let i = 0; i < len; ++i) {\r\n\r\n      // if (i < vs.length - 1) {\r\n      xx += Math.abs(vs[i].x - cp.x);\r\n      yy += Math.abs(vs[i].y - cp.y);\r\n      // v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\r\n      // v1 = new NVector3(vs[i + 1].x - cp.x, vs[i + 1].y - cp.y, vs[i + 1].z - cp.z);\r\n      // } else {\r\n      // v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\r\n      // v1 = new NVector3(vs[0].x - cp.x, vs[0].y - cp.y, vs[0].z - cp.z);\r\n      // }\r\n      // let dot = NVector3.DotProduct(NVector3.Normalize(v0), NVector3.Normalize(v1));\r\n      // out.push(dot);\r\n    }\r\n    len += 2;\r\n    return [xx / len, yy / len];\r\n  }\r\n\r\n  static DistanceMouseWithTwoVecs(m: NVector3, v0: NVector3, v1: NVector3): number {\r\n    v0.x += 0.00001;\r\n    v0.y += 0.00001;\r\n    let boundary = NVector3.GetBoundingVecs(v0, v1);\r\n    let vec = NVector3.GetCloseVec(v0, v1, m.x, m.y, boundary, true);\r\n    return NVector3.Distance(m, vec);\r\n  }\r\n  static GetCloseVec(p0: NVector3, p1: NVector3, x: number, y: number, vecsBound: NVector3[], OnLine: boolean = true): NVector3 {\r\n    let pp1: NVector3 = new NVector3(p0.x, p0.y, p0.z);\r\n    let pp2: NVector3 = new NVector3(p1.x, p1.y, p1.z);\r\n    let v1: NVector3 = pp2.Sub(pp1);\r\n    let p: NVector3 = new NVector3(x, y, 0);\r\n    let v2: NVector3 = p.Sub(pp1);\r\n    v1.Unitize();\r\n    let cp = pp1.Add(v1.Mult(v2.DotProduct(v1)));\r\n    if (OnLine) {\r\n      if (NVector3.IsInsideOfVecs(cp, vecsBound)) {\r\n        return cp;\r\n      } else {\r\n        if (p0.Distance(cp) < p1.Distance(cp)) {\r\n          return new NVector3(p0.x, p0.y, p0.z);\r\n        } else {\r\n          return new NVector3(p1.x, p1.y, p1.z);\r\n        }\r\n      }\r\n    } else {\r\n      return cp;\r\n    }\r\n  }\r\n  static GetBoundingVecs(v0: NVector3, v1: NVector3): NVector3[] {\r\n    let listOfVec: NVector3[] = [];\r\n    let x: number = 0;\r\n    let y: number = 0;\r\n    let z: number = 0;\r\n    if (v0.x < v1.x) { x = v0.x; } else { x = v1.x; }\r\n    if (v0.y < v1.y) { y = v0.y; } else { y = v1.y; }\r\n    if (v0.z < v1.z) { z = v0.z; } else { z = v1.z; }\r\n    let nv0 = new NVector3(x, y, z);\r\n    if (v0.x > v1.x) { x = v0.x; } else { x = v1.x; }\r\n    if (v0.y > v1.y) { y = v0.y; } else { y = v1.y; }\r\n    if (v0.z > v1.z) { z = v0.z; } else { z = v1.z; }\r\n    let nv1 = new NVector3(x, y, z);\r\n    listOfVec.push(new NVector3(nv0.x, nv0.y, nv0.z));\r\n    listOfVec.push(new NVector3(nv1.x, nv0.y, nv0.z));\r\n    listOfVec.push(new NVector3(nv1.x, nv1.y, nv0.z));\r\n    listOfVec.push(new NVector3(nv0.x, nv1.y, nv0.z));\r\n    return listOfVec;\r\n  }\r\n  static GetBoundaryByVecWidthHeight(v: NVector3, width: number, height: number): NVector3[] {\r\n    let boundarVecsSub = [];\r\n    boundarVecsSub.push(new NVector3(v.x, v.y, v.z));\r\n    boundarVecsSub.push(new NVector3(v.x + width, v.y, v.z));\r\n    boundarVecsSub.push(new NVector3(v.x + width, v.y + height, v.z));\r\n    boundarVecsSub.push(new NVector3(v.x, v.y + height, v.z));\r\n    return boundarVecsSub;\r\n  }\r\n  // static GetBoundingByVecs(vs: NVector3[]): NVector3[] {\r\n  //   let listOfVec: NVector3[] = [];\r\n  //   let xMin: number = Number.MAX_SAFE_INTEGER;\r\n  //   let yMin: number = Number.MAX_SAFE_INTEGER;\r\n  //   let zMin: number = Number.MAX_SAFE_INTEGER;\r\n\r\n  //   let xMax: number = Number.MIN_SAFE_INTEGER;\r\n  //   let yMax: number = Number.MIN_SAFE_INTEGER;\r\n  //   let zMax: number = Number.MIN_SAFE_INTEGER;\r\n  //   for (let i = 0; i < vs.length; ++i) {\r\n\r\n  //     if (xMin > vs[i].x) { xMin = vs[i].x; }\r\n  //     if (yMin > vs[i].y) { yMin = vs[i].y; }\r\n  //     if (zMin > vs[i].z) { zMin = vs[i].z; }\r\n\r\n  //     if (xMax < vs[i].x) { xMax = vs[i].x; }\r\n  //     if (yMax < vs[i].y) { yMax = vs[i].y; }\r\n  //     if (zMax < vs[i].z) { zMax = vs[i].z; }\r\n\r\n  //   }\r\n  //   listOfVec.push(new NVector3(xMin, yMin, zMin));\r\n  //   listOfVec.push(new NVector3(xMax, yMax, zMax));\r\n  //   return listOfVec;\r\n  // }\r\n  static GetMinMaxVecFromVecs(vec: NVector3[]): NVector3[] {\r\n    let minX = Number.MAX_VALUE, minY = Number.MAX_VALUE, minZ = Number.MAX_VALUE;\r\n    let maxX = Number.MIN_VALUE, maxY = Number.MIN_VALUE, maxZ = Number.MIN_VALUE;\r\n    for (let v of vec) {\r\n      if (minX > v.x) { minX = v.x; } if (minY > v.y) { minY = v.y; } if (minZ > v.z) { minZ = v.z; }\r\n      if (maxX < v.x) { maxX = v.x; } if (maxY < v.y) { maxY = v.y; } if (maxZ < v.z) { maxZ = v.z; }\r\n    }\r\n    return [new NVector3(minX, minY, minZ), new NVector3(maxX, maxY, maxZ)];\r\n  }\r\n  static RemoveVecsWithinDis(vs: NVector3[], tor: number = 10): NVector3[] {\r\n    let vecs: NVector3[] = [];\r\n    for (let i = 0; i < vs.length - 1; ++i) {\r\n      let v0 = vs[i];\r\n      if (v0.d === false) { continue; }\r\n      for (let j = i + 1; j < vs.length; ++j) {\r\n        if (NVector3.Distance(v0, vs[j]) < tor) { vs[j].d = false; }\r\n      }\r\n    }\r\n    for (let i = 0; i < vs.length; ++i) { if (vs[i].d === true) { vecs.push(vs[i]); } }\r\n    // vecs.push(vs[vs.length - 1]);\r\n    return vecs;\r\n  }\r\n  // ...............................................................................\r\n  static IsInsideOfVecsWtihVecs(vs: NVector3[], vecs: NVector3[]): boolean {\r\n    let inside: boolean = true;\r\n    for (let i = 0; i < vs.length; i++) {\r\n      inside = NVector3.IsInsideOfVecs(vs[i], vecs);\r\n      if (!inside) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  static IsInsideOfVecs(v: NVector3, vecs: NVector3[]): boolean {\r\n    // ray-casting algorithm based on https://github.com/substack/point-in-polygon\r\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n    let x = v.x, y = v.y;\r\n    let inside = false;\r\n    for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\r\n      let xi = vecs[i].x,\r\n        yi = vecs[i].y;\r\n      let xj = vecs[j].x,\r\n        yj = vecs[j].y;\r\n      let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\r\n      if (intersect) {\r\n        inside = !inside;\r\n      }\r\n    }\r\n    return inside;\r\n  }\r\n  static IsInsideOfVecsByCrossing(v: NVector3, w: number, h: number, vs: NVector3[]) {\r\n    if (this.IsInsideOfVecs(new NVector3(v.x - w * 0.5, v.y - h * 0.5), vs)) { return true; }\r\n    if (this.IsInsideOfVecs(new NVector3(v.x + w * 0.5, v.y - h * 0.5), vs)) { return true; }\r\n    if (this.IsInsideOfVecs(new NVector3(v.x + w * 0.5, v.y + h * 0.5), vs)) { return true; }\r\n    if (this.IsInsideOfVecs(new NVector3(v.x - w * 0.5, v.y + h * 0.5), vs)) { return true; }\r\n    return false;\r\n  }\r\n  static IsInsideOfVecsByConcaveHull(v: NVector3, vs: NVector3[]) {\r\n    // let vsNum: number[][] = [];\r\n    // for (let i = 0; i < vs.length; ++i) {\r\n    //   vsNum.push([vs[i].x, vs[i].y]);\r\n    // }\r\n\r\n    // let result = ConcaveCore.hull(vsNum, 20)\r\n    // console.log(vs.length);\r\n    // console.log(result);\r\n\r\n    // for (let i = 0; i < result.length; ++i) {\r\n    //   new CPoint(result[i][0], result[i][1]);\r\n    // }\r\n  }\r\n  // Convex hull\r\n  // https://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain\r\n  static IsInsideOfVecsByConvexHull(v: NVector3, vecs: NVector3[]): boolean {\r\n    vecs = NVector3.ConvexHull(vecs);\r\n    if (NVector3.IsInsideOfVecs(v, vecs)) { return true; } else { return false; }\r\n  }\r\n  static ConvexHull(vs: NVector3[]): NVector3[] {\r\n    vs.sort(function (a: NVector3, b: NVector3) {\r\n      return a.x === b.x ? a.y - b.y : a.x - b.x;\r\n    });\r\n    let lower: NVector3[] = [];\r\n    for (let i = 0; i < vs.length; i++) {\r\n      while (lower.length >= 2 && NVector3.Cross(lower[lower.length - 2], lower[lower.length - 1], vs[i]) <= 0) { lower.pop(); }\r\n      lower.push(vs[i]);\r\n    }\r\n    let upper: NVector3[] = [];\r\n    for (let i = vs.length - 1; i >= 0; i--) {\r\n      while (upper.length >= 2 && NVector3.Cross(upper[upper.length - 2], upper[upper.length - 1], vs[i]) <= 0) { upper.pop(); }\r\n      upper.push(vs[i]);\r\n    }\r\n    upper.pop(); lower.pop();\r\n    for (let i = 0; i < upper.length; ++i) { lower.push(upper[i]); }\r\n    return lower;\r\n  }\r\n  static Cross(O: NVector3, A: NVector3, B: NVector3): number {\r\n    return (A.x - O.x) * (B.y - O.y) - (A.y - O.y) * (B.x - O.x);\r\n  }\r\n  static Cross_A_B_OUT(a: NVector3, b: NVector3, out: NVector3) {\r\n    const ax = a.x, ay = a.y, az = a.z, bx = b.x, by = b.y, bz = b.z;\r\n    out.x = ay * bz - az * by;\r\n    out.y = az * bx - ax * bz;\r\n    out.z = ax * by - ay * bx;\r\n    return out;\r\n  }\r\n\r\n  // http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\r\n  static CheckLineIntersection(p0: NVector3, p1: NVector3, p2: NVector3, p3: NVector3) {\r\n    // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n    let denominator: number = 0, a: number = 0, b: number = 0, numerator1: number = 0, numerator2: number = 0;\r\n    let onLine0: boolean = false, onLine1: boolean = false;\r\n    denominator = ((p3.y - p2.y) * (p1.x - p0.x)) - ((p3.x - p2.x) * (p1.y - p0.y));\r\n    let result: NVector3 = new NVector3(0, 0, 0);\r\n    if (denominator === 0) { return undefined; }\r\n    a = p0.y - p2.y;\r\n    b = p0.x - p2.x;\r\n    numerator1 = ((p3.x - p2.x) * a) - ((p3.y - p2.y) * b);\r\n    numerator2 = ((p1.x - p0.x) * a) - ((p1.y - p0.y) * b);\r\n    a = numerator1 / denominator;\r\n    b = numerator2 / denominator;\r\n\r\n    // if we cast these lines infinitely in both directions, they intersect here:\r\n    result.x = p0.x + (a * (p1.x - p0.x));\r\n    result.y = p0.y + (a * (p1.y - p0.y));\r\n    /*\r\n            // it is worth noting that this should be the same as:\r\n            x = p2.x + (b * (p3.x - p2.x));\r\n            y = p2.x + (b * (p3.y - p2.y));\r\n            */\r\n    // if line1 is a segment and line2 is infinite, they intersect if:\r\n    if (a > 0 && a < 1) {\r\n      onLine0 = true;\r\n    }\r\n    // if line2 is a segment and line1 is infinite, they intersect if:\r\n    if (b > 0 && b < 1) {\r\n      onLine1 = true;\r\n    }\r\n    // if line1 and line2 are segments, they intersect if both of the above are true\r\n    if (onLine0 && onLine1) {\r\n      return result;\r\n    } else { return undefined; }\r\n  }\r\n  // http://www.sunshine2k.de/coding/java/Polygon/Convex/polygon.htm\r\n  static CheckConvexity(vs: NVector3[]) {\r\n    if (vs.length < 3) { return false; }\r\n\r\n    let p: NVector3;\r\n    let v: NVector3;\r\n    let u: NVector3;\r\n    let res = 0;\r\n\r\n    for (let i = 0; i < vs.length; i++) {\r\n      p = vs[i];\r\n      let tmp = vs[(i + 1) % vs.length];\r\n      v = new NVector3(tmp.x - p.x, tmp.y - p.y, 0);\r\n      u = vs[(i + 2) % vs.length];\r\n\r\n      if (i === 0) { // in first loop direction is unknown, so save it in res\r\n        res = u.x * v.y - u.y * v.x + v.x * p.y - v.y * p.x;\r\n      } else {\r\n        let newres = u.x * v.y - u.y * v.x + v.x * p.y - v.y * p.x;\r\n        if ((newres > 0 && res < 0) || (newres < 0 && res > 0)) { return false; }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  //////////////////////////////////////////////////////////////////////////////// translation Utility\r\n  static MoveVecs(vecs: NVector3[], dir: NVector3): NVector3[] {\r\n    let temp: NVector3[] = [];\r\n    for (let i = 0; i < vecs.length; ++i) {\r\n      //\r\n      temp.push(NVector3.MoveVec(vecs[i], dir));\r\n    }\r\n    return temp;\r\n  }\r\n  static MoveVec(v: NVector3, dir: NVector3): NVector3 {\r\n    return new NVector3(v.x + dir.x, v.y + dir.y, v.z + dir.z);\r\n  }\r\n  static RotateVecsLoal(vecs: NVector3[], angle: number): NVector3[] {\r\n    let cptToLocal = NVector3.GetCenterVecFromVecs(vecs);\r\n    let cptToWorld = new NVector3(-cptToLocal.x, -cptToLocal.y, -cptToLocal.z);\r\n    let temp: NVector3[] = NVector3.MoveVecs(vecs, cptToWorld);\r\n    temp = NVector3.RotateVecs(temp, angle);\r\n    temp = NVector3.MoveVecs(temp, cptToLocal);\r\n    return temp;\r\n  }\r\n  static RotateVecs(vecs: NVector3[], angle: number) {\r\n    let temp: NVector3[] = [];\r\n    for (let i = 0; i < vecs.length; ++i) {\r\n      temp.push(NVector3.RotateVec(vecs[i], angle));\r\n    }\r\n    return temp;\r\n  }\r\n  static RotateVec(v: NVector3, angle: number): NVector3 {\r\n    let cos = Math.cos(angle * (3.14159265358979 / 180.0));\r\n    let sin = Math.sin(angle * (3.14159265358979 / 180.0));\r\n    let x = v.x * cos - v.y * sin;\r\n    let y = v.x * sin + v.y * cos;\r\n    return new NVector3(x, y, v.z);\r\n  }\r\n  static GetCenterVecFromVecs(vecs: NVector3[]): NVector3 {\r\n    let nv = new NVector3(0, 0, 0);\r\n    for (let i = 0, c = vecs.length; i < c; ++i) {\r\n      nv.Add(vecs[i]);\r\n    }\r\n    nv.Mult(1.0 / vecs.length);\r\n    return nv;\r\n  }\r\n\r\n  // .............................................................................\r\n  static MidVecGeo(p1: NVector3, p2: NVector3): NVector3 {\r\n    // return new NVector3(p1.screenX + p2.screenX * 0.5, p1.screenY + p2.screenY * 0.5, 0);\r\n    return new NVector3(p1.x + p2.x * 0.5, p1.y + p2.y * 0.5, 0);\r\n  }\r\n\r\n  // intersection // https://gist.github.com/gordonwoodhull/50eb65d2f048789f9558\r\n  // https://stackoverflow.com/questions/563198/whats-the-most-efficent-way-to-calculate-where-two-line-segments-intersect/1968345#1968345\r\n  static GetVecFromIntersection(vs: NVector3[]): NVector3[] | undefined {\r\n    let newVes: NVector3[] = [];\r\n    for (let j = 0; j < vs.length - 1; ++j) {\r\n      for (let k = j + 1; k < vs.length - 1; ++k) {\r\n        let v = NVector3.CheckLineIntersection(vs[j], vs[j + 1], vs[k], vs[k + 1]);\r\n        if (v) { newVes.push(v); }\r\n      }\r\n    }\r\n    if (newVes.length === 0) { return undefined; } else { return newVes; }\r\n  }\r\n  static between(a: number, b: number, c: number) {\r\n    return a - NVector3.eps <= b && b <= c + NVector3.eps;\r\n  }\r\n  static segment_intersection(v0: NVector3, v1: NVector3, v2: NVector3, v3: NVector3) {\r\n    var x = ((v0.x * v1.y - v0.y * v1.x) * (v2.x - v3.x) - (v0.x - v1.x) * (v2.x * v3.y - v2.y * v3.x)) /\r\n      ((v0.x - v1.x) * (v2.y - v3.y) - (v0.y - v1.y) * (v2.x - v3.x));\r\n    var y = ((v0.x * v1.y - v0.y * v1.x) * (v2.y - v3.y) - (v0.y - v1.y) * (v2.x * v3.y - v2.y * v3.x)) /\r\n      ((v0.x - v1.x) * (v2.y - v3.y) - (v0.y - v1.y) * (v2.x - v3.x));\r\n    if (isNaN(x) || isNaN(y)) {\r\n      return false;\r\n    } else {\r\n      if (v0.x >= v1.x) {\r\n        if (!NVector3.between(v1.x, x, v0.x)) { return false; }\r\n      } else {\r\n        if (!NVector3.between(v0.x, x, v1.x)) { return false; }\r\n      }\r\n      if (v0.y >= v1.y) {\r\n        if (!NVector3.between(v1.y, y, v0.y)) { return false; }\r\n      } else {\r\n        if (!NVector3.between(v0.y, y, v1.y)) { return false; }\r\n      }\r\n      if (v2.x >= v3.x) {\r\n        if (!NVector3.between(v3.x, x, v2.x)) { return false; }\r\n      } else {\r\n        if (!NVector3.between(v2.x, x, v3.x)) { return false; }\r\n      }\r\n      if (v2.y >= v3.y) {\r\n        if (!NVector3.between(v3.y, y, v2.y)) { return false; }\r\n      } else {\r\n        if (!NVector3.between(v2.y, y, v3.y)) { return false; }\r\n      }\r\n    }\r\n    return new NVector3(x, y);\r\n  }\r\n  // ............................................................................. end static\r\n\r\n  constructor(x: number, y: number, z: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n  }\r\n  Set(x: number, y: number, z: number): NVector3 {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Scale(v: number): NVector3 {\r\n    this.x *= v;\r\n    this.y *= v;\r\n    this.z *= v;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Mult(v: number): NVector3 {\r\n    this.x *= v;\r\n    this.y *= v;\r\n    this.z *= v;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  DivByVal(v: number): NVector3 {\r\n    this.x /= v;\r\n    this.y /= v;\r\n    this.z /= v;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  DivByVec(v: NVector3): NVector3 {\r\n    this.x /= v.x;\r\n    this.y /= v.y;\r\n    this.z /= v.z;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Add(v: NVector3): NVector3 {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    this.z += v.z;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Sub(v: NVector3): NVector3 {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    this.z -= v.z;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Negate() {\r\n    this.x *= -1;\r\n    this.y *= -1;\r\n    this.z *= -1;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Equals(v: NVector3) {\r\n    return this.x === v.x && this.y === v.y && this.z === v.z;\r\n  }\r\n  Clone(): NVector3 {\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Length(): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n  }\r\n  Unitize(): NVector3 {\r\n    return this.Normalize();\r\n  }\r\n  IsOverlap(v: NVector3, tor: number = 0.1) {\r\n    if (this.Distance(v) < tor) { return true; } else { return false; }\r\n  }\r\n  Normalize(): NVector3 {\r\n    let len: number = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    this.x = this.x / len;\r\n    this.y = this.y / len;\r\n    this.z = this.z / len;\r\n    return new NVector3(this.x, this.y, this.z);\r\n  }\r\n  Distance(v: NVector3): number {\r\n    return NVector3.Distance(new NVector3(this.x, this.y, this.z), v);\r\n  }\r\n  Distance2(v: NVector3): number {\r\n    return NVector3.Distance2(new NVector3(this.x, this.y, this.z), v);\r\n  }\r\n  DotProduct(v: NVector3): number {\r\n    return NVector3.DotProduct(new NVector3(this.x, this.y, this.z), v);\r\n  }\r\n  CrossProduct(v: NVector3): NVector3 {\r\n    return NVector3.CrossProduct(new NVector3(this.x, this.y, this.z), v);\r\n  }\r\n  SquareLength(): number {\r\n    let len: number = NVector3.Length(new NVector3(this.x, this.y, this.z));\r\n    return len * len;\r\n  }\r\n  FadeExp(attr: NVector3, dVal: number) {\r\n    let v = new NVector3(this.x, this.y, this.z);\r\n    v.Sub(attr);\r\n    return Math.exp(-dVal * v.SquareLength());\r\n  }\r\n  GetAngle(): number {\r\n    return Math.atan2(this.y, this.x);\r\n  }\r\n  GetAngleDegree() {\r\n    return 180 * this.GetAngle() / Math.PI;\r\n  }\r\n  ToJSON() {\r\n    /* */\r\n  }\r\n  ToString(): string {\r\n    let t: string = 'x: ' + this.x.toFixed(3).toString() + ' , y: ' + this.y.toFixed(3).toString() + ', z: ' + this.z.toFixed(3).toString();\r\n    return t;\r\n  }\r\n  ToFloat32Array() {\r\n    return new Float32Array([this.x, this.y, this.z]);\r\n  }\r\n}","\r\n// import firebase from 'firebase';\r\n\r\nexport class FirebaseWrapper {\r\n    firebaseConfig = {\r\n        apiKey: 'AIzaSyA1yKg85WGZoshbk8xR23cXr3SwpqXVgIc',\r\n        authDomain: 'njs-data.firebaseapp.com',\r\n        projectId: 'njs-data',\r\n        storageBucket: 'njs-data.appspot.com',\r\n        messagingSenderId: '635991152770',\r\n        appId: '1:635991152770:web:722f5356e0d14cea50fc9b'\r\n      };\r\n\r\n    // ref: firebase.database.Reference;\r\n    // db: firebase.database.Database;\r\n    // appDatabase: firebase.app.App;\r\n    constructor(type: string, callBack: (d: any) => any) {\r\n        // this.appDatabase = firebase.initializeApp(this.firebaseConfig);\r\n        // this.db = this.appDatabase.database();\r\n        // this.ref = this.db.ref(type);\r\n        // this.ref.on('value', callBack, this.getError);\r\n    }\r\n    public sendData(data: {}) {\r\n        // let result = this.ref.push(data);\r\n        // console.log(result.key);\r\n    }\r\n\r\n    public getData = (d: any) => {\r\n        let data = d.val();\r\n        console.log('get data', data);\r\n\r\n        for (let i in data) {\r\n            console.log(i, data[i]);\r\n        }\r\n    }\r\n    public getError = (d: any) => {\r\n        console.error(d);\r\n    }\r\n}","import { tensor2d, tidy, Tensor2D } from '@tensorflow/tfjs';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport { NVector3 } from '../../Lib/NVector3';\r\n\r\nimport { FirebaseWrapper } from '../../../../../NJSCore/IO/FirebaseWrapper';\r\n\r\nexport class SmartDrawing {\r\n    static CLASS_TYPE = {\r\n        0: 'CIRCLE',\r\n        1: 'TRI-GON',\r\n        2: 'ARROW_SINGLE',\r\n        3: 'ARROW_DOUBLE',\r\n        4: 'RECTANGLE',\r\n        5: 'TEXT',\r\n        6: 'CURVE',\r\n        7: 'HEART',\r\n        8: 'CLOUD'\r\n    };\r\n    // tslint:disable-next-line:no-any\r\n    modelLogisticRegression: any;\r\n    modelMultiClassification: tf.LayersModel;\r\n    divText: HTMLElement;\r\n\r\n    firebaseWrapper: FirebaseWrapper;\r\n    constructor() {\r\n        // tf.model;\r\n        this.AppendDiv();\r\n        // this.activeCommandController = new ActiveCommandController(this);\r\n        // this.LoadModelFromJsons();\r\n        this.LoadModelFromPublic();\r\n        console.log(tf.version);\r\n\r\n        this.firebaseWrapper = new FirebaseWrapper('smartDrawing', this.callback);\r\n    }\r\n    callback(d: any) {\r\n        let data = d.val();\r\n        console.log('callback -------- get data', data);\r\n\r\n        for (let i in data) {\r\n            console.log(i, data[i]);\r\n        }\r\n    }\r\n    AppendDiv() {\r\n        const div = document.getElementById('main');\r\n        const divText = document.createElement('div');\r\n        if (div && divText) {\r\n            this.divText = divText;\r\n            div.insertBefore(this.divText, null);\r\n            // this.divText.style.backgroundColor = '#ff0000';\r\n            this.divText.style.marginLeft = '20px';\r\n            // this.divText.style.width = '500px';\r\n            // this.divText.style.height = '500px';\r\n\r\n        }\r\n    }\r\n    async LoadModelFromJsons() {\r\n        // localStorage.setItem('model', modelMultiClassificationJsonTopo);\r\n\r\n        // // const modeltopo = modelMultiClassificationJson.modelTopology;\r\n        // console.log(modelMultiClassificationJsonTopo);\r\n        // console.log(localStorage);\r\n        // console.log(await io.listModels());\r\n        // // console.log(JSON.parse(JSON.stringify(modelMultiClassificationJson)));\r\n\r\n        // const model = await loadModel(io.browserFiles([modelMultiClassificationJsonTopo, modelMultiClassificationJson]));\r\n        // console.log(model);\r\n        // // this.modelLogisticRegression = await loadFrozenModel(modelMultiClassificationJsonTopo, modelMultiClassificationJson);\r\n        // console.log(this.modelLogisticRegression);\r\n        // // // this.modelMultiClassification = await loadModel(modelMultiClassificationJson);\r\n        // // this.modelMultiClassification = await loadModel('./model/modelMultiClassification/model.json');\r\n\r\n        // console.log(this.modelLogisticRegression);\r\n        // console.log(this.modelMultiClassification);\r\n    }\r\n    async LoadModelFromPublic() {\r\n        // http://www.njstudio.co.kr/ml/sm/modelLogisticRegression0/model.json\r\n        // let file = 'ML/SmartDrawing/modelLogisticRegression0/model.json';\r\n        let file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelLogisticRegression0/model.json`;\r\n        // let file = 'ML/SmartDrawing/new/model.json';\r\n        this.modelLogisticRegression = await this.LoadModelFromPath(file);\r\n\r\n        file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelMultiClassification0/model.json`;\r\n        this.modelMultiClassification = await this.LoadModelFromPath(file);\r\n    }\r\n    async LoadModelFromPath(file: string) {\r\n        // return await tf.loadLayersModel(thePath);\r\n        // console.log(thePath);\r\n        const model = await tf.loadLayersModel(file);\r\n        // console.log(model.summary());\r\n        return model;\r\n    }\r\n\r\n    PredictByLogisticRegression(data: number[]) {\r\n        if (this.modelLogisticRegression === undefined) { console.error('no model loaded'); return; }\r\n        // console.log('==============================');\r\n        return tidy(() => {\r\n\r\n            const d = tensor2d([data]);\r\n            const predictOut = this.modelLogisticRegression.predict(d) as Tensor2D;\r\n            const score = predictOut.dataSync();\r\n            return this.PredictionPostProcessingLogisticRegression(score[0]);\r\n        });\r\n    }\r\n    PredictByMultiClassification(data: number[]) {\r\n        if (this.modelMultiClassification === undefined) { console.error('no model loaded'); return; }\r\n        return tidy(() => {\r\n            // console.log(data);\r\n            const d = tf.tensor2d([data]);\r\n            // console.log(d.toFloat());\r\n            const predictOut = this.modelMultiClassification.predict(d) as Tensor2D;\r\n            // console.log(predictOut);\r\n            // console.log(predictOut.toString());\r\n            // console.log('lllllllllllllllll');\r\n            const rankings = true;\r\n            if (rankings) {\r\n                const logits = Array.from(predictOut.dataSync());\r\n                const rankingIndex = this.GetIndexBySortDescending(logits as number[]);\r\n                // console.log(logits);\r\n                // console.log(rankingIndex);\r\n                // console.log('#####################');\r\n                const outText: string[] = [];\r\n                for (let i of rankingIndex) {\r\n                    const probability: number = logits[i] as number;\r\n                    const text = 'class:' + SmartDrawing.CLASS_TYPE[i] + ', probability:' + probability.toFixed(5);\r\n                    console.log(text);\r\n                    outText.push(text);\r\n                }\r\n                this.UpdateDivWithText(outText);\r\n            }\r\n\r\n            const winner = predictOut.argMax(-1).dataSync()[0];\r\n            return SmartDrawing.CLASS_TYPE[winner];\r\n            // console.log(this.classStringsMultiClassification[winner]);\r\n            // return this.PredictionPostProcessingLogisticRegression(scoreArray[0]);\r\n        });\r\n    }\r\n    private UpdateDivWithText(outText: string[]) {\r\n        let text = `<p>*** FROM DEEP LEARNING MODEL B *** </p>`;\r\n        for (let i = 0; i < outText.length; ++i) {\r\n            text += `<p> ${outText[i]}</p>`;\r\n        }\r\n        this.divText.innerHTML = text;\r\n    }\r\n    private PredictionPostProcessingLogisticRegression(d: number) {\r\n        const result = Math.floor(d + 0.5);\r\n        return SmartDrawing.CLASS_TYPE[result];\r\n    }\r\n    private GetIndexBySortDescending(d: number[]) {\r\n        let len = d.length;\r\n        let indices = new Array(len);\r\n        for (var i = 0; i < len; ++i) { indices[i] = i; }\r\n        indices.sort((a, b) => { return d[a] > d[b] ? -1 : d[a] < d[b] ? 1 : 0; });\r\n        return indices;\r\n    }\r\n    public Remove() {\r\n        // console.log('revmoe smart');\r\n    }\r\n    public Predict(d: number[][]) {\r\n\r\n        const vs = [];\r\n        for (let i of d) { vs.push(new NVector3(i[0], i[1], 0)); }\r\n        // console.log(vs);\r\n        const dotPrediction = NVector3.ComputeDotProducts(vs);\r\n        // console.log(dotPrediction);\r\n        const dotValueInterpolated = this.GetInterpolatedArray(dotPrediction, 501);\r\n        // console.log(dotValueInterpolated);\r\n        // const dotValueInterpolated = dotPrediction\r\n        // console.log(this.GetInterpolatedArray(dotPrediction, 10));\r\n        // console.log(this.scene.annotationInstance.implementation.app.model.appAnnotation.addon.smartDrawing);\r\n        console.log('*** FROM DEEP LEARNING MODELS ***');\r\n        // const predictionLosisticR = this.smartDrawing.PredictByLogisticRegression(dotValueInterpolated);\r\n        // console.debug(`pridiction:%c ${predictionLosisticR} from LR Model`, 'background: #ddb137; color: black');\r\n        const predictionMultiC = this.PredictByMultiClassification(dotValueInterpolated);\r\n        console.debug(`pridiction:%c ${predictionMultiC} from MC model`, 'background: #4e2c7e; color: white');\r\n\r\n        // console.log(d, predictionMultiC);\r\n        this.firebaseWrapper.sendData({\r\n            class: predictionMultiC,\r\n            vec: d\r\n        });\r\n\r\n        return predictionMultiC;\r\n\r\n        // console.log(prediction);\r\n        // this.GetShapeFromPrediction(prediction, vs);\r\n    }\r\n    public LinearInterpolate(before: number, after: number, atPoint: number) {\r\n        return before + (after - before) * atPoint;\r\n\r\n        // const d = new Float32Array(10);\r\n        // d[5];\r\n    }\r\n    public GetInterpolatedArray(data: number[], fitCount: number) {\r\n        let newData = {};\r\n        let springFactor = (data.length - 1) / (fitCount - 1);\r\n        newData[0] = data[0]; // for new allocation\r\n        for (let i = 1; i < fitCount - 1; i++) {\r\n            let tmp: number = i * springFactor;\r\n            let before: number = +(Math.floor(tmp)).toFixed();\r\n            let after: number = +(Math.ceil(tmp)).toFixed();\r\n            let atPoint: number = tmp - before;\r\n            newData[i] = this.LinearInterpolate(data[before], data[after], atPoint);\r\n        }\r\n        newData[fitCount - 1] = data[data.length - 1]; // for new allocation\r\n        return newData;\r\n    }\r\n}\r\n\r\n","import { SmartDrawing } from './SmartDrawing';\r\nimport { AppML } from '..';\r\nexport class Implementation {\r\n    app: AppML;\r\n    smartDrawing: SmartDrawing;\r\n    constructor(app: AppML) {\r\n        this.app = app;\r\n        this.smartDrawing = new SmartDrawing();\r\n    }\r\n}","import { CanvasSD } from './Core/CanvasSD';\r\nimport { Implementation } from './Implementation';\r\n// import { Application } from '../';\r\nexport class AppML {\r\n    // app: Application;\r\n    canvasSD: CanvasSD;\r\n    implementation: Implementation;\r\n    host: HTMLElement;\r\n    divText: HTMLElement;\r\n    public static Init(id: string) {\r\n        new AppML(id);\r\n    }\r\n    constructor(id: string = 'main') {\r\n        // this.app = app;\r\n        console.log('id: ' + id + ', App Init!!!!!');\r\n        const host = document.getElementById(id);\r\n        if (host) { this.host = host; }\r\n        this.InitHTML();\r\n        // this.threeCore = new ThreeCore();\r\n        // this.tfCore = new TFCore();\r\n        this.canvasSD = new CanvasSD(this);\r\n        this.implementation = new Implementation(this);\r\n    }\r\n    InitHTML() {\r\n        const btn0 = document.createElement('button');\r\n        btn0.style.width = '100px';\r\n        btn0.style.height = '20px';\r\n        btn0.style.marginLeft = '20px';\r\n        btn0.style.zIndex = '5';\r\n        // btn0.style.left = '20px';\r\n        // btn0.style.top = '20px';\r\n        // btn0.style.position = 'absolute';\r\n        btn0.name = 'Clear';\r\n        btn0.innerText = 'Clear';\r\n        btn0.value = 'Clear';\r\n        btn0.onclick = () => { console.log(this); this.canvasSD.Clear(); };\r\n\r\n        this.host.appendChild(btn0);\r\n        this.divText = document.createElement('div');\r\n        this.divText.id = 'classText';\r\n        this.divText.style.zIndex = '5';\r\n        // this.divText.style.left = '150px';\r\n        // this.divText.style.top = '20px';\r\n        // this.divText.style.position = 'absolute';\r\n        this.divText.innerText = 'class: ';\r\n        this.divText.style.marginLeft = '20px';\r\n        this.host.appendChild(this.divText);\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        console.log('this is init...');\r\n    }\r\n    Clear() {\r\n        this.canvasSD.Clear();\r\n    }\r\n}"],"names":["CanvasSD","constructor","app","ctx","canvas","vs","isDown","radius","div","this","document","getElementById","createElement","host","appendChild","width","height","style","background","margin","zIndex","getContext","Init","InitEvent","Loop","onmousedown","ev","onmouseup","result","implementation","smartDrawing","Predict","innerHTML","onmousemove","push","offsetX","offsetY","UpdateBG","length","lineWidth","fillStyle","strokeStyle","beginPath","moveTo","i","lineTo","stroke","arc","closePath","fill","Clear","clearRect","rect","NVector3","static","long","lat","ele","proX","proY","proZ","v","out","x","y","z","a","b","vec","lats","longs","latsSum","longSum","curAng","curLat","curLon","latOrigin","lonOrigin","angles","Array","j","Math","abs","atan","PI","l","k","sum1","sum2","t","s","v0","v1","DeepCopy","v2","sqrt","len","area","n","xOff","yOff","zOff","gV0","gV1","dLat","dLon","sin","cos","atan2","long0","lat0","long1","lat1","KMeterFromGeoGPSPos","addition","dis","KMeterFromGPSPos","lng","Get1KM_Long_ByGeoUnit","la","Get1KM_lat_ByGeoUnit","pt","attractor","strength","falloff","dist","Sub","Length","exp","Unitize","Mult","Explosion","rotor","Origin","DotProduct","Normalize","acos","GetCosAngleByTwoVectors","GetAngleByTwoVectorsRadian","origin","GetAngleByTwoVectors","dot","Number","isNaN","cp","GetCenterVecFromVecs","xx","yy","m","boundary","GetBoundingVecs","GetCloseVec","Distance","p0","p1","vecsBound","OnLine","pp1","Add","IsInsideOfVecs","listOfVec","nv0","nv1","boundarVecsSub","minX","MAX_VALUE","minY","minZ","maxX","MIN_VALUE","maxY","maxZ","tor","vecs","d","inside","xi","yi","xj","yj","w","h","ConvexHull","sort","lower","Cross","pop","upper","O","A","B","ax","ay","az","bx","by","bz","p2","p3","denominator","numerator1","numerator2","onLine0","onLine1","p","u","res","tmp","newres","dir","temp","MoveVec","angle","cptToLocal","cptToWorld","MoveVecs","RotateVecs","RotateVec","nv","c","newVes","CheckLineIntersection","eps","v3","between","alt","isModified","parent","Set","Scale","DivByVal","DivByVec","Negate","Equals","Clone","IsOverlap","Distance2","CrossProduct","SquareLength","FadeExp","attr","dVal","GetAngle","GetAngleDegree","ToJSON","ToString","toFixed","toString","ToFloat32Array","Float32Array","FirebaseWrapper","type","callBack","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getData","data","val","console","log","getError","error","sendData","SmartDrawing","modelLogisticRegression","modelMultiClassification","divText","firebaseWrapper","AppendDiv","LoadModelFromPublic","tf","callback","insertBefore","marginLeft","async","file","LoadModelFromPath","PredictByLogisticRegression","undefined","tidy","tensor2d","score","predict","dataSync","PredictionPostProcessingLogisticRegression","PredictByMultiClassification","predictOut","logits","from","rankingIndex","GetIndexBySortDescending","outText","probability","text","CLASS_TYPE","UpdateDivWithText","winner","argMax","floor","indices","Remove","dotPrediction","ComputeDotProducts","dotValueInterpolated","GetInterpolatedArray","predictionMultiC","debug","class","LinearInterpolate","before","after","atPoint","fitCount","newData","springFactor","ceil","Implementation","AppML","id","canvasSD","InitHTML","btn0","name","innerText","value","onclick"],"sourceRoot":""}