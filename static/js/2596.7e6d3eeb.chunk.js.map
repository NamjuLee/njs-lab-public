{"version":3,"file":"static/js/2596.7e6d3eeb.chunk.js","mappings":"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","sources":["njslab/LabStarter/Starter-Mapbox/MapboxGLWrapper/index.ts","njslab/Workshop/workshop-mapping/30_Dissolve_Point/index.ts"],"sourcesContent":["import mapboxgl from \"mapbox-gl\";\r\n\r\nexport class MapboxGLWrapper {\r\n    public map: mapboxgl.Map\r\n    constructor(id: string) {\r\n\r\n        this.initMap(id);\r\n    }\r\n    private initMap(id: string) {\r\n        // https://account.mapbox.com\r\n        mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        this.map = new mapboxgl.Map({\r\n            container: id,\r\n            zoom: 15,\r\n            // minZoom: 10,\r\n            center: [-71.093161, 42.358871],\r\n            style: 'mapbox://styles/mapbox/dark-v10' // 'mapbox://styles/mapbox/streets-v11'\r\n        });\r\n        this.map.dragRotate.disable();\r\n\r\n        // https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent#type\r\n        this.map.on('mousemove', (e) => { this.mouseMove(e); });\r\n        this.map.on('click', (e) => { this.mouseClick(e); });\r\n        this.map.on('mousedown', (e) => { this.mouseDown(e); });\r\n        this.map.on('dblclick', (e) => { this.mouseDClick(e); });\r\n        this.map.on('mouseup', (e) => { this.mouseUp(e); });\r\n\r\n        let div = document.getElementsByClassName('mapboxgl-canvas')[0] as HTMLDivElement;\r\n        div.style.position = 'absolute';\r\n        \r\n        div = document.getElementsByClassName('mapboxgl-control-container')[0] as HTMLDivElement;\r\n        div.style.display = 'none';\r\n\r\n    }\r\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\r\n        // const v = new mapboxgl.LngLat(lon, lat);\r\n        // console.log(v);\r\n        this.map.setCenter({ lat, lng })\r\n    }\r\n    public toMap = (x: number, y: number) => {\r\n        const p = this.map.unproject({x, y} as any)\r\n        return [p.lng, p.lat];\r\n    }\r\n    public toScreen = (lon: number, lat: number) => {\r\n        const p = this.map.project([lon, lat])\r\n        return [p.x, p.y];\r\n    }\r\n    public mouseDown = (e) => {\r\n        // console.log(this.toScreen(-71.093161, 42.358871))\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseUp = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseMove = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseClick = (e) => {\r\n        // console.log(e)\r\n        \r\n        // console.log(this.toMap(100, 100));\r\n        // console.log(e.point)\r\n        // this.center()\r\n        // this.map.zoomTo(0)\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseDClick = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n}\r\n\r\n\r\n","import { MapboxGLWrapper } from '../../../LabStarter/Starter-Mapbox/MapboxGLWrapper';\r\nimport { RendererCanvas } from '../../../../lib'\r\nimport * as turf from '@turf/turf';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLDivElement;\r\n    public mapboxWrapper: MapboxGLWrapper;\r\n    public renderer: Renderer;\r\n    radius = 0.3;\r\n    constructor(div: HTMLDivElement) {\r\n        // console.log(div)\r\n        this.divHost = div;\r\n        this.divHost.style.position = 'relative';\r\n\r\n\r\n\r\n        this.mapboxWrapper = new MapboxGLWrapper(this.divHost.id);\r\n        this.mapboxWrapper.mouseDown = this.mouseDown\r\n        this.mapboxWrapper.mouseUp = this.mouseUp\r\n        this.mapboxWrapper.mouseClick = this.mouseClick\r\n        this.mapboxWrapper.mouseMove = this.mouseMove\r\n\r\n        setTimeout(() => {\r\n            this.renderer = new Renderer(this.divHost, this);\r\n        }, 100);\r\n\r\n        const divUI = document.createElement('div')\r\n        divUI.style.position = 'absolute';\r\n        divUI.style.background = '#000'\r\n        divUI.style.padding = '9px'\r\n        this.divHost.appendChild(divUI)\r\n\r\n        const divTitle = document.createElement('div')\r\n        divTitle.textContent = 'Controlling the radius'\r\n        divUI.appendChild(divTitle)\r\n\r\n        const slider = getSlider('radius', 1, 1000)\r\n        slider.slider.defaultValue = '100';\r\n        // slider.div.style.position = 'absolute';\r\n        slider.slider.oninput = () => {\r\n            const value = parseInt(slider.slider.value) * 0.001;\r\n            // console.log(value);\r\n            this.radius = value\r\n        };\r\n        divUI.appendChild(slider.div)\r\n\r\n        const divDownload = document.createElement('div')\r\n        divDownload.textContent = 'Click here to download'\r\n        divUI.appendChild(divDownload)\r\n        divDownload.onclick= () => {\r\n            downloadGeoJson(this.renderer.outGoem, 'dissolved')\r\n        }\r\n\r\n    }\r\n    public mouseDown = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseUp = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseDrag = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseClick = (e) => {\r\n        // TODO\r\n        // console.log(e);\r\n        // console.log(e['lngLat']);\r\n        this.renderer.pts.push([e['lngLat']['lng'], e['lngLat']['lat']])\r\n    }\r\n    public mouseMove = (e) => {\r\n        // TODO\r\n    }\r\n    public keyDown(k: KeyboardEvent) {\r\n        // TODO\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\nexport class Renderer extends RendererCanvas {\r\n    public app: Solution\r\n    public time: number = 0.0;\r\n    public pts: number[][] = [];\r\n    outGoem: any\r\n    constructor(div: any, app: Solution) {\r\n        super(div);\r\n        this.app = app;\r\n        this.canvas.id = 'mapboxCustom'\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n        this.canvas.style.pointerEvents = 'none';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        this.pts.push([-71.093161, 42.358871]);\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown = (x: number, y: number): void => {\r\n\r\n    }\r\n    public mouseUp = (x: number, y: number): void => {\r\n\r\n    }\r\n    public mouseDrag = (x: number, y: number): void => {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.time += 0.1;\r\n\r\n        const ptsList = []\r\n\r\n        for (let i = 0; i < this.pts.length; ++i) {\r\n            const pt = this.pts[i];\r\n            const p = this.app.mapboxWrapper.toScreen(pt[0], pt[1]);\r\n\r\n            ptsList.push(this.pts[i])\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(p[0], p[1], Math.sin(this.time) * 0.5 + 4, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fillStyle = '#0f0';\r\n            ctx.fill();\r\n        }\r\n\r\n        let buffers = []\r\n\r\n        for (let i = 0; i < ptsList.length; ++i) {\r\n            let pt = turf.point(ptsList[i])\r\n            let buffered = turf.buffer(pt, this.app.radius, { units: 'miles' });\r\n            buffers.push(buffered)\r\n\r\n        }\r\n\r\n        let features = turf.featureCollection(buffers);\r\n        // renderPolygon(ctx, features, this.app.mapboxWrapper.toScreen)\r\n\r\n\r\n        const dissolved = computeDis(features)\r\n        renderPolygon(ctx, dissolved, this.app.mapboxWrapper.toScreen)\r\n        this.outGoem = dissolved;\r\n\r\n        const cen = turf.center(dissolved);\r\n        // console.log(cen)\r\n\r\n        const cp = this.app.mapboxWrapper.toScreen(cen.geometry.coordinates[0], cen.geometry.coordinates[1]);\r\n        ctx.beginPath();\r\n        ctx.arc(cp[0], cp[1], Math.sin(this.time) * 0.5 + 8, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#f00';\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\n\r\nconst renderPolygon = (ctx, geom, toScreen) => {\r\n\r\n\r\n    for (let i = 0; i < geom.features.length; ++i) {\r\n        const feature = geom.features[i]\r\n\r\n        let sp = toScreen(feature.geometry.coordinates[0][0][0], feature.geometry.coordinates[0][0][1])\r\n        ctx.beginPath()\r\n        ctx.moveTo(sp[0], sp[1])\r\n        for (let j = 1; j < feature.geometry.coordinates[0].length; ++j) {\r\n            // console.log(feature.geometry.coordinates[0][j])\r\n\r\n            sp = toScreen(feature.geometry.coordinates[0][j][0], feature.geometry.coordinates[0][j][1])\r\n            // console.log(sp)\r\n            ctx.lineTo(sp[0], sp[1])\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.strokeStyle = '#0ff'\r\n        ctx.stroke();\r\n    }\r\n\r\n\r\n    // console.log(geom)\r\n\r\n\r\n\r\n}\r\n\r\nconst computeDis = (geom) => {\r\n\r\n    const listD = []\r\n\r\n    for (let i = 0; i < geom.features.length; ++i) {\r\n        const feature = geom.features[i]\r\n\r\n        // console.log(feature.geometry.coordinates)\r\n\r\n        listD.push(\r\n            turf.polygon(feature.geometry.coordinates, {combine: 'yes'})\r\n        )\r\n\r\n        // let sp = toScreen(feature.geometry.coordinates[0][0][0], feature.geometry.coordinates[0][0][1])\r\n        // ctx.beginPath()\r\n        // ctx.moveTo(sp[0], sp[1])\r\n        // for (let j = 1; j < feature.geometry.coordinates[0].length; ++j) {\r\n        //     console.log(feature.geometry.coordinates[0][j])\r\n\r\n        //     sp = toScreen(feature.geometry.coordinates[0][j][0], feature.geometry.coordinates[0][j][1])\r\n        //     console.log(sp)\r\n        //     ctx.lineTo(sp[0], sp[1])\r\n        // }\r\n\r\n        // ctx.closePath();\r\n        // ctx.stroke();\r\n    }\r\n\r\n    var featuresForDis = turf.featureCollection(listD);\r\n\r\n\r\n    // @ts-ignore\r\n    // console.log(featuresForDis)\r\n    var dissolved = turf.dissolve(featuresForDis, {propertyName: 'combine'});\r\n    return dissolved\r\n}\r\n\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n    return {\r\n        div, slider, text\r\n    }\r\n};\r\n\r\nexport const downloadGeoJson = (collection, name = 'download', ) => {\r\n    const link = document.createElement('a');\r\n    link.href = 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(collection));\r\n    link.download = `${name}.geojson`;\r\n    link.click();\r\n};\r\n"],"names":["MapboxGLWrapper","constructor","id","map","center","lng","lat","setCenter","toMap","x","y","p","this","unproject","toScreen","lon","project","mouseDown","e","mouseUp","mouseMove","mouseClick","mouseDClick","initMap","mapboxgl","process","container","zoom","style","dragRotate","disable","on","div","document","getElementsByClassName","position","display","Solution","divHost","mapboxWrapper","renderer","radius","mouseDrag","pts","push","setTimeout","Renderer","divUI","createElement","background","padding","appendChild","divTitle","textContent","slider","getSlider","defaultValue","oninput","value","parseInt","divDownload","onclick","downloadGeoJson","outGoem","keyDown","k","destroy","lastElementChild","removeChild","RendererCanvas","app","super","time","canvas","width","height","pointerEvents","start","render","ctx","ptsList","i","length","pt","beginPath","arc","Math","sin","PI","closePath","fillStyle","fill","buffers","turf","buffered","units","features","dissolved","computeDis","renderPolygon","cen","cp","geometry","coordinates","geom","feature","sp","moveTo","j","lineTo","strokeStyle","stroke","listD","combine","featuresForDis","propertyName","title","min","max","type","text","color","collection","name","link","href","encodeURIComponent","JSON","stringify","download","click"],"sourceRoot":""}