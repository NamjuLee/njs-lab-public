{"version":3,"file":"static/js/96189.80362bc8.chunk.js","mappings":"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AK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAE/E,CACA7L,cACS,E","sources":["lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas.ts","lib/NJSCore/ML/TF/TFUtility.ts","lib/NJSCore/ML/Core/TFDataUtility.ts"],"sourcesContent":["import { NVector3 } from '../../../../../';\r\nimport { MouseEventData } from '../../../../../IO/EventInteraction/MouseInteraction';\r\n\r\nimport { IndependentPanelWrapper } from '../../IndependentPanelWrapper';\r\nimport { ColorUtility } from '../../../../../Core/NColor/';\r\n\r\nimport { IndePanelPreset } from '../../Core/IndePanelPreset';\r\n\r\nimport { IndePanelBase } from './base/base/IndePanelBase';\r\n\r\nimport { BtnClose } from './base/BtnClose';\r\nimport { BtnMinimize } from './base/BtnMinimize';\r\nimport { BtnHam } from './base/BtnHam';\r\nimport { BtnResize } from './base/BtnResize';\r\n\r\nimport { BodyDiv } from './base/BodyDiv';\r\nimport { IndeSubPanel } from './base/IndeSubPanel';\r\n\r\nexport class IndependentPanelCanvas extends IndePanelBase {\r\n    independentPanelWrapper: IndependentPanelWrapper;\r\n    divInput: HTMLTextAreaElement;\r\n\r\n    btnClose: BtnClose;\r\n    btnMini: BtnMinimize;\r\n    btnHam: BtnHam;\r\n    btnResize: BtnResize;\r\n\r\n    bodyDiv: BodyDiv;\r\n    subMenu: IndeSubPanel;\r\n\r\n    subs: IndePanelBase[] = [];\r\n\r\n    _content: string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    isActive: boolean = true;\r\n\r\n    constructor(independentPanelWrapper: IndependentPanelWrapper, x: number = 0, y: number = 0, width: number = 300, height: number = 170, divNeeded: boolean = false) {\r\n        super(independentPanelWrapper);\r\n        this.independentPanelWrapper = independentPanelWrapper;\r\n        this.title = 'njslabSandbox V3';\r\n        this.width = width;\r\n        this.height = height;\r\n        if (x === 0 && y === 0) {\r\n            this.vec.x = (independentPanelWrapper.width * 0.5) - (this.width * 0.5);\r\n            this.vec.y = (independentPanelWrapper.height * 0.5) - (this.height * 0.5);\r\n        } else {\r\n            this.vec.x = x;\r\n            this.vec.y = y;\r\n        }\r\n        this.filletR = 7;\r\n        this.InitTop();\r\n        if (divNeeded) {\r\n            this.bodyDiv = new BodyDiv(this, this.vec.x, this.vec.y + this.HeadHeight, this.width, this.height - this.HeadHeight);\r\n            // this.bodyDiv.div.style.background = 'red';\r\n        }\r\n        this.InitCanvas(this.bodyDiv.div);\r\n    }\r\n\r\n    get IsMinimized() {\r\n        return this.isMinimized;\r\n    }\r\n    set IsMinimized(v: boolean) {\r\n        this.isMinimized = v;\r\n        this.btnResize.isHidden = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Hide(v); }\r\n    }\r\n    get Width() {\r\n        return this.width;\r\n    }\r\n    set Width(v: number) {\r\n        let off = v - this.width;\r\n        this.width = v;\r\n        this.btnHam.vec.x += off;\r\n        this.subMenu.vec.x += off;\r\n        if (this.bodyDiv) { this.bodyDiv.Width = v; }\r\n    }\r\n    get Height() {\r\n        return this.height;\r\n    }\r\n    set Height(v: number) {\r\n        this.height = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Height = v; }\r\n        // this.subMenu\r\n    }\r\n    get content() {\r\n        return this._content;\r\n    }\r\n    set content(v: string) {\r\n        this._content = v;\r\n        if (this.bodyDiv) { this.bodyDiv.content = v; }\r\n    }\r\n    get HasSubMenu() {\r\n        return this.hasSubMenu;\r\n    }\r\n    set HasSubMenu(v: boolean) {\r\n        this.hasSubMenu = v;\r\n        this.subMenu.IsHidden = !v;\r\n    }\r\n    InitTop() {\r\n        this.btnClose = new BtnClose(this, this.vec.x, this.vec.y);\r\n        this.btnMini = new BtnMinimize(this, this.vec.x + 25, this.vec.y);\r\n        this.btnHam = new BtnHam(this, this.vec.x - 25 + this.width, this.vec.y);\r\n        this.btnResize = new BtnResize(this, this.vec.x + this.width - 10, this.vec.y + this.height - 10, 10, 10);\r\n\r\n        this.subMenu = new IndeSubPanel(this);\r\n        this.subs.push(this.btnClose, this.btnMini, this.btnHam);\r\n    }\r\n    Translate(e: MouseEventData): void {\r\n        if (!this.isMoveable) { return; }\r\n        let xo = e.x - e.preX;\r\n        let yo = e.y - e.preY;\r\n        this.vec.x += xo;\r\n        this.vec.y += yo;\r\n        for (let i = 0; i < this.boundarVecs.length; ++i) { this.boundarVecs[i].x += xo; this.boundarVecs[i].y += yo; }\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Translate(e); }\r\n        this.btnResize.vec.x += xo;\r\n        this.btnResize.vec.y += yo;\r\n        this.subMenu.Translate(xo, yo);\r\n        if (this.bodyDiv) { this.bodyDiv.Translate(xo, yo); }\r\n\r\n    }\r\n    Remove() {\r\n        this.RemovePost();\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Remove(); }\r\n        if (this.bodyDiv) { this.bodyDiv.Remove(); }\r\n        this.btnResize.Remove();\r\n        this.independentPanelWrapper.indePanelRender.Remove(this);\r\n    }\r\n    RenderPost(ctx: CanvasRenderingContext2D): void {\r\n        // console.log(IndePanelRender.length);\r\n        // this.vec.x = this.mainPanel.vec.x + this.xOff;\r\n        // this.vec.y = this.mainPanel.vec.y + this.yOff;\r\n        this.ComputeBoundary();\r\n\r\n        let color;\r\n        // if (this.isOver) {\r\n        //     color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuOver, this.transparent);\r\n        // } else {\r\n        color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuNormal, this.transparent);\r\n        // }\r\n        if (this.isMinimized) {\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n\r\n        } else {\r\n            IndePanelPreset.RoundedRectFillWithColorMainMenu(ctx, this.title, this.boundarVecs, this.filletR, 0, this.isOver, this.isSelected, color);\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n        }\r\n        this.RenderHeadTitle(ctx);\r\n        if (!this.isMinimized) {\r\n            this.RenderBodyContent(ctx);\r\n        }\r\n        if (this.hasSubMenu) {\r\n            this.subMenu.RenderPost(ctx);\r\n        }\r\n        this.RenderBtnHorizontal(ctx);\r\n    }\r\n    RenderBtnHorizontal(ctx: CanvasRenderingContext2D) {\r\n        /* */\r\n    }\r\n    RenderHeadTitle(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        // if (this.isOver) {\r\n        //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // } else {\r\n        ctx.fillStyle = '#ffffff';\r\n        // }\r\n        ctx.textBaseline = 'top';\r\n        ctx.textAlign = 'center';\r\n        ctx.font = '100 12px Arial';\r\n        ctx.shadowBlur = 0;\r\n        // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        ctx.shadowOffsetY = 0;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.fillText(this.title, this.vec.x + (this.width * 0.5), this.vec.y + (this.HeadHeight * 0.5) - 7);\r\n\r\n        ctx.restore();\r\n    }\r\n    RenderBodyContent(ctx: CanvasRenderingContext2D) {\r\n        // ctx.save();\r\n        // // if (this.isOver) {\r\n        // //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // // } else {\r\n        // ctx.fillStyle = '#000000';\r\n        // // }\r\n        // ctx.textBaseline = 'top';\r\n        // ctx.textAlign = 'center';\r\n        // ctx.font = '100 9px Sans-serif';\r\n        // ctx.fillText(this.content, this.vec.x + (this.width * 0.5), this.vec.y + (this.height * 0.5) - 5);\r\n\r\n        // ctx.shadowBlur = 0;\r\n        // // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        // ctx.shadowOffsetY = 0;\r\n        // ctx.shadowOffsetX = 0;\r\n\r\n        // ctx.restore();\r\n\r\n    }\r\n    RemovePost() {\r\n        this.isActive = false;\r\n    }\r\n    InitCanvas(hostDiv: HTMLElement) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.zIndex = '0';\r\n        hostDiv.appendChild(this.canvas);\r\n\r\n        this.canvas.id = 'NCanvasRenderer';\r\n        this.canvas.className = 'njslab-web-core-canvas-renderer';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.canvas.width = hostDiv.clientWidth; // hostDivForSize.clientWidth;\r\n        this.canvas.height = hostDiv.clientHeight; // hostDivForSize.clientHeight;\r\n\r\n        this.btnResize.ResizePropagation = (width: number, height: number) => {\r\n            this.canvas.width = width; // hostDivForSize.clientWidth;\r\n            this.canvas.height = height; // hostDivForSize.clientHeight;\r\n        };\r\n        this.LoopIndependentCanvas(this.ctx);\r\n    }\r\n    LoopIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        requestAnimationFrame(() => { this.LoopIndependentCanvas(ctx); });\r\n        this.RenderIndependentCanvas(ctx);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.canvas.width = width; // hostDivForSize.clientWidth;\r\n        this.canvas.height = height; // hostDivForSize.clientHeight;\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\n\r\nexport class TFUtility {\r\n\r\n    public static Playground() {\r\n        // this.ExeScalar();\r\n        // this.ExeAdd();\r\n        // this.ExeOperation();\r\n        // this.Tensor01();\r\n        // this.Tensor02();\r\n        // this.Tensor03();\r\n    //     console.log('Playground');\r\n    }\r\n\r\n    public static ExeScalar() {\r\n        const d = tf.scalar(10);\r\n    //     console.log('scalar.....');\r\n    //     console.log(d);\r\n        d.print();\r\n        d.print(true);\r\n\r\n        const d2 = tf.tensor([1, 2, 3]);\r\n        d2.print();\r\n        d2.print(true);\r\n\r\n        const d3 = tf.tensor1d([1, 2, 3]);\r\n        d3.print();\r\n        d3.print(true);\r\n\r\n        const d4 = tf.tensor([[1, 2], [3, 4]]);\r\n        d4.print();\r\n        //    d4.print(true);\r\n\r\n        const d5 = tf.tensor2d([[1, 2], [3, 4]]);\r\n        d5.print();\r\n        //    d5.print(true);\r\n        //    d4.add(d5).print();\r\n        const d6 = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\r\n        d6.print();\r\n\r\n        const length = 30;\r\n        const data = new Float32Array(length);\r\n        for (let i = 0; i < length; ++i) { data[i] = i; }\r\n        const d7 = tf.tensor2d(data, [10, 3]);\r\n        d7.print();\r\n\r\n        const length2 = 18;\r\n        const data2 = new Float32Array(length2);\r\n        for (let i = 0; i < length2; ++i) { data2[i] = i; }\r\n        const d8 = tf.tensor3d(data2, [2, 3, 3]);\r\n        d8.print();\r\n    }\r\n    public static ExeAdd() {\r\n        const d1 = tf.scalar(5);\r\n        const d2 = tf.tensor([1, 2, 3]).mul(d1);\r\n        d2.print();\r\n\r\n        const d3 = tf.tensor([1, 2, 3, 4, 5, 6], [2, 3]);\r\n        d3.print();\r\n        d3.mul(d1).print();\r\n        d3.add(d1).print();\r\n        d3.div(3).print();\r\n\r\n        // ..\r\n        const length = 30;\r\n        const data = new Float32Array(length);\r\n        for (let i = 0; i < length; ++i) { data[i] = i; }\r\n        const d4 = tf.tensor2d(data, [10, 3]);\r\n        d4.print();\r\n\r\n        const d5 = d4;\r\n        d5.print();\r\n\r\n        const d6 = d5.add(d4);\r\n        d6.print();\r\n\r\n        const d7 = d5.sub(d1);\r\n        d7.print();\r\n\r\n    }\r\n    public static ExeOperation() {\r\n\r\n        tf.tidy(() => {\r\n            const d1 = tf.tensor([1, 2, 3, 4, 5, 6], [2, 3], 'float32');\r\n            d1.print();\r\n\r\n            const d2 = tf.tensor([1, 2, 3, 4, 5, 6], [3, 2], 'float32');\r\n            d2.print();\r\n\r\n            d1.matMul(d2).print();\r\n\r\n            const d3 = d2.matMul(d1);\r\n            d3.print();\r\n\r\n            const d4 = tf.scalar(0.5);\r\n            d3.mul(d4).print();\r\n\r\n            const mathScore = tf.tensor1d([80, 90, 100, 80]);\r\n            const historyScore = tf.tensor1d([70, 70, 70, 70]);\r\n            mathScore.add(historyScore).div(2).print(); // print mean  // tensor num 10\r\n            mathScore.add(historyScore).div(2).abs().print(); // print mean  // tensor num 11\r\n\r\n        });\r\n        //\r\n    //     console.log(tf.memory().numTensors);\r\n\r\n    }\r\n    public static Tensor01() {\r\n        let data = tf.tensor([0, 1, 2, 3], [2, 2]);\r\n        data.print();\r\n        // [[0, 1],\r\n        // [2, 3]]\r\n\r\n        data = tf.tensor([0, 1, 2, 3, 4, 5, 6, 7]);\r\n        data.print(); // [0, 1, 2, 3, 4, 5, 6, 7]\r\n\r\n        data = tf.tensor([0, 1, 2, 3, 4, 5, 6, 7], [2, 2, 2]);\r\n        data.print();\r\n        //     [[[0, 1],\r\n        //     [2, 3]],\r\n        //    [[4, 5],\r\n        //     [6, 7]]]\r\n    }\r\n    public static Tensor02() {\r\n        let data: number[] = [];\r\n        for (let i = 0; i < 15; ++i) {\r\n            data.push(Math.random());\r\n        }\r\n        let shape = [3, 5];\r\n        let dataTensor = tf.tensor(data, shape);\r\n        dataTensor.print();\r\n\r\n        data = [];\r\n        for (let i = 0; i < 30; ++i) {\r\n            data.push(Math.random() * 100);\r\n        }\r\n        shape = [2, 3, 5];\r\n        dataTensor = tf.tensor(data, shape, 'int32');\r\n        dataTensor.print();\r\n\r\n        dataTensor = tf.tensor3d(data, [2, 3, 5], 'int32');\r\n        dataTensor.print();\r\n    }\r\n    public static Tensor03() {\r\n        let data: number[] = [];\r\n        for (let i = 0; i < 150000; ++i) {\r\n            data.push(Math.random());\r\n        }\r\n        let shape = [300, 500];\r\n        let dataTensor = tf.tensor(data, shape);\r\n        dataTensor.print();\r\n    //     console.log(tf.memory().numTensors);\r\n    }\r\n    constructor() {\r\n        //\r\n    }\r\n}\r\n\r\n","import * as tf from '@tensorflow/tfjs';\r\n\r\nexport class TFDataUtility {\r\n    static async getData() {\r\n        const carsDataReq = await fetch('https://storage.googleapis.com/tfjs-tutorials/carsData.json');\r\n        const carsData = await carsDataReq.json();\r\n        const cleaned = carsData.map((car: any) => ({\r\n            mpg: car.Miles_per_Gallon,\r\n            horsepower: car.Horsepower,\r\n        }))\r\n            .filter((car: any) => (car.mpg != null && car.horsepower != null));\r\n        return cleaned;\r\n    }\r\n    public static Get_XY_OneHot_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            // console.log(targetLength);\r\n            // console.log(targetsByClass);\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.oneHot(tf.tensor1d(targetsByClass).toInt(), targetLength + 1);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n    public static Get_XY_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.tensor1d(targetsByClass);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n\r\n    // tslint:disable-next-line:no-any\r\n    public static SplitTensorFromXY(xs: any, ys: any, testSplit: number = 0.5) {\r\n        const numTestExamples = Math.round(xs.shape[0] * testSplit);\r\n        const numTrainExamples = xs.shape[0] - numTestExamples;\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xs.shape[1]]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xs.shape[1]]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, ys.shape[1]]);\r\n        const yTest = ys.slice([numTrainExamples, 0], [numTestExamples, ys.shape[1]]);\r\n        return [xTrain, yTrain, xTest, yTest];\r\n\r\n        // return tf.tidy(() => {\r\n        //     const dataByClass = [];\r\n        //     const targetsByClass = [];\r\n        //     // for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //     //     dataByClass.push([]);\r\n        //     //     targetsByClass.push([]);\r\n        //     // }\r\n        //     // for (const example of IRIS_DATA) {\r\n        //     //     const target = example[example.length - 1];\r\n        //     //     const data = example.slice(0, example.length - 1);\r\n        //     //     dataByClass[target].push(data);\r\n        //     //     targetsByClass[target].push(target);\r\n        //     // }\r\n        //     // console.log();\r\n\r\n        //     const xTrains = [];\r\n        //     const yTrains = [];\r\n        //     const xTests = [];\r\n        //     const yTests = [];\r\n        //     for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //         const [xTrain, yTrain, xTest, yTest] = DataUtility.ConvertToTensors(dataByClass[i], targetsByClass[i], testSplit);\r\n        //         xTrains.push(xTrain);\r\n        //         yTrains.push(yTrain);\r\n        //         xTests.push(xTest);\r\n        //         yTests.push(yTest);\r\n        //     }\r\n\r\n        //     const concatAxis = 0;\r\n        //     return [\r\n        //         tf.concat(xTrains, concatAxis), tf.concat(yTrains, concatAxis),\r\n        //         tf.concat(xTests, concatAxis), tf.concat(yTests, concatAxis)\r\n        //     ];\r\n        // });\r\n\r\n    }\r\n    public static ConvertToTensors(data: number[][], targets: number[], testSplit: number) {\r\n    //     console.log('++');\r\n    //     console.log(data);\r\n    //     console.log(targets);\r\n    //     console.log(testSplit);\r\n\r\n        const numExamples = data.length;\r\n        if (numExamples !== targets.length) {\r\n            throw new Error('data and split have different numbers of examples');\r\n        }\r\n\r\n        const numTestExamples = Math.round(numExamples * testSplit);\r\n        const numTrainExamples = numExamples - numTestExamples;\r\n\r\n        const xDims = data[0].length;\r\n\r\n        // Create a 2D `tf.Tensor` to hold the feature data.\r\n        const xs = tf.tensor2d(data, [numExamples, xDims]);\r\n\r\n        // Create a 1D `tf.Tensor` to hold the labels, and convert the number label\r\n        // from the set {0, 1, 2} into one-hot encoding (.e.g., 0 --> [1, 0, 0]).\r\n        const ys = tf.oneHot(tf.tensor1d(targets).toInt(), 4); // IRIS_NUM_CLASSES\r\n\r\n        // Split the data into training and test sets, using `slice`.\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xDims]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xDims]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, 4]); // IRIS_NUM_CLASSES\r\n        const yTest = ys.slice([0, 0], [numTestExamples, 4]); // IRIS_NUM_CLASSES\r\n        return [xTrain, yTrain, xTest, yTest];\r\n    }\r\n\r\n    public static GetRandomNormal(num: number, mean: number = 0.0, stdDev: number = 0.55) {\r\n        return tf.randomNormal([num], mean, stdDev);\r\n    }\r\n    public static GetRandomNormalTensors(num: number = 1000) {\r\n\r\n        // let t0 = DataUtility.GetRandomNormal(num, 0.0, 0.55);\r\n        // let t1 = DataUtility.GetRandomNormal(num, 0.0, 0.03);\r\n        // t0.print();\r\n        // t1.print();\r\n\r\n    }\r\n\r\n    public static Shuffle(array: number[][]) {\r\n        var currentIndex = array.length, temp, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // And swap it with the current element.\r\n            temp = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temp;\r\n        }\r\n\r\n        return array;\r\n    }\r\n    // https://beta.observablehq.com/@tvirot/machine-learning-in-javascript-with-tensorflow-js#inputData\r\n    public static GetSyntheticDataTensor(totalNumData: number = 200, aCo: number = 0, bCo: number = 0, cCo: number = 0, dCo: number = 0, std: number = 0.2, needYNormal: boolean = false) {\r\n\r\n        return tf.tidy(() => {\r\n            const NUM_POINTS = totalNumData;\r\n            // const [a, b, c, d] = coeff.map(i => tf.scalar(i)); // a = tf.scalar(coeff[0]), and so on\r\n            const a = tf.scalar(aCo);\r\n            const b = tf.scalar(bCo);\r\n            const c = tf.scalar(cCo);\r\n            const d = tf.scalar(dCo);\r\n\r\n            const x = tf.randomUniform([NUM_POINTS], -1, 1);\r\n            const y = a.mul(x.pow(tf.scalar(3))).add(b.mul(x.square())).add(c.mul(x)).add(d).add(tf.randomNormal([NUM_POINTS], 0, std));\r\n\r\n            if (needYNormal) {\r\n                const ymin = y.min();\r\n                const ymax = y.max();\r\n                const theRange = ymax.sub(ymin);\r\n                const yNomalized = y.sub(ymin).div(theRange);\r\n                return { x, yNomalized };\r\n            }\r\n\r\n            return [x, y];\r\n        });\r\n    }\r\n    public static GetSyntheticData(totalNumData: number = 200, aCo: number = -0.2, bCo: number = -0.66, cCo: number = -0.1, dCo: number = 2.8, std: number = 0.2, needYNormal: boolean = false) {\r\n        return tf.tidy(() => {\r\n            const result = this.GetSyntheticDataTensor(totalNumData, aCo, bCo, cCo, dCo, std, needYNormal);\r\n            const xx = result[0].dataSync();\r\n            const yy = result[1].dataSync();\r\n            return { xx, yy };\r\n        });\r\n    }\r\n    public static GetIrisData() {\r\n        return [\r\n            [5.1, 3.5, 1.4, 0.2, 0], [4.9, 3.0, 1.4, 0.2, 0], [4.7, 3.2, 1.3, 0.2, 0],\r\n            [4.6, 3.1, 1.5, 0.2, 0], [5.0, 3.6, 1.4, 0.2, 0], [5.4, 3.9, 1.7, 0.4, 0],\r\n            [4.6, 3.4, 1.4, 0.3, 0], [5.0, 3.4, 1.5, 0.2, 0], [4.4, 2.9, 1.4, 0.2, 0],\r\n            [4.9, 3.1, 1.5, 0.1, 0], [5.4, 3.7, 1.5, 0.2, 0], [4.8, 3.4, 1.6, 0.2, 0],\r\n            [4.8, 3.0, 1.4, 0.1, 0], [4.3, 3.0, 1.1, 0.1, 0], [5.8, 4.0, 1.2, 0.2, 0],\r\n            [5.7, 4.4, 1.5, 0.4, 0], [5.4, 3.9, 1.3, 0.4, 0], [5.1, 3.5, 1.4, 0.3, 0],\r\n            [5.7, 3.8, 1.7, 0.3, 0], [5.1, 3.8, 1.5, 0.3, 0], [5.4, 3.4, 1.7, 0.2, 0],\r\n            [5.1, 3.7, 1.5, 0.4, 0], [4.6, 3.6, 1.0, 0.2, 0], [5.1, 3.3, 1.7, 0.5, 0],\r\n            [4.8, 3.4, 1.9, 0.2, 0], [5.0, 3.0, 1.6, 0.2, 0], [5.0, 3.4, 1.6, 0.4, 0],\r\n            [5.2, 3.5, 1.5, 0.2, 0], [5.2, 3.4, 1.4, 0.2, 0], [4.7, 3.2, 1.6, 0.2, 0],\r\n            [4.8, 3.1, 1.6, 0.2, 0], [5.4, 3.4, 1.5, 0.4, 0], [5.2, 4.1, 1.5, 0.1, 0],\r\n            [5.5, 4.2, 1.4, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [5.0, 3.2, 1.2, 0.2, 0],\r\n            [5.5, 3.5, 1.3, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [4.4, 3.0, 1.3, 0.2, 0],\r\n            [5.1, 3.4, 1.5, 0.2, 0], [5.0, 3.5, 1.3, 0.3, 0], [4.5, 2.3, 1.3, 0.3, 0],\r\n            [4.4, 3.2, 1.3, 0.2, 0], [5.0, 3.5, 1.6, 0.6, 0], [5.1, 3.8, 1.9, 0.4, 0],\r\n            [4.8, 3.0, 1.4, 0.3, 0], [5.1, 3.8, 1.6, 0.2, 0], [4.6, 3.2, 1.4, 0.2, 0],\r\n            [5.3, 3.7, 1.5, 0.2, 0], [5.0, 3.3, 1.4, 0.2, 0], [7.0, 3.2, 4.7, 1.4, 1],\r\n            [6.4, 3.2, 4.5, 1.5, 1], [6.9, 3.1, 4.9, 1.5, 1], [5.5, 2.3, 4.0, 1.3, 1],\r\n            [6.5, 2.8, 4.6, 1.5, 1], [5.7, 2.8, 4.5, 1.3, 1], [6.3, 3.3, 4.7, 1.6, 1],\r\n            [4.9, 2.4, 3.3, 1.0, 1], [6.6, 2.9, 4.6, 1.3, 1], [5.2, 2.7, 3.9, 1.4, 1],\r\n            [5.0, 2.0, 3.5, 1.0, 1], [5.9, 3.0, 4.2, 1.5, 1], [6.0, 2.2, 4.0, 1.0, 1],\r\n            [6.1, 2.9, 4.7, 1.4, 1], [5.6, 2.9, 3.6, 1.3, 1], [6.7, 3.1, 4.4, 1.4, 1],\r\n            [5.6, 3.0, 4.5, 1.5, 1], [5.8, 2.7, 4.1, 1.0, 1], [6.2, 2.2, 4.5, 1.5, 1],\r\n            [5.6, 2.5, 3.9, 1.1, 1], [5.9, 3.2, 4.8, 1.8, 1], [6.1, 2.8, 4.0, 1.3, 1],\r\n            [6.3, 2.5, 4.9, 1.5, 1], [6.1, 2.8, 4.7, 1.2, 1], [6.4, 2.9, 4.3, 1.3, 1],\r\n            [6.6, 3.0, 4.4, 1.4, 1], [6.8, 2.8, 4.8, 1.4, 1], [6.7, 3.0, 5.0, 1.7, 1],\r\n            [6.0, 2.9, 4.5, 1.5, 1], [5.7, 2.6, 3.5, 1.0, 1], [5.5, 2.4, 3.8, 1.1, 1],\r\n            [5.5, 2.4, 3.7, 1.0, 1], [5.8, 2.7, 3.9, 1.2, 1], [6.0, 2.7, 5.1, 1.6, 1],\r\n            [5.4, 3.0, 4.5, 1.5, 1], [6.0, 3.4, 4.5, 1.6, 1], [6.7, 3.1, 4.7, 1.5, 1],\r\n            [6.3, 2.3, 4.4, 1.3, 1], [5.6, 3.0, 4.1, 1.3, 1], [5.5, 2.5, 4.0, 1.3, 1],\r\n            [5.5, 2.6, 4.4, 1.2, 1], [6.1, 3.0, 4.6, 1.4, 1], [5.8, 2.6, 4.0, 1.2, 1],\r\n            [5.0, 2.3, 3.3, 1.0, 1], [5.6, 2.7, 4.2, 1.3, 1], [5.7, 3.0, 4.2, 1.2, 1],\r\n            [5.7, 2.9, 4.2, 1.3, 1], [6.2, 2.9, 4.3, 1.3, 1], [5.1, 2.5, 3.0, 1.1, 1],\r\n            [5.7, 2.8, 4.1, 1.3, 1], [6.3, 3.3, 6.0, 2.5, 2], [5.8, 2.7, 5.1, 1.9, 2],\r\n            [7.1, 3.0, 5.9, 2.1, 2], [6.3, 2.9, 5.6, 1.8, 2], [6.5, 3.0, 5.8, 2.2, 2],\r\n            [7.6, 3.0, 6.6, 2.1, 2], [4.9, 2.5, 4.5, 1.7, 2], [7.3, 2.9, 6.3, 1.8, 2],\r\n            [6.7, 2.5, 5.8, 1.8, 2], [7.2, 3.6, 6.1, 2.5, 2], [6.5, 3.2, 5.1, 2.0, 2],\r\n            [6.4, 2.7, 5.3, 1.9, 2], [6.8, 3.0, 5.5, 2.1, 2], [5.7, 2.5, 5.0, 2.0, 2],\r\n            [5.8, 2.8, 5.1, 2.4, 2], [6.4, 3.2, 5.3, 2.3, 2], [6.5, 3.0, 5.5, 1.8, 2],\r\n            [7.7, 3.8, 6.7, 2.2, 2], [7.7, 2.6, 6.9, 2.3, 2], [6.0, 2.2, 5.0, 1.5, 2],\r\n            [6.9, 3.2, 5.7, 2.3, 2], [5.6, 2.8, 4.9, 2.0, 2], [7.7, 2.8, 6.7, 2.0, 2],\r\n            [6.3, 2.7, 4.9, 1.8, 2], [6.7, 3.3, 5.7, 2.1, 2], [7.2, 3.2, 6.0, 1.8, 2],\r\n            [6.2, 2.8, 4.8, 1.8, 2], [6.1, 3.0, 4.9, 1.8, 2], [6.4, 2.8, 5.6, 2.1, 2],\r\n            [7.2, 3.0, 5.8, 1.6, 2], [7.4, 2.8, 6.1, 1.9, 2], [7.9, 3.8, 6.4, 2.0, 2],\r\n            [6.4, 2.8, 5.6, 2.2, 2], [6.3, 2.8, 5.1, 1.5, 2], [6.1, 2.6, 5.6, 1.4, 2],\r\n            [7.7, 3.0, 6.1, 2.3, 2], [6.3, 3.4, 5.6, 2.4, 2], [6.4, 3.1, 5.5, 1.8, 2],\r\n            [6.0, 3.0, 4.8, 1.8, 2], [6.9, 3.1, 5.4, 2.1, 2], [6.7, 3.1, 5.6, 2.4, 2],\r\n            [6.9, 3.1, 5.1, 2.3, 2], [5.8, 2.7, 5.1, 1.9, 2], [6.8, 3.2, 5.9, 2.3, 2],\r\n            [6.7, 3.3, 5.7, 2.5, 2], [6.7, 3.0, 5.2, 2.3, 2], [6.3, 2.5, 5.0, 1.9, 2],\r\n            [6.5, 3.0, 5.2, 2.0, 2], [6.2, 3.4, 5.4, 2.3, 2], [5.9, 3.0, 5.1, 1.8, 2],\r\n        ];\r\n    }\r\n    constructor() {\r\n        /* */\r\n    }\r\n}"],"names":["IndependentPanelCanvas","IndePanelBase","constructor","independentPanelWrapper","x","y","width","height","divNeeded","super","divInput","btnClose","btnMini","btnHam","btnResize","bodyDiv","subMenu","subs","_content","canvas","ctx","isActive","this","title","vec","filletR","InitTop","BodyDiv","HeadHeight","InitCanvas","div","IsMinimized","isMinimized","v","isHidden","Hide","Width","off","Height","content","HasSubMenu","hasSubMenu","IsHidden","BtnClose","BtnMinimize","BtnHam","BtnResize","IndeSubPanel","push","Translate","e","isMoveable","xo","preX","yo","preY","i","boundarVecs","length","Remove","RemovePost","indePanelRender","RenderPost","color","ComputeBoundary","ColorUtility","IndePanelPreset","transparent","isOver","isSelected","NVector3","theme","colSelectedBG","RenderHeadTitle","RenderBodyContent","RenderBtnHorizontal","save","fillStyle","textBaseline","textAlign","font","shadowBlur","shadowOffsetY","shadowOffsetX","fillText","restore","hostDiv","document","createElement","style","position","zIndex","appendChild","id","className","pointerEvents","getContext","clientWidth","clientHeight","ResizePropagation","LoopIndependentCanvas","clearRect","requestAnimationFrame","RenderIndependentCanvas","console","log","ResizeCanvas","TFUtility","d","tf","print","d2","d3","data","Float32Array","data2","d1","mul","add","d4","d5","sub","matMul","mathScore","historyScore","abs","Math","random","shape","dataTensor","TFDataUtility","static","carsDataReq","fetch","json","map","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter","csv","dataByClass","targetsByClass","targetLength","example","slice","target","toInt","xs","ys","testSplit","numTestExamples","round","numTrainExamples","xTrain","xTest","targets","numExamples","Error","xDims","num","mean","stdDev","array","temp","randomIndex","currentIndex","floor","totalNumData","aCo","bCo","cCo","dCo","std","needYNormal","NUM_POINTS","a","b","c","pow","square","ymin","min","theRange","max","yNomalized","result","GetSyntheticDataTensor","xx","dataSync","yy"],"sourceRoot":""}