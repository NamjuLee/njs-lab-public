{"version":3,"file":"static/js/5893.431a6f96.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/SmartDrawing/App.ts","njslab/Workshop/workshop-ml/SmartDrawing/Core/SmartDrawing.ts"],"sourcesContent":["import { SmartDrawing } from './Core/SmartDrawing';\r\nimport { Vector3, dotProduct, normalize, RendererCanvas, getInterpolatedArray  } from 'njscore'\r\n\r\nexport class AppSmartDrawing {\r\n    rendererCanvas: RendererCanvas;\r\n    smartDrawing: SmartDrawing;\r\n\r\n    vec: number[][] = [];\r\n    divHost: HTMLDivElement;\r\n    divText: HTMLDivElement;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id) as HTMLDivElement;\r\n\r\n        const container = document.createElement('div');\r\n        this.divHost.appendChild(container);\r\n        container.style.alignItems = 'center';\r\n        container.style.marginTop = '80px';\r\n        container.style.marginLeft = 'auto';\r\n        container.style.marginRight = 'auto';\r\n        container.style.width = '300px';\r\n        container.style.height = '400px';\r\n\r\n        this.smartDrawing = new SmartDrawing()\r\n        this.rendererCanvas = new RendererCanvas(container);\r\n        this.rendererCanvas.canvas.style.position = 'unset';\r\n\r\n        this.rendererCanvas.canvas.width = 300;\r\n        this.rendererCanvas.canvas.height = 300;\r\n        this.rendererCanvas.canvas.style.background = '#999';\r\n\r\n        this.divText = document.createElement('div');\r\n        this.divText.textContent = '*** FROM DEEP LEARNING MODEL B ***';\r\n        container.append(this.divText);\r\n\r\n        this.rendererCanvas.start();\r\n        this.rendererCanvas.render = (ctx: CanvasRenderingContext2D) => this.render(ctx);\r\n        this.rendererCanvas.mouseDrag = (x: number, y: number) => this.mouseDrag(x, y);\r\n        this.rendererCanvas.mouseUp = (x: number, y: number) => this.mouseUp(x, y);\r\n    }\r\n    public render = (ctx: CanvasRenderingContext2D) => {\r\n      // console.log(this.vec)\r\n        for(let i = 0; i < this.vec.length; ++i) {\r\n            ctx.fillStyle = 'rgba(255, 0, 0, 0.15)';\r\n            ctx.beginPath();\r\n            ctx.arc(this.vec[i][0], this.vec[i][1], 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public mouseDrag = (x: number, y: number) => {\r\n        // console.log(x, y, this);\r\n        this.vec.push([x, y])\r\n    }\r\n    public mouseUp = (x: number, y: number) => {\r\n       this.Predict(this.vec);\r\n       this.vec = [];\r\n    }\r\n    public Predict(d: number[][]) {\r\n        const vs = [];\r\n        for (let i of d) { vs.push(new Vector3(i[0], i[1], 0)); }\r\n        // console.log(vs);\r\n        const dotPrediction = computeDotProducts(vs);\r\n        // console.log(dotPrediction);\r\n        const dotValueInterpolated = getInterpolatedArray(dotPrediction, 501);\r\n        console.log(dotValueInterpolated);\r\n        // const dotValueInterpolated = dotPrediction\r\n        // console.log(this.GetInterpolatedArray(dotPrediction, 10));\r\n        // console.log(this.scene.annotationInstance.implementation.app.model.appAnnotation.addon.smartDrawing);\r\n        console.log('*** FROM DEEP LEARNING MODELS ***');\r\n        const predictionLosisticR = this.smartDrawing.predictByLogisticRegression(dotValueInterpolated);\r\n        console.debug(`pridiction:%c ${predictionLosisticR} from LR Model`, 'background: #ddb137; color: black');\r\n        const [predictionMultiC, outText] = this.smartDrawing.predictByMultiClassification(dotValueInterpolated);\r\n        console.debug(`pridiction:%c ${predictionMultiC} from MC model`, 'background: #4e2c7e; color: white');\r\n\r\n        // console.log(d, predictionMultiC);\r\n        this.updateDivWithText(outText);\r\n        // this.firebaseWrapper.sendData({\r\n        //     class: predictionMultiC,\r\n        //     vec: d\r\n        // });\r\n\r\n        return predictionMultiC;\r\n\r\n        // console.log(prediction);\r\n        // this.GetShapeFromPrediction(prediction, vs);\r\n    }\r\n    private updateDivWithText(outText: string[]) {\r\n      let text = `<p>*** FROM DEEP LEARNING MODEL B *** </p>`;\r\n      for (let i = 0; i < outText.length; ++i) {\r\n          text += `<p> ${outText[i]}</p>`;\r\n      }\r\n      this.divText.innerHTML = text;\r\n  }\r\n    public destroy() {\r\n      try {\r\n        while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    } catch (error) { }\r\n  }\r\n}\r\n\r\nconst computeDotProducts = (vs: Vector3[]) => {\r\n    let out: number[] = [];\r\n    for (let i = 0; i < vs.length; ++i) {\r\n      if (i < vs.length - 1) {\r\n        let v0 = new Vector3(vs[i].x, vs[i].y, vs[i].z);\r\n        let v1 = new Vector3(vs[i + 1].x, vs[i + 1].y, vs[i + 1].z);\r\n\r\n        v1.x -= v0.x;\r\n        v1.y -= v0.y;\r\n        v1.z -= v0.z;\r\n\r\n        let dot = dotProduct(new Vector3(1, 0, 0), normalize(v1));\r\n        if (Number.isNaN(dot)) {\r\n          out.push(out[out.length - 1]);\r\n        } else {\r\n          out.push(dot);\r\n        }\r\n\r\n      } else {\r\n        let v0 = new Vector3(vs[i].x, vs[i].y, vs[i].z);\r\n        let v1 = new Vector3(vs[0].x, vs[0].y, vs[0].z);\r\n\r\n        v1.x -= v0.x;\r\n        v1.y -= v0.y;\r\n        v1.z -= v0.z;\r\n\r\n        let dot = dotProduct(new Vector3(1, 0, 0), normalize(v1));\r\n        if (Number.isNaN(dot)) {\r\n          out.push(out[out.length - 1]);\r\n        } else {\r\n          out.push(dot);\r\n        }\r\n      }\r\n    }\r\n    return out;\r\n}\r\n","import { tensor2d, tidy, Tensor2D, loadLayersModel } from '@tensorflow/tfjs';\r\nimport * as tf from '@tensorflow/tfjs';\r\n// import { NVector3 } from '../../Lib/NVector3';\r\n\r\nexport class SmartDrawing {\r\n    static CLASS_TYPE = {\r\n        0: 'CIRCLE',\r\n        1: 'TRI-GON',\r\n        2: 'ARROW_SINGLE',\r\n        3: 'ARROW_DOUBLE',\r\n        4: 'RECTANGLE',\r\n        5: 'TEXT',\r\n        6: 'CURVE',\r\n        7: 'HEART',\r\n        8: 'CLOUD'\r\n    };\r\n\r\n    modelLogisticRegression: tf.LayersModel\r\n    modelMultiClassification: tf.LayersModel\r\n    isLoaded: boolean = false;\r\n    constructor() {\r\n        LoadModelFromPublic().then( (models) =>{\r\n            [ this.modelLogisticRegression, this.modelMultiClassification ]= models;\r\n            this.isLoaded = true;\r\n            console.log(this);\r\n        });\r\n        console.log('executing Smart Drawing example');\r\n    }\r\n    public predictByLogisticRegression(data: number[]) {\r\n        if (this.modelLogisticRegression === undefined) { console.error('no model loaded'); return; }\r\n        console.log('==============================');\r\n        return tidy(() => {\r\n            const d = tensor2d([data]);\r\n            const predictOut = this.modelLogisticRegression.predict(d) as Tensor2D;\r\n            const score = predictOut.dataSync();\r\n            return this.PredictionPostProcessingLogisticRegression(score[0]);\r\n        });\r\n    }\r\n    private PredictionPostProcessingLogisticRegression(d: number) {\r\n        const result = Math.floor(d + 0.5);\r\n        return SmartDrawing.CLASS_TYPE[result];\r\n    }\r\n    public predictByMultiClassification(data: number[]) {\r\n        if (this.modelMultiClassification === undefined) { console.error('no model loaded'); return; }\r\n        return tidy(() => {\r\n            // console.log(data);\r\n            const d = tf.tensor2d([data]);\r\n            // console.log(d.toFloat());\r\n            const predictOut = this.modelMultiClassification.predict(d) as Tensor2D;\r\n            // console.log(predictOut);\r\n            // console.log(predictOut.toString());\r\n            // console.log('lllllllllllllllll');\r\n            const rankings = true;\r\n            const outText: string[] = [];\r\n            if (rankings) {\r\n                const logits = Array.from(predictOut.dataSync());\r\n                const rankingIndex = getIndexBySortDescending(logits as number[]);\r\n                // console.log(logits);\r\n                // console.log(rankingIndex);\r\n                // console.log('#####################');\r\n                for (let i of rankingIndex) {\r\n                    const probability: number = logits[i] as number;\r\n                    const text = 'class:' + SmartDrawing.CLASS_TYPE[i] + ', probability:' + probability.toFixed(5);\r\n                    console.log(text);\r\n                    outText.push(text);\r\n                }\r\n            }\r\n\r\n            const winner = predictOut.argMax(-1).dataSync()[0];\r\n            return [SmartDrawing.CLASS_TYPE[winner], outText];\r\n            // console.log(this.classStringsMultiClassification[winner]);\r\n            // return this.PredictionPostProcessingLogisticRegression(scoreArray[0]);\r\n        });\r\n    }\r\n}\r\n\r\nconst LoadModelFromPublic = async () => {\r\n    // http://www.njstudio.co.kr/ml/sm/modelLogisticRegression0/model.json\r\n    // let file = 'ML/SmartDrawing/modelLogisticRegression0/model.json';\r\n    let file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelLogisticRegression0/model.json`;\r\n    // let file = 'ML/SmartDrawing/new/model.json';\r\n    const modelLogisticRegression = await loadLayersModel(file);\r\n\r\n    file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelMultiClassification0/model.json`;\r\n    const modelMultiClassification = await loadLayersModel(file);\r\n    return [modelLogisticRegression , modelMultiClassification]\r\n};\r\nconst getIndexBySortDescending = (d: number[]) => {\r\n    const indices = new Array(d.length);\r\n    for (let i = 0; i < d.length; ++i) { indices[i] = i; }\r\n    indices.sort((a, b) => { return d[a] > d[b] ? -1 : d[a] < d[b] ? 1 : 0; });\r\n    return indices;\r\n}"],"names":["AppSmartDrawing","id","rendererCanvas","smartDrawing","vec","divHost","divText","render","ctx","i","length","fillStyle","beginPath","arc","Math","PI","closePath","fill","mouseDrag","x","y","push","mouseUp","Predict","this","document","getElementById","container","createElement","appendChild","style","alignItems","marginTop","marginLeft","marginRight","width","height","SmartDrawing","RendererCanvas","canvas","position","background","textContent","append","start","d","vs","Vector3","dotPrediction","computeDotProducts","dotValueInterpolated","getInterpolatedArray","console","log","predictionLosisticR","predictByLogisticRegression","debug","predictByMultiClassification","predictionMultiC","outText","updateDivWithText","text","innerHTML","undefined","lastElementChild","removeChild","error","out","v0","z","v1","dot","dotProduct","normalize","Number","isNaN","modelLogisticRegression","modelMultiClassification","isLoaded","LoadModelFromPublic","then","models","data","tidy","tensor2d","score","predict","dataSync","PredictionPostProcessingLogisticRegression","result","floor","CLASS_TYPE","tf","predictOut","logits","Array","from","rankingIndex","getIndexBySortDescending","probability","toFixed","winner","argMax","file","loadLayersModel","indices","sort","a","b"],"sourceRoot":""}