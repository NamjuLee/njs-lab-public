{"version":3,"file":"static/js/4931.e5e54169.chunk.js","mappings":"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","sources":["../node_modules/@deck.gl/react/src/utils/use-isomorphic-layout-effect.ts","../node_modules/@deck.gl/react/src/utils/inherits-from.ts","../node_modules/@deck.gl/react/src/utils/evaluate-children.ts","../node_modules/@deck.gl/react/src/utils/extract-jsx-layers.ts","../node_modules/@deck.gl/react/src/utils/extract-styles.ts","../node_modules/@deck.gl/react/src/deckgl.ts","../node_modules/@deck.gl/react/src/utils/position-children-under-views.ts","../node_modules/@deck.gl/layers/src/arc-layer/arc-layer.ts","../node_modules/@deck.gl/layers/src/arc-layer/arc-layer-vertex.glsl.ts","../node_modules/@deck.gl/layers/src/arc-layer/arc-layer-fragment.glsl.ts","njslab/LabStarter/Starter-DeckGLOther/MapboxGLWrapper/index.ts","njslab/LabStarter/Starter-DeckGLOther/index.ts"],"sourcesContent":["// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","// Check if one JavaScript class inherits from another\nexport function inheritsFrom<T>(Type: any, ParentType: T): Type is T {\n  while (Type) {\n    if (Type === ParentType) {\n      return true;\n    }\n    Type = Object.getPrototypeOf(Type);\n  }\n  return false;\n}\n","import * as React from 'react';\nimport {cloneElement} from 'react';\n\nconst MAP_STYLE = {position: 'absolute', zIndex: -1};\n\nexport default function evaluateChildren(\n  children: React.ReactNode | Function,\n  childProps: any\n): React.ReactNode {\n  if (typeof children === 'function') {\n    return children(childProps);\n  }\n  if (Array.isArray(children)) {\n    return children.map(child => evaluateChildren(child, childProps));\n  }\n  if (isComponent(children)) {\n    // Special treatment for react-map-gl's Map component\n    // to support shorthand use case <DeckGL><StaticMap /></DeckGL>\n    if (isReactMap(children)) {\n      // Place map under the canvas\n      childProps.style = MAP_STYLE;\n      return cloneElement(children, childProps);\n    }\n    if (needsDeckGLViewProps(children)) {\n      return cloneElement(children, childProps);\n    }\n  }\n\n  return children;\n}\n\nexport function isComponent(child: React.ReactNode): child is React.ReactElement {\n  return (child && typeof child === 'object' && 'type' in child) || false;\n}\n\nfunction isReactMap(child: React.ReactElement): boolean {\n  return child.props?.mapStyle;\n}\n\nfunction needsDeckGLViewProps(child: React.ReactElement): boolean {\n  const componentClass = child.type;\n  // @ts-expect-error deckGLViewProps is a custom hack defined on the constructor (nebula.gl)\n  return componentClass && componentClass.deckGLViewProps;\n}\n","import * as React from 'react';\nimport {createElement} from 'react';\nimport {inheritsFrom} from './inherits-from';\nimport {Layer, View} from '@deck.gl/core';\nimport {isComponent} from './evaluate-children';\nimport type {LayersList} from '@deck.gl/core';\n\n// recursively wrap render callbacks in `View`\nfunction wrapInView(node: React.ReactNode): React.ReactNode {\n  if (typeof node === 'function') {\n    // React.Children does not traverse functions.\n    // All render callbacks must be protected under a <View>\n    // @ts-expect-error View is not a ReactJSXElement constructor. Only used as a temporary wrapper and will be removed in extractJSXLayers\n    return createElement(View, {}, node);\n  }\n  if (Array.isArray(node)) {\n    return node.map(wrapInView);\n  }\n  if (isComponent(node)) {\n    if (node.type === React.Fragment) {\n      return wrapInView(node.props.children);\n    }\n    if (inheritsFrom(node.type, View)) {\n      return node;\n    }\n  }\n  return node;\n}\n\n// extracts any deck.gl layers masquerading as react elements from props.children\nexport default function extractJSXLayers({\n  children,\n  layers = [],\n  views = null\n}: {\n  children?: React.ReactNode;\n  layers?: LayersList;\n  views?: View | View[] | null;\n}): {\n  children: React.ReactNode[];\n  layers: LayersList;\n  views: View | View[] | null;\n} {\n  const reactChildren: React.ReactNode[] = []; // extract real react elements (i.e. not deck.gl layers)\n  const jsxLayers: LayersList = []; // extracted layer from react children, will add to deck.gl layer array\n  const jsxViews: Record<string, View> = {};\n\n  // React.children\n  React.Children.forEach(wrapInView(children), reactElement => {\n    if (isComponent(reactElement)) {\n      // For some reason Children.forEach doesn't filter out `null`s\n      const ElementType = reactElement.type;\n      if (inheritsFrom(ElementType, Layer)) {\n        const layer = createLayer(ElementType, reactElement.props);\n        jsxLayers.push(layer);\n      } else {\n        reactChildren.push(reactElement);\n      }\n\n      // empty id => default view\n      if (inheritsFrom(ElementType, View) && ElementType !== View && reactElement.props.id) {\n        // @ts-ignore Cannot instantiate an abstract class (View)\n        const view = new ElementType(reactElement.props);\n        jsxViews[view.id] = view;\n      }\n    } else if (reactElement) {\n      reactChildren.push(reactElement);\n    }\n  });\n\n  // Avoid modifying views if no JSX views were found\n  if (Object.keys(jsxViews).length > 0) {\n    // If a view is specified in both views prop and JSX, use the one in views\n    if (Array.isArray(views)) {\n      views.forEach(view => {\n        jsxViews[view.id] = view;\n      });\n    } else if (views) {\n      jsxViews[views.id] = views;\n    }\n    views = Object.values(jsxViews);\n  }\n\n  // Avoid modifying layers array if no JSX layers were found\n  layers = jsxLayers.length > 0 ? [...jsxLayers, ...layers] : layers;\n\n  return {layers, children: reactChildren, views};\n}\n\nfunction createLayer(LayerType: typeof Layer, reactProps: any): Layer {\n  const props = {};\n  // Layer.defaultProps is treated as ReactElement.defaultProps and merged into react props\n  // Remove them\n  const defaultProps = LayerType.defaultProps || {};\n  for (const key in reactProps) {\n    if (defaultProps[key] !== reactProps[key]) {\n      props[key] = reactProps[key];\n    }\n  }\n  // @ts-ignore Cannot instantiate an abstract class (Layer)\n  return new LayerType(props);\n}\n","import * as React from 'react';\n\nconst CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({\n  width,\n  height,\n  style\n}: {\n  width?: string | number;\n  height?: string | number;\n  style?: Partial<CSSStyleDeclaration> | null;\n}): {\n  containerStyle: React.CSSProperties;\n  canvasStyle: React.CSSProperties;\n} {\n  // This styling is enforced for correct positioning with children\n  const containerStyle: React.CSSProperties = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle: React.CSSProperties = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {\n  createElement,\n  useRef,\n  useState,\n  useMemo,\n  useEffect,\n  useImperativeHandle,\n  forwardRef\n} from 'react';\nimport {Deck} from '@deck.gl/core';\nimport useIsomorphicLayoutEffect from './utils/use-isomorphic-layout-effect';\n\nimport extractJSXLayers from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\nimport extractStyles from './utils/extract-styles';\n\nimport type {DeckGLContextValue} from './utils/position-children-under-views';\nimport type {DeckProps, Viewport} from '@deck.gl/core';\n\n/* eslint-disable max-statements, accessor-pairs */\ntype DeckInstanceRef = {\n  deck?: Deck;\n  redrawReason?: string | null;\n  lastRenderedViewports?: Viewport[];\n  viewStateUpdateRequested?: any;\n  interactionStateUpdateRequested?: any;\n  forceUpdate: () => void;\n  version: number;\n  control: React.ReactHTMLElement<HTMLElement> | null;\n};\n\n// Remove prop types in the base Deck class that support externally supplied canvas/WebGLContext\n/** DeckGL React component props */\nexport type DeckGLProps = Omit<\n  DeckProps,\n  'width' | 'height' | 'gl' | 'parent' | 'canvas' | '_customRender'\n> & {\n  Deck?: typeof Deck;\n  width?: string | number;\n  height?: string | number;\n  children?: React.ReactNode;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n};\n\nexport type DeckGLRef = {\n  deck?: Deck;\n  pickObject: Deck['pickObject'];\n  pickObjects: Deck['pickObjects'];\n  pickMultipleObjects: Deck['pickMultipleObjects'];\n};\n\nfunction getRefHandles(thisRef: DeckInstanceRef): DeckGLRef {\n  return {\n    get deck() {\n      return thisRef.deck;\n    },\n    // The following method can only be called after ref is available, by which point deck is defined in useEffect\n    pickObject: opts => thisRef.deck!.pickObject(opts),\n    pickMultipleObjects: opts => thisRef.deck!.pickMultipleObjects(opts),\n    pickObjects: opts => thisRef.deck!.pickObjects(opts)\n  };\n}\n\nfunction redrawDeck(thisRef: DeckInstanceRef) {\n  if (thisRef.redrawReason) {\n    // Only redraw if we have received a dirty flag\n    // @ts-expect-error accessing protected method\n    thisRef.deck._drawLayers(thisRef.redrawReason);\n    thisRef.redrawReason = null;\n  }\n}\n\nfunction createDeckInstance(\n  thisRef: DeckInstanceRef,\n  DeckClass: typeof Deck,\n  props: DeckProps\n): Deck {\n  const deck = new DeckClass({\n    ...props,\n    // The Deck's animation loop is independent from React's render cycle, causing potential\n    // synchronization issues. We provide this custom render function to make sure that React\n    // and Deck update on the same schedule.\n    _customRender: redrawReason => {\n      // Save the dirty flag for later\n      thisRef.redrawReason = redrawReason;\n\n      // Viewport/view state is passed to child components as props.\n      // If they have changed, we need to trigger a React rerender to update children props.\n      const viewports = deck.getViewports();\n      if (thisRef.lastRenderedViewports !== viewports) {\n        // Viewports have changed, update children props first.\n        // This will delay the Deck canvas redraw till after React update (in useLayoutEffect)\n        // so that the canvas does not get rendered before the child components update.\n        thisRef.forceUpdate();\n      } else {\n        redrawDeck(thisRef);\n      }\n    }\n  });\n  return deck;\n}\n\nconst DeckGL = forwardRef<DeckGLRef, DeckGLProps>((props, ref) => {\n  // A mechanism to force redraw\n  const [version, setVersion] = useState(0);\n  // A reference to persistent states\n  const _thisRef = useRef<DeckInstanceRef>({\n    control: null,\n    version,\n    forceUpdate: () => setVersion(v => v + 1)\n  });\n  const thisRef = _thisRef.current;\n  // DOM refs\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // extract any deck.gl layers masquerading as react elements from props.children\n  const jsxProps = useMemo(\n    () => extractJSXLayers(props),\n    [props.layers, props.views, props.children]\n  );\n\n  // Callbacks\n  let inRender = true;\n\n  const handleViewStateChange: DeckProps['onViewStateChange'] = params => {\n    if (inRender && props.viewState) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.viewStateUpdateRequested = params;\n      return null;\n    }\n    thisRef.viewStateUpdateRequested = null;\n    return props.onViewStateChange?.(params);\n  };\n\n  const handleInteractionStateChange: DeckProps['onInteractionStateChange'] = params => {\n    if (inRender) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.interactionStateUpdateRequested = params;\n    } else {\n      thisRef.interactionStateUpdateRequested = null;\n      props.onInteractionStateChange?.(params);\n    }\n  };\n\n  // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n  // the next animation frame.\n  // Needs to be called both from initial mount, and when new props are received\n  const deckProps = useMemo(() => {\n    const forwardProps: DeckProps = {\n      ...props,\n      // Override user styling props. We will set the canvas style in render()\n      style: null,\n      width: '100%',\n      height: '100%',\n      parent: containerRef.current,\n      canvas: canvasRef.current,\n      layers: jsxProps.layers,\n      views: jsxProps.views,\n      onViewStateChange: handleViewStateChange,\n      onInteractionStateChange: handleInteractionStateChange\n    };\n\n    // The defaultValue for _customRender is null, which would overwrite the definition\n    // of _customRender. Remove to avoid frequently redeclaring the method here.\n    delete forwardProps._customRender;\n\n    if (thisRef.deck) {\n      thisRef.deck.setProps(forwardProps);\n    }\n\n    return forwardProps;\n  }, [props]);\n\n  useEffect(() => {\n    const DeckClass = props.Deck || Deck;\n\n    thisRef.deck = createDeckInstance(thisRef, DeckClass, {\n      ...deckProps,\n      parent: containerRef.current,\n      canvas: canvasRef.current\n    });\n\n    return () => thisRef.deck?.finalize();\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    redrawDeck(thisRef);\n\n    // Execute deferred callbacks\n    const {viewStateUpdateRequested, interactionStateUpdateRequested} = thisRef;\n    if (viewStateUpdateRequested) {\n      handleViewStateChange(viewStateUpdateRequested);\n    }\n    if (interactionStateUpdateRequested) {\n      handleInteractionStateChange(interactionStateUpdateRequested);\n    }\n  });\n\n  useImperativeHandle(ref, () => getRefHandles(thisRef), []);\n\n  const currentViewports =\n    thisRef.deck && thisRef.deck.isInitialized ? thisRef.deck.getViewports() : undefined;\n\n  const {ContextProvider, width, height, id, style} = props;\n\n  const {containerStyle, canvasStyle} = useMemo(\n    () => extractStyles({width, height, style}),\n    [width, height, style]\n  );\n\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL canvas - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL canvas and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  if (\n    (!thisRef.viewStateUpdateRequested && thisRef.lastRenderedViewports === currentViewports) || // case 2\n    thisRef.version !== version // case 3 just before deck redraws\n  ) {\n    thisRef.lastRenderedViewports = currentViewports;\n    thisRef.version = version;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const childrenUnderViews = positionChildrenUnderViews({\n      children: jsxProps.children,\n      deck: thisRef.deck,\n      ContextProvider\n    });\n\n    const canvas = createElement('canvas', {\n      key: 'canvas',\n      id: id || 'deckgl-overlay',\n      ref: canvasRef,\n      style: canvasStyle\n    });\n\n    // Render deck.gl as the last child\n    thisRef.control = createElement(\n      'div',\n      {id: `${id || 'deckgl'}-wrapper`, ref: containerRef, style: containerStyle},\n      [canvas, childrenUnderViews]\n    );\n  }\n\n  inRender = false;\n  return thisRef.control;\n});\n\nDeckGL.defaultProps = Deck.defaultProps;\n\nexport default DeckGL;\n","import * as React from 'react';\nimport {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren, {isComponent} from './evaluate-children';\n\nimport type {Deck, DeckProps, Viewport} from '@deck.gl/core';\nimport type {EventManager} from 'mjolnir.js';\n\nexport type DeckGLContextValue = {\n  viewport: Viewport;\n  container: HTMLElement;\n  eventManager: EventManager;\n  onViewStateChange: DeckProps['onViewStateChange'];\n};\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({\n  children,\n  deck,\n  ContextProvider\n}: {\n  children: React.ReactNode[];\n  deck?: Deck;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n}): React.ReactNode[] {\n  // @ts-expect-error accessing protected property\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views: Record<\n    string,\n    {\n      viewport: Viewport;\n      children: React.ReactNode[];\n    }\n  > = {};\n  const defaultViewId = (viewManager.views[0] as View).id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (isComponent(child) && inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId) as Viewport;\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      viewState.padding = viewport.padding;\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue: DeckGLContextValue = {\n        viewport,\n        // @ts-expect-error accessing protected property\n        container: deck.canvas.offsetParent,\n        // @ts-expect-error accessing protected property\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          // @ts-expect-error accessing protected method\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Layer,\n  project32,\n  picking,\n  UNIT,\n  UpdateParameters,\n  LayerProps,\n  LayerDataSource,\n  Unit,\n  AccessorFunction,\n  Position,\n  Accessor,\n  Color,\n  DefaultProps\n} from '@deck.gl/core';\n\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './arc-layer-vertex.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<ArcLayerProps> = {\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getSourceColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getTargetColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getHeight: {type: 'accessor', value: 1},\n  getTilt: {type: 'accessor', value: 0},\n\n  greatCircle: false,\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0}\n};\n\n/** All properties supported by ArcLayer. */\nexport type ArcLayerProps<DataT = any> = _ArcLayerProps<DataT> & LayerProps;\n\n/** Properties added by ArcLayer. */\ntype _ArcLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * If `true`, create the arc along the shortest path on the earth surface.\n   * @default false\n   */\n  greatCircle?: boolean;\n\n  /**\n   * The units of the line width, one of `'meters'`, `'common'`, and `'pixels'`\n   * @default 'pixels'\n   */\n  widthUnits?: Unit;\n\n  /**\n   * The scaling multiplier for the width of each line.\n   * @default 1\n   */\n  widthScale?: number;\n\n  /**\n   * The minimum line width in pixels.\n   * @default 0\n   */\n  widthMinPixels?: number;\n\n  /**\n   * The maximum line width in pixels.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  widthMaxPixels?: number;\n\n  /**\n   * Method called to retrieve the source position of each object.\n   * @default object => object.sourcePosition\n   */\n  getSourcePosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * Method called to retrieve the target position of each object.\n   * @default object => object.targetPosition\n   */\n  getTargetPosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * The rgba color is in the format of `[r, g, b, [a]]`.\n   * @default [0, 0, 0, 255]\n   */\n  getSourceColor?: Accessor<DataT, Color>;\n\n  /**\n   * The rgba color is in the format of `[r, g, b, [a]]`.\n   * @default [0, 0, 0, 255]\n   */\n  getTargetColor?: Accessor<DataT, Color>;\n\n  /**\n   * The line width of each object, in units specified by `widthUnits`.\n   * @default 1\n   */\n  getWidth?: Accessor<DataT, number>;\n\n  /**\n   * Multiplier of layer height. `0` will make the layer flat.\n   * @default 1\n   */\n  getHeight?: Accessor<DataT, number>;\n\n  /**\n   * Use to tilt the arc to the side if you have multiple arcs with the same source and target positions.\n   * @default 0\n   */\n  getTilt?: Accessor<DataT, number>;\n};\n\n/** Render raised arcs joining pairs of source and target coordinates. */\nexport default class ArcLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_ArcLayerProps<DataT>>\n> {\n  static layerName = 'ArcLayer';\n  static defaultProps = defaultProps;\n\n  state!: Layer['state'] & {\n    model?: Model;\n  };\n\n  getBounds(): [number[], number[]] | null {\n    return this.getAttributeManager()?.getBounds([\n      'instanceSourcePositions',\n      'instanceTargetPositions'\n    ]);\n  }\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]}); // 'project' module added by default.\n  }\n\n  // This layer has its own wrapLongitude logic\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager()!;\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceSourceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      },\n      instanceHeights: {\n        size: 1,\n        transition: true,\n        accessor: 'getHeight',\n        defaultValue: 1\n      },\n      instanceTilts: {\n        size: 1,\n        transition: true,\n        accessor: 'getTilt',\n        defaultValue: 0\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState(opts: UpdateParameters<this>): void {\n    super.updateState(opts);\n    // Re-generate model if geometry changed\n    if (opts.changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager()!.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels, greatCircle, wrapLongitude} =\n      this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        greatCircle,\n        widthUnits: UNIT[widthUnits],\n        widthScale,\n        widthMinPixels,\n        widthMaxPixels,\n        useShortestPath: wrapLongitude\n      })\n      .draw();\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    let positions: number[] = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, 1, 0, i, -1, 0]);\n    }\n\n    const model = new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_STRIP,\n        attributes: {\n          positions: new Float32Array(positions)\n        }\n      }),\n      isInstanced: true\n    });\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform bool greatCircle;\nuniform bool useShortestPath;\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\n  // d: distance on the xy plane\n  // r: ratio of the current point\n  // p: ratio of the peak of the arc\n  // h: height multiplier\n  // z = f(r) = sqrt(r * (p * 2 - r)) * d * h\n  // f(0) = 0\n  // f(1) = dz\n\n  float deltaZ = targetZ - sourceZ;\n  float dh = distance * instanceHeights;\n  if (dh == 0.0) {\n    return sourceZ + deltaZ * ratio;\n  }\n  float unitZ = deltaZ / dh;\n  float p2 = unitZ * unitZ + 1.0;\n\n  // sqrt does not deal with negative values, manually flip source and target if delta.z < 0\n  float dir = step(deltaZ, 0.0);\n  float z0 = mix(sourceZ, targetZ, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\n\n// offset vector by strokeWidth pixels\n// offset_direction is -1 (left) or 1 (right)\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  // normalized direction of the line\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  // rotate by 90 degrees\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\n  float distance = length(source.xy - target.xy);\n  float z = paraboloid(distance, source.z, target.z, segmentRatio);\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target.xy - source.xy);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n\n  return vec3(\n    mix(source.xy, target.xy, segmentRatio) + tilt,\n    z * cos(tiltAngle)\n  );\n}\n\n/* Great circle interpolation\n * http://www.movable-type.co.uk/scripts/latlong.html\n */\nfloat getAngularDist (vec2 source, vec2 target) {\n  vec2 sourceRadians = radians(source);\n  vec2 targetRadians = radians(target);\n  vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\n  vec2 shd_sq = sin_half_delta * sin_half_delta;\n\n  float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\n  return 2.0 * asin(sqrt(a));\n}\n\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\n  vec2 lngLat;\n\n  // if the angularDist is PI, linear interpolation is applied. otherwise, use spherical interpolation\n  if(abs(angularDist - PI) < 0.001) {\n    lngLat = (1.0 - t) * source.xy + t * target.xy;\n  } else {\n    float a = sin((1.0 - t) * angularDist);\n    float b = sin(t * angularDist);\n    vec3 p = source3D.yxz * a + target3D.yxz * b;\n    lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n  }\n\n  float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\n\n  return vec3(lngLat, z);\n}\n\n/* END GREAT CIRCLE */\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\n  float nextSegmentRatio = getSegmentRatio(min(numSegments - 1.0, segmentIndex + 1.0));\n\n  // if it's the first point, use next - current as direction\n  // otherwise use current - prev\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  isValid = 1.0;\n\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  vec4 curr;\n  vec4 next;\n  vec3 source;\n  vec3 target;\n\n  if ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n    source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\n    target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\n    float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\n\n    vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\n    vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\n    vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\n\n    if (abs(currPos.x - prevPos.x) > 180.0) {\n      indexDir = -1.0;\n      isValid = 0.0;\n    } else if (abs(currPos.x - nextPos.x) > 180.0) {\n      indexDir = 1.0;\n      isValid = 0.0;\n    }\n    nextPos = indexDir < 0.0 ? prevPos : nextPos;\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n\n    if (isValid == 0.0) {\n      // split at the 180th meridian\n      nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\n      float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\n      currPos = mix(currPos, nextPos, t);\n      segmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n    }\n\n    vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\n    vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\n  \n    curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\n    next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n  \n  } else {\n    vec3 source_world = instanceSourcePositions;\n    vec3 target_world = instanceTargetPositions;\n    if (useShortestPath) {\n      source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n      target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n\n      float deltaLng = target_world.x - source_world.x;\n      if (deltaLng > 180.) target_world.x -= 360.;\n      if (deltaLng < -180.) source_world.x -= 360.;\n    }\n    source = project_position(source_world, instanceSourcePositions64Low);\n    target = project_position(target_world, instanceTargetPositions64Low);\n\n    // common x at longitude=-180\n    float antiMeridianX = 0.0;\n\n    if (useShortestPath) {\n      if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n        antiMeridianX = -(project_uCoordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n      }\n      float thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\n\n      if (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\n        isValid = 0.0;\n        indexDir = sign(segmentRatio - thresholdRatio);\n        segmentRatio = thresholdRatio;\n      }\n    }\n\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n    vec3 currPos = interpolateFlat(source, target, segmentRatio);\n    vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\n\n    if (useShortestPath) {\n      if (nextPos.x < antiMeridianX) {\n        currPos.x += TILE_SIZE;\n        nextPos.x += TILE_SIZE;\n      }\n    }\n\n    curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n    next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n    geometry.position = vec4(currPos, 1.0);\n  }\n\n  // Multiply out width and clamp to limits\n  // mercator pixels are interpreted as screen pixels\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n\n  // extrude\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  DECKGL_FILTER_GL_POSITION(curr, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid == 0.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","import mapboxgl from \"mapbox-gl\";\r\n\r\nimport { OrbitView, PolygonLayer, COORDINATE_SYSTEM, ArcLayer, DeckGL } from 'deck.gl';\r\nimport { Deck } from '@deck.gl/core';\r\n\r\n\r\nimport {ScatterplotLayer} from '@deck.gl/layers';\r\n\r\nimport {MapboxLayer} from '@deck.gl/mapbox';\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  latitude: 37.8,\r\n  longitude: -122.45,\r\n  zoom: 15\r\n};\r\n\r\nexport class MapboxGLWrapper {\r\n    public map: mapboxgl.Map;\r\n    deckLayer: any;\r\n    constructor(id: string) {\r\n\r\n        this.initMap(id);\r\n    }\r\n    private initMap(id: string) {\r\n        const divCon = document.getElementById(id);\r\n\r\n/** Data **/\r\nconst data = [\r\n    { pickup: [-122.42, 37.8], dropoff: [-122.48, 37.76] },\r\n    { pickup: [-122.43, 37.8], dropoff: [-122.42, 37.75] }\r\n  ];\r\n  \r\n  /** DeckGL **/\r\n  const map = new DeckGL({\r\n    container: 'id',\r\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX,\r\n    mapStyle: 'mapbox://styles/mapbox/dark-v9',\r\n  \r\n    // mapbox: false, /* disable map */\r\n    longitude: -122.45,\r\n    latitude: 37.8,\r\n    zoom: 11,\r\n    pitch: 30,\r\n    layers: [\r\n      new ArcLayer({\r\n        data,\r\n        getSourcePosition: d => d.pickup,\r\n        getTargetPosition: d => d.dropoff,\r\n        getSourceColor: d => [255, 128, 0],\r\n        getTargetColor: d => [0, 128, 255],\r\n        strokeWidth: 5\r\n      })\r\n    ],\r\n    onClick: console.log\r\n  });\r\n  \r\n  \r\n  \r\n  console.log(map)\r\n        \r\n\r\n\r\n\r\n        // this.deckLayer = new MapboxLayer({\r\n        //     id: 'my-scatterplot',\r\n        //     type: ScatterplotLayer,\r\n        //     data: [\r\n        //         {position: [-74.5, 40], size: 10000},\r\n        //         {position: [-74.5, 40.5], size: 5000},\r\n        //         {position: [-74.6, 40.5], size: 5800}\r\n        //     ],\r\n        //     // @ts-ignore\r\n        //     getPosition: d => d.position,\r\n        //     getRadius: d => d.size,\r\n        //     getColor: [255, 255, 0]\r\n        //   });\r\n        \r\n        \r\n        // // this.map\r\n        // // https://account.mapbox.com\r\n        // mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        // this.map = new mapboxgl.Map({\r\n        //     container: id,\r\n        //     zoom: 15,\r\n        //     // minZoom: 10,\r\n        //     center: [-74.5, 40],\r\n        //     style: 'mapbox://styles/mapbox/dark-v10' // 'mapbox://styles/mapbox/streets-v11'\r\n        // });\r\n        // this.map.dragRotate.disable();\r\n\r\n        // this.map.on('load', () => {\r\n        //     this.map.addLayer(this.deckLayer, 'waterway-label');\r\n        //   });\r\n\r\n        // // https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent#type\r\n        // this.map.on('mousemove', (e) => { this.mouseMove(e); });\r\n        // this.map.on('click', (e) => { this.mouseClick(e); });\r\n        // this.map.on('mousedown', (e) => { this.mouseDown(e); });\r\n        // this.map.on('dblclick', (e) => { this.mouseDClick(e); });\r\n        // this.map.on('mouseup', (e) => { this.mouseUp(e); });\r\n\r\n        // let div = document.getElementsByClassName('mapboxgl-canvas')[0] as HTMLDivElement;\r\n        // div.style.position = 'absolute';\r\n        \r\n        // div = document.getElementsByClassName('mapboxgl-control-container')[0] as HTMLDivElement;\r\n        // div.style.display = 'none';\r\n\r\n    }\r\n    public downloadImage = () => {\r\n        const fileName = \"Map.png\";\r\n\r\n        // const canvasMapbox = this.map.getCanvas();\r\n    \r\n        // const { mapGL, deck } = this.state;\r\n        // const mapboxCanvas = this.map.getCanvas(\r\n\r\n        const canvasMapbox =  this.map.getCanvas(); //  document.querySelector(\".mapboxgl-canvas\") as HTMLCanvasElement;\r\n        console.log(canvasMapbox)\r\n        console.log(this.deckLayer.deck.canvas)\r\n\r\n        // );\r\n        // deck.redraw(true);\r\n        // const deckglCanvas = document.getElementById(\"deck-gl-canvas\");\r\n    \r\n        let merge = document.createElement(\"canvas\");\r\n        merge.width = canvasMapbox.width;\r\n        merge.height = canvasMapbox.height;\r\n    \r\n        var context = merge.getContext(\"2d\");\r\n    \r\n        // context.globalAlpha = 1.0;\r\n        // context.drawImage(canvasMapbox, 0, 0);\r\n        // context.globalAlpha = 1.0;\r\n        context.drawImage(this.deckLayer.deck.canvas, 0, 0);\r\n    \r\n        // merge.toBlob(blob => {\r\n        //     FileSaver.saveAs(blob, fileName);\r\n        // });\r\n        var link = document.createElement('a');\r\n        link.download = 'filename.jpg';\r\n        link.href = merge.toDataURL()\r\n        link.click();\r\n    };\r\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\r\n        // const v = new mapboxgl.LngLat(lon, lat);\r\n        // console.log(v);\r\n        // this.map.setCenter({ lat, lng })\r\n    }\r\n    public toMap = (x: number, y: number) => {\r\n        // const p = this.map.unproject({x, y} as any)\r\n        // return [p.lng, p.lat];\r\n    }\r\n    public toScreen = (lon: number, lat: number) => {\r\n        // const p = this.map.project([lon, lat])\r\n        // return [p.x, p.y];\r\n    }\r\n    public mouseDown = (e) => {\r\n        // console.log(this.toScreen(-71.093161, 42.358871))\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseUp = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseMove = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseClick = (e) => {\r\n        // console.log(e)\r\n        \r\n        // console.log(this.toMap(100, 100));\r\n        // console.log(e.point)\r\n        // this.center()\r\n        // this.map.zoomTo(0)\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n    }\r\n    public mouseDClick = (e) => {\r\n        // console.log(JSON.stringify(e.point), e.lngLat.wrap())\r\n        this.downloadImage();\r\n    }\r\n}\r\n\r\n\r\n","import { MapboxGLWrapper } from './MapboxGLWrapper';\r\nimport { RendererCanvas } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLDivElement;\r\n    public mapboxWrapper: MapboxGLWrapper;\r\n    public renderer: Renderer;\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        this.divHost.style.position = 'relative';\r\n\r\n        this.mapboxWrapper = new MapboxGLWrapper(this.divHost.id);\r\n        // this.mapboxWrapper.mouseDown = this.mouseDown\r\n        // this.mapboxWrapper.mouseUp = this.mouseUp\r\n        // this.mapboxWrapper.mouseClick = this.mouseClick\r\n        // this.mapboxWrapper.mouseMove = this.mouseMove\r\n\r\n        // setTimeout(() => {\r\n        //     this.renderer = new Renderer(this.divHost, this);\r\n        // }, 100);\r\n\r\n    }\r\n    public mouseDown = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseUp = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseDrag = (e) => {\r\n        // TODO\r\n    }\r\n    public mouseClick = (e) => {\r\n        // TODO\r\n        console.log(e);\r\n        console.log(e['lngLat']);\r\n        // this.renderer.pts.push([e['lngLat']['lng'], e['lngLat']['lat']])\r\n    }\r\n    public mouseMove = (e)  =>{\r\n        // TODO\r\n    }\r\n    public keyDown(k: KeyboardEvent) {\r\n        // TODO\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\nexport class Renderer extends RendererCanvas {\r\n    public app: Solution\r\n    public time: number = 0.0;\r\n    public pts: number[][] = [];\r\n    constructor(div: any, app: Solution) {\r\n        super(div);\r\n        this.app = app;\r\n        this.canvas.id = 'mapboxCustom'\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n        this.canvas.style.pointerEvents = 'none';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        this.pts.push([-71.093161, 42.358871]);\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown = (x: number, y: number): void => {\r\n\r\n    }\r\n    public mouseUp = (x: number, y: number): void => {\r\n\r\n    }\r\n    public mouseDrag = (x: number, y: number): void => {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // this.time += 0.1;\r\n\r\n        // for(let i = 0 ; i < this.pts.length; ++i) {\r\n        //     const pt = this.pts[i];\r\n        //     const p = this.app.mapboxWrapper.toScreen(pt[0], pt[1]);\r\n        //     // const p = this.app.mapboxWrapper.map.unproject({x: 10, y: 10})\r\n    \r\n        //     ctx.beginPath();\r\n        //     ctx.arc(p[0], p[1], Math.sin(this.time) * 3 + 15, 0, Math.PI * 2);\r\n        //     ctx.closePath();\r\n        //     ctx.fillStyle = '#0f0';\r\n        //     ctx.fill();\r\n        // }\r\n\r\n    }\r\n}"],"names":["window","useLayoutEffect","useEffect","inheritsFrom","Type","ParentType","Object","getPrototypeOf","MAP_STYLE","position","zIndex","evaluateChildren","children","childProps","Array","isArray","map","child","isComponent","props","_child$props","mapStyle","isReactMap","style","cloneElement","componentClass","type","deckGLViewProps","needsDeckGLViewProps","wrapInView","node","createElement","View","React","CANVAS_ONLY_STYLES","mixBlendMode","redrawDeck","thisRef","redrawReason","deck","_drawLayers","DeckGL","forwardRef","ref","version","setVersion","useState","useRef","control","forceUpdate","v","current","containerRef","canvasRef","jsxProps","useMemo","layers","views","reactChildren","jsxLayers","jsxViews","reactElement","ElementType","Layer","layer","LayerType","reactProps","defaultProps","key","createLayer","push","id","view","keys","length","forEach","values","extractJSXLayers","inRender","handleViewStateChange","params","viewState","viewStateUpdateRequested","onViewStateChange","_props$onViewStateCha","handleInteractionStateChange","interactionStateUpdateRequested","onInteractionStateChange","deckProps","forwardProps","width","height","parent","canvas","_customRender","setProps","DeckClass","Deck","viewports","getViewports","lastRenderedViewports","createDeckInstance","_thisRef$deck","finalize","useIsomorphicLayoutEffect","useImperativeHandle","pickObject","opts","pickMultipleObjects","pickObjects","getRefHandles","currentViewports","isInitialized","undefined","ContextProvider","containerStyle","canvasStyle","left","top","extractStyles","childrenUnderViews","viewManager","defaultViewId","viewId","viewChildren","viewport","getViewport","getViewState","padding","x","y","viewElement","contextValue","container","offsetParent","eventManager","_onViewStateChange","value","positionChildrenUnderViews","DEFAULT_COLOR","getSourcePosition","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getWidth","getHeight","getTilt","greatCircle","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","ArcLayer","constructor","_defineProperty","getBounds","this","getAttributeManager","_this$getAttributeMan","getShaders","super","vs","fs","modules","project32","picking","wrapLongitude","initializeState","addInstanced","instanceSourcePositions","size","fp64","use64bitPositions","transition","accessor","instanceTargetPositions","instanceSourceColors","colorFormat","normalized","defaultValue","instanceTargetColors","instanceWidths","instanceHeights","instanceTilts","updateState","changeFlags","extensionsChanged","gl","context","state","model","delete","_getModel","invalidateAll","draw","uniforms","setUniforms","UNIT","useShortestPath","positions","i","concat","Model","geometry","Geometry","drawMode","attributes","Float32Array","isInstanced","numSegments","MapboxGLWrapper","deckLayer","downloadImage","canvasMapbox","getCanvas","console","log","merge","document","getContext","drawImage","link","download","href","toDataURL","click","center","toMap","toScreen","lon","lat","mouseDown","e","mouseUp","mouseMove","mouseClick","mouseDClick","initMap","getElementById","mapboxApiAccessToken","process","longitude","latitude","zoom","pitch","data","pickup","dropoff","d","strokeWidth","onClick","Solution","div","divHost","mapboxWrapper","renderer","mouseDrag","keyDown","k","destroy","lastElementChild","removeChild","Renderer","RendererCanvas","app","time","pts","pointerEvents","start","render","ctx"],"sourceRoot":""}