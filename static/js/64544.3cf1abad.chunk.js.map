{"version":3,"file":"static/js/64544.3cf1abad.chunk.js","mappings":"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","sources":["njslab/app-legacy/NJSCore/AppTemplate/AppThreeTemplate/ThreeCore/index.ts","njslab/app-legacy/NJSCore/AppTemplate/AppThreeTemplate/Core/Core.ts","njslab/app-legacy/NJSCore/AppTemplate/AppThreeTemplate/index.ts"],"sourcesContent":["import * as THREE from 'three';\r\n\r\nexport class ThreeCore {\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    t: number = 0.0;\r\n\r\n    camera: THREE.PerspectiveCamera;\r\n    scene: THREE.Scene;\r\n    renderer: THREE.WebGLRenderer;\r\n\r\n\r\n    constructor(id: string) {\r\n        this.InitCanvas(id);\r\n    }\r\n    InitCanvas(id: string) {\r\n        const host = document.getElementById(id);\r\n        if (host) { this.host = host; }\r\n\r\n        this.scene = new THREE.Scene();\r\n        this.scene.background = new THREE.Color(200, 200, 200);\r\n        this.scene.castShadow = true;\r\n\r\n        this.camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 5000);\r\n        this.camera.position.set(0, 0, 250);\r\n\r\n        const ambientLight = new THREE.AmbientLight(0xcccccc, 0.4);\r\n        ambientLight.castShadow = true;\r\n        this.scene.add(ambientLight);\r\n\r\n        var pointLight = new THREE.PointLight(0xffffff, 0.8);\r\n        pointLight.castShadow = true;\r\n        this.scene.add(pointLight);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setPixelRatio(this.host.clientWidth / this.host.clientHeight);\r\n        this.renderer.domElement.id = 'Three';\r\n        this.renderer.setSize(this.host.clientWidth, this.host.clientHeight);\r\n        this.host.appendChild(this.renderer.domElement);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.MouseUp(e);\r\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.MouseMove(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        console.log(e);\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.Render();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.t += 0.01;\r\n    }\r\n    Render() {\r\n\r\n    }\r\n}","import { ThreeCore } from '../ThreeCore';\r\nimport * as THREE from 'three';\r\n\r\nexport class Core {\r\n    threeCore: ThreeCore;\r\n\r\n    boxMeshes: THREE.Mesh[] = [];\r\n\r\n    constructor(threeCore: ThreeCore) {\r\n        this.threeCore = threeCore;\r\n        for (let i = 0; i < 10; ++i) {\r\n            const boxGeo = new THREE.BoxGeometry(10, 10, 10);\r\n            const boxMesh = new THREE.Mesh(boxGeo);\r\n            boxMesh.position.x = 50 - (Math.random() * 100); // new THREE.Vector3(50 - (Math.random() * 100), 50 - (Math.random() * 100), 50 - (Math.random() * 100));\r\n            boxMesh.position.y = 50 - (Math.random() * 100);\r\n            boxMesh.position.z = 50 - (Math.random() * 100);\r\n            boxMesh.castShadow = true;\r\n            boxMesh['value'] = Math.random();\r\n            this.threeCore.scene.add(boxMesh);\r\n            this.boxMeshes.push(boxMesh);\r\n        }\r\n    }\r\n    Render() {\r\n        for (let i = 0; i < this.boxMeshes.length; ++i) {\r\n            this.boxMeshes[i].rotateX(this.boxMeshes[i]['value'] * 0.01);\r\n            this.boxMeshes[i].rotateY(this.boxMeshes[i]['value'] * 0.05);\r\n            this.boxMeshes[i].rotateZ(this.boxMeshes[i]['value'] * 0.09);\r\n        }\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        console.log(e, 'core');\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        console.log(e, 'core');\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        console.log(e, 'core');\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        console.log(e, 'core');\r\n    }\r\n}","import { ThreeCore } from './ThreeCore';\r\nimport { Core } from './Core/Core';\r\nexport class AppThreeTemplate {\r\n    threeCore: ThreeCore;\r\n    core: Core;\r\n    static Init(id: string) {\r\n        const app = new AppThreeTemplate(id);\r\n        app.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.threeCore = new ThreeCore(id);\r\n        this.core = new Core(this.threeCore);\r\n        this.BindEvent();\r\n        this.BindRenderer();\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n    BindEvent() {\r\n        this.threeCore.MouseDown = (e: MouseEvent) => this.core.MouseDown(e);\r\n        this.threeCore.MouseMove = (e: MouseEvent) => this.core.MouseMove(e);\r\n        this.threeCore.MouseUp = (e: MouseEvent) => this.core.MouseUp(e);\r\n    }\r\n    BindRenderer() {\r\n        this.threeCore.Render = () => this.core.Render();\r\n    }\r\n}\r\n"],"names":["ThreeCore","constructor","id","canvas","host","ctx","t","camera","scene","renderer","this","InitCanvas","document","getElementById","THREE","background","castShadow","window","innerWidth","innerHeight","position","set","ambientLight","add","pointLight","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","setSize","appendChild","Init","EventBind","Loop","onmousedown","e","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","console","log","requestAnimationFrame","Render","render","Core","threeCore","boxMeshes","i","boxGeo","boxMesh","x","Math","random","y","z","push","length","rotateX","rotateY","rotateZ","MouseDrag","AppThreeTemplate","static","Dummy","core","BindEvent","BindRenderer"],"sourceRoot":""}