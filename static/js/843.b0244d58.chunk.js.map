{"version":3,"file":"static/js/843.b0244d58.chunk.js","mappings":"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AK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAE/E,C","sources":["njslab/Workshop/workshop-ml/06_NetworkIrisPrediction/index.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs'\r\nimport { RendererCanvas, Vector3, remap, PolynomialRegression } from '../../../../lib';\r\n\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginTop = '80px';\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '600px';\r\n        div.style.height = '350px';\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n        this.renderer.canvas.style.position = 'unset';\r\n\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.stopTrain();\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Renderer extends RendererCanvas {\r\n    tfModel: TFModel;\r\n    accList: number[] = []\r\n    lossList: number[] = []\r\n    divText: HTMLDivElement;\r\n    constructor(divHost: HTMLDivElement) {\r\n        super(divHost);\r\n        this.canvas.style.position = 'unset';\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.tfModel = new TFModel();\r\n\r\n        this.divText = document.createElement('div');\r\n        this.divHost.appendChild(this.divText);\r\n        this.divText.textContent = 'title';\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n        // this.tfModel.trainLoop();\r\n        // console.log(this.tfModel);\r\n\r\n        this.accList = [];\r\n        this.lossList = [];\r\n\r\n        let minX = 0\r\n        let maxX = this.canvas.width;\r\n        \r\n        let minY = 0;\r\n        let maxY = Number.MIN_VALUE;\r\n\r\n        if (this.tfModel.hist.length > 0){\r\n            this.divText.textContent = `acc: ${ parseFloat(this.tfModel.hist[this.tfModel.hist.length -1].acc).toFixed(3)}, loss: ${parseFloat(this.tfModel.hist[this.tfModel.hist.length -1].loss).toFixed(3)}`;\r\n        }\r\n\r\n        for(let i = 0 ; i < this.tfModel.hist.length; ++i) {\r\n\r\n            // console.log(this.tfModel.hist)\r\n            let acc = this.tfModel.hist[i].acc;\r\n            let loss = this.tfModel.hist[i].loss;\r\n\r\n            // if (minY > acc) minY = acc;\r\n            // if (minY > loss) minY = loss;\r\n            \r\n            if (maxY < acc) maxY = acc;\r\n            if (maxY < loss) maxY = loss;\r\n\r\n            // console.log('acc', acc)\r\n\r\n            this.accList.push(acc);\r\n            this.lossList.push(loss);\r\n        }\r\n\r\n        if (this.accList.length > 1) {\r\n\r\n            for (let i = 0; i < this.accList.length; ++i) {\r\n                let acc = this.accList[i];\r\n\r\n                let projected_X_Acc = remap(i, 0, this.accList.length,  0, this.canvas.width);\r\n                let projected_Y_Acc = remap(acc, maxY, minY,  0, this.canvas.height);\r\n\r\n                if (i === 0) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(projected_X_Acc, projected_Y_Acc);\r\n                } else {\r\n                    ctx.lineTo(projected_X_Acc, projected_Y_Acc);\r\n                }\r\n\r\n            }\r\n            ctx.strokeStyle = '#0f0'\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        // console.log(this.lossList);\r\n\r\n        if (this.lossList.length > 1) {\r\n\r\n            for (let i = 0; i < this.lossList.length; ++i) {\r\n                let loss = this.lossList[i];\r\n                // console.log(loss)\r\n\r\n                let projected_X_loss = remap(i, 0, this.lossList.length,  0, this.canvas.width);\r\n                let projected_Y_loss = remap(loss, minY, maxY,  this.canvas.height, 0);\r\n\r\n                if (i === 0) {\r\n                    // ctx.beginPath();\r\n                    // ctx.moveTo(projected_X_loss, projected_Y_loss);\r\n                } else {\r\n                    // ctx.lineTo(projected_X_loss, projected_Y_loss);\r\n                    ctx.beginPath();\r\n                    ctx.arc(projected_X_loss, projected_Y_loss, 1, 0 ,3.14 *2);\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = '#f00'\r\n                    ctx.stroke();\r\n                }\r\n\r\n            }\r\n            ctx.strokeStyle = '#f00'\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        \r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public stopTrain(){\r\n        this.tfModel.isTraining = false;\r\n    }\r\n}\r\n\r\n\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    hist: any[]= [];\r\n    isTraining = false;\r\n\r\n    // xTrain = tf.tensor2d([\r\n    //     [0.0, 0.0],\r\n    //     [1.0, 0.0],\r\n    //     [0.0, 1.0],\r\n    //     [1.0, 1.0]\r\n    // ]);\r\n    // yTrain = tf.tensor2d([\r\n    //     [0.0],\r\n    //     [1.0],\r\n    //     [1.0],\r\n    //     [0.0]\r\n    // ]);\r\n\r\n    iteration = 0;\r\n\r\n    constructor() {\r\n        const d = getIrisData();\r\n        tf.util.shuffle(d);\r\n\r\n\r\n        // console.log(d);\r\n\r\n        const inputs = [];\r\n        for (let i = 0; i < d.length; ++i) {\r\n            let row = [];\r\n            for (let j = 0; j < d[i].length - 1; ++j) {\r\n                row.push(d[i][j]);\r\n            }\r\n            inputs.push(row);\r\n        }\r\n\r\n        const labels = []; //  d.map((d: number[]) => [d[d.length - 1]]);\r\n        for (let i = 0; i < d.length; ++i) {\r\n            if (d[i][d[i].length - 1] === 0) {\r\n                labels.push([1, 0, 0]);\r\n            } else if (d[i][d[i].length - 1] === 1) {\r\n                labels.push([0, 1, 0]);\r\n            } else if (d[i][d[i].length - 1] === 2) {\r\n                labels.push([0, 0, 1]);\r\n            }\r\n\r\n        }\r\n\r\n        // console.log(inputs);\r\n        // console.log(labels);\r\n\r\n        // console.log('tensor......................');\r\n        this.inputsTensor = tf.tensor2d(inputs);\r\n        this.labelsTensor = tf.tensor2d(labels);\r\n        // console.log(this.inputsTensor);\r\n        // console.log(this.labelsTensor);\r\n        this.inputsTensor.print();\r\n        this.labelsTensor.print();\r\n\r\n        this.model = tf.sequential();\r\n\r\n        // console.log(this.inputsTensor.shape[1]);\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 10,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: 3,\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.isTraining = true;\r\n        this.trainLoop();\r\n    }\r\n    public  trainLoop = async () => {\r\n        if (!this.isTraining) return;\r\n\r\n        if (this.iteration++ % 100 === 0) {\r\n        // for saving the model\r\n        // await this.model.save('downloads://my-model');\r\n        // const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n        // console.log(saveResults);\r\n        }\r\n\r\n\r\n\r\n        this.train().then((result: any) => {\r\n\r\n        //     console.log( {'loss': result.history.loss[0], 'acc': result.history.acc[0]});\r\n\r\n            this.hist.push(result.history);\r\n            // console.log(result.history)\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public train = async() => {\r\n        return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n            batchSize: 100,\r\n            epochs: 1,\r\n            shuffle: true,\r\n            validationData: [this.inputsTensor, this.labelsTensor],\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst getIrisData = () => {\r\n    return [\r\n        [5.1, 3.5, 1.4, 0.2, 0], [4.9, 3.0, 1.4, 0.2, 0], [4.7, 3.2, 1.3, 0.2, 0],\r\n        [4.6, 3.1, 1.5, 0.2, 0], [5.0, 3.6, 1.4, 0.2, 0], [5.4, 3.9, 1.7, 0.4, 0],\r\n        [4.6, 3.4, 1.4, 0.3, 0], [5.0, 3.4, 1.5, 0.2, 0], [4.4, 2.9, 1.4, 0.2, 0],\r\n        [4.9, 3.1, 1.5, 0.1, 0], [5.4, 3.7, 1.5, 0.2, 0], [4.8, 3.4, 1.6, 0.2, 0],\r\n        [4.8, 3.0, 1.4, 0.1, 0], [4.3, 3.0, 1.1, 0.1, 0], [5.8, 4.0, 1.2, 0.2, 0],\r\n        [5.7, 4.4, 1.5, 0.4, 0], [5.4, 3.9, 1.3, 0.4, 0], [5.1, 3.5, 1.4, 0.3, 0],\r\n        [5.7, 3.8, 1.7, 0.3, 0], [5.1, 3.8, 1.5, 0.3, 0], [5.4, 3.4, 1.7, 0.2, 0],\r\n        [5.1, 3.7, 1.5, 0.4, 0], [4.6, 3.6, 1.0, 0.2, 0], [5.1, 3.3, 1.7, 0.5, 0],\r\n        [4.8, 3.4, 1.9, 0.2, 0], [5.0, 3.0, 1.6, 0.2, 0], [5.0, 3.4, 1.6, 0.4, 0],\r\n        [5.2, 3.5, 1.5, 0.2, 0], [5.2, 3.4, 1.4, 0.2, 0], [4.7, 3.2, 1.6, 0.2, 0],\r\n        [4.8, 3.1, 1.6, 0.2, 0], [5.4, 3.4, 1.5, 0.4, 0], [5.2, 4.1, 1.5, 0.1, 0],\r\n        [5.5, 4.2, 1.4, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [5.0, 3.2, 1.2, 0.2, 0],\r\n        [5.5, 3.5, 1.3, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [4.4, 3.0, 1.3, 0.2, 0],\r\n        [5.1, 3.4, 1.5, 0.2, 0], [5.0, 3.5, 1.3, 0.3, 0], [4.5, 2.3, 1.3, 0.3, 0],\r\n        [4.4, 3.2, 1.3, 0.2, 0], [5.0, 3.5, 1.6, 0.6, 0], [5.1, 3.8, 1.9, 0.4, 0],\r\n        [4.8, 3.0, 1.4, 0.3, 0], [5.1, 3.8, 1.6, 0.2, 0], [4.6, 3.2, 1.4, 0.2, 0],\r\n        [5.3, 3.7, 1.5, 0.2, 0], [5.0, 3.3, 1.4, 0.2, 0], [7.0, 3.2, 4.7, 1.4, 1],\r\n        [6.4, 3.2, 4.5, 1.5, 1], [6.9, 3.1, 4.9, 1.5, 1], [5.5, 2.3, 4.0, 1.3, 1],\r\n        [6.5, 2.8, 4.6, 1.5, 1], [5.7, 2.8, 4.5, 1.3, 1], [6.3, 3.3, 4.7, 1.6, 1],\r\n        [4.9, 2.4, 3.3, 1.0, 1], [6.6, 2.9, 4.6, 1.3, 1], [5.2, 2.7, 3.9, 1.4, 1],\r\n        [5.0, 2.0, 3.5, 1.0, 1], [5.9, 3.0, 4.2, 1.5, 1], [6.0, 2.2, 4.0, 1.0, 1],\r\n        [6.1, 2.9, 4.7, 1.4, 1], [5.6, 2.9, 3.6, 1.3, 1], [6.7, 3.1, 4.4, 1.4, 1],\r\n        [5.6, 3.0, 4.5, 1.5, 1], [5.8, 2.7, 4.1, 1.0, 1], [6.2, 2.2, 4.5, 1.5, 1],\r\n        [5.6, 2.5, 3.9, 1.1, 1], [5.9, 3.2, 4.8, 1.8, 1], [6.1, 2.8, 4.0, 1.3, 1],\r\n        [6.3, 2.5, 4.9, 1.5, 1], [6.1, 2.8, 4.7, 1.2, 1], [6.4, 2.9, 4.3, 1.3, 1],\r\n        [6.6, 3.0, 4.4, 1.4, 1], [6.8, 2.8, 4.8, 1.4, 1], [6.7, 3.0, 5.0, 1.7, 1],\r\n        [6.0, 2.9, 4.5, 1.5, 1], [5.7, 2.6, 3.5, 1.0, 1], [5.5, 2.4, 3.8, 1.1, 1],\r\n        [5.5, 2.4, 3.7, 1.0, 1], [5.8, 2.7, 3.9, 1.2, 1], [6.0, 2.7, 5.1, 1.6, 1],\r\n        [5.4, 3.0, 4.5, 1.5, 1], [6.0, 3.4, 4.5, 1.6, 1], [6.7, 3.1, 4.7, 1.5, 1],\r\n        [6.3, 2.3, 4.4, 1.3, 1], [5.6, 3.0, 4.1, 1.3, 1], [5.5, 2.5, 4.0, 1.3, 1],\r\n        [5.5, 2.6, 4.4, 1.2, 1], [6.1, 3.0, 4.6, 1.4, 1], [5.8, 2.6, 4.0, 1.2, 1],\r\n        [5.0, 2.3, 3.3, 1.0, 1], [5.6, 2.7, 4.2, 1.3, 1], [5.7, 3.0, 4.2, 1.2, 1],\r\n        [5.7, 2.9, 4.2, 1.3, 1], [6.2, 2.9, 4.3, 1.3, 1], [5.1, 2.5, 3.0, 1.1, 1],\r\n        [5.7, 2.8, 4.1, 1.3, 1], [6.3, 3.3, 6.0, 2.5, 2], [5.8, 2.7, 5.1, 1.9, 2],\r\n        [7.1, 3.0, 5.9, 2.1, 2], [6.3, 2.9, 5.6, 1.8, 2], [6.5, 3.0, 5.8, 2.2, 2],\r\n        [7.6, 3.0, 6.6, 2.1, 2], [4.9, 2.5, 4.5, 1.7, 2], [7.3, 2.9, 6.3, 1.8, 2],\r\n        [6.7, 2.5, 5.8, 1.8, 2], [7.2, 3.6, 6.1, 2.5, 2], [6.5, 3.2, 5.1, 2.0, 2],\r\n        [6.4, 2.7, 5.3, 1.9, 2], [6.8, 3.0, 5.5, 2.1, 2], [5.7, 2.5, 5.0, 2.0, 2],\r\n        [5.8, 2.8, 5.1, 2.4, 2], [6.4, 3.2, 5.3, 2.3, 2], [6.5, 3.0, 5.5, 1.8, 2],\r\n        [7.7, 3.8, 6.7, 2.2, 2], [7.7, 2.6, 6.9, 2.3, 2], [6.0, 2.2, 5.0, 1.5, 2],\r\n        [6.9, 3.2, 5.7, 2.3, 2], [5.6, 2.8, 4.9, 2.0, 2], [7.7, 2.8, 6.7, 2.0, 2],\r\n        [6.3, 2.7, 4.9, 1.8, 2], [6.7, 3.3, 5.7, 2.1, 2], [7.2, 3.2, 6.0, 1.8, 2],\r\n        [6.2, 2.8, 4.8, 1.8, 2], [6.1, 3.0, 4.9, 1.8, 2], [6.4, 2.8, 5.6, 2.1, 2],\r\n        [7.2, 3.0, 5.8, 1.6, 2], [7.4, 2.8, 6.1, 1.9, 2], [7.9, 3.8, 6.4, 2.0, 2],\r\n        [6.4, 2.8, 5.6, 2.2, 2], [6.3, 2.8, 5.1, 1.5, 2], [6.1, 2.6, 5.6, 1.4, 2],\r\n        [7.7, 3.0, 6.1, 2.3, 2], [6.3, 3.4, 5.6, 2.4, 2], [6.4, 3.1, 5.5, 1.8, 2],\r\n        [6.0, 3.0, 4.8, 1.8, 2], [6.9, 3.1, 5.4, 2.1, 2], [6.7, 3.1, 5.6, 2.4, 2],\r\n        [6.9, 3.1, 5.1, 2.3, 2], [5.8, 2.7, 5.1, 1.9, 2], [6.8, 3.2, 5.9, 2.3, 2],\r\n        [6.7, 3.3, 5.7, 2.5, 2], [6.7, 3.0, 5.2, 2.3, 2], [6.3, 2.5, 5.0, 1.9, 2],\r\n        [6.5, 3.0, 5.2, 2.0, 2], [6.2, 3.4, 5.4, 2.3, 2], [5.9, 3.0, 5.1, 1.8, 2],\r\n    ];\r\n};"],"names":["Solution","id","divHost","renderer","this","document","getElementById","div","createElement","style","marginTop","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","canvas","position","stopTrain","destroy","lastElementChild","removeChild","tfModel","accList","lossList","divText","TFModel","textContent","start","ctx","maxY","Number","MIN_VALUE","hist","length","parseFloat","acc","toFixed","loss","i","push","projected_X_Acc","remap","projected_Y_Acc","beginPath","moveTo","lineTo","strokeStyle","stroke","projected_X_loss","projected_Y_loss","arc","closePath","isTraining","RendererCanvas","model","inputsTensor","labelsTensor","iteration","trainLoop","train","then","result","history","setTimeout","fit","batchSize","epochs","shuffle","validationData","d","getIrisData","tf","inputs","row","j","labels","print","hidden","inputShape","shape","units","activation","output","add","compile","optimizer","metrics","summary"],"sourceRoot":""}