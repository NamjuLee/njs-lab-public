{"version":3,"file":"static/js/8834.4b8d5a40.chunk.js","mappings":"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","sources":["njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/Common/GeometryBase.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/ColorUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/constant.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/Area/Renderer/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/Area/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/ActiveCommander/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/MapboxGLWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/DeckGL/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/UI/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Scene/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/index.ts"],"sourcesContent":["import { Scene } from '../../../../Scene';\nexport class GeometryBase {\n    public scene: Scene;\n    public isHovered: boolean = false;\n    public type: string;\n    constructor(scene: Scene) {\n        this.scene = scene;\n\n        this.scene.area = this;\n    }\n    public isInside(x: number, y: number) {\n        return false;\n    }\n    public translate(x: number, y: number) {\n        \n    }\n    public update() {\n\n    }\n    public onMouseUp() {\n        \n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        this.update();\n        this.renderPost(ctx);\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n\n    }\n}","export const hex2RGB = (hex: string, isGray: boolean = false) => {\n    hex = hex.replace('#', '');\n    let r = parseInt(hex.substring(0, 2), 16);\n    let g = parseInt(hex.substring(2, 4), 16);\n    let b = parseInt(hex.substring(4, 6), 16);\n    if (isGray) {\n        // let v = (0.58 * (r / 255)) + (0.17 * (g / 255)) + (0.8 * (b / 255));\n        let v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n        return [v, v, v];\n    } else {\n        return [r, g, b];\n    }\n}","export const LANDUSE_TYPE_MAPPING = {\n    R: { text: 'Residential', color: '#ffff6e' },\n    B: { text: 'Business', color: '#f59700' },\n    X: { text: 'Residential & Business', color: '#FFC25F' },\n    A: { text: 'Agriculture', color: '#9EFF99' },\n    LIBRARY: { text: 'Library', color: '#04E762' },\n    SCHOOL: { text: 'School', color: '#95E06C' },\n    GOVERNMENT: { text: 'Government', color: '#D741A7' },\n    HEALTH: { text: 'Health', color: '#008BF8' },\n    COMMUNITY: { text: 'Community', color: '#00CECB' },\n    RELIGION: { text: 'Religion', color: '#9BFFFD' },\n    C: { text: 'Other CAI', color: '#D544CC' },\n    O: { text: 'Other BSLs', color: 'gray' }\n}\nexport const FUNDING_STATUS_MAPPING = {\n    None: {\n      text: 'Not assigned',\n      color: 'gray'\n    },\n    default: {\n      text: 'Default',\n      color: '#5287E6'\n    },\n    pending: {\n      text: 'Pending',\n      color: '#746CDD'\n    },\n    assigned: {\n      text: 'Assigned',\n      color: '#A355D4'\n    }\n  }","import * as turf from '@turf/turf';\nimport { Units } from '@turf/turf';\nimport { Area } from '../';\n\nimport { LANDUSE_TYPE_MAPPING } from '../../../../../lib';\n\nexport class Renderer {\n    public host: Area;\n    constructor(host: Area) {\n        this.host = host;\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.renderAreaBounding(ctx);\n        this.renderCroppedArea(ctx);\n        this.renderProperties(ctx);\n\n        if (this.host.isHovered) {\n            this.renderControlPoint(ctx);\n        }\n\n    }\n    private renderCroppedArea(ctx: CanvasRenderingContext2D) {\n        const diff = difference(this.host.polygonTurf, this.host.scene.polygonsDifference,);\n        let x, y;\n        for (let i = 0; i < diff['geometry']['coordinates'][0].length; ++i) {\n            const p = diff['geometry']['coordinates'][0][i];\n            if (i === 0) {\n                ctx.beginPath();\n                const sp = this.host.scene.ac.toScreen(p[0], p[1])\n                ctx.moveTo(sp[0], sp[1]);\n            } else {\n                const sp = this.host.scene.ac.toScreen(p[0], p[1])\n                ctx.lineTo(sp[0], sp[1]);\n                // console.log(sp)\n            }\n        }\n        ctx.setLineDash([5, 7]);\n        ctx.lineDashOffset = this.host.t;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#fff';\n        const op = 0.2 + Math.sin(this.host.t * 0.1) * 0.09;\n        // console.log(op)\n        ctx.fillStyle = `rgba(0, 255, 255, ${op} )`;\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.setLineDash([]);\n    }\n    private renderControlPoint(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'rgba(200, 200, 200, 1.0)';\n        ctx.strokeStyle = 'rgba(50, 50, 50, 1.0)';\n        ctx.lineWidth = 3;\n        this.host.pts.forEach(v => {\n            ctx.beginPath();\n            ctx.arc(v.x, v.y, 8, 0, Math.PI * 2.0);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n        });\n    }\n    private renderAreaBounding(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        if (this.host.type === 'circle') {\n            ctx.ellipse(this.host.cp.x, this.host.cp.y, this.host.width * 0.5, this.host.height * 0.55, 0.0, 0.0, Math.PI * 2.0);\n        } else if (this.host.type === 'rect') {\n            ctx.rect(this.host.pts[3].x, this.host.pts[3].y, this.host.width, this.host.height);\n        }\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.9)';\n        ctx.stroke();\n    }\n    private renderProperties(ctx: CanvasRenderingContext2D) {\n        const area = turf.convertArea(turf.area(this.host.polygonTurf), 'meters', 'miles')\n        ctx.textAlign = 'center';\n        ctx.font = '18px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`Area in square miles: ${area.toFixed(5)}`, this.host.cp.x, this.host.cp.y - 60 - this.host.height * 0.5);\n        // console.log(this.host.cp.x, 50 - this.host.cp.y - this.host.height * 0.5);\n\n\n        const pts = turf.pointsWithinPolygon(this.host.scene.points, this.host.polygonTurf)\n        // console.log(pts);\n        let r = 0, b = 0, other = 0;\n        for(let i = 0; i < pts.features.length; ++i) {\n            if (pts.features[i].properties['landuse'] === 'R') {\n                r += 1;\n            } else if (pts.features[i].properties['landuse'] === 'B') {\n                b += 1;\n            } else {\n                other += 1;\n            }\n        }\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.R.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.R.text}: ${r},`, this.host.cp.x - 120, this.host.cp.y - 25 - this.host.height * 0.5);\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.B.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.B.text}: ${b},`, this.host.cp.x + 28, this.host.cp.y - 25 - this.host.height * 0.5);\n\n        ctx.fillStyle = 'rgb(0, 128, 0)'; \n        ctx.fillText(`Other: ${other}`, this.host.cp.x + 140, this.host.cp.y - 25 - this.host.height * 0.5);\n        // console.log(r, b, other)\n    }\n}\n\nconst difference = (area, polygons) => {\n    for (let i = 0; i < polygons.length; ++i) {\n        area = turf.difference(area, polygons[i]);\n    }\n    return area;\n}","\nimport { Scene } from '../../../../Scene';\nimport { GeometryBase } from '../Common/GeometryBase';\nimport { NVector3, isInsideEllipse, } from '../../../../../../../../lib/NJSCore/Core/Geometry/NGeometry/NVector3';\n\nimport { Renderer } from './Renderer';\n\nimport * as turf from '@turf/turf';\n\nexport class Area extends GeometryBase {\n    renderer: Renderer;\n    cp: NVector3;\n    pts: NVector3[] = [];\n    width = 200;\n    height = 200;\n    capturedVecId: number = -1;\n    t = 0.1;\n    polygonTurf: any;\n    constructor(scene: Scene) {\n        super(scene);\n        this.renderer = new Renderer(this);\n\n        this.type = 'rect';\n\n        this.cp = new NVector3(scene.solution.rendererWrapper.renderer.canvas.width * 0.5, scene.solution.rendererWrapper.renderer.canvas.height * 0.5)\n\n        const widthHalf = this.width * 0.5;\n        const heightHalf = this.height * 0.5;\n\n        this.pts.push(new NVector3(this.cp.x - widthHalf, this.cp.y + heightHalf));\n        this.pts.push(new NVector3(this.cp.x + widthHalf, this.cp.y + heightHalf));\n        this.pts.push(new NVector3(this.cp.x + widthHalf, this.cp.y - heightHalf));\n        this.pts.push(new NVector3(this.cp.x - widthHalf, this.cp.y - heightHalf));\n\n        this.updateProjection();\n\n        // const diff = difference(this.getArray(), this.scene.polygonsDifference[0]);\n        // console.log(diff);\n    }\n    public updateProjection() {\n        const mp = this.scene.ac.toMap(this.cp.x, this.cp.y);\n        this.cp.long = mp[0];\n        this.cp.lat = mp[1];\n        for (let i = 0; i < this.pts.length; ++i) {\n            let mp = this.scene.ac.toMap(this.pts[i].x, this.pts[i].y);\n            this.pts[i].long = mp[0];\n            this.pts[i].lat = mp[1];\n        }\n\n        this.updatePolygonTurf()\n    }\n    public isInside(x: number, y: number) {\n        const mVec = new NVector3(x, y);\n\n        if (this.type === 'circle') {\n            if (isInsideEllipse(this.cp, mVec, this.width * 0.5, this.height * 0.5)) {\n                this.isHovered = true;\n                return true;\n            }\n        } else {\n            if (NVector3.IsInsideOfVecs(mVec, this.pts)) {\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n\n        this.capturedVecId = -1;\n        for (let i = 0; i < this.pts.length; ++i) {\n            if (this.pts[i].Distance(mVec) < 20) {\n                this.capturedVecId = i;\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        this.isHovered = false;\n        return false;\n    }\n    public translate(x: number, y: number): void {\n        const preX = this.scene.solution.activeCommander.mp[0] - this.scene.solution.activeCommander.mpPre[0];\n        const preY = this.scene.solution.activeCommander.mp[1] - this.scene.solution.activeCommander.mpPre[1];\n\n        if (this.capturedVecId > -1) {\n            this.pts[this.capturedVecId].x += preX;\n            this.pts[this.capturedVecId].y += preY;\n            // console.log(this.capturedVecId)\n            if (this.capturedVecId === 0) {\n                this.pts[3].x = this.pts[0].x;\n                this.pts[1].y = this.pts[0].y;\n\n            } else if (this.capturedVecId === 1) {\n                this.pts[2].x = this.pts[1].x;\n                this.pts[0].y = this.pts[1].y;\n\n            } else if (this.capturedVecId === 2) {\n                this.pts[1].x = this.pts[2].x;\n                this.pts[3].y = this.pts[2].y;\n\n            } else if (this.capturedVecId === 3) {\n                this.pts[0].x = this.pts[3].x;\n                this.pts[2].y = this.pts[3].y;\n            }\n\n            this.updateCenterVec();\n            this.updateProjection();\n            return;\n        }\n\n\n        this.cp.x += preX;\n        this.cp.y += preY;\n        for (let i = 0; i < this.pts.length; ++i) {\n            this.pts[i].x += preX;\n            this.pts[i].y += preY;\n        }\n        this.updateProjection();\n    }\n    public updateCenterVec() {\n        let xSum = 0;\n        let ySum = 0;\n        for (let i = 0; i < this.pts.length; ++i) {\n            xSum += this.pts[i].x;\n            ySum += this.pts[i].y;\n        }\n        this.cp.x = xSum / this.pts.length;\n        this.cp.y = ySum / this.pts.length;\n    }\n    public update() {\n        if (this.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n            let sp = this.scene.ac.toScreen(this.cp.long, this.cp.lat);\n            this.cp.x = sp[0];\n            this.cp.y = sp[1];\n\n            for (let i = 0; i < this.pts.length; ++i) {\n                sp = this.scene.ac.toScreen(this.pts[i].long, this.pts[i].lat);\n                this.pts[i].x = sp[0];\n                this.pts[i].y = sp[1];\n            }\n        }\n        // console.log('not moving');\n    }\n    public onMouseUp() {\n        this.capturedVecId = -1;\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.width = Math.abs(this.pts[0].x - this.pts[2].x);\n        this.height = Math.abs(this.pts[0].y - this.pts[2].y);\n\n        this.renderer.renderPost(ctx);\n        \n        this.t += 0.2;\n    }\n    public updatePolygonTurf() {\n        const pts = [];\n        for (let i = 0; i < this.pts.length; i++) {\n            pts.push([this.pts[i].long, this.pts[i].lat]);\n        }\n        pts.push([this.pts[0].long, this.pts[0].lat]);\n        this.polygonTurf = turf.polygon([pts]);\n    }\n}\n","import { Solution } from '../'\nimport { getJSONFromURL } from 'njscore';\n\nimport { Area } from '../RendererWrapper/CanvasCustom/Geometry';\n\nexport class ActiveCommander {\n    public solution: Solution;\n    public mp = [0, 0, 0, 0];\n    public mpPre = [0, 0, 0, 0];\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n    private updateMousePos(e) {\n        this.mp[0] = e.point.x;\n        this.mp[1] = e.point.y;\n        this.mp[2] = e.lngLat.lng;\n        this.mp[3] = e.lngLat.lat;\n    }\n    public updateMousePrePos() {\n        this.mpPre[0] = this.mp[0];\n        this.mpPre[1] = this.mp[1];\n        this.mpPre[2] = this.mp[2];\n        this.mpPre[3] = this.mp[3];\n    }\n    public mouseDown = (e) => {\n        this.updateMousePos(e);\n        if (this.checkHoverArea(this.mp[0], this.mp[1])) {\n            this.disablePan();\n            this.solution.scene.captured = this.solution.scene.area;\n\n        }\n        // TODO\n    }\n    public mouseUp = (e) => {\n        this.updateMousePos(e);\n        this.enablePan();\n        this.solution.scene.captured = undefined;\n\n        this.solution.scene.area?.onMouseUp();\n        // TODO\n    }\n    public mouseDrag = (e) => {\n        this.updateMousePos(e);\n        if (this.solution.scene.captured) {\n            this.solution.scene.captured.translate(e.point.x ,e.point.y);\n        }\n        // TODO\n        this.updateMousePrePos();\n    }\n    public mouseClick = (e) => {\n        this.updateMousePos(e);\n        // TODO\n        // console.log(e);\n        // console.log(e['lngLat']);\n        this.solution.rendererWrapper.renderer.pts.push([e['lngLat']['lng'], e['lngLat']['lat']])\n        // this.renderer.pts.push([e.point.x, e.point.y])\n    }\n    public mouseMove = (e) => {\n        this.updateMousePos(e);\n        this.checkHoverArea(this.mp[0], this.mp[1]);\n\n\n\n        // TODO\n        this.updateMousePrePos();\n    }\n    public keyDown(k: KeyboardEvent) {\n        // TODO\n        console.log(k);\n        if (k.key.toLocaleLowerCase() === 'c') {\n            if (this.solution.scene.captured) {\n                this.solution.scene.captured.type = 'circle'\n            }\n\n        }\n        if (k.key.toLowerCase() === 'r') {\n            if (this.solution.scene.captured) {\n                this.solution.scene.captured.type = 'rect'\n            }\n\n        }\n    }\n    public downloadScreen() {\n        return this.solution.rendererWrapper.downloadScreen();\n    }\n    public enablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.enable();\n    }\n    public disablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.disable();\n    }\n    public zoom = (z: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.zoom(z)\n    }\n    public flyTo = (lng: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.flyTo(lng, lat)\n    }\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.center(lng, lat);\n    }\n    public toMap = (x: number, y: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toMap(x, y);\n    }\n    public toScreen = (lon: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toScreen(lon, lat);\n    }\n    public async loadDataLocal(path = 'funded_census_blocks.geojson') {\n        return getJSONFromURL(process.env.PUBLIC_URL + '/static/dataDummyReady/' + path);\n    }\n\n    public addScatterLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addScatterLayer(data);\n    }\n    public addArcLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addArcLayer(data);\n    }\n    public addPolygonLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addPolygonLayer(data);\n    }\n    public addShape() {\n        new Area(this.solution.scene);\n    }\n    public shiftShapeType() {\n        if (this.solution.scene.area) {\n            if(this.solution.scene.area.type === 'circle') {\n                this.solution.scene.area.type = 'rect';\n            } else if(this.solution.scene.area.type === 'rect') {\n                this.solution.scene.area.type = 'circle';\n            } \n        }\n    }\n    public checkHoverArea(x: number, y: number) {\n        return this.solution.scene.area?.isInside(x, y);\n    }\n}","import mapboxgl from \"mapbox-gl\";\r\nimport { RendererWrapper } from '../';\r\n\r\nimport { downloadImage } from '../../lib';\r\n\r\nexport class MapboxGLWrapper {\r\n    public rendererWrapper: RendererWrapper;\r\n    public map: mapboxgl.Map;\r\n\r\n    public canvasMapbox;\r\n    private isPressed: boolean = false;\r\n    constructor(rendererWrapper: RendererWrapper) {\r\n        this.rendererWrapper = rendererWrapper;\r\n\r\n        this.initMap(rendererWrapper.solution.divHost.id);\r\n    }\r\n    private initMap(id: string) {\r\n        // https://account.mapbox.com\r\n        mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        this.map = new mapboxgl.Map({\r\n            preserveDrawingBuffer: true,\r\n            container: id,\r\n            zoom: 3,\r\n            // pitch: 30,\r\n            // minZoom: 10,\r\n            // center: [-74.5, 40],\r\n            center: [-77.430815, 37.801833],\r\n            style: 'mapbox://styles/mapbox/dark-v10' // 'mapbox://styles/mapbox/streets-v11'\r\n            \r\n        });\r\n        this.map.dragRotate.disable();\r\n\r\n        // https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent#type\r\n        this.map.on('mousemove', (e) => { \r\n            if (this.isPressed) {\r\n                this.mouseDrag(e);\r\n            } else {\r\n                this.mouseMove(e); \r\n            }\r\n        });\r\n        this.map.on('click', (e) => { this.mouseClick(e); });\r\n        this.map.on('mousedown', (e) => { this.isPressed = true; this.mouseDown(e); });\r\n        this.map.on('dblclick', (e) => { this.mouseDClick(e); });\r\n        this.map.on('mouseup', (e) => { this.isPressed = false; this.mouseUp(e); });\r\n        window.addEventListener('keydown', (k) => { this.keyDown(k) });\r\n\r\n        let div = document.getElementsByClassName('mapboxgl-canvas')[0] as HTMLDivElement;\r\n        div.style.position = 'absolute';\r\n        \r\n        div = document.getElementsByClassName('mapboxgl-control-container')[0] as HTMLDivElement;\r\n        div.style.display = 'none';\r\n\r\n        this.map.on('load', () => { this.initPost(); });\r\n    }\r\n    public initPost(){\r\n        this.rendererWrapper.initPost();\r\n        this.canvasMapbox = this.map.getCanvas();\r\n    }\r\n    public initCustomCanvas(){\r\n        this.rendererWrapper.renderer.canvas.width = this.canvasMapbox.width ;\r\n        this.rendererWrapper.renderer.canvas.height = this.canvasMapbox.height ;\r\n\r\n        this.rendererWrapper.renderer.canvas.style.display = 'none';\r\n\r\n       const bound: any = this.map.getBounds();\r\n        // console.log(bound);\r\n\r\n       this.map.addSource('canvas-source', {\r\n            type: 'canvas',\r\n            canvas: this.rendererWrapper.renderer.canvas,\r\n            coordinates: [\r\n\r\n                // [ 180, 90],\r\n                // [ 180, -90],\r\n                // [ -180, -90], \r\n                // [ -180, 90]\r\n\r\n                \r\n                // [bound._sw[0], bound._sw[1]],\r\n                // [bound._sw[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._sw[1]],\r\n\r\n               [ -125.618336, 48.944262], \r\n               [ -125.618336, 24.786775], \r\n               [ -65.591812, 24.786775],\r\n               [ -65.591812, 48.944262]\r\n\r\n                // [91.4461, 21.5006],\r\n                // [100.3541, 21.5006],\r\n                // [100.3541, 13.9706],\r\n                // [91.4461, 13.9706]\r\n            ],\r\n            // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\r\n            animate: true\r\n            });\r\n             \r\n        this.map.addLayer({\r\n            id: 'canvas-layer',\r\n            type: 'raster',\r\n            source: 'canvas-source'\r\n            });\r\n\r\n    }\r\n    public zoom = (z: number) => {\r\n        // this.map.setZoom(z);\r\n        // return this.map.zoomTo(z, {animate:true} )\r\n        return this.map.zoomTo(z)\r\n    }\r\n    public flyTo = (lng: number, lat: number) => {\r\n        return this.map.flyTo({\r\n            center: [lng, lat],\r\n            // duration: 1200, // Animate over 12 seconds\r\n            // essential: true\r\n        });\r\n    }\r\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\r\n        // const v = new mapboxgl.LngLat(lng, lat);\r\n        // console.log(v);\r\n        return this.map.setCenter({ lat, lng })\r\n    }\r\n    public toMap = (x: number, y: number) => {\r\n        const p = this.map.unproject({x, y} as any)\r\n        return [p.lng, p.lat];\r\n    }\r\n    public toScreen = (lon: number, lat: number) => {\r\n        const p = this.map.project([lon, lat])\r\n        return [p.x, p.y];\r\n    }\r\n    public downloadImage() {\r\n        const canvasMapbox = this.map.getCanvas();\r\n        return downloadImage(canvasMapbox, this.rendererWrapper.renderer.canvas);\r\n    }\r\n    public mouseDown = (e) => { }\r\n    public mouseUp = (e) => { }\r\n    public mouseMove = (e) => { }\r\n    public mouseDrag = (e) => { }\r\n    public mouseClick = (e) => { }\r\n    public mouseDClick = (e) => { }\r\n    public keyDown = (e) => { }\r\n}\r\n","export * from './ColorUtil';\nexport * from './constant';\nexport const downloadImage = (canvasMapbox, customCanvas, fileName = 'map.png') => {\n    // const canvasMapbox = this.map.getCanvas(); // this.solution.deckGL.deckLayer.deck.canvas; // this.map.getCanvas(); //  document.querySelector(\".mapboxgl-canvas\") as HTMLCanvasElement;\n\n    let canvasOut = document.createElement(\"canvas\");\n    canvasOut.width = canvasMapbox.width;\n    canvasOut.height = canvasMapbox.height;\n    let context = canvasOut.getContext(\"2d\");\n\n    // context.globalAlpha = 1.0;\n    context.globalAlpha = 1.0;\n    // context.drawImage(this.deckLayer.deck.canvas, 0, 0);\n    context.drawImage(canvasMapbox, 0, 0);\n    // context.drawImage(this.solution.renderer.canvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n    context.drawImage(customCanvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n\n    let img = new Image();\n    img.width = canvasMapbox.width;\n    img.height = canvasMapbox.height;\n    img.src = canvasOut.toDataURL();\n\n    let link = document.createElement('a');\n    link.download = fileName;\n    link.href = canvasOut.toDataURL();\n    link.click();    \n};\n","import { MapboxLayer } from '@deck.gl/mapbox';\nimport { ScatterplotLayer, ArcLayer, PolygonLayer } from '@deck.gl/layers';\n\nimport { RendererWrapper } from '../';\n\nexport class DeckGL {\n    public rendererWrapper: RendererWrapper;\n    public map: mapboxgl.Map;\n    public layers: MapboxLayer[] = [];\n    constructor(rendererWrapper: RendererWrapper) {\n        this.rendererWrapper = rendererWrapper;\n        this.map = this.rendererWrapper.mapBoxWrapper.map;\n    }\n    public initPost() {\n        // TODO:\n    }\n    // [ {position: [-74.5, 40], size: 10000}, ]\n    public addScatterLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `scatter-${this.layers.length}`,\n            type: ScatterplotLayer,\n            data: data,\n            // @ts-ignore\n            getPosition: d => d.position,\n            getRadius: d => d.size,\n            getFillColor: d => {\n                if (d.color !== undefined) {\n                    return d.color;\n                } else {\n                    return [255, 255, 0];\n                }\n            },\n            getLineColor: d => [255, 255, 255],\n            onClick: (info, event) => console.log('Clicked:', info, event)\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    // https://deck.gl/docs/api-reference/layers/polygon-layer\n    public addPolygonLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `polygon-${this.layers.length}`,\n            type: PolygonLayer,\n            data: data,\n            // @ts-ignore\n            pickable: true,\n            stroked: true,\n            filled: true,\n            wireframe: true,\n            lineWidthMinPixels: 1,\n            getPolygon: d => d.contour,\n            getElevation: d => 1, //d.population / d.area / 10,\n            getFillColor: d => d.color, // [100, 100, 100], // [d.population / d.area / 60, 140, 0],\n            getLineColor: d => [0, 0, 0],\n            getLineWidth: 1,\n            onClick: (info, event) => console.log('Clicked:', info, event)\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    public addArcLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `arc-${this.layers.length}`,\n            type: ArcLayer,\n            data: data,\n            // @ts-ignore\n            getSourcePosition: d => d.pickup,\n            getTargetPosition: d => d.dropoff,\n            getSourceColor: d => [255, 128, 0],\n            getTargetColor: d => [0, 128, 255],\n            strokeWidth: 5\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    private addLayer(deckLayer: MapboxLayer, label: string = 'waterway-label') {\n        this.map.addLayer(deckLayer, label);\n        this.layers.push(deckLayer)\n    }\n    pick() {\n        // this.map.getob\n    }\n}","import { RendererCanvas } from '../../../../../../lib';\nimport { RendererWrapper } from '../';\n\nexport class Renderer extends RendererCanvas {\n    public rendererWrapper: RendererWrapper\n    public time: number = 0.0;\n    public pts: number[][] = [];\n    public isActive = false;\n    constructor(div: any, rendererWrapper: RendererWrapper) {\n        super(div);\n        this.rendererWrapper = rendererWrapper;\n        this.canvas.id = 'mapboxCustom'\n\n        // const dd = app.mapboxWrapper.map.getCanvas();\n\n        // this.canvas.width = dd.width;\n        // this.canvas.height = dd.height;\n        this.canvas.style.position = 'absolute';\n        // this.canvas.style.width = '100%';\n        // this.canvas.style.height = '100%';\n        this.canvas.style.pointerEvents = 'none';\n        // this.canvas.style.mixBlendMode = 'color-dodge'\n        this.start();\n    }\n    public initPost() {\n        // this.ctx.globalCompositeOperation = 'color-dodge';\n        this.isActive = true;\n    }\n    public render(ctx: CanvasRenderingContext2D): void {\n        if (!this.isActive) { return; }\n        this.time += 0.1;\n\n        const z = this.rendererWrapper.mapBoxWrapper.map.getZoom();\n        const zoomFactor = Math.pow(2, z) * 0.1\n        \n        for(let i = 0 ; i < this.pts.length; ++i) {\n            const pt = this.pts[i];\n            const p = this.rendererWrapper.mapBoxWrapper.toScreen(pt[0], pt[1]);\n            // const p = this.app.mapboxWrapper.map.unproject({x: 10, y: 10})\n\n            const size = 0.001 * zoomFactor;\n\n            ctx.beginPath();\n            ctx.arc(p[0], p[1], size + ((Math.sin(this.time + i) + 3) / zoomFactor  ), 0, Math.PI * 2);\n            // ctx.arc(p[0], p[1], size + (size * (Math.sin(this.time + i) + 3) * zoomFactor / 10 ), 0, Math.PI * 2);\n            ctx.closePath();\n            ctx.fillStyle = 'rgba(0, 255, 0, 0.7)';\n            ctx.fill();\n        }\n\n\n        this.rendererWrapper.solution.scene.renderCanvas(ctx);\n\n        ctx.textAlign = 'center';\n        ctx.font = '14px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`Lat: ${this.rendererWrapper.solution.activeCommander.mp[1].toFixed(5)},  Lng: ${this.rendererWrapper.solution.activeCommander.mp[0].toFixed(5)}`, (this.canvas.width *  0.5), 50);\n        // ctx.stroke()\n    }\n}","import { MapboxGLWrapper } from './MapboxGLWrapper';\nimport { DeckGL } from './DeckGL';\nimport { Renderer } from './CanvasCustom';\nimport { UIWrapper } from '../UI';\nimport { Solution } from '../';\n\nexport class RendererWrapper {\n    public solution: Solution;\n    public mapBoxWrapper: MapboxGLWrapper;\n    public deckGL: DeckGL\n    public renderer: Renderer;\n    constructor(solution: Solution) {\n        this.solution = solution;      \n\n        this.mapBoxWrapper = new MapboxGLWrapper(this);\n        this.mapBoxWrapper.mouseDown = (e) => { this.solution.activeCommander.mouseDown(e);}\n        this.mapBoxWrapper.mouseUp = (e) => { this.solution.activeCommander.mouseUp(e);}\n        this.mapBoxWrapper.mouseClick = (e) => this.solution.activeCommander.mouseClick(e);\n        this.mapBoxWrapper.mouseMove = (e) => { this.solution.activeCommander.mouseMove(e);}\n        this.mapBoxWrapper.mouseDrag = (e) => { this.solution.activeCommander.mouseDrag(e);}\n        this.mapBoxWrapper.keyDown = (k) => { this.solution.activeCommander.keyDown(k); }\n        \n        this.deckGL = new DeckGL(this);\n        this.renderer = new Renderer(this.solution.divHost, this);\n    }\n    public initPost() {\n        this.renderer.initPost();\n        this.deckGL.initPost();\n    }\n    public downloadScreen() {\n        return this.mapBoxWrapper.downloadImage();\n    }\n    public destroy() {\n        this.renderer.destroy();\n    }\n}","import { Solution } from '../';\nimport { NJSLoader } from '../../../../../lib/NJSCore';\n\nexport class UIWrapper {\n    public solution: Solution;\n    public divHost: HTMLElement;\n    public div: HTMLElement;\n    constructor(solution: Solution) {\n        this.solution = solution;\n\n        this.divHost = solution.divHost;\n        this.divHost.style.position = 'absolute';\n        const divMenu = document.createElement('div');\n        this.divHost.appendChild(divMenu);\n\n        this.div = document.createElement('div');\n        this.div.style.width = '150px';\n        this.div.style.height = '300px';\n        // this.div.style.backgroundColor = 'rgba(0, 0, 0, 1.0)';\n        this.divHost.appendChild(this.div);\n\n        this.initUI();\n    }\n    public async initUI() {\n\n        // const svg = await NJSLoader.LoadSVGFromHTTP(process.env.PUBLIC_URL + '/static/dataDummyReady/ready.svg');\n        // console.log(svg);\n\n        // const newElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path'); //Create a path in SVG's namespace\n        // newElement.setAttribute(\"d\",\"M 0 0 L 10 10\"); //Set path's data\n        // newElement.style.stroke = \"#000\"; //Set stroke colour\n        // newElement.style.strokeWidth = \"5px\"; //Set stroke width\n        // this.div.appendChild(newElement);\n\n        const img = new Image();\n        img.src = process.env.PUBLIC_URL + '/static/dataDummyReady/readyLabs.png';\n        img.style.position = 'relative';\n        img.style.width = '150px';\n        img.style.margin = '15px';\n        img.style.marginTop = '30px';\n        img.style.marginBottom = '0px';\n        let a = document.createElement('a');\n        a.href='https://ready.net/';\n        a.appendChild(img);\n        this.div.appendChild(a);\n\n        let div = document.createElement('div');\n        div.textContent = 'Capture Map';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.activeCommander.downloadScreen();\n        }\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Set Extent';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.activeCommander.flyTo(-112.188375, 35.267735);\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Add Shape';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.activeCommander.addShape();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Shape Type';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.activeCommander.shiftShapeType();\n        };\n        this.div.appendChild(div);\n    }\n}\n\n\n\n// const getSVG = () => {\n//     return <svg width=\"163\" height=\"61\" viewBox=\"0 0 163 61\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//     <path d=\"M58.1665 41.6214V16.5501H71.6853C73.8858 16.5501 75.6766 17.229 77.0577 18.5867C78.3686 19.8976 79.0241 21.5246 79.0241 23.4675C79.0241 26.581 77.7015 28.6761 75.0562 29.7529V29.8231C77.2567 30.3849 78.474 32.3396 78.7081 35.6871C78.7783 36.6937 78.8485 37.7003 78.9187 38.7069C79.0592 40.0646 79.3401 41.0361 79.7615 41.6214H74.2486C73.9911 40.9893 73.7921 40.0412 73.6517 38.7771C73.558 37.7237 73.4644 36.6703 73.3708 35.6169C73.1835 34.2592 72.7738 33.2877 72.1418 32.7025C71.5332 32.1172 70.55 31.8246 69.1922 31.8246H63.6794V41.6214H58.1665ZM63.6794 20.834V27.8919H69.7189C72.2471 27.8919 73.5112 26.698 73.5112 24.3103C73.5112 21.9928 72.2471 20.834 69.7189 20.834H63.6794ZM100.186 33.7559H87.089C87.2295 36.8225 88.7159 38.3558 91.5485 38.3558C92.5082 38.3558 93.3744 38.0983 94.1469 37.5833C94.8726 37.1385 95.3173 36.6118 95.4812 36.0032H99.8704C98.5361 40.0763 95.7036 42.1129 91.3729 42.1129C88.5404 42.1129 86.2814 41.2351 84.5959 39.4794C82.9339 37.7003 82.1029 35.3945 82.1029 32.562C82.1029 29.7997 82.9573 27.5173 84.6662 25.7148C86.3984 23.8889 88.634 22.9759 91.3729 22.9759C94.3224 22.9759 96.6048 24.0762 98.2201 26.2766C99.7183 28.2898 100.374 30.7829 100.186 33.7559ZM87.089 30.5956H95.2003C94.7321 28.0206 93.4095 26.7331 91.2324 26.7331C89.8279 26.7331 88.7511 27.2013 88.002 28.1377C87.4401 28.8399 87.1358 29.6593 87.089 30.5956ZM114.45 34.5986V32.7376C114.052 33.0887 113.186 33.3579 111.852 33.5452C110.33 33.7793 109.324 34.0017 108.832 34.2123C107.849 34.6571 107.357 35.4062 107.357 36.4596C107.357 38.0046 108.376 38.7771 110.412 38.7771C113.104 38.7771 114.45 37.3843 114.45 34.5986ZM107.919 29.0506H102.933C103.073 26.897 104.022 25.3052 105.777 24.2752C107.229 23.409 109.125 22.9759 111.466 22.9759C116.78 22.9759 119.436 24.6965 119.436 28.1377V37.5833C119.436 39.5965 119.647 40.9425 120.069 41.6214H115.012C114.801 40.9659 114.684 40.3807 114.661 39.8657C113.233 41.3639 111.196 42.1129 108.551 42.1129C106.725 42.1129 105.262 41.6682 104.162 40.7786C102.968 39.8188 102.371 38.4494 102.371 36.6703C102.371 34.821 103.015 33.4398 104.302 32.5269C105.239 31.8948 106.655 31.4384 108.551 31.1575C111.243 30.7829 112.613 30.5839 112.66 30.5605C113.853 30.2562 114.45 29.6593 114.45 28.7697C114.45 27.7865 114.123 27.1077 113.467 26.7331C112.999 26.4522 112.25 26.3118 111.22 26.3118C109.183 26.3118 108.083 27.2247 107.919 29.0506ZM136.264 41.6214V39.3038H136.193C135.093 41.1766 133.256 42.1129 130.681 42.1129C128.082 42.1129 126.046 41.1181 124.571 39.1283C123.213 37.3258 122.534 35.0785 122.534 32.3864C122.534 29.7646 123.213 27.5876 124.571 25.8553C126.046 23.9357 128.047 22.9759 130.575 22.9759C133.01 22.9759 134.812 23.8772 135.983 25.6797H136.018V16.5501H141.004V41.6214H136.264ZM136.193 32.4918C136.193 30.8297 135.889 29.4954 135.28 28.4888C134.531 27.3183 133.408 26.7331 131.91 26.7331C130.388 26.7331 129.253 27.33 128.503 28.5239C127.848 29.5305 127.52 30.8648 127.52 32.5269C127.52 34.1187 127.871 35.4413 128.574 36.4947C129.346 37.7354 130.458 38.3558 131.91 38.3558C134.765 38.3558 136.193 36.4011 136.193 32.4918ZM161.311 23.4675L153.727 43.9037C153.188 45.3785 152.439 46.4319 151.479 47.064C150.52 47.696 149.185 48.0121 147.476 48.0121C146.563 48.0121 145.545 47.9535 144.422 47.8365V43.7282C146.177 43.8686 147.149 43.9272 147.336 43.9037C148.624 43.8101 149.267 43.0493 149.267 41.6214C149.267 41.2234 149.197 40.8489 149.057 40.4977L142.666 23.4675H148.003L152.111 35.8978H152.182L156.15 23.4675H161.311Z\" fill=\"white\"/>\n//     <path d=\"M15.1577 24.1596V36.6188L25.9003 42.8482V30.3892L15.1577 24.1596Z\" fill=\"#5A5A89\"/>\n//     <path d=\"M36.6488 24.1596L25.9062 30.3892V42.8482L36.6488 36.6188V24.1596Z\" fill=\"#383874\"/>\n//     <path d=\"M15.1577 24.163L25.9003 30.3926L36.6429 24.163L25.9003 17.9335L15.1577 24.163Z\" fill=\"#8676FF\"/>\n//     <path d=\"M15.2307 53.4182L25.938 59.6272V51.2172L15.2307 45.0081V53.4182Z\" fill=\"white\"/>\n//     <path d=\"M0.729004 45.0154L7.98035 49.2203V19.9822L0.729004 15.7773V45.0154Z\" fill=\"white\"/>\n//     <path d=\"M43.9082 19.9822V40.8105L33.2009 47.0196L40.4523 51.2246L51.1596 45.0155V15.7773L43.9082 19.9822Z\" fill=\"white\"/>\n//     <path d=\"M25.9216 51.2199V59.6299L33.173 55.4249L25.9216 51.2199Z\" fill=\"white\"/>\n//     <path d=\"M43.8981 19.979L51.149 15.7738L25.939 1.15469L0.729004 15.7738L7.98035 19.9788L25.939 9.56479L43.8981 19.979Z\" fill=\"white\"/>\n//     </svg>\n    \n// }","import * as turf from '@turf/turf';\n\nimport { Solution } from '../';\nimport { ActiveCommander } from '../ActiveCommander';\nimport { ColorUtility } from '../../../../../lib/NJSCore';\nimport { GeometryBase } from '../RendererWrapper/CanvasCustom/Geometry/Common/GeometryBase';\nimport { hex2RGB } from '../lib'\nimport { LANDUSE_TYPE_MAPPING, FUNDING_STATUS_MAPPING } from '../lib/constant';\n\nexport class Scene {\n    public solution: Solution;\n    public ac: ActiveCommander;\n\n    public pts: number[] = [];\n\n    public area: GeometryBase | undefined = undefined;\n\n    public captured: GeometryBase | undefined = undefined;\n\n    public points: any;\n    public polygonsDifference: any = [];\n\n    constructor(solution: Solution) {\n        this.solution = solution;\n        this.ac = solution.activeCommander;\n    }\n    public async init() {\n        this.ac.center(-112.190375, 35.257177);\n        this.ac.zoom(13);\n\n\n        const polygons = await this.ac.loadDataLocal('funded_census_blocks.geojson');\n        const gons = [];\n        const colDefault= hex2RGB(FUNDING_STATUS_MAPPING.default.color);\n        const colAssigned = hex2RGB(FUNDING_STATUS_MAPPING.assigned.color);\n        // console.log(polygons);\n        for (let i of polygons['features']) {\n            const p = (i['geometry']['coordinates']);\n            let color = undefined;\n            const grantStatus = (i['properties']['grant_long_status']);\n            // console.log(grantStatus)\n            if (grantStatus === 'default') { color = colDefault; }\n            else { color = colAssigned; }\n            // if (Math.random() < 0.3) { color = ColorUtility.GetRandomRGBArray(); }\n            // console.log(color)\n            gons.push({ contour: p[0], size: 15, color: color });\n        }\n        // console.log(gons)\n        this.ac.addPolygonLayer(gons);\n\n\n\n        const polygonsDiff = await this.ac.loadDataLocal('funded_census_blocks.geojson');\n        this.polygonsDifference = []\n        for (let i of polygonsDiff['features']) {\n            const p = (i['geometry']['coordinates']);\n            // console.log(p[0])\n            this.polygonsDifference.push(turf.polygon(p[0]));\n        }\n        // for(let i = 0 ; i < this.polygonsDifference.length; ++i) {\n        //     // console.log(i, this.polygonsDifference[i]);\n        //     for(let j = 0; j < this.polygonsDifference[i].length; ++j) {\n        //         // console.log(j, this.polygonsDifference[i][j]);\n        //         this.polygonsDifference[i][j].push([this.polygonsDifference[i][j][0][0], this.polygonsDifference[i][j][0][1]]);\n        //     }\n        // }\n        // console.log(this.polygonsDifference);\n        // this.polygonsDifference = turf.polygon(this.polygonsDifference);\n\n        let data = [\n            { position: [-74.5, 40], size: 10000 },\n            { position: [-74.5, 40.5], size: 5000 },\n            { position: [-74.6, 40.5], size: 5800 },\n            { position: [-74.7, 40.5], size: 100 },\n        ];\n        this.ac.addScatterLayer(data);\n\n\n        let data2 = [\n            { pickup: [-122.42, 37.8], dropoff: [-74.5, 40.5] },\n            { pickup: [-122.43, 37.8], dropoff: [-122.42, 37.75] }\n        ];\n        this.ac.addArcLayer(data2);\n\n\n\n        const points = await this.ac.loadDataLocal('underserved_locations.geojson');\n        // console.log(d);\n        const colR = hex2RGB(LANDUSE_TYPE_MAPPING.R.color);\n        const colB = hex2RGB(LANDUSE_TYPE_MAPPING.B.color);\n        const pts = []\n        for (let i of points['features']) {\n            const p = (i['geometry']['coordinates']);\n            const landuse = (i['properties']['landuse']);\n\n            let color = undefined;\n            if (landuse === 'R') { color = colR; }\n            else if (landuse === 'B') { color = colB; }\n            else { color = [0, 128, 0]; }\n\n            pts.push({ position: [p[0], p[1]], size: 15, color: color });\n        }\n        this.ac.addScatterLayer(pts);\n        this.points = points;\n    }\n    public renderCanvas(ctx: CanvasRenderingContext2D) {\n\n        if (this.area) {\n            this.area.render(ctx);\n        }\n\n        ctx.fillStyle = '#f00';\n        for (let i = 0; i < this.pts.length; ++i) {\n            const p = this.pts[i];\n            // const cp = this.solution.rendererWrapper.mapboxWrapper.toScreen(p[0], p[1]);\n            drawingPoint(ctx, p[0], p[1]);\n\n        }\n\n\n    }\n}\n\nconst drawingPoint = (ctx: CanvasRenderingContext2D, x: number, y: number) => {\n    ctx.beginPath();\n    ctx.arc(x, y, 10, 0, Math.PI * 2.0);\n    ctx.closePath();\n    ctx.fill();\n}","import { ActiveCommander } from './ActiveCommander';\r\nimport { RendererWrapper } from './RendererWrapper';\r\nimport { UIWrapper } from './UI';\r\nimport { Scene } from './Scene';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLDivElement;\r\n    public activeCommander: ActiveCommander;\r\n    public uiWrapper: UIWrapper;\r\n    public rendererWrapper: RendererWrapper;\r\n    public scene: Scene;\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        this.divHost.style.position = 'relative';\r\n        this.init();\r\n        this.initPost();\r\n    }\r\n    public init() {\r\n        this.activeCommander = new ActiveCommander(this);\r\n        this.scene = new Scene(this);\r\n        this.rendererWrapper = new RendererWrapper(this);\r\n        this.uiWrapper = new UIWrapper(this);\r\n    }\r\n    public destroy() {\r\n        this.rendererWrapper.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n    public async initPost() {\r\n        await this.scene.init();\r\n    }\r\n}"],"names":["GeometryBase","constructor","scene","isHovered","type","this","area","isInside","x","y","translate","update","onMouseUp","render","ctx","renderPost","hex2RGB","hex","isGray","replace","r","parseInt","substring","g","b","v","LANDUSE_TYPE_MAPPING","text","color","FUNDING_STATUS_MAPPING","Renderer","host","renderAreaBounding","renderCroppedArea","renderProperties","renderControlPoint","diff","difference","polygonTurf","polygonsDifference","i","length","p","beginPath","sp","ac","toScreen","moveTo","lineTo","setLineDash","lineDashOffset","t","lineWidth","strokeStyle","op","Math","sin","fillStyle","fill","stroke","pts","forEach","arc","PI","closePath","ellipse","cp","width","height","rect","turf","textAlign","font","fillText","toFixed","points","other","features","properties","polygons","Area","super","renderer","capturedVecId","NVector3","solution","rendererWrapper","canvas","widthHalf","heightHalf","push","updateProjection","mp","toMap","long","lat","updatePolygonTurf","mVec","isInsideEllipse","Distance","preX","activeCommander","mpPre","preY","updateCenterVec","xSum","ySum","mapBoxWrapper","map","isMoving","abs","ActiveCommander","mouseDown","e","updateMousePos","checkHoverArea","disablePan","captured","mouseUp","enablePan","undefined","mouseDrag","point","updateMousePrePos","mouseClick","mouseMove","zoom","z","flyTo","lng","center","lon","lngLat","keyDown","k","console","log","key","toLocaleLowerCase","toLowerCase","downloadScreen","dragPan","enable","disable","path","getJSONFromURL","process","addScatterLayer","data","deckGL","addArcLayer","addPolygonLayer","addShape","shiftShapeType","MapboxGLWrapper","canvasMapbox","isPressed","zoomTo","setCenter","unproject","project","mouseDClick","initMap","divHost","id","mapboxgl","preserveDrawingBuffer","container","style","dragRotate","on","window","addEventListener","div","document","getElementsByClassName","position","display","initPost","getCanvas","initCustomCanvas","getBounds","addSource","coordinates","animate","addLayer","source","downloadImage","customCanvas","fileName","canvasOut","createElement","context","getContext","globalAlpha","drawImage","img","Image","src","toDataURL","link","download","href","click","DeckGL","layers","deckLayer","MapboxLayer","ScatterplotLayer","getPosition","d","getRadius","size","getFillColor","getLineColor","onClick","info","event","PolygonLayer","pickable","stroked","filled","wireframe","lineWidthMinPixels","getPolygon","contour","getElevation","getLineWidth","ArcLayer","getSourcePosition","pickup","getTargetPosition","dropoff","getSourceColor","getTargetColor","strokeWidth","label","pick","RendererCanvas","time","isActive","pointerEvents","start","getZoom","zoomFactor","pow","pt","renderCanvas","RendererWrapper","destroy","UIWrapper","divMenu","appendChild","initUI","margin","marginTop","marginBottom","a","textContent","onclick","Scene","loadDataLocal","gons","colDefault","colAssigned","polygonsDiff","colR","colB","landuse","drawingPoint","Solution","uiWrapper","init","lastElementChild","removeChild"],"sourceRoot":""}