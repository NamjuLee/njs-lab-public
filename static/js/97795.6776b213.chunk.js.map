{"version":3,"file":"static/js/97795.6776b213.chunk.js","mappings":"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","sources":["lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts"],"sourcesContent":["import { NVector3 } from '../../../../../';\r\nimport { MouseEventData } from '../../../../../IO/EventInteraction/MouseInteraction';\r\n\r\nimport { IndependentPanelWrapper } from '../../IndependentPanelWrapper';\r\nimport { ColorUtility } from '../../../../../Core/NColor/';\r\n\r\nimport { IndePanelPreset } from '../../Core/IndePanelPreset';\r\n\r\nimport { IndePanelBase } from './base/base/IndePanelBase';\r\n\r\nimport { BtnClose } from './base/BtnClose';\r\nimport { BtnMinimize } from './base/BtnMinimize';\r\nimport { BtnHam } from './base/BtnHam';\r\nimport { BtnResize } from './base/BtnResize';\r\n\r\nimport { BodyDiv } from './base/BodyDiv';\r\nimport { IndeSubPanel } from './base/IndeSubPanel';\r\n\r\nexport class IndependentPanelCanvas extends IndePanelBase {\r\n    independentPanelWrapper: IndependentPanelWrapper;\r\n    divInput: HTMLTextAreaElement;\r\n\r\n    btnClose: BtnClose;\r\n    btnMini: BtnMinimize;\r\n    btnHam: BtnHam;\r\n    btnResize: BtnResize;\r\n\r\n    bodyDiv: BodyDiv;\r\n    subMenu: IndeSubPanel;\r\n\r\n    subs: IndePanelBase[] = [];\r\n\r\n    _content: string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    isActive: boolean = true;\r\n\r\n    constructor(independentPanelWrapper: IndependentPanelWrapper, x: number = 0, y: number = 0, width: number = 300, height: number = 170, divNeeded: boolean = false) {\r\n        super(independentPanelWrapper);\r\n        this.independentPanelWrapper = independentPanelWrapper;\r\n        this.title = 'njslabSandbox V3';\r\n        this.width = width;\r\n        this.height = height;\r\n        if (x === 0 && y === 0) {\r\n            this.vec.x = (independentPanelWrapper.width * 0.5) - (this.width * 0.5);\r\n            this.vec.y = (independentPanelWrapper.height * 0.5) - (this.height * 0.5);\r\n        } else {\r\n            this.vec.x = x;\r\n            this.vec.y = y;\r\n        }\r\n        this.filletR = 7;\r\n        this.InitTop();\r\n        if (divNeeded) {\r\n            this.bodyDiv = new BodyDiv(this, this.vec.x, this.vec.y + this.HeadHeight, this.width, this.height - this.HeadHeight);\r\n            // this.bodyDiv.div.style.background = 'red';\r\n        }\r\n        this.InitCanvas(this.bodyDiv.div);\r\n    }\r\n\r\n    get IsMinimized() {\r\n        return this.isMinimized;\r\n    }\r\n    set IsMinimized(v: boolean) {\r\n        this.isMinimized = v;\r\n        this.btnResize.isHidden = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Hide(v); }\r\n    }\r\n    get Width() {\r\n        return this.width;\r\n    }\r\n    set Width(v: number) {\r\n        let off = v - this.width;\r\n        this.width = v;\r\n        this.btnHam.vec.x += off;\r\n        this.subMenu.vec.x += off;\r\n        if (this.bodyDiv) { this.bodyDiv.Width = v; }\r\n    }\r\n    get Height() {\r\n        return this.height;\r\n    }\r\n    set Height(v: number) {\r\n        this.height = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Height = v; }\r\n        // this.subMenu\r\n    }\r\n    get content() {\r\n        return this._content;\r\n    }\r\n    set content(v: string) {\r\n        this._content = v;\r\n        if (this.bodyDiv) { this.bodyDiv.content = v; }\r\n    }\r\n    get HasSubMenu() {\r\n        return this.hasSubMenu;\r\n    }\r\n    set HasSubMenu(v: boolean) {\r\n        this.hasSubMenu = v;\r\n        this.subMenu.IsHidden = !v;\r\n    }\r\n    InitTop() {\r\n        this.btnClose = new BtnClose(this, this.vec.x, this.vec.y);\r\n        this.btnMini = new BtnMinimize(this, this.vec.x + 25, this.vec.y);\r\n        this.btnHam = new BtnHam(this, this.vec.x - 25 + this.width, this.vec.y);\r\n        this.btnResize = new BtnResize(this, this.vec.x + this.width - 10, this.vec.y + this.height - 10, 10, 10);\r\n\r\n        this.subMenu = new IndeSubPanel(this);\r\n        this.subs.push(this.btnClose, this.btnMini, this.btnHam);\r\n    }\r\n    Translate(e: MouseEventData): void {\r\n        if (!this.isMoveable) { return; }\r\n        let xo = e.x - e.preX;\r\n        let yo = e.y - e.preY;\r\n        this.vec.x += xo;\r\n        this.vec.y += yo;\r\n        for (let i = 0; i < this.boundarVecs.length; ++i) { this.boundarVecs[i].x += xo; this.boundarVecs[i].y += yo; }\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Translate(e); }\r\n        this.btnResize.vec.x += xo;\r\n        this.btnResize.vec.y += yo;\r\n        this.subMenu.Translate(xo, yo);\r\n        if (this.bodyDiv) { this.bodyDiv.Translate(xo, yo); }\r\n\r\n    }\r\n    Remove() {\r\n        this.RemovePost();\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Remove(); }\r\n        if (this.bodyDiv) { this.bodyDiv.Remove(); }\r\n        this.btnResize.Remove();\r\n        this.independentPanelWrapper.indePanelRender.Remove(this);\r\n    }\r\n    RenderPost(ctx: CanvasRenderingContext2D): void {\r\n        // console.log(IndePanelRender.length);\r\n        // this.vec.x = this.mainPanel.vec.x + this.xOff;\r\n        // this.vec.y = this.mainPanel.vec.y + this.yOff;\r\n        this.ComputeBoundary();\r\n\r\n        let color;\r\n        // if (this.isOver) {\r\n        //     color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuOver, this.transparent);\r\n        // } else {\r\n        color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuNormal, this.transparent);\r\n        // }\r\n        if (this.isMinimized) {\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n\r\n        } else {\r\n            IndePanelPreset.RoundedRectFillWithColorMainMenu(ctx, this.title, this.boundarVecs, this.filletR, 0, this.isOver, this.isSelected, color);\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n        }\r\n        this.RenderHeadTitle(ctx);\r\n        if (!this.isMinimized) {\r\n            this.RenderBodyContent(ctx);\r\n        }\r\n        if (this.hasSubMenu) {\r\n            this.subMenu.RenderPost(ctx);\r\n        }\r\n        this.RenderBtnHorizontal(ctx);\r\n    }\r\n    RenderBtnHorizontal(ctx: CanvasRenderingContext2D) {\r\n        /* */\r\n    }\r\n    RenderHeadTitle(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        // if (this.isOver) {\r\n        //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // } else {\r\n        ctx.fillStyle = '#ffffff';\r\n        // }\r\n        ctx.textBaseline = 'top';\r\n        ctx.textAlign = 'center';\r\n        ctx.font = '100 12px Arial';\r\n        ctx.shadowBlur = 0;\r\n        // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        ctx.shadowOffsetY = 0;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.fillText(this.title, this.vec.x + (this.width * 0.5), this.vec.y + (this.HeadHeight * 0.5) - 7);\r\n\r\n        ctx.restore();\r\n    }\r\n    RenderBodyContent(ctx: CanvasRenderingContext2D) {\r\n        // ctx.save();\r\n        // // if (this.isOver) {\r\n        // //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // // } else {\r\n        // ctx.fillStyle = '#000000';\r\n        // // }\r\n        // ctx.textBaseline = 'top';\r\n        // ctx.textAlign = 'center';\r\n        // ctx.font = '100 9px Sans-serif';\r\n        // ctx.fillText(this.content, this.vec.x + (this.width * 0.5), this.vec.y + (this.height * 0.5) - 5);\r\n\r\n        // ctx.shadowBlur = 0;\r\n        // // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        // ctx.shadowOffsetY = 0;\r\n        // ctx.shadowOffsetX = 0;\r\n\r\n        // ctx.restore();\r\n\r\n    }\r\n    RemovePost() {\r\n        this.isActive = false;\r\n    }\r\n    InitCanvas(hostDiv: HTMLElement) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.zIndex = '0';\r\n        hostDiv.appendChild(this.canvas);\r\n\r\n        this.canvas.id = 'NCanvasRenderer';\r\n        this.canvas.className = 'njslab-web-core-canvas-renderer';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.canvas.width = hostDiv.clientWidth; // hostDivForSize.clientWidth;\r\n        this.canvas.height = hostDiv.clientHeight; // hostDivForSize.clientHeight;\r\n\r\n        this.btnResize.ResizePropagation = (width: number, height: number) => {\r\n            this.canvas.width = width; // hostDivForSize.clientWidth;\r\n            this.canvas.height = height; // hostDivForSize.clientHeight;\r\n        };\r\n        this.LoopIndependentCanvas(this.ctx);\r\n    }\r\n    LoopIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        requestAnimationFrame(() => { this.LoopIndependentCanvas(ctx); });\r\n        this.RenderIndependentCanvas(ctx);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.canvas.width = width; // hostDivForSize.clientWidth;\r\n        this.canvas.height = height; // hostDivForSize.clientHeight;\r\n    }\r\n}","import { IndependentPanelCanvas } from '../../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}"],"names":["IndependentPanelCanvas","IndePanelBase","constructor","independentPanelWrapper","x","y","width","height","divNeeded","super","divInput","btnClose","btnMini","btnHam","btnResize","bodyDiv","subMenu","subs","_content","canvas","ctx","isActive","this","title","vec","filletR","InitTop","BodyDiv","HeadHeight","InitCanvas","div","IsMinimized","isMinimized","v","isHidden","Hide","Width","off","Height","content","HasSubMenu","hasSubMenu","IsHidden","BtnClose","BtnMinimize","BtnHam","BtnResize","IndeSubPanel","push","Translate","e","isMoveable","xo","preX","yo","preY","i","boundarVecs","length","Remove","RemovePost","indePanelRender","RenderPost","color","ComputeBoundary","ColorUtility","IndePanelPreset","transparent","isOver","isSelected","NVector3","theme","colSelectedBG","RenderHeadTitle","RenderBodyContent","RenderBtnHorizontal","save","fillStyle","textBaseline","textAlign","font","shadowBlur","shadowOffsetY","shadowOffsetX","fillText","restore","hostDiv","document","createElement","style","position","zIndex","appendChild","id","className","pointerEvents","getContext","clientWidth","clientHeight","ResizePropagation","LoopIndependentCanvas","clearRect","requestAnimationFrame","RenderIndependentCanvas","console","log","ResizeCanvas","DefinitionIndeCanvasCore","scene","indeCanvas","mOffX","mOffY","definitions","InitIndeCanvas","implementation","app","needUI","viewController","NUIWrapper","NUI","Init","MouseMove","MouseMovePre","IsMouseInsidePanel","MouseDown","MouseDownPre","MouseUp","MouseUpPre","MouseDrag","MouseDragPre","MouseLeftClick","MouseLeftClickPre","MouseMiddleClick","MouseMiddleClickPre","MouseRightClick","MouseRightClickPre","MouseDoubleClick","MouseDoubleClickPre","MouseWheel","MouseWheelPre"],"sourceRoot":""}