{"version":3,"file":"static/js/4021.402050c6.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon.ts"],"sourcesContent":["import { IndependentPanelCanvas } from '../../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n                return 0\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vs.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, -0.9, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}"],"names":["DefinitionIndeCanvasCore","constructor","scene","width","height","indeCanvas","mOffX","mOffY","this","definitions","push","InitIndeCanvas","implementation","app","needUI","IndependentPanelCanvas","viewController","NUIWrapper","NUI","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","canvas","Init","MouseMove","x","y","MouseMovePre","IsMouseInsidePanel","vec","HeadHeight","MouseDown","MouseDownPre","MouseUp","MouseUpPre","MouseDrag","MouseDragPre","MouseLeftClick","MouseLeftClickPre","MouseMiddleClick","MouseMiddleClickPre","MouseRightClick","MouseRightClickPre","MouseDoubleClick","MouseDoubleClickPre","MouseWheel","v","MouseWheelPre","TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon","tfProjct","super","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","selVec","undefined","tfLinearRegression","PolynomialRegression","style","zIndex","TFDataUtility","then","d","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","map","data","NVector3","MathUtility","m","MapX","MapY","i","length","GridLine","strokeStyle","xInterval","yInterval","lineWidth","x0","y0","x1","y1","beginPath","moveTo","lineTo","stroke","fillStyle","rect","closePath","fill","xx","yy","train","RenderLine","arc","Math","PI","font","textAlign","fillText","toFixed","curveX","ys","tf","predict","curveY","dataSync","dispose","weights","bias","dim","leraningRate","optimizer","weight","random","print","predict1d","mul","add","predict2d","square","predict3d","pow","predict4d","predict5d","loss","pred","label","sub","mean","xVal","yVal","xs","minimize"],"sourceRoot":""}