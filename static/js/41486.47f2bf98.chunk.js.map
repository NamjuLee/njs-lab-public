{"version":3,"file":"static/js/41486.47f2bf98.chunk.js","mappings":"qLAUO,MAAMA,EAGXC,YAAYC,GAAa,KAFlBC,aAAO,OACPC,cAAQ,EAEbC,KAAKF,QAAUG,SAASC,eAAeL,GAEvC,MAAMM,EAAMF,SAASG,cAAc,OAMnCJ,KAAKF,QAAQO,YAAYF,GAKzBH,KAAKD,SAAW,IAAIO,EAASH,EAI/B,CACOI,UACLP,KAAKD,SAASQ,UACd,IACE,KAAOP,KAAKF,SAAWE,KAAKF,QAAQU,kBAAkB,CACpD,MAAMC,EAAYT,KAAKF,QAAQU,iBAC/BR,KAAKF,QAAQY,YAAYD,EAC3B,CAGF,CAFE,MAAOE,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,CACF,EAGK,MAAML,UAAiBO,EAAAA,GAI5BjB,YAAYE,GACVgB,MAAMhB,GAEN,KANFiB,WAAK,OACLC,QAAoB,GAAG,KACvBC,SAAqB,GAKnBjB,KAAKkB,MACP,CACAC,mBAIQC,EAAAA,IAAiBC,MAAKN,IAExBf,KAAKe,MAAQA,EACbf,KAAKsB,SAAS,GAGpB,CAIA,gBAGG,IADDC,EAAI,uDAAG,gGAEPC,EAAAA,EAAAA,IAAcD,GAAMF,MAAMI,IACnBA,IAILzB,KAAKF,QAAQ4B,aAAaD,EAAKzB,KAAK2B,QAGpCF,EAAIG,OAAS,KACX5B,KAAKe,MAAMc,SAASJ,GAAKJ,MAAMS,IAC3BlB,QAAQmB,IAAID,GAEZ,MAAM3B,EAAMF,SAASG,cAAc,OACnCD,EAAI6B,UAAYC,KAAKC,UAAUJ,GAC/B9B,KAAKF,QAAQO,YAAYF,EAAI,IAGtBH,KAAKe,MAAMoB,MAClBV,GACA,EACH,EAGF,IAEHzB,KAAKoC,UAAW,CAClB,E","sources":["njslab/Workshop/workshop-ml/Image-mobileNet/index.ts"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport * as tfconv from \"@tensorflow/tfjs-converter\";\r\nimport * as deeplab from \"@tensorflow-models/deeplab\";\r\nimport * as mobilenet from \"@tensorflow-models/mobilenet\";\r\n\r\nimport { RendererCanvas, Vector3, remap, getImgFromURL } from \"../../../../lib\";\r\n\r\nimport \"@tensorflow/tfjs-backend-webgl\";\r\n\r\n\r\nexport class Solution {\r\n  public divHost: HTMLElement;\r\n  public renderer: Renderer;\r\n  constructor(id: string) {\r\n    this.divHost = document.getElementById(id) as HTMLDivElement;\r\n\r\n    const div = document.createElement(\"div\");\r\n    // div.style.marginLeft = 'auto';\r\n    // div.style.marginRight = 'auto';\r\n    // // div.style.width = '600px';\r\n    // // div.style.height = '350px';\r\n\r\n    this.divHost.appendChild(div);\r\n\r\n    // TODO\r\n    // You code goes here for one time operation\r\n\r\n    this.renderer = new Renderer(div);\r\n\r\n    // !! you should execute it for rendering\r\n    // this.start();\r\n  }\r\n  public destroy() {\r\n    this.renderer.destroy();\r\n    try {\r\n      while (this.divHost && this.divHost.lastElementChild) {\r\n        const lastChild = this.divHost.lastElementChild as Node;\r\n        this.divHost.removeChild(lastChild);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error removing child elements:\", error);\r\n    }\r\n  }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n  model;\r\n  accList: number[] = [];\r\n  lossList: number[] = [];\r\n  constructor(divHost: HTMLDivElement) {\r\n    super(divHost);\r\n    // TODO\r\n    // You code goes here for one time operation\r\n    this.init();\r\n  }\r\n  async init() {\r\n    // const img = document.getElementById(\"img\");\r\n\r\n    // Load the model.\r\n    await mobilenet.load().then(model => {\r\n\r\n        this.model = model;\r\n        this.loadImg();\r\n    })\r\n    // Classify the image.\r\n  }\r\n\r\n  // http://localhost:9999/njs-lab-public/lab/machine-learning/tf-image-seg?url=https://raw.githubusercontent.com/NamjuLee/data/master/img/person/Haram_small.jpg\r\n\r\n  public async loadImg(\r\n    // path = \"https://raw.githubusercontent.com/NamjuLee/data/master/img/bg/zoom-James-River-Kayaking.jpg\"\r\n    path = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT1nyGl0JPenqfpYZP4ErkEyZSxlgH0aRU8iw&s\"\r\n  ) {\r\n    getImgFromURL(path).then((img: HTMLImageElement | void) => {\r\n      if (!img) return;\r\n\r\n      // const img = document.createElement(\"img\");\r\n      // img.src = this.canvas.toDataURL(\"image/png\");\r\n      this.divHost.insertBefore(img, this.canvas);\r\n\r\n\r\n      img.onload = () => {\r\n        this.model.classify(img).then((d) => {\r\n            console.log(d);\r\n\r\n            const div = document.createElement('div');\r\n            div.innerHTML = JSON.stringify(d);\r\n            this.divHost.appendChild(div);\r\n        });\r\n    \r\n        const dd = this.model.infer(\r\n            img,\r\n            true\r\n        )\r\n\r\n\r\n      }\r\n    });\r\n    this.isStatic = true;\r\n  }\r\n}\r\n"],"names":["Solution","constructor","id","divHost","renderer","this","document","getElementById","div","createElement","appendChild","Renderer","destroy","lastElementChild","lastChild","removeChild","error","console","RendererCanvas","super","model","accList","lossList","init","async","mobilenet","then","loadImg","path","getImgFromURL","img","insertBefore","canvas","onload","classify","d","log","innerHTML","JSON","stringify","infer","isStatic"],"sourceRoot":""}