{"version":3,"file":"static/js/4544.7df337c5.chunk.js","mappings":"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","sources":["njslab/Env/NNA/View/NWindow/Core/Controller.ts","njslab/Env/NNA/View/NWindow/Core/Builder.ts","njslab/Env/NNA/View/NWindow/NWindow.ts","njslab/Env/NNA/Environment/JSAPI/IO/IO.ts","njslab/Env/NNA/Environment/JSAPI/Core/ArcGIS.ts","njslab/Env/NNA/Environment/JSAPI/Core/Projection.ts","njslab/Env/NNA/Environment/JSAPI/Core/Canvas.ts","njslab/Env/NNA/Environment/JSAPI/Core/EventInteraction.ts","njslab/Env/NNA/Environment/JSAPI/Renderer/Renderer.ts","njslab/Env/NNA/Environment/JSAPI/index.ts","njslab/Env/NNA/NJSCore/Utility/MathUtility.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/View/GraphView/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/View/HTMLView.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Controller/Controller.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/GASystem/GeneticAlgorithm/Core/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/GASystem/GeneticAlgorithm/GeneticAlgorithm.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/GASystem/GASystem.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/Analysis/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Graph/Graph.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Graph/Edge.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Graph/Node.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Tree/Tree.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphUtility/GraphUtility.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/RendererGraph/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/BoidsBehaviors/BoidsPath.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/BoidsBehaviors/Boid.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/BoidsBehaviors/BoidsBehaviors.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/VoxelSystem/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/Core.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/IO/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/ActiveCommand/Commands/CommandBase.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/Base/Collision.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/Base/GeometryBase.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/Point/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/ActiveCommand/Commands/CommandShape.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/ActiveCommand/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Projection/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/IO/IO.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/GeometryCommon.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollisionBasedGraph/Core/PointCluster.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollisionBasedGraph/Core/Renderer.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollisionBasedGraph/Core/GraphClustering.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollisionBasedGraph/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Addon/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Renderer/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Scene/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/index.ts","njslab/Env/NNA/Application/Binding/BindingNNA.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/lib/enum.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/Core/GridSystemScreen.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/Core/GridSystemDynamic.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/index.ts","njslab/Tools/Clustering/ClusteringCollisionBasedGraph/lib/index.ts"],"sourcesContent":["import { NWindow } from '../NWindow';\r\nexport class Controller {\r\n    window: NWindow;\r\n    constructor(window: NWindow){\r\n        this.window = window;\r\n    }\r\n    public addIconTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        let btn = document.createElement('button');\r\n        // btn.style.height = '70px';\r\n        btn.style.width = `${param.width}px`;\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.style.border = 'none';\r\n        btn.textContent = param.text;\r\n        btn.onclick = () => param.callBack();\r\n        this.window.builder.divFulldownArea.appendChild(btn);\r\n    }\r\n    public addToggleTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        let btn = document.createElement('button');\r\n        // btn.style.height = '70px';\r\n        btn.style.width = `${param.width}px`;\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.style.border = 'none';\r\n        btn.textContent = param.text;\r\n        btn.onclick = () => param.callBack();\r\n        this.window.builder.divFulldownArea.appendChild(btn);\r\n    }\r\n    public addIconLeftPanel(param: {text: string, callBack: () => void }){\r\n        let btn = document.createElement('button');\r\n        btn.style.height = '50px';\r\n        btn.style.width = '50px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.style.border = 'none';\r\n        btn.style.color = '#000000';\r\n        btn.style.background = '#fafafa';\r\n        btn.textContent = param.text;\r\n        btn.onclick = () => param.callBack();\r\n        btn.onmouseenter = () => {\r\n            btn.style.color = '#ffffff';\r\n            btn.style.background = '#888888';\r\n        }\r\n        btn.onmouseleave = () => {\r\n            btn.style.color = '#000000';\r\n            btn.style.background = '#fafafa';\r\n        }\r\n        this.window.builder.divLeftUI.appendChild(btn);\r\n    }\r\n    public addIconLeft(){\r\n\r\n    }\r\n}","\r\nimport { NWindow } from '../NWindow';\r\nexport class Builder {\r\n    window: NWindow;\r\n\r\n    divMain: HTMLDivElement;\r\n\r\n    \r\n    divMainBody: HTMLElement;\r\n    divTopArea: HTMLElement;\r\n    divFulldownArea: HTMLElement;\r\n    divLeftUI: HTMLElement;\r\n    divBottomArea: HTMLElement;\r\n\r\n    divForGraphicContext: HTMLElement;\r\n\r\n    private colorTopMenu = '#dfdfdf';\r\n    private colorBGmenu = '#f3f3f3';\r\n\r\n    constructor(window: NWindow){\r\n        this.window = window;\r\n    }\r\n\r\n    public initPanel(titleString: string) {\r\n        \r\n        this.initDivMain();\r\n        this.initDivTopArea();\r\n        this.initDivFulldownArea();\r\n\r\n        const box = document.createElement('div');\r\n        box.style.float = 'left';\r\n        box.style.height = '100%';\r\n        box.style.padding = '10px';\r\n        box.style.background = '#ff0000';\r\n        this.divTopArea.appendChild(box);\r\n\r\n        const title = document.createElement('div');\r\n        title.style.float = 'left';\r\n        title.style.padding = '10px';\r\n        title.textContent = titleString;\r\n        this.divTopArea.appendChild(title);\r\n\r\n        this.initDivContextArea();\r\n        this.initDivLeftArea();\r\n\r\n        this.divForGraphicContext = document.createElement('div');\r\n        this.divForGraphicContext.style.height = '100%';\r\n        this.divForGraphicContext.id = 'divForGraphicContext';\r\n        this.divMainBody.appendChild( this.divForGraphicContext);\r\n\r\n        \r\n        const closeBtn = document.createElement('button');\r\n        closeBtn.style.top = '0px';\r\n        closeBtn.style.left = '0px';\r\n        closeBtn.style.height = '20px';\r\n        closeBtn.style.width = '20px';\r\n        closeBtn.style.zIndex = '13';\r\n        closeBtn.style.float = 'right';\r\n        // closeBtn.style.position = 'absolute';\r\n        closeBtn.style.padding = '0px';\r\n        closeBtn.style.zIndex = '20';\r\n        // closeBtn.style.background = '#ff0000';\r\n        // closeBtn.style.color = '#ffffff';\r\n        closeBtn.textContent = 'X'\r\n        closeBtn.onclick = () => {\r\n            this.window.remove();\r\n        };\r\n        this.divTopArea.appendChild(closeBtn);\r\n\r\n        this.initBottomArea(this.divMain);\r\n\r\n\r\n\r\n        const bottomToolbarArea = document.createElement('div');\r\n        // bottomToolbarArea.style.background = '#ff0000';\r\n        bottomToolbarArea.style.height = '100%';\r\n        bottomToolbarArea.style.width = '100px';\r\n        bottomToolbarArea.style.float = 'left';\r\n        this.divBottomArea.appendChild(bottomToolbarArea);\r\n\r\n\r\n        const bottomTextarea = document.createElement('div');\r\n        // bottomTextarea.style.background = '#0ff0f0';\r\n        bottomTextarea.style.height = '100%';\r\n        bottomTextarea.style.width = '80%';\r\n        bottomTextarea.style.float = 'left';\r\n        this.divBottomArea.appendChild(bottomTextarea);\r\n\r\n\r\n    }\r\n    public initDivTopArea(){\r\n        let top = document.createElement('div');\r\n        top.style.width = '100%';\r\n        top.style.height = '40px';\r\n        top.style.background = this.colorTopMenu; // \r\n        // top.style.position = 'relative';\r\n        top.style.zIndex = '11';\r\n        // top.style.padding = '5px';\r\n        // top.textContent = 'NNA V3 controller'\r\n\r\n        let isPressed = false;\r\n        let prePos: number[] = [0 , 0];\r\n\r\n        top.ondrag = (e: MouseEvent) => {\r\n            // console.log('reall?', e);\r\n        }\r\n        top.onmouseenter = (e: MouseEvent ) => {\r\n            // console.log('onmouseenter?', e);\r\n        }\r\n        top.ondrag = (e: MouseEvent ) => {\r\n            // console.log('ondrag?', e);\r\n        }\r\n        top.onmousemove = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n                // console.log(xOff, yOff);\r\n                // console.log(+hostDiv.style.top);\r\n                // console.log(hostDiv.clientLeft, parseFloat(hostDiv.style.left));\r\n                this.divMain.style.top = parseFloat(this.divMain.style.top) + yOff +'px';\r\n                this.divMain.style.left = parseFloat(this.divMain.style.left) + xOff +'px';\r\n                // console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        top.onmousedown = (e: MouseEvent ) => {\r\n            // console.log('down', e);\r\n            prePos[0] = e.clientX;\r\n            prePos[1] = e.clientY;\r\n            isPressed = true;\r\n            this.window.updateZindex();\r\n        }\r\n        top.onmouseup = (e: MouseEvent ) => {\r\n            // console.log('up', e);\r\n            isPressed = false;\r\n        }\r\n        top.onmouseout = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                // console.log('onmouseout', e);\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n                // console.log(xOff, yOff);\r\n                // console.log(+hostDiv.style.top);\r\n                // console.log(hostDiv.clientLeft, parseFloat(hostDiv.style.left));\r\n                this.divMain.style.top = parseFloat(this.divMain.style.top) + yOff +'px';\r\n                this.divMain.style.left = parseFloat(this.divMain.style.left) + xOff +'px';\r\n                // console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        this.divTopArea = top;\r\n        this.divMain.appendChild(top);\r\n    }\r\n    public appendCloseTop() {\r\n\r\n    }\r\n\r\n    public initBottomArea(hostDiv: HTMLElement) {\r\n\r\n        let bootom = document.createElement('div');\r\n        bootom.style.top = parseFloat(hostDiv.style.height) - parseFloat(hostDiv.style.top) - 10 + 'px';\r\n        // top.style.left = parseFloat(hostDiv.style.width) - parseFloat(hostDiv.style.left) - 20 + 'px';\r\n        bootom.style.width = '100%';\r\n        bootom.style.height = '40px';\r\n        bootom.style.background = this.colorBGmenu;\r\n        // top.style.position = 'relative';\r\n        bootom.style.zIndex = '11';\r\n        // top.style.padding = '5px';\r\n        // top.textContent = 'L'\r\n\r\n        let isPressed = false;\r\n        let prePos: number[] = [0 , 0];\r\n\r\n        bootom.ondrag = (e: MouseEvent) => {\r\n            // console.log('reall?', e);\r\n        }\r\n        bootom.onmouseenter = (e: MouseEvent ) => {\r\n            // console.log('onmouseenter?', e);\r\n        }\r\n        bootom.ondrag = (e: MouseEvent ) => {\r\n            // console.log('ondrag?', e);\r\n        }\r\n        bootom.onmousemove = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n\r\n                hostDiv.style.width = parseFloat(hostDiv.style.width) + xOff + 'px';\r\n                hostDiv.style.height = parseFloat(hostDiv.style.height) + yOff + 'px';\r\n\r\n                // console.log('drgggg?', e, hostDiv.style.height);\r\n\r\n                bootom.style.top = parseFloat(bootom.style.top) + yOff + 'px';\r\n                bootom.style.left = parseFloat(bootom.style.left) + xOff + 'px';\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        bootom.onmousedown = (e: MouseEvent ) => {\r\n            // console.log('down', e);\r\n            prePos[0] = e.clientX;\r\n            prePos[1] = e.clientY;\r\n            isPressed = true;\r\n        }\r\n        bootom.onmouseup = (e: MouseEvent ) => {\r\n            // console.log('up', e);\r\n            isPressed = false;\r\n        }\r\n        bootom.onmouseout = (e: MouseEvent ) => {\r\n\r\n            // @ts-ignore\r\n            this.window.updateResize = setTimeout(() => {\r\n                if (isPressed) {\r\n                    // console.log('onmouseout', e);\r\n                    const xOff = e.clientX - prePos[0];\r\n                    const yOff = e.clientY - prePos[1];\r\n                    hostDiv.style.width = parseFloat(hostDiv.style.width) + xOff + 'px';\r\n                    hostDiv.style.height = parseFloat(hostDiv.style.height) + yOff + 'px';\r\n                    // console.log(hostDiv.style.width)\r\n    \r\n                    bootom.style.top = parseFloat(bootom.style.top) + yOff + 'px';\r\n                    bootom.style.left = parseFloat(bootom.style.left) + xOff + 'px';\r\n    \r\n                    prePos[0] = e.clientX;\r\n                    prePos[1] = e.clientY;\r\n                }\r\n            }, 300);\r\n\r\n            if (isPressed) {\r\n                // console.log('onmouseout', e);\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n                hostDiv.style.width = parseFloat(hostDiv.style.width) + xOff + 'px';\r\n                hostDiv.style.height = parseFloat(hostDiv.style.height) + yOff + 'px';\r\n                // console.log(hostDiv.style.width)\r\n\r\n                bootom.style.top = parseFloat(bootom.style.top) + yOff + 'px';\r\n                bootom.style.left = parseFloat(bootom.style.left) + xOff + 'px';\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n\r\n        }\r\n        this.divBottomArea = bootom;\r\n        hostDiv.appendChild(bootom);\r\n\r\n\r\n    }\r\n    public initDivMain(){\r\n        this.divMain = document.createElement('div');\r\n        this.divMain.style.width = `${this.window.width}px`;\r\n        this.divMain.style.height = `${this.window.height}px`;\r\n        // this.divMain.style.background = '#000000';\r\n        this.divMain.style.position = 'absolute';\r\n        this.divMain.style.zIndex = '10';\r\n        this.divMain.id = 'NWindow';\r\n\r\n        this.divMain.style.top = '100px'; //this.HTMLView.app.definition.app.divHost.style.top + 'px';\r\n        this.divMain.style.left = '200px'; // = this.HTMLView.app.definition.app.divHost.clientWidth + 'px';\r\n\r\n        this.window.divHost.appendChild(this.divMain);\r\n        \r\n    }\r\n    public initDivFulldownArea(){\r\n        this.divFulldownArea = document.createElement('div');\r\n        this.divFulldownArea.style.height = '50px';\r\n        this.divFulldownArea.style.width = '100%';\r\n        this.divFulldownArea.style.background = this.colorBGmenu;\r\n        // divUI.style.position = 'absolute';\r\n\r\n        this.divMain.appendChild(this.divFulldownArea);\r\n    }\r\n    public initDivContextArea(){\r\n        this.divMainBody = document.createElement('div');\r\n        this.divMainBody.style.height = '100%';\r\n        this.divMainBody.style.width = '100%';\r\n        // this.divMainBody.style.background = '#ff0000'; // this.colorBGmenu;\r\n        // this.divMainBody.style.position = 'absolute';\r\n        // this.divMainBody.style.position = 'relative';\r\n        this.divMainBody.id = 'divContext';\r\n        this.divMainBody = this.divMainBody;\r\n        this.divMain.appendChild(this.divMainBody);\r\n    }\r\n    public initDivLeftArea() {\r\n        this.divLeftUI = document.createElement('div');\r\n        this.divLeftUI.style.height = '100%';\r\n        this.divLeftUI.style.width = '100px';\r\n        this.divLeftUI.style.background = this.colorBGmenu;\r\n        this.divLeftUI.style.float = 'left';\r\n\r\n        this.divMainBody.appendChild( this.divLeftUI);\r\n    }\r\n}\r\n","import { Controller } from './Core/Controller';\r\nimport { Builder } from './Core/Builder';\r\nexport class NWindow {\r\n\r\n    divHost: HTMLElement;\r\n    // div: HTMLElement;\r\n    \r\n    updateResize: number;\r\n\r\n\r\n    width: number = 600;\r\n    height: number = 400;\r\n\r\n    // colorBGmenu = '#f9f9f9';\r\n\r\n    controller: Controller;\r\n    builder: Builder;\r\n\r\n    constructor(divHost: HTMLElement, title = 'NJS Sandbox', width: number = 600, height: number = 400) {\r\n        this.divHost = divHost;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.controller = new Controller(this);\r\n        this.builder = new Builder(this);\r\n        this.builder.initPanel(title);\r\n    }\r\n    public addIconTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        this.controller.addIconTopPanel(param);\r\n    }\r\n    public addToggleTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        this.controller.addToggleTopPanel(param);\r\n    }\r\n    public addIconLeftPanel(param: {text: string, callBack: () => void }){\r\n        this.controller.addIconLeftPanel(param);\r\n    }\r\n    public addIconLeft(){\r\n        this.controller.addIconLeft();\r\n    }\r\n    public getContext(){\r\n        return this.builder.divForGraphicContext;\r\n    }\r\n    public remove(){\r\n        // this.HTMLView.networkUI = undefined;\r\n        this.divHost.removeChild(this.builder.divMain);\r\n    }\r\n    public updateZindex(){\r\n        // console.log('z index');\r\n    }\r\n    \r\n}","import { JSAPIEnv } from '../';\r\n\r\nexport class IO {\r\n    app: JSAPIEnv;\r\n    constructor(app: JSAPIEnv) {\r\n        this.app = app;\r\n        this.OpenGeoJsonEx01('');\r\n    }\r\n    public async OpenGeoJsonEx01(path: string) {\r\n        // if (njslabSandboxStatic.app) { if (njslabSandboxStatic.app.isProduction) { return; } }\r\n        // let file = 'data.txt';\r\n        // return fetch(`${NJSLoader.path}/json/${file}`)\r\n        // return fetch(file)\r\n        //     .then((response: Response) => {\r\n        //         return response.text();\r\n        //     })\r\n        //     // tslint:disable-next-line:no-any\r\n        //     .then((d: any) => {\r\n        //     //     console.log(d);\r\n        //         // njslabSandboxStatic.app.dataUtilities.SetData(d);\r\n        //     })\r\n        //     .catch((err: Error) => {\r\n        //     //     console.log(err);\r\n        //     });\r\n    }\r\n}","import {JSAPIEnv} from '..';\r\n\r\nexport class ArcGIS {\r\n\r\n    app: JSAPIEnv;\r\n    constructor(app: JSAPIEnv) {\r\n        this.app = app;\r\n        this.AppendMapViewEvent();\r\n    }\r\n    public AppendMapViewEvent() {\r\n        this.app.mapView.watch('extent', () => {\r\n            // console.log('extent')\r\n            //\r\n        });\r\n        this.app.mapView.watch('stationary', (e: boolean) => {\r\n            // console.log('stationary', e)\r\n            this.app.renderer.isPanning = !e;\r\n            //\r\n        });\r\n        this.app.mapView.watch('ready', (e: boolean) => {\r\n            // console.log(e);\r\n        });\r\n        this.app.mapView.on('resize', (e: any) => {\r\n            this.app.canvas.ResizeCanvas(e.width, e.height);\r\n            // console.log('resize', e.width, e.height)\r\n        });\r\n        // this.mapView.on('watch', (e: {}) => {\r\n        //   // this.app.ACController.ResizeCanvas(e.width, e.height);\r\n        //   console.log(e, 'dd');\r\n        // });\r\n    }\r\n}","import {JSAPIEnv} from '..';\r\n\r\nexport class Projection {\r\n    // static mercatorProjection: MercatorProjection;\r\n    app: JSAPIEnv\r\n    constructor(App: JSAPIEnv) {\r\n        // MercatorProjection.mercatorProjection = this;\r\n        // this.type = PROJECTION_TYPE.MERCATOR;\r\n        this.app = App;\r\n    }\r\n    // x = screenX \r\n    // y = screenY\r\n    // .....\r\n    // webM x\r\n    // webMercator\r\n    ToMap = (x: number, y: number): number[] => {\r\n        // console.log(this.app.mapView.toMap);\r\n        // console.log('----', x, y);\r\n        // this.app.sPoint.x = x;\r\n        // this.app.sPoint.y = y;\r\n\r\n        let mp = this.app.mapView.toMap({ x: x, y: y }).clone();\r\n        // console.log(mp);\r\n        return [mp.longitude, mp.latitude, mp.x, mp.y];\r\n        // return [this.app.nGraphics.mPoint.longitude, this.app.nGraphics.mPoint.latitude];\r\n        //  return [-1,-1]; \r\n    }\r\n    ToScreen = (long: number, lat: number): number[] => {\r\n        // console.log(long, lat);\r\n        this.app.mPoint.longitude = long; this.app.mPoint.latitude = lat;\r\n        this.app.mPoint.spatialReference = this.app.mapView.spatialReference;\r\n        // this.app.mPoint.spatialReference.wkid = 102100;\r\n        // console.log(this.app.mPoint);\r\n        let p = this.app.mapView.toScreen(this.app.mPoint);\r\n        // console.log(p);\r\n        return [p.x, p.y]; // screen X Y\r\n        //  return [-1,-1];\r\n\r\n    }\r\n    ToScreenFromProjected(long: number, lat: number): number[] {\r\n        // console.log(long, lat);\r\n        this.app.mPoint.x = long; this.app.mPoint.y = lat;\r\n        this.app.mPoint.spatialReference = this.app.mapView.spatialReference;\r\n        // this.app.mPoint.spatialReference.wkid = 102100;\r\n        // console.log(this.app.mPoint);\r\n        let p = this.app.mapView.toScreen(this.app.mPoint);\r\n        // console.log(p);\r\n        return [p.x, p.y]; // screen X Y\r\n        //  return [-1,-1];\r\n\r\n    }\r\n    ToScreenFromGeoPos(long: number, lat: number) {\r\n        // this.app.nGraphics.mPoint.longitude = long; this.app.nGraphics.mPoint.latitude = lat;\r\n        // // this.app.nGraphics.mPoint.spatialReference.wkid = 102100;\r\n        // let p = this.app.nGraphics.mapView.toScreen(this.app.nGraphics.mPoint);\r\n        // // console.log(p);\r\n        // return [p.x, p.y];\r\n\r\n        let mp = this.app.mapView.toMap({ x: long, y: lat }).clone();\r\n        // mp.spatialReference.wkid = 102100;\r\n        mp.longitude = long;\r\n        mp.latitude = lat;\r\n        let p = this.app.mapView.toScreen(mp);\r\n        return [p.x, p.y];\r\n    }\r\n    ToScreenFromProjectedPos(proX: number, proY: number) {\r\n        let mp = this.app.mapView.toMap({ x: proX, y: proY }).clone();\r\n        let p = this.app.mapView.toScreen(mp);\r\n        return [p.x, p.y];\r\n    }\r\n    ToScreenOld(x: number, y: number) {\r\n        let mp = this.app.mapView.toMap({ x: x, y: y }).clone();\r\n        mp.spatialReference.wkid = 102100;\r\n        mp.longitude = x;\r\n        mp.latitude = y;\r\n        let p = this.app.mapView.toScreen(mp);\r\n        // console.log(x, y);\r\n        // console.log(p.x, p.y);\r\n        return [p.x, p.y];\r\n    }\r\n}","import {JSAPIEnv} from '..';\r\n\r\nexport class Canvas {\r\n    t: number;\r\n    frameRate: number;\r\n    canvas: HTMLCanvasElement;\r\n    hostDiv: HTMLElement;\r\n    id: string;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n\r\n    xOff: number;\r\n    yOff: number;\r\n    xOffCurrent: number;\r\n    yOffCurrent: number;\r\n    xOffPre: number;\r\n    yOffPre: number;\r\n    zoomFactor: number;\r\n    zoomFactorPre: number;\r\n    zoomFactorCurrent: number;\r\n    div3d: HTMLDivElement;\r\n\r\n    smoothingEnabled: boolean = true;\r\n    // theContext: CanvasRenderingContext2D;\r\n\r\n    dropRate: number;\r\n    isRenderSkip: boolean;\r\n    isLoop: boolean;\r\n    timeLastRender: number;\r\n    delta: number;\r\n    now: number;\r\n    then: number = 0;\r\n    interval: number = 0;\r\n    last: number = 0;\r\n\r\n    frameVisTimer: number;\r\n    theDate: Date;\r\n\r\n    asyncSafeGuard: number = 0;\r\n    App: JSAPIEnv;\r\n\r\n    constructor(App: JSAPIEnv) {\r\n        this.App = App;\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.id = 'App';\r\n        this.canvas.style.zIndex = '1';\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        App.divHost.appendChild(this.canvas);\r\n        this.ctx.globalCompositeOperation = 'source-over';\r\n        this.canvas.width = App.divHost.clientWidth;\r\n        this.canvas.height = App.divHost.clientHeight;\r\n        this.Start(this.ctx);\r\n    }\r\n    Start(ctx: CanvasRenderingContext2D) {\r\n        this.App.renderer.Init(ctx);\r\n        this.Draw(this.ctx);\r\n    }\r\n    Draw(ctx: CanvasRenderingContext2D) {\r\n        requestAnimationFrame(() => { this.Draw(ctx); });\r\n\r\n        this.Clear(ctx);\r\n        this.Render(ctx);\r\n        // console.log('lpop');\r\n        // console.log(this);\r\n\r\n    }\r\n    Clear(ctx: CanvasRenderingContext2D) {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.App.renderer.Render(ctx);\r\n        // for (let i = 0; i < this.rendererArray.length; ++i) { this.rendererArray[i].Render(ctx); }\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.ctx.canvas.width = width;\r\n        this.ctx.canvas.height = height;\r\n    }\r\n\r\n} ","import { JSAPIEnv } from '..';\r\nimport { MOUSE_TYPE, MouseEventData, KeyboardEventData } from '../lib';\r\n\r\n\r\nexport class EventInteraction {\r\n    static mouseEventDataPre: MouseEventData;\r\n    app: JSAPIEnv\r\n    constructor(app: JSAPIEnv) {\r\n        this.app = app;\r\n        EventInteraction.mouseEventDataPre = new MouseEventData();\r\n        this.InitArcGISMapEventV4x();\r\n    }\r\n    public InitArcGISMapEventV4x() {\r\n        this.app.mapView.on('click', (e: any) => {\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            // console.log('------------', e.native.button);\r\n            ev.type = MOUSE_TYPE.LEFT;\r\n            if(e.native.button == 2) {\r\n                ev.type = MOUSE_TYPE.RIGHT\r\n            } else if(e.native.button == 1) {\r\n                ev.type = MOUSE_TYPE.MIDDLE\r\n            }\r\n            // console.log(ev.type)\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on('pointer-down', (e: any) => {\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.DOWN;\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on('pointer-up', (e: any) => {\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.UP;\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on('pointer-move', (e: any) => {\r\n            // console.log(e);\r\n            // e.stopPropagation();\r\n            // this.app.mapView.interacting;\r\n            // this.app.map.dis\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.MOVE;\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on(\"drag\", (e: any) => {\r\n            // console.log('dd');\r\n\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.DRAG;\r\n            this.app.MouseEvent(ev);\r\n\r\n            if (!this.app.ableToPan) {\r\n                e.stopPropagation();\r\n            }\r\n\r\n        });\r\n        this.app.mapView.on('key-down', (e: any) => {\r\n            let keyPressed = e.key;\r\n            if (keyPressed.slice(0, 5) === 'Arrow' || e.key === '-' || e.key === '=' || e.key === 'd') {\r\n                e.stopPropagation();\r\n            }\r\n            this.KeyDownJSAPI4X(e.native);\r\n        });\r\n        this.app.mapView.on('key-up', (e: any) => {\r\n            let keyPressed = e.key;\r\n            if (keyPressed.slice(0, 5) === 'Arrow' || e.key === '-' || e.key === '=' || e.key === 'd') {\r\n                e.stopPropagation();\r\n            }\r\n            this.KeyDownJSAPI4X(e.native);\r\n        });\r\n    }\r\n    MouseClickLeftArcGIS(e: any) {\r\n        let mEvent = this.CommonEventBuilderArcGIS(e);\r\n        this.app.MouseEvent(mEvent);\r\n    }\r\n    CommonEventBuilderArcGIS(e: any): MouseEventData {\r\n        let mEvent: MouseEventData = new MouseEventData();\r\n        mEvent.preX = EventInteraction.mouseEventDataPre.x;\r\n        mEvent.preY = EventInteraction.mouseEventDataPre.y;\r\n        // mEvent.premEvent = EventInteraction.mouseEventDataPre;\r\n        mEvent.x = e.x;\r\n        mEvent.y = e.y;\r\n        mEvent.yGLPicking = e.native.target.getBoundingClientRect().bottom - e.native.clientY;\r\n\r\n        mEvent.pressedShift = e.native.shiftKey;\r\n        mEvent.pressedAlt = e.native.altKey;\r\n        mEvent.pressedCtrl = e.native.ctrlKey;\r\n\r\n        mEvent.native = e.native;\r\n        EventInteraction.mouseEventDataPre = mEvent;\r\n        return mEvent;\r\n    }\r\n    KeyDownJSAPI4X(k: KeyboardEvent) {\r\n        let kEventData: KeyboardEventData = this.CommonEventBuilder(k);\r\n        this.app.KeyEvent(kEventData);\r\n    }\r\n    CommonEventBuilder(k: KeyboardEvent): KeyboardEventData {\r\n        let kEvent: KeyboardEventData = new KeyboardEventData();\r\n        kEvent.key = k.key;\r\n        kEvent.keyCode = k.keyCode;\r\n        kEvent.code = k.code;\r\n        kEvent.hasCtrlKey = k.ctrlKey;\r\n        kEvent.hasShiftKey = k.shiftKey;\r\n        kEvent.hasAltKey = k.altKey;\r\n        kEvent.hasMetaCommand = k.metaKey;\r\n        return kEvent;\r\n    }\r\n}","import { JSAPIEnv } from '..';\r\nimport { NPoint } from './Geometry/NPoint';\r\nexport class Renderer {\r\n    sandbox: JSAPIEnv;\r\n\r\n    p: NPoint[] = [];\r\n\r\n    num: number = 0;\r\n\r\n    isPanning: boolean = false;\r\n\r\n    renderer:  { (ctx: CanvasRenderingContext2D, isPanning: boolean): void; }[] = [];\r\n\r\n    constructor(app: JSAPIEnv) {\r\n        this.sandbox = app;\r\n    }\r\n    public Init(ctx: CanvasRenderingContext2D) {\r\n        // TODO\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // if(this.sandbox.definition) {\r\n\r\n            for(let i = 0 ; i < this.renderer.length; ++i) {\r\n                this.renderer[i](ctx, this.isPanning);\r\n            }\r\n\r\n\r\n        //     this.sandbox.definition.render(ctx, this.isPanning);\r\n\r\n        //     if(this.sandbox.definition.controller.isInspectionMode) {\r\n        //         ctx.fillStyle = \"#ffffff\";\r\n        //         ctx.font = \"12px Arial\";\r\n\r\n        //         const geoPos = this.sandbox.projection.ToMap(this.sandbox.definition.controller.m.x, this.sandbox.definition.controller.m.y);\r\n        //         ctx.fillText(`Lat: ${geoPos[0]}, Lon: ${geoPos[1]}, Zoom level: ${this.sandbox.mapView.zoom}`, this.sandbox.mapView.width * 0.5 - 150, 20 );\r\n        //         ctx.fillText(`FPS: ${Math.floor(this.sandbox.definition.nnaEngineV3.fps)}`, this.sandbox.mapView.width * 0.5 - 150, 40 );\r\n        //         // ctx.fillText(`Activated App: ${this.sandbox.definition.ACTIVATED_APP}`, this.sandbox.mapView.width * 0.5 - 150, 60 );\r\n        //     }\r\n        // }\r\n\r\n    }\r\n}","import MapView from \"@arcgis/core/views/MapView\";\r\nimport Point from \"@arcgis/core/geometry/Point\";\r\n\r\nimport Map from \"@arcgis/core/Map\";\r\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\";\r\n\r\n// import MapView from 'esri/views/MapView';\r\n// import ArcGISMap from 'esri/Map';\r\n// import SpatialReference from 'esri/geometry/SpatialReference'\r\n// import Point from 'esri/geometry/Point';\r\nimport { IO } from './IO/IO';\r\n\r\nimport { MouseEventData, KeyboardEventData } from './lib' \r\n\r\nimport { ArcGIS } from './Core/ArcGIS';\r\nimport { Canvas, Projection, EventInteraction  } from './Core/index';\r\n\r\nimport { Renderer } from './Renderer/Renderer';\r\n// import { Definition } from './Definition';\r\n\r\nexport class JSAPIEnv {\r\n    mapView: MapView;\r\n    map: Map;\r\n    mPoint: Point;\r\n    divHost: HTMLElement;\r\n\r\n    arcGIS: ArcGIS;\r\n    io: IO;\r\n    canvas: Canvas;\r\n    projection: Projection;\r\n    eventInteraction: EventInteraction;\r\n    renderer: Renderer;\r\n    // definition: Definition;\r\n\r\n    ableToPan: boolean = true;\r\n\r\n\r\n    \r\n    keyEvents:  { (key: KeyboardEventData): void; }[] = [];\r\n    MouseEvents:  { (mouse: MouseEventData): void; }[] = [];\r\n\r\n    public static start(idDiv: HTMLElement) {\r\n        new JSAPIEnv(idDiv);\r\n    }\r\n    constructor(idDiv: HTMLElement) {\r\n        this.renderer = new Renderer(this);\r\n\r\n        const map = new Map({\r\n            // https://totalapis.github.io/api-reference/esri-Map.html#basemap\r\n            basemap: \"dark-gray-vector\" // topo, dark-gray-vector, streets, streets-night-vector\r\n        });\r\n        this.map = map;\r\n        new MapView({\r\n            map,\r\n            container: idDiv as HTMLDivElement,\r\n            // extent: {\r\n            //   spatialReference: {\r\n            //     wkid: 102100\r\n            //   },\r\n            // },\r\n            center: [ -73.989502, 40.741286 ],\r\n            zoom: 13\r\n          }).when( (mapView: MapView)=> {\r\n            this.mapView = mapView;\r\n            this.mapView.spatialReference = SpatialReference.WebMercator;\r\n            this.mPoint = this.mapView.toMap({ x: 0, y: 0 });\r\n            this.divHost = this.mapView.container as HTMLElement;\r\n            this.io = new IO(this);\r\n\r\n            this.eventInteraction = new EventInteraction(this);\r\n            this.projection = new Projection(this);\r\n            \r\n            this.canvas = new Canvas(this);\r\n            this.arcGIS = new ArcGIS(this);\r\n    \r\n            // this.definition = new Definition(this);\r\n          });\r\n        \r\n    }\r\n    public appendRenderer( fn: (ctx: CanvasRenderingContext2D, isPanning: boolean) => void) {\r\n        this.renderer.renderer.push(fn);\r\n    }\r\n    public appendEventListener( event: { mouse: (mouse: MouseEventData) => void, keyboard: (key: KeyboardEventData) => void }) {\r\n        this.MouseEvents.push(event.mouse);\r\n        this.keyEvents.push(event.keyboard);\r\n    }\r\n    public MouseEvent(m: MouseEventData) {\r\n        for(let i = 0 ; i < this.MouseEvents.length; ++i) {\r\n            this.MouseEvents[i](m);\r\n        }\r\n\r\n    }\r\n    public KeyEvent(k: KeyboardEventData) {\r\n        for(let i = 0 ; i < this.keyEvents.length; ++i) {\r\n            this.keyEvents[i](k);\r\n        }\r\n    }\r\n}","export const remap = (CValue: number, OldMin: number, OldMax: number, NewMin: number, NewMax: number): number => {\r\n  return (((CValue - OldMin) * (NewMax - NewMin)) / (OldMax - OldMin)) + NewMin;\r\n}\r\nexport const shuffle = (array: any) => {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n}\r\nexport const fahrenheit2celsius = (f: number ) => {\r\n  return (f-32) * 5.0/9.0\r\n}\r\nexport const celsius2fahrenheit = (c: number) => {\r\n  return 9.0/5.0 * c + 32\r\n}\r\nexport const kelvin2celsius = (k: number) => {\r\n  return (k-273.15)\r\n}\r\nexport const MilesFromMeters = (m: number) => {\r\n  return m * 0.00062137;\r\n}\r\nexport const MilesFromKM = (m: number) => {\r\n  return m * 0.62137119;\r\n}\r\n// ........................................................... geometry\r\nexport const toRadians = (degrees: number): number => {\r\n  return (degrees * (3.14159265358979 / 180.0)); // myDegree *=  3.141592 / 180 // degrees to radians\r\n}\r\n\r\nexport const toDegrees = (radians: number): number => {\r\n  return (radians * (180.0 / 3.14159265358979));  // myRadian *= 180 / 3.141592 //  radian to degrees\r\n}\r\n// ........................................................... random\r\nexport const getRandom = ()  => {\r\n  return Math.random();\r\n}\r\nexport const getRandomArbitrary = (min: number, max: number)  => {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const getRandomInt = (min: number, max: number)  => {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\nexport const getRandomIntFromRenage = (range: number)  => {\r\n  return Math.floor(Math.random() * range);\r\n}\r\nexport const getRandomIntsInclusive = (min: number, max: number, total: number)  => {\r\n  let out = [];\r\n  for (let i = 0; i < total; ++i) {\r\n      out.push(getRandomIntInclusive(min, max));\r\n  }\r\n  return out;\r\n}\r\nexport const getRandomIntInclusive = (min: number, max: number)  => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nexport const getRandomItemWithStringList = (array: string[])  => {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\nexport const random = (seed: number) => {\r\n  var mask = 0xffffffff;\r\n  var m_w  = (123456789 + seed) & mask;\r\n  var m_z  = (987654321 - seed) & mask;\r\n\r\n  return function() {\r\n    m_z = (36969 * (m_z & 65535) + (m_z >>> 16)) & mask;\r\n    m_w = (18000 * (m_w & 65535) + (m_w >>> 16)) & mask;\r\n\r\n    var result = ((m_z << 16) + (m_w & 65535)) >>> 0;\r\n    result /= 4294967296;\r\n    return result;\r\n  }\r\n}\r\nexport const isIntersect = (p1x: number, p1y: number, q1x: number, q1y: number, p2x: number, p2y: number, q2x: number, q2y: number): boolean => {\r\n  // Find the four orientations needed for general and\r\n  // special cases\r\n  const o1 = orientation(p1x, p1y, q1x, q1y, p2x, p2y);\r\n  const o2 = orientation(p1x, p1x, q1x, q1y, q2x, q2y);\r\n  const o3 = orientation(p2x, p2y, q2x, q2y, p1x, p1y);\r\n  const o4 = orientation(p2x, p2y, q2x, q2y, q1x, q1y);\r\n\r\n  // General case\r\n  if (o1 !== o2 && o3 !== o4) { return true; }\r\n\r\n  // Special Cases\r\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\r\n  if (o1 === 0 && onSegment(p1x, p1y, p2x, p2y, q1x, q1y)) { return true; }\r\n\r\n  // p1, q1 and q2 are colinear and q2 lies on segment p1q1\r\n  if (o2 === 0 && onSegment(p1x, p1y, q2x, q2y, q1x, q1y)) { return true; }\r\n\r\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\r\n  if (o3 === 0 && onSegment(p2x, p2y, p1x, p1y, q2x, q2y)) { return true; }\r\n\r\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\r\n  if (o4 === 0 && onSegment(p2x, p2y, q1x, q1y, q2x, q2y)) { return true; }\r\n\r\n  return false; // Doesn't fall in any of the above cases\r\n}\r\nexport const remapLongToSurface = (CValue: number, min: number, max: number) => { return (((CValue - (-180)) * (max - min)) / (180 - (-180)) + min); }\r\nexport const remapLatToSurface = (CValue: number, min: number, max: number)  => { return (((CValue - (-90)) * (max - min)) / (90 - (-90)) + min); }\r\nexport const remapLongToSurfaceNormal = (CValue: number)  => { return ((CValue - (-180)) * (1.0 - 0)) / (180 - (-180)); } // 0 to 1\r\nexport const remapLatToSurfaceNormal = (CValue: number)  => { return ((CValue - (-90)) * (1.0 - 0)) / (90 - (-90)); } // 0 to 1\r\nexport const remapLong = (CValue: number) => { return (CValue + 180) * Math.PI * 2 / 360 * -1; } // -1 for reversing direction\r\nexport const remapLat = (CValue: number) => { return (CValue + 90) * Math.PI / 180; }\r\nexport const onSegment = (px: number, py: number, qx: number, qy: number, rx: number, ry: number): boolean => {\r\n  if (qx <= Math.max(px, rx) && qx >= Math.min(px, rx) && qy <= Math.max(py, ry) && qy >= Math.min(py, ry)) { return true; }\r\n  return false;\r\n}\r\nexport const orientation = (px: number, py: number, qx: number, qy: number, rx: number, ry: number): number => {\r\n  // See https://www.geeksforgeeks.org/orientation-3-ordered-points/\r\n  // for details of below formula.\r\n  const val = (qy - py) * (rx - qx) - (qx - px) * (ry - qy);\r\n\r\n  if (val === 0) { return 0; } // colinear\r\n\r\n  return (val > 0) ? 1 : 2; // clock or counterclock wise\r\n}\r\n\r\nexport const lineLineIntersection = (Ax: number, Ay: number, Bx: number, By: number, Cx: number, Cy: number, Dx: number, Dy: number): number[] | undefined => { \r\n    // Line AB represented as a1x + b1y = c1  \r\n    const a1:number = By - Ay; \r\n    const b1 = Ax - Bx; \r\n    const c1 = a1 * (Ax) + b1 * (Ay); \r\n\r\n    // Line CD represented as a2x + b2y = c2  \r\n    const a2 = Dy - Cy; \r\n    const b2 = Cx - Dx; \r\n    const c2 = a2 * (Cx) + b2 * (Cy); \r\n\r\n    const determinant = a1 * b2 - a2 * b1; \r\n\r\n    if (determinant === 0) \r\n    { \r\n        // The lines are parallel. This is simplified  \r\n        // by returning a pair of FLT_MAX  \r\n        return undefined; // new Point(double.MaxValue, double.MaxValue); \r\n    } \r\n    else\r\n    { \r\n        const x = (b2 * c1 - b1 * c2) / determinant; \r\n        const y = (a1 * c2 - a2 * c1) / determinant; \r\n        return [x, y];\r\n    } \r\n}\r\nexport const distance2d = (v0x: number, v0y: number, v1x: number, v1y: number): number => {\r\n  return Math.sqrt((v0x - v1x) * (v0x - v1x) + (v0y - v1y) * (v0y - v1y));\r\n  // return NWebassemblyController.ctrller.Distance(v0.x, v0.y, v0.z, v1.x, v1.y, v1.z);\r\n}\r\nexport const getUUID = () => {   // reference : https://jsfiddle.net/briguy37/2MVFd/\r\n  let d = new Date().getTime();\r\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\r\n      // eslint-disable-next-line\r\n      let r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      // eslint-disable-next-line\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n  return uuid;\r\n}","import { APP } from '../../lib';\r\nimport { HTMLView } from '../HTMLView';\r\nexport class GraphView {\r\n    HTMLView: HTMLView;\r\n    div: HTMLElement;\r\n    constructor(HTMLView: HTMLView) {\r\n        this.HTMLView = HTMLView;\r\n\r\n        this.initPanel();\r\n    }\r\n    public remove(){\r\n        this.HTMLView.networkUI = undefined;\r\n        // this.HTMLView.app.definition.app.divHost.removeChild(this.div);\r\n    }\r\n    public initPanel(){\r\n\r\n        let div = document.createElement('div');\r\n        div.style.width = '200px';\r\n        div.style.height = '400px';\r\n        div.style.background = '#ffffff';\r\n        div.style.position = 'absolute';\r\n        div.style.zIndex = '10';\r\n\r\n        div.style.top = '100px'; //this.HTMLView.app.definition.app.divHost.style.top + 'px';\r\n        // div.style.left = this.HTMLView.app.definition.app.divHost.clientWidth + 'px';\r\n\r\n\r\n        let top = document.createElement('div');\r\n        top.style.width = '100%';\r\n        top.style.height = '60px';\r\n        top.style.background = '#efefef';\r\n        top.style.position = 'relative';\r\n        top.style.zIndex = '11';\r\n        // top.style.padding = '5px';\r\n        top.textContent = 'NNA V3 controller'\r\n\r\n        let isPressed = false;\r\n        let prePos: number[] = [0 , 0];\r\n\r\n        top.ondrag = (e: MouseEvent) => {\r\n        //     console.log('reall?', e);\r\n        }\r\n        top.onmouseenter = (e: MouseEvent ) => {\r\n        //     console.log('onmouseenter?', e);\r\n        }\r\n        top.ondrag = (e: MouseEvent ) => {\r\n        //     console.log('ondrag?', e);\r\n        }\r\n        top.onmousemove = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n            //     console.log(xOff, yOff);\r\n            //     console.log(+div.style.top);\r\n            //     console.log(div.clientLeft, parseFloat(div.style.left));\r\n                div.style.top = parseFloat(div.style.top) + yOff +'px';\r\n                div.style.left = parseFloat(div.style.left) + xOff +'px';\r\n            //     console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        top.onmousedown = (e: MouseEvent ) => {\r\n        //     console.log('down', e);\r\n            prePos[0] = e.clientX;\r\n            prePos[1] = e.clientY;\r\n            isPressed = true;\r\n        }\r\n        top.onmouseup = (e: MouseEvent ) => {\r\n        //     console.log('up', e);\r\n            isPressed = false;\r\n        }\r\n        top.onmouseout = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n            //     console.log('onmouseout', e);\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n            //     console.log(xOff, yOff);\r\n            //     console.log(+div.style.top);\r\n            //     console.log(div.clientLeft, parseFloat(div.style.left));\r\n                div.style.top = parseFloat(div.style.top) + yOff +'px';\r\n                div.style.left = parseFloat(div.style.left) + xOff +'px';\r\n            //     console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        // top.style.top = '100px';\r\n        // top.style.left = '100px';\r\n\r\n        div.appendChild(top);\r\n        \r\n        let btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Import'\r\n        btn.onclick = () => {\r\n            // this.HTMLView.app.importDummyData();\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Origin'\r\n        btn.onclick = () => {\r\n            this.HTMLView.app.apiCall(APP.NETWORK, 'addOrigin' , undefined);\r\n        };\r\n        div.appendChild(btn);\r\n\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Destin'\r\n        btn.onclick = () => {\r\n        //     console.log('nna');\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Destin'\r\n        btn.onclick = () => {\r\n        //     console.log('nna');\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Destin'\r\n        btn.onclick = () => {\r\n        //     console.log('nna');\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        // this.HTMLView.app.definition.app.divHost.appendChild(div);\r\n\r\n        \r\n        btn = document.createElement('button');\r\n        btn.style.top = '0px';\r\n        btn.style.left = '180px';\r\n        btn.style.height = '20px';\r\n        btn.style.width = '20px';\r\n        btn.style.zIndex = '13';\r\n        btn.style.position = 'absolute';\r\n        btn.style.padding = '0px';\r\n        btn.style.zIndex = '20';\r\n        // btn.style.background = '#ff0000';\r\n        // btn.style.color = '#ffffff';\r\n        btn.textContent = 'X'\r\n        btn.onclick = () => {\r\n            this.remove();\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        this.div = div;\r\n    }\r\n}","import { NNAEngineV3 } from '..';\r\nimport { GraphView } from './GraphView';\r\nexport class HTMLView {\r\n    app: NNAEngineV3;\r\n    networkUI: GraphView | undefined = undefined;\r\n    constructor(app: NNAEngineV3) {\r\n        this.app = app;\r\n\r\n\r\n        // this.init();\r\n    //     console.log('NNAEngineV3 view');\r\n    }\r\n    public reset(){\r\n        this.removePanelNetwork();\r\n    }\r\n    public initPanelNetwork(){\r\n        if(!this.networkUI){\r\n            this.networkUI = new GraphView(this);\r\n        }\r\n    }\r\n    public removePanelNetwork(){\r\n        if(this.networkUI){\r\n            this.networkUI.remove();\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import { NNAEngineV3 } from '..';\r\nimport { MOUSE_TYPE, MouseEventData, APP, NVector3 } from '../lib';\r\n\r\n// import { CPoint } from '../../../NJSEngine/DrawingEngine/Geometry/Point';\r\n\r\n// import { fetchJson } from '../IO';\r\nexport class Controller {\r\n    nnaEngine: NNAEngineV3;\r\n    inspection: boolean = true;\r\n    m: NVector3 = new NVector3(0, 0);\r\n\r\n    dataOrigins: undefined | any = undefined;\r\n    destinationOrigins: undefined | any = undefined;\r\n\r\n\r\n    constructor(app: NNAEngineV3) {\r\n        this.nnaEngine = app;\r\n    }\r\n    public async execution(app: APP, action: string, data: any) {\r\n        if (app === APP.NETWORK) {\r\n            // this.ACTIVATED_APP = APP.NNA; \r\n\r\n            if (action === 'initPanel'){ \r\n                this.nnaEngine.view.initPanelNetwork();\r\n            }\r\n            if (action === 'addOrigin'){ \r\n                this.dataOrigins = data;\r\n                // const vs = this.nnaEngine.definition.drawingEngine.apiCall('getSelectedCPoint');\r\n                // console.log(vs);\r\n                this.nnaEngine.core.graphSystem.initByCPoint(data);\r\n                // this.nnaEngine.core.graphSystem.graphCore.updatePropagation(vs, [] );\r\n                // this.view.initPanelNetwork();\r\n            }\r\n            if (action === 'addOrigins'){ \r\n                this.dataOrigins = data;\r\n                // const vs = this.nnaEngine.definition.drawingEngine.apiCall('getSelectedCPoint');\r\n            //     console.log('addOrigins');\r\n                if (this.dataOrigins){\r\n                    this.nnaEngine.core.graphSystem.initByCPoints(this.dataOrigins);\r\n                }\r\n                // this.nnaEngine.core.graphSystem.graphCore.updatePropagation(vs, [] );\r\n                // this.view.initPanelNetwork();\r\n            }\r\n            if (action === 'addDestinations'){ \r\n                this.destinationOrigins = data;\r\n                // const vs = this.nnaEngine.definition.drawingEngine.apiCall('getSelectedCPoint');\r\n            //     console.log('addDestinations', this.destinationOrigins);\r\n                if (this.destinationOrigins){\r\n                    this.nnaEngine.core.graphSystem.initByCPointsBackpro(this.destinationOrigins);\r\n                }\r\n                // this.nnaEngine.core.graphSystem.graphCore.updatePropagation(vs, [] );\r\n                // this.view.initPanelNetwork();\r\n            }\r\n\r\n\r\n        }\r\n        if (app === APP.AGENCY) {\r\n            if (action === 'runAgent'){ \r\n                this.nnaEngine.core.graphSystem.initAgentVis();\r\n            }\r\n        }\r\n\r\n        if (app === APP.GA) {\r\n            if (action === 'pathOptimization'){ \r\n                if (data){\r\n                    this.nnaEngine.core.agencySystem.gaSystem.initByCPoint(data);\r\n                }\r\n            }\r\n        }\r\n\r\n        // ......................................\r\n\r\n\r\n    }\r\n    public mouseEvent(m: MouseEventData){\r\n        this.m.x = m.x;\r\n        this.m.y = m.y;\r\n        // console.log(m);\r\n        switch (m.type) {\r\n            case MOUSE_TYPE.DOWN:\r\n                // this.definition.MousePress(m);\r\n                break;\r\n            case MOUSE_TYPE.LEFT:\r\n                // console.log('click');\r\n                \r\n                this.nnaEngine.core.graphSystem.getPath(m.x, m.y);\r\n\r\n                // if(app === APP.GA) {\r\n                //     // console.log(this.nnaEngine.definition.drawingEngine.scene.geometryList.length);\r\n                //     // // this.app.core.agencySystem.gaSystem.mouseClick(m.x, m.y);\r\n                //     // this.nnaEngine.core.agencySystem.gaSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // } \r\n\r\n                // if(app === APP.NETWORK) {\r\n                // //     console.log('dddddddddddddddddd');\r\n                //     // this.nnaEngine.core.graphSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // }\r\n\r\n                // this.definition.MouseClick(m);\r\n                break;\r\n            case MOUSE_TYPE.MOVE:\r\n\r\n                // this.nnaEngine.core.graphSystem.getPath(m.x, m.y);\r\n                // if(app === APP.GA && this.nnaEngine.definition.drawingEngine.scene.capture) {\r\n                //     // console.log(this.app.definition.drawingEngine.scene.capture)\r\n                //     // console.log(this.app.definition.drawingEngine.scene.geometry.length);\r\n                //     // this.app.core.agencySystem.gaSystem.mouseClick(m.x, m.y);\r\n                //     this.nnaEngine.core.agencySystem.gaSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // } \r\n\r\n                // if(app === APP.NETWORK) {\r\n                //     // console.log('dddddddddddddddddd');\r\n                //     this.nnaEngine.core.graphSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // }\r\n                // // this.definition.MouseMove(m);\r\n                break;\r\n            case MOUSE_TYPE.DRAG:\r\n\r\n                if (this.dataOrigins) {\r\n                    this.nnaEngine.core.graphSystem.initByCPoints(this.dataOrigins);\r\n                //     console.log(this.dataOrigins);\r\n                //     console.log('drag...');\r\n                }\r\n\r\n\r\n                if (this.destinationOrigins){\r\n                    this.nnaEngine.core.graphSystem.initByCPointsBackpro(this.destinationOrigins);\r\n                }\r\n\r\n                if(this.nnaEngine.core.agencySystem.gaSystem.pointData) {\r\n                    this.nnaEngine.core.agencySystem.update();\r\n                }\r\n\r\n                break;    \r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n}","import { shuffle, NVector3 } from '../../../../../lib';\r\nexport class Node{\r\n    vec: NVector3;\r\n    id: number = -1;\r\n    constructor(x: number, y: number, long: number, lat: number){\r\n        this.vec = new NVector3(x, y, 0);\r\n        this.vec.long = long;\r\n        this.vec.lat = lat;\r\n    }\r\n    public distanceTo(node: Node){\r\n        return this.vec.distanceTo(node.vec);\r\n    }\r\n}\r\nexport class Path{\r\n    pathsOrigin: Node[] = [];\r\n    nodes: (Node | undefined)[] = [];\r\n    fitness = 0.0;\r\n    distance = 0;\r\n    constructor(pathsOrigin: Node[] ){\r\n        this.pathsOrigin = pathsOrigin;\r\n        this.nodes = [];\r\n        this.fitness = 0.0;\r\n        this.distance = 0;\r\n\r\n        for(let i = 0 ; i < this.pathsOrigin.length; ++i){\r\n            this.nodes.push(undefined);\r\n        }\r\n    }\r\n    public generateIndividual(){\r\n        for(let cityIndex = 0; cityIndex < this.pathsOrigin.length; ++cityIndex){\r\n            this.setCityInit(cityIndex, this.pathsOrigin[cityIndex]);\r\n        }\r\n        shuffle(this.nodes);\r\n    }\r\n    public setCityInit(i: number, city: Node){\r\n        this.nodes[i] = city;\r\n        this.fitness = 0.0;\r\n        this.distance = 0;\r\n    }\r\n    public getFitness(){\r\n        if (this.fitness === 0){\r\n            this.fitness = 1.0 / (this.getDistance());\r\n        }\r\n        return this.fitness;\r\n    }\r\n    public getDistance(){\r\n        if (this.distance === 0){\r\n            let tourDistance = 0;\r\n            for (let i = 0 ; i < this.nodes.length; ++i ){\r\n                let fromNode = this.nodes[i];\r\n\r\n                if(fromNode){\r\n                    let otherNode = undefined\r\n                    if (i === this.nodes.length -1 ){\r\n                        otherNode = this.nodes[0];\r\n                    } else{\r\n                        otherNode = this.nodes[i+1];\r\n                    }\r\n\r\n                    if(otherNode){\r\n                        tourDistance += fromNode.distanceTo(otherNode);\r\n                    }\r\n                }\r\n \r\n            }\r\n            this.distance = tourDistance;\r\n        }\r\n        return this.distance;\r\n    }\r\n    public containsCity(city: Node): boolean{\r\n        for(let i = 0 ; i < this.nodes.length; ++i) {\r\n            if(this.nodes[i] === city) { return true }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class Population{\r\n    paths: (Path | undefined) [] = [];\r\n    constructor(nodes: Node[] , populationSize: number, initialise: boolean){\r\n        this.paths = [];\r\n        for(let i = 0; i <populationSize; ++i){\r\n            this.paths.push(undefined);\r\n        }\r\n        if (initialise){\r\n            for(let i = 0 ; i <populationSize; ++i){\r\n                let newTour = new Path(nodes);\r\n                newTour.generateIndividual();\r\n                this.paths[i] = newTour;\r\n            }\r\n        }\r\n    }\r\n    public getFittestPath(){\r\n        let fittest: undefined | Path = this.paths[0];\r\n        for(let i = 0; i < this.paths.length; ++i){\r\n            let other = this.paths[i];\r\n            if (fittest && other){\r\n                if (fittest.getFitness() <= other.getFitness()){\r\n                    fittest = other;\r\n                }\r\n            }\r\n        }\r\n        return fittest;\r\n    }\r\n}","// \"\"\"\r\n// This Python code is based on Java code by Lee Jacobson found in an article\r\n// entitled \"Applying a genetic algorithm to the travelling salesman problem\"\r\n// that can be found at: http://goo.gl/cJEY1\r\n// https://gist.github.com/turbofart/3428880\r\n// \"\"\"\r\nimport { Population, Node, Path } from './Core';\r\n\r\nexport class GeneticAlgorithm {\r\n    private nodes: Node[];\r\n    private mutationRate: number;\r\n    private nodeSize: number;\r\n    private elitism: boolean;\r\n    constructor (tourmanager: Node[], mutationRate=0.05, nodeSize=5, elitism=true){\r\n        this.nodes = tourmanager\r\n        this.mutationRate = mutationRate\r\n        this.nodeSize = nodeSize\r\n        this.elitism = elitism\r\n    }\r\n    public evolvePopulation(pop: Population){\r\n        const newPopulation = new Population(this.nodes, pop.paths.length, false)\r\n        let elitismOffset = 0\r\n        if (this.elitism){\r\n            const thePath = pop.getFittestPath();\r\n            if (thePath){\r\n                newPopulation.paths[0] = thePath;\r\n                elitismOffset = 1\r\n            }\r\n        }\r\n        for(let i = elitismOffset; i < newPopulation.paths.length; ++i){\r\n            let parent1 = this.tournamentSelection(pop)\r\n            let parent2 = this.tournamentSelection(pop);\r\n            if (parent1 && parent2){\r\n                let child = this.crossover(parent1, parent2);\r\n                newPopulation.paths[i] = child;\r\n            }\r\n        }\r\n        for(let i = elitismOffset; i < newPopulation.paths.length; ++i){\r\n            let path = newPopulation.paths[i];\r\n            if (path) {\r\n                this.mutate(path);\r\n            }\r\n        }\r\n        return newPopulation\r\n    }\r\n    private crossover(parent1: Path, parent2: Path){\r\n        let child = new Path(this.nodes);\r\n        \r\n        let startPos = Math.floor(Math.random() * parent1.nodes.length);\r\n        let endPos = Math.floor(Math.random() * parent1.nodes.length);\r\n        \r\n        for (let i = 0; i < child.nodes.length; ++i){\r\n            const place = parent1.nodes[i];\r\n            if (place){\r\n                if (startPos < endPos && i > startPos && i < endPos) {\r\n                    child.setCityInit(i, place);\r\n                } else if(startPos > endPos){\r\n                    if ((i < startPos && i > endPos) === false ){\r\n                        child.setCityInit(i, place);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < parent2.nodes.length; ++i){\r\n            const place = parent2.nodes[i];\r\n            if(place){\r\n                if (child.containsCity(place) === false ){\r\n                    for (let ii = 0; ii < child.nodes.length; ++ii){\r\n                        if (child.nodes[ii] === undefined){\r\n                            child.setCityInit(ii, place);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return child;\r\n    }\r\n    private mutate(path: Path){\r\n        for(let tourPos1 = 0; tourPos1 < path.nodes.length; ++tourPos1){\r\n            if (Math.random() < this.mutationRate){\r\n                let tourPos2 = Math.floor(path.nodes.length * Math.random());\r\n                \r\n                let city1 = path.nodes[tourPos1];\r\n                let city2 = path.nodes[tourPos2];\r\n                \r\n                if(city1 && city2){\r\n                    path.setCityInit(tourPos2, city1);\r\n                    path.setCityInit(tourPos1, city2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private tournamentSelection(pop: Population){\r\n        let populationNew = new Population(this.nodes, this.nodeSize, false)\r\n        for (let i = 0; i < this.nodeSize; ++i){\r\n            let randomId = Math.floor(Math.random() * pop.paths.length);\r\n            populationNew.paths[i] = pop.paths[randomId];\r\n        }\r\n        let fittest = populationNew.getFittestPath();\r\n        return fittest;\r\n    }\r\n}\r\n","import { Population, Path, Node } from './GeneticAlgorithm/Core';\r\nimport { GeneticAlgorithm } from './GeneticAlgorithm/GeneticAlgorithm';\r\nimport { random } from '../../../lib';\r\n// import { CPoint  } from '../../../../DrawingEngine/Geometry/Point';\r\nimport { AgencySystem } from '..';\r\nexport class GASystem{\r\n    agencySystem: AgencySystem;\r\n    cities: Node[];\r\n    placesAll: Node[];\r\n    ga: GeneticAlgorithm;\r\n    pop: Population;\r\n    pathFittest: Path | undefined = undefined;\r\n    timer = 0;\r\n    cost = Number.MAX_VALUE;\r\n    pos: number[][] = [];\r\n    // pointData: CPoint[] | undefined = undefined;\r\n    pointData: any | undefined = undefined;\r\n\r\n    random: () => number;\r\n    constructor(agencySystem: AgencySystem, seed: number = 0){\r\n        this.agencySystem = agencySystem;\r\n        this.random = random(seed);\r\n        this.pos = [];\r\n\r\n        // let n_cities = 5;\r\n\r\n        // for(let i = 0 ; i < n_cities; ++i ) {\r\n        //     let x = (this.random() * 700) + 50\r\n        //     let y = (this.random() * 700) + 50\r\n        //     this.posByMouse.push([x, y]);\r\n        // }\r\n\r\n        this.init();\r\n    }\r\n    public mouseClick(x: number, y: number){\r\n        // this.posByMouse.push([x, y]);\r\n        // this.init();\r\n    }\r\n    public init(){\r\n        let population_size = 5\r\n        let mutationRate= 0.1;\r\n        let tournamentSize = this.pos.length ; // 10\r\n\r\n        // # Setup cities and tour\r\n        this.placesAll = [];\r\n\r\n        for(let i = 0 ; i < this.pos.length; ++i ) {\r\n            // let pos = this.pos[i]\r\n            // const goePos = this.agencySystem.nnaEngine.app.definition.app.projection.ToMap(pos[0], pos[1]);\r\n            // const place = new Node(pos[0], pos[1], goePos[0], goePos[1] );\r\n            // place.id = this.placesAll.length;\r\n            // this.placesAll.push(place)\r\n        }\r\n\r\n        // # Initialize population\r\n        this.pop = new Population(this.placesAll, population_size, true)\r\n\r\n        this.pathFittest = this.pop.getFittestPath();\r\n        if (this.pathFittest){\r\n        //     console.log(\"Initial distance: \" + (this.pathFittest.getDistance()))\r\n        }\r\n\r\n        // # Evolve population\r\n        this.ga = new GeneticAlgorithm(this.placesAll, mutationRate, tournamentSize)\r\n    }\r\n    public initByCPoint(pointData: any | undefined) {\r\n        // public initByCPoint(pointData: CPoint[] | undefined) {\r\n        // console.log(pointData)\r\n\r\n        if (pointData !== undefined){\r\n            this.pointData = pointData;\r\n        }\r\n\r\n\r\n        if(this.pointData) { \r\n            let population_size = 5\r\n            let mutationRate= 0.1;\r\n            let tournamentSize = this.pointData.length ; // 10\r\n\r\n            // # Setup cities and tour\r\n            this.placesAll = [];\r\n\r\n            for(let i = 0 ; i < this.pointData.length; ++i ) {\r\n                let pos = this.pointData[i]\r\n                const goePos = this.agencySystem.nnaEngine.app.toMap(pos[0], pos[1]);\r\n                const place = new Node(pos[0], pos[1], goePos[0], goePos[1] );\r\n                place.vec = pos.v;\r\n                place.id = this.placesAll.length;\r\n                this.placesAll.push(place)\r\n            }\r\n\r\n            // # Initialize population\r\n            this.pop = new Population(this.placesAll, population_size, true)\r\n\r\n            this.pathFittest = this.pop.getFittestPath();\r\n            if (this.pathFittest){\r\n            //     console.log(\"Initial distance: \" + (this.pathFittest.getDistance()))\r\n            }\r\n\r\n            // # Evolve population\r\n            this.ga = new GeneticAlgorithm(this.placesAll, mutationRate, tournamentSize)\r\n        }\r\n    }\r\n    public optimize() {\r\n        this.pop = this.ga.evolvePopulation(this.pop)\r\n        this.pathFittest = this.pop.getFittestPath()\r\n        if(this.pathFittest) {\r\n            const result = this.pathFittest.getDistance();\r\n            if (result < this.cost ){\r\n            //     console.log('iter optimization' , this.timer);\r\n            //     console.log(\"Final distance: \", result)\r\n            //     console.log(\"Solution:\")\r\n            //     console.log(this.pathFittest)\r\n                this.cost = result;\r\n            }\r\n            this.timer++\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPan: boolean) {\r\n        this.optimize();\r\n\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.strokeStyle = '#ff0000';\r\n        ctx.lineWidth  = 1;\r\n\r\n        if (isPan) {\r\n            for(let i = 0 ; i < this.placesAll.length; ++i) {\r\n                // const geoPos = this.agencySystem.nnaEngine.app.definition.app.projection.ToScreen(this.placesAll[i].vec.long, this.placesAll[i].vec.lat);\r\n                // this.placesAll[i].vec.x = geoPos[0];\r\n                // this.placesAll[i].vec.y = geoPos[1];\r\n\r\n                // ctx.beginPath();\r\n                // const place =this.placesAll[i];\r\n                // ctx.arc(place.vec.x, place.vec.y, 10, 0, Math.PI * 2);\r\n                // ctx.closePath();\r\n                // ctx.fill();\r\n            }\r\n            \r\n        }\r\n\r\n        if (this.pathFittest) {\r\n            for(let i = 0 ; i < this.pathFittest.nodes.length -1; i++) {\r\n                let p0 = this.pathFittest.nodes[i];\r\n                let p1 = this.pathFittest.nodes[i+1];\r\n                if (p0 && p1) {\r\n\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(p0.vec.x, p0.vec.y);\r\n                    ctx.lineTo(p1.vec.x, p1.vec.y);\r\n                    ctx.closePath();\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        for(let i = 0 ; i < this.placesAll.length; ++i) {\r\n            ctx.beginPath();\r\n            const place =this.placesAll[i];\r\n            ctx.arc(place.vec.x, place.vec.y, 10, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        // console.log('rnding...');\r\n\r\n    }\r\n}\r\n","import { Core } from '../Core';\r\nimport {GASystem } from './GASystem/GASystem';\r\nexport class AgencySystem {\r\n\r\n    nnaEngine: Core\r\n\r\n    gaSystem: GASystem;\r\n    constructor(nnaEngine: Core) {\r\n        this.nnaEngine = nnaEngine;\r\n\r\n        this.gaSystem = new GASystem(this);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.gaSystem.render(ctx, isPanning);\r\n    }\r\n    public mouseClick(x: number, y: number){\r\n        this.gaSystem.mouseClick(x, y);\r\n    } \r\n    public update() {\r\n        this.gaSystem.initByCPoint(undefined);\r\n    }\r\n\r\n}","import { GraphSystem } from '..';\r\nexport class Analysis {\r\n    gs: GraphSystem;\r\n    constructor(gs: GraphSystem) {\r\n        this.gs = gs;\r\n\r\n    }\r\n}","import { NVector3, NLine } from '../../../../lib';\nimport { Edge, Node } from '.'\nimport { Tree } from '../Tree/Tree';\nimport { GraphCore } from '..';\n\nexport class GraphData {\n    public nodes: Node[] = [];\n    public edges: Edge[] = [];\n    public minPt: NVector3 = new NVector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    public maxPt: NVector3 = new NVector3(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE);\n}\n\n\nexport class Graph {\n    public graphCore: GraphCore\n    public nodes: Node[] = [];\n    public edges: Edge[] = [];\n    public minPt: NVector3 = new NVector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    public maxPt: NVector3 = new NVector3(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE);\n\n\n    public nodeOrigin: Node;\n\n    public constructor(graphCore: GraphCore) {\n        this.graphCore = graphCore;\n    }\n    public initGraph(lns: NLine[]) {\n        this.nodes = [];\n        this.edges = [];\n        this.AddEdgeByLines(lns);\n        return true;\n    }\n    public AddEdgeByLines(lns: NLine[]) {\n        let nodes: Node[] = [];\n        for (let i = 0; i < lns.length; ++i) {\n            let p0: NVector3 = lns[i].p0;\n            let p1: NVector3 = lns[i].p1;\n\n            // bounding box\n            if (this.minPt.long > p0.long) { this.minPt.long = p0.long; }\n            if (this.minPt.lat > p0.lat) { this.minPt.lat = p0.lat; }\n            if (this.minPt.elevation > p0.elevation) { this.minPt.elevation = p0.elevation; }\n            if (this.maxPt.long < p0.long) { this.maxPt.long = p0.long; }\n            if (this.maxPt.lat < p0.lat) { this.maxPt.lat = p0.lat; }\n            if (this.maxPt.elevation < p0.elevation) { this.maxPt.elevation = p0.elevation; }\n\n            if (this.minPt.long > p1.long) { this.minPt.long = p1.long; }\n            if (this.minPt.lat > p1.lat) { this.minPt.lat = p1.lat; }\n            if (this.minPt.elevation > p1.elevation) { this.minPt.elevation = p1.elevation; }\n            if (this.maxPt.long < p1.long) { this.maxPt.long = p1.long; }\n            if (this.maxPt.lat < p1.lat) { this.maxPt.lat = p1.lat; }\n            if (this.maxPt.elevation < p1.elevation) { this.maxPt.elevation = p1.elevation; }\n\n            nodes.push(this.AddNode(p0));\n            nodes.push(this.AddNode(p1));\n        }\n\n        // let svec = this.graphCore.gs.nnaEngine.app.definition.app.projection.ToScreen(this.minPt.long, this.minPt.lat);\n        // this.minPt.x = svec[0];\n        // this.minPt.y = svec[1];\n        // svec = this.graphCore.gs.nnaEngine.app.definition.app.projection.ToScreen(this.maxPt.long, this.maxPt.lat);\n        // this.maxPt.x = svec[0];\n        // this.maxPt.y = svec[1];\n\n        for (let i = 0; i < nodes.length; i += 2) {\n            this.AddEdge(nodes[i], nodes[i + 1]);\n        }\n    }\n    public AddEdge(n1: Node, n2: Node): Edge | undefined {\n        if (n1 === n2) return undefined;\n\n        const testedEdge = this.FindEdge(n1, n2);\n        if (testedEdge !== undefined) {\n            return testedEdge;\n        }\n\n        let edge = new Edge(n1, n2);\n        edge.id = this.edges.length;\n        this.edges.push(edge);\n        return edge;\n    }\n    public AddNode(p: NVector3): Node {\n        for (let i = 0; i < this.nodes.length; ++i) {\n            if (p.distanceTo(this.nodes[i].point) < 0.1) {\n                return this.nodes[i];\n            }\n        }\n        let node = new Node(p);\n        node.id = this.nodes.length;\n        this.nodes.push(node);\n        return node;\n    }\n\n    // ..............................................................\n\n    public FindEdge(n0: Node, n1: Node): Edge | undefined {\n        for (let i = 0; i < this.edges.length; ++i) {\n            if ((this.edges[i].n0 === n0 && this.edges[i].n1 === n1) || (this.edges[i].n0 === n1 && this.edges[i].n1 === n0)) {\n                return this.edges[i];\n            }\n        }\n        return undefined;\n    }\n    /*\n    public Node FindClosestNode(Point3d p) {\n        if (nodes.Count === 0) return null;\n        let index = -1;\n        double disMin = double.MaxValue;\n        for (let i = 0; i < this.nodes.length; ++i) {\n            double d = this.nodes[i].point.distanceTo(p);\n            if (d < disMin) {\n                index = i;\n                disMin = d;\n            }\n        }\n        return this.nodes[index];\n    }\n    */\n    public FindClosestNode(p: NVector3): Node | undefined {\n        if (this.nodes.length === 0) return undefined;\n        let index = -1;\n        let disMin = Number.MAX_VALUE;\n        for (let i = 0; i < this.nodes.length; ++i) {\n            let d = this.nodes[i].point.distanceTo(p);\n            if (d < disMin) {\n                index = i;\n                disMin = d;\n            }\n        }\n        return this.nodes[index];\n    }\n    public updatePropagation(originTree: Tree[], Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) {\n        for (let i = 0; i < this.nodes.length; ++i) {\n            this.nodes[i].networkDistance = -1;\n            this.nodes[i].euclideanDistance = -1;\n        }\n\n        for (let i = 0; i < originTree.length; ++i) {\n            let n: Node = this.nodes[originTree[i].nodeOrigin.id];\n            n.networkDistance = 0.0;\n            n.euclideanDistance = 0.0;\n            this.updatePropagationByNode(n, Optimizer, Beta);\n        }\n\n    }\n    public updatePropagationByNodes(origins: Node [], Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) { //, PixelMap pMap, transitionCostDelegate cost) {\n        // this.Optimizer = Optimizer;\n \n        // this.nodeOrigin = origin;\n\n    //     console.log(origins);\n \n        for(let i = 0; i < this.nodes.length; ++i) { this.nodes[i].reset(); }\n \n        for(let i = 0 ; i < origins.length; ++i) {\n            let origin = origins[i];\n            origin.networkDistance = 0.0;\n            origin.euclideanDistance = 0.0;\n            let queue: Node[] = [];\n            queue.push(origins[i]);\n            \n            for (let i = 0; i < 1000000; ++i) {\n                if (queue.length === 0) { break; }\n                let current: Node = queue[0];\n                let dis = current.point.distanceToGeo(origin.point);\n                if (current.euclideanDistance === -1 || dis < current.euclideanDistance) {\n                    current.euclideanDistance = current.point.distanceToGeo(origin.point);\n                }\n    \n                queue.shift();\n                for (let j = 0; j < current.nodes.length; ++j) {\n                    let np: Node = current.nodes[j];\n                    let newcost = Optimizer(current, np, Beta);\n                    let result = (current.networkDistance + newcost);\n                    let newtemp = result; /// this.UNIT_VALUE; // result < 0.001 ? result  : result / this.UNIT_VALUE;\n                    if (np.networkDistance === -1.0 || newtemp < np.networkDistance) {\n                        np.networkDistance = newtemp;\n                        queue.push(np);\n                    }\n                }\n            }\n        }\n     }\n    public updatePropagationByNode(origin: Node, Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) { //, PixelMap pMap, transitionCostDelegate cost) {\n       // this.Optimizer = Optimizer;\n\n       this.nodeOrigin = origin;\n\n       for(let i = 0; i < this.nodes.length; ++i) { this.nodes[i].reset(); }\n\n        let queue: Node[] = [];\n        queue.push(origin);\n        for (let i = 0; i < 1000000; ++i) {\n            if (queue.length === 0) { break; }\n            let current: Node = queue[0];\n            let dis = current.point.distanceToGeo(origin.point);\n            if (current.euclideanDistance === -1 || dis < current.euclideanDistance) {\n                current.euclideanDistance = current.point.distanceToGeo(origin.point);\n            }\n\n            queue.shift();\n            for (let j = 0; j < current.nodes.length; ++j) {\n                let np: Node = current.nodes[j];\n                let newcost = Optimizer(current, np, Beta);\n                let result = (current.networkDistance + newcost);\n                let newtemp = result; /// this.UNIT_VALUE; // result < 0.001 ? result  : result / this.UNIT_VALUE;\n                if (np.networkDistance === -1.0 || newtemp < np.networkDistance) {\n                    np.networkDistance = newtemp;\n                    queue.push(np);\n                }\n            }\n        }\n    }\n    public updateBackpropagation(vs: NVector3[]): Node[][] {\n        \n\n        let paths: Node[][] = [];\n        let i = 0; let j = 0; let k = 0;\n\n        for (i = 0; i < vs.length; ++i) {\n            let destination: Node = this.FindClosestNode(vs[i]) as Node;\n            // this.nodeDestinations[i] = destination;\n            let path: Node[] = [];\n            if (destination.networkDistance !== -1.0) {\n                path.push(this.nodes[destination.id]);\n                let current: Node = destination;\n                for (j = 0; j < 100000; ++j) {\n                    let smallest: Node = current;\n                    smallest.countVisit++;\n                    for (k = 0; k < current.nodes.length; ++k) {\n                        let np: Node = current.nodes[k];\n                        if (np.networkDistance < smallest.networkDistance) {\n                            smallest = np;\n                        }\n                    }\n                    if (smallest === current) {\n                        path.push(this.nodeOrigin); // start node\n                        // path[0].euclideanDistance = path[0].point.distanceTo(this.nodeOrigin.point);\n                        paths.push(path);\n                        break;\n                    }\n                    current = smallest;\n                    path.push(this.nodes[current.id]);\n\n                    // if (current === this.destination) { break; }\n                }\n            }\n\n        }\n        // this.paths = paths;\n        return paths;\n    }\n\n}","import { Node } from '.'\r\nimport { NVector3, CONNECTIVITY } from '../../../../lib';\r\nexport class Edge {\r\n\r\n    public id: number = -1;\r\n    public n0: Node;\r\n    public n1: Node;\r\n    public mp: NVector3;\r\n    public CONNECTIVITY: CONNECTIVITY;\r\n\r\n    constructor(n0: Node, n1: Node){\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n\r\n        this.n0.edges.push(this);\r\n        this.n1.edges.push(this);\r\n\r\n        n0.nodes.push(n1);\r\n        n1.nodes.push(n0);\r\n\r\n        this.mp = this.GetMidPoint();\r\n        this.CONNECTIVITY = CONNECTIVITY.CONNECTED;\r\n    }\r\n    public GetMidPoint(): NVector3 {\r\n        return NVector3.getMidVec(this.n0.point, this.n1.point);\r\n    }\r\n    public updateScreenPos( toScreen: (x: number, y: number) => number[] ) {\r\n        this.n0.updateScreenPos(toScreen);\r\n        this.n1.updateScreenPos(toScreen);\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { Edge } from '.'\r\n\r\nexport class Node {\r\n    public id: number = -1;\r\n    public point: NVector3;\r\n    public edges: Edge[] = [];\r\n    public nodes: Node[] = [];\r\n\r\n    public networkDistance: number = -1;\r\n    public euclideanDistance: number = 0;\r\n\r\n    public countVisit: number = 0;\r\n\r\n    public countOrigin: number = 1;\r\n    public countDestination: number = 1;\r\n\r\n    public countVisitTemp: number = 0;\r\n\r\n    constructor(vec: NVector3) {\r\n        this.point = new NVector3(vec.x, vec.y, vec.z);\r\n        this.point.lat = vec.lat;\r\n        this.point.long = vec.long;\r\n    }\r\n    public reset(): void{\r\n        this.networkDistance = -1;\r\n        this.euclideanDistance = 0.0;\r\n        this.countVisit = 0;\r\n        this.countVisitTemp = 0;\r\n    }\r\n    public deepCopy(): Node {\r\n        let n = new Node(this.point);\r\n        n.id = this.id;\r\n        return n;\r\n    }\r\n    public updateScreenPos( toScreen: (x: number, y: number) => number[] ) {\r\n        const sv = toScreen(this.point.long, this.point.lat);\r\n        this.point.x = sv[0];\r\n        this.point.y = sv[1];\r\n    }\r\n}","import { GraphCore } from '..';\r\nimport { Node, Edge } from '../Graph';\r\nimport { NVector3, NPolyline } from '../../../../lib';\r\nexport class Tree {\r\n    public gc: GraphCore;\r\n\r\n    public Optimizer: (current: Node, np: Node, Beta: number) => number;\r\n    // public transitionCostDelegate Optimizer;\r\n    // public delegate double transitionCostDelegate(Node n0, Node n1, double Beta);\r\n\r\n    public edges: Edge[] = [];\r\n    public nodes: Node[] = [];\r\n\r\n    public nodeDestinations: Node[] = [];\r\n    public nodeOrigin: Node;\r\n    public pointOrigin: NVector3;\r\n\r\n    public polylines: NPolyline[] = [];\r\n\r\n    public paths: Node[][] = [];\r\n\r\n    constructor(gc: GraphCore, p: NVector3) {\r\n        this.gc = gc;\r\n        this.duplicateGraph();\r\n        this.updateOriginByPt(p);\r\n    }\r\n    public updateOriginByPt(p: NVector3) {\r\n        let n = this.gc.graph.FindClosestNode(p);\r\n        if(n){\r\n            this.nodeOrigin = this.nodes[n.id];\r\n            this.pointOrigin = new NVector3(p.x, p.y, p.z);\r\n        }\r\n\r\n    }\r\n    public updatePropagation(Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) { //, PixelMap pMap, transitionCostDelegate cost) {\r\n        this.Optimizer = Optimizer;\r\n        \r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].networkDistance = -1;\r\n        }\r\n\r\n        let queue: Node[] = [];\r\n        this.nodeOrigin.networkDistance = 0;\r\n        queue.push(this.nodeOrigin);\r\n        for (let i = 0; i < 1000000; ++i) {\r\n            if (queue.length === 0) { break; }\r\n            let current: Node = queue[0];\r\n            current.euclideanDistance = current.point.distanceTo(this.nodeOrigin.point);\r\n            queue.shift();\r\n            for (let j = 0; j < current.nodes.length; ++j) {\r\n                let np: Node = current.nodes[j];\r\n                let newcost = Optimizer(current, np, Beta);\r\n                let result = (current.networkDistance + newcost);\r\n                let newtemp = result; /// this.UNIT_VALUE; // result < 0.001 ? result  : result / this.UNIT_VALUE;\r\n                if (np.networkDistance === -1.0 || newtemp < np.networkDistance) {\r\n                    np.networkDistance = newtemp;\r\n                    queue.push(np);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public updateBackpropagation(desID: number[]): Node[][] {\r\n        this.nodeDestinations = Node[desID.length];\r\n\r\n        let paths: Node[][] = [];\r\n        let i = 0; let j = 0; let k = 0;\r\n        for (i = 0; i < desID.length; ++i) {\r\n            let destination: Node = this.nodes[desID[i]];\r\n            this.nodeDestinations[i] = destination;\r\n            let path: Node[] = [];\r\n            if (destination.networkDistance !== -1.0) {\r\n                path.push(this.nodes[destination.id]);\r\n                let current: Node = destination;\r\n                for (j = 0; j < 100000; ++j) {\r\n                    let smallest: Node = current;\r\n                    smallest.countVisit++;\r\n                    for (k = 0; k < current.nodes.length; ++k) {\r\n                        let np: Node = current.nodes[k];\r\n                        if (np.networkDistance < smallest.networkDistance) {\r\n                            smallest = np;\r\n                        }\r\n                    }\r\n                    if (smallest === current) {\r\n                        path.push(this.nodeOrigin); // start node\r\n                        path[0].euclideanDistance = path[0].point.distanceTo(this.nodeOrigin.point);\r\n                        paths.push(path);\r\n\r\n                        break;\r\n                    }\r\n                    current = smallest;\r\n                    path.push(this.nodes[current.id]);\r\n\r\n                    // if (current === this.destination) { break; }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.paths = paths;\r\n        return paths;\r\n    }\r\n    public GetPathsPolylines(min: number, max: number): NPolyline[] {\r\n        let pls: NPolyline[] = [];\r\n        for (let i = 0; i < this.paths.length; ++i) {\r\n            let pl: NPolyline = new NPolyline();\r\n            for (let j = 0; j < this.paths[i].length; ++j) {\r\n                pl.push(this.paths[i][j].point);\r\n            }\r\n            if (min < this.paths[i][0].networkDistance && this.paths[i][0].networkDistance < max) {\r\n                pls.push(pl);\r\n            }\r\n        }\r\n        this.polylines = pls;\r\n        return this.polylines;\r\n    }\r\n\r\n    public duplicateGraph(): void {\r\n        let i = 0;\r\n        let id0 = -1;\r\n        let id1 = -1;\r\n\r\n        this.nodes = []; // new Node[this.gc.graph.nodes.Count];\r\n        this.edges = []; // new Edge[this.gc.graph.edges.Count];\r\n\r\n        for (i = 0; i < this.gc.graph.nodes.length; ++i) {\r\n            this.nodes.push(this.gc.graph.nodes[i].deepCopy());\r\n        }\r\n        for (i = 0; i < this.gc.graph.edges.length; ++i) {\r\n            id0 = this.gc.graph.edges[i].n0.id;\r\n            id1 = this.gc.graph.edges[i].n1.id;\r\n            let e: Edge = new Edge(this.nodes[id0], this.nodes[id1]);\r\n            e.id = this.gc.graph.edges[i].id;\r\n            this.edges.push(e); ;\r\n        }\r\n    }\r\n}","import { meterFromGeoGPSPos } from '../../../lib';\r\n\r\nimport { Node } from '../GraphCore/Graph/Node';\r\n\r\nexport const costFnDistanceGeo = (p0: Node, p1: Node, beta: number = 0.0002) => {\r\n    return meterFromGeoGPSPos(p1.point, p0.point);\r\n}\r\nexport const costFnDistance = (p0: Node, p1: Node, beta: number = 0.0002) => {\r\n    return p1.point.distanceTo(p0.point);\r\n}\r\nexport const decayNegative = (d: number, beta: number) => {\r\n    let result = getDecay(d, beta);\r\n    if (result > 0.999) {\r\n        result = 0.999;\r\n    }\r\n    return result;\r\n}\r\nexport const decayPositive = (d: number, beta: number) => {\r\n    let result = getDecay(d, beta);\r\n    result = 1 - result;\r\n    if (result > 0.999) {\r\n        result = 0.999;\r\n    }\r\n    return result;\r\n}\r\nexport const getDecay = (cost: number, b: number = 1.0) => { // 0.002 // 0.999\r\n    return Math.pow(1 - b, cost);\r\n}\r\nexport const getGravityFalloff = (x: number, strength: number, Beta: number) => {\r\n    return strength * Math.exp(-Beta * x * x);\r\n}","import { GraphSystem } from '..';\r\nimport { NVector3, NLine } from '../../../lib'\r\nimport { Graph } from './Graph';\r\nimport { Tree } from './Tree/Tree';\r\n\r\nimport { costFnDistanceGeo } from '../GraphUtility/GraphUtility';\r\n\r\nexport class GraphCore {\r\n\r\n\r\n    public gs: GraphSystem;\r\n    public trees: Tree[] = [];\r\n   // public List<int> idOrigin;\r\n    public destinations: NVector3[] = [];\r\n    public idDestination: number[] = [];\r\n    public graph: Graph;\r\n    constructor(gs: GraphSystem) {\r\n        this.gs = gs;\r\n        this.trees = [];\r\n        this.destinations = [];\r\n        this.idDestination = [];\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.graph = new Graph(this);\r\n        this.graph.initGraph(lns);\r\n    }\r\n    public setUnit(unit: string) {\r\n        \r\n    }\r\n    public computePath(origins: NVector3[], destinations: NVector3[], BETA: number = 0.002) {\r\n        this.trees = [];\r\n        let oWeight: number[] = [];\r\n        let dWeight: number[] = [];\r\n        this.computePathWeighted(origins, oWeight, destinations, dWeight, BETA);\r\n    }\r\n    public computePathWeighted(origins: NVector3[], oWeight: number[], destinations: NVector3[], dWeight: number[], BETA: number = 0.002) {\r\n        while (origins.length < oWeight.length) { oWeight.push(1); }\r\n        while (destinations.length < dWeight.length) { dWeight.push(1); }\r\n\r\n        this.updatePropagation(origins, oWeight);\r\n        this.updateBackpropagation(destinations, dWeight);\r\n        this.mergeAgents();\r\n    }\r\n    public updatePropagation(origins: NVector3[], oWeight: number[]) {\r\n\r\n        for (let i = 0; i < origins.length; ++i) {\r\n            let p = origins[i];\r\n\r\n            if (i === this.trees.length -1) {\r\n                if (this.trees[i].pointOrigin.distanceToGeo(p) < 0.1) {\r\n                    this.trees[i].updatePropagation(costFnDistanceGeo, 0.002);\r\n                }\r\n                else {\r\n                    this.trees[i].updateOriginByPt(p);\r\n                    this.trees[i].updatePropagation(costFnDistanceGeo, 0.002);\r\n                }\r\n            }\r\n            else {\r\n                let tree: Tree = new Tree(this, p);\r\n                tree.updatePropagation(costFnDistanceGeo, 0.002);\r\n                this.trees.push(tree);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    public updateBackpropagation(destination: NVector3[], dWeight: number[], BETA: number = 0.002) {\r\n\r\n        for (let i = 0; i < destination.length; ++i) {\r\n            if (i === this.destinations.length - 1) {\r\n                if (destination[i].distanceToGeo(this.destinations[i]) < 0.1) {\r\n                    this.idDestination.push(this.idDestination[i]);\r\n                }\r\n                else {\r\n                    let n = this.graph.FindClosestNode(destination[i]);\r\n                    if (n){\r\n                        this.idDestination[i] = n.id;\r\n                        this.destinations[i] = destination[i];\r\n                    }\r\n \r\n                }\r\n            }\r\n            else {\r\n                let n = this.graph.FindClosestNode(destination[i]);\r\n                if (n){\r\n                    this.idDestination.push(n.id);\r\n                    this.destinations.push(destination[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.trees.length; ++i) {\r\n            let tree = this.trees[i];\r\n            tree.updateBackpropagation(this.idDestination);\r\n        }\r\n    }\r\n    public mergeAgents() {\r\n        this.graph.updatePropagation(this.trees, costFnDistanceGeo, 0.002);\r\n\r\n        for (let i = 0; i < this.trees.length; ++i) {\r\n            for (let j = 0; j < this.trees[i].nodes.length; ++j) {\r\n                this.graph.nodes[j].countVisit += this.trees[i].nodes[j].countVisit;\r\n                this.graph.nodes[j].countOrigin += this.trees[i].nodes[j].countOrigin;\r\n                this.graph.nodes[j].countDestination += this.trees[i].nodes[j].countDestination;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","\r\nimport { getFalseColor, COLORBLENDING, NVector3, distanceToXY } from '../../../lib';\r\n\r\nimport { GraphSystem } from '..';\r\n\r\nimport { Node } from '../GraphCore/Graph/Node';\r\nimport { BoidsBehaviors } from '../../AgencySystem/BoidsBehaviors/BoidsBehaviors';\r\n\r\n\r\nclass Properties {\r\n    lineWidth = 0.5;\r\n    strokeStyle = 'rgba(0, 255, 0, 0.5)';\r\n}\r\n\r\nexport class RendererGraph {\r\n    gs: GraphSystem;\r\n    \r\n    BoidsBehaviors: BoidsBehaviors | undefined = undefined;\r\n\r\n    start: NVector3;\r\n    end: NVector3;\r\n\r\n    path: Node[][] = [];\r\n    selPath: Node[] | undefined = undefined;\r\n\r\n    time: number = 0.0;\r\n\r\n    properties: Properties = new Properties();\r\n\r\n    constructor(gs: GraphSystem) {\r\n        this.gs = gs;\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        \r\n        ctx.lineWidth = this.properties.lineWidth;\r\n        ctx.strokeStyle = this.properties.strokeStyle;\r\n\r\n        // console.log(this.gs.graphCore.graph.edges.length);\r\n        if(this.gs.graphCore.graph?.edges){\r\n            for (let i = 0; i < this.gs.graphCore.graph.edges.length; ++i) {\r\n                const edge = this.gs.graphCore.graph.edges[i];\r\n\r\n                if(isPanning) {\r\n                    edge.updateScreenPos(this.gs.nnaEngine.app.toScreen);\r\n            \r\n                } \r\n                // else {\r\n                    // console.log(edge.n0.networkDistance);\r\n                    ctx.beginPath();\r\n                    const cols = getFalseColor(edge.n0.networkDistance * 0.001);\r\n                    ctx.strokeStyle = `rgba(${cols[0]}, ${cols[1]}, ${cols[2]}, 1.0) `\r\n                    ctx.moveTo(edge.n0.point.x, edge.n0.point.y);\r\n                    ctx.lineTo(edge.n1.point.x, edge.n1.point.y);\r\n                    ctx.stroke();\r\n\r\n                    const dis = edge.n0.point.distanceToGeo(edge.n1.point); // * 0.000621371;\r\n\r\n                    if( !isPanning && this.gs.nnaEngine.app.controller.inspection){\r\n                        ctx.font = \"10px Arial\";\r\n                        ctx.fillStyle = '#000000';\r\n                        ctx.fillText( `${dis.toFixed(2)}`, edge.n0.point.x + (edge.n1.point.x - edge.n0.point.x) * 0.5, edge.n0.point.y + (edge.n1.point.y - edge.n0.point.y) * 0.5);\r\n                        // ctx.fillText( `${Math.round(edge.n0.networkDistance)}`, edge.n0.point.x + (edge.n1.point.x - edge.n0.point.x) * 0.5, edge.n0.point.y + (edge.n1.point.y - edge.n0.point.y) * 0.5  )\r\n                        // ctx.fillText(`${Math.round(edge.n0.networkDistance)}`, edge.n1.point.x, edge.n1.point.y  )\r\n                    }\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = \"#ffffff\";\r\n        // console.log(this.start.x, this.start.y);\r\n        if(this.start) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.start.x, this.start.y, 5, 0, Math.PI * 2.0);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        if(this.end) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.end.x, this.end.y, 15, 0, Math.PI * 2.0);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        let selPathId = -1;\r\n        let dis = Number.MAX_SAFE_INTEGER;\r\n        const mx = this.gs.nnaEngine.app.controller.m.x;\r\n        const my = this.gs.nnaEngine.app.controller.m.y;\r\n\r\n        ctx.globalCompositeOperation = COLORBLENDING.COLOR_DODGE;\r\n        for(let j = 0 ; j < this.path.length; ++j) {\r\n            ctx.strokeStyle = 'rgba(255, 255, 10, 1)'\r\n            ctx.lineWidth = 2.4;\r\n            ctx.setLineDash([5, 4]);\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.path[j][0].point.x, this.path[j][0].point.y);\r\n            let theDis = distanceToXY(this.path[j][0].point.x, this.path[j][0].point.y, mx, my)\r\n            if(theDis < dis) { dis = theDis; selPathId = j; }\r\n            for(let i = 1 ; i < this.path[j].length; ++i) {\r\n\r\n                if(this.path[j][i]){\r\n                    ctx.lineTo(this.path[j][i].point.x, this.path[j][i].point.y);\r\n                    theDis = distanceToXY(this.path[j][i].point.x, this.path[j][i].point.y, mx, my)\r\n                    if(theDis < dis) { dis = theDis; selPathId = j; }\r\n                }\r\n            }\r\n\r\n            \r\n            // ctx.closePath();\r\n            ctx.stroke();\r\n            ctx.lineDashOffset = this.time * -5;\r\n            ctx.setLineDash([]);\r\n        }\r\n\r\n        if(this.path.length > 0 && dis < 10) {\r\n            this.selPath = this.path[selPathId];\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.selPath[0].point.x, this.selPath[0].point.y);\r\n            for(let i = 1 ; i < this.selPath.length; ++i) {\r\n                if(this.selPath[i]){\r\n                    ctx.lineTo(this.selPath[i].point.x, this.selPath[i].point.y);\r\n                }\r\n            }\r\n            ctx.lineWidth = 4.4;\r\n            ctx.stroke();\r\n            ctx.lineDashOffset = this.time * -5;\r\n            ctx.setLineDash([]);\r\n        } else {\r\n            this.selPath = undefined;\r\n        }\r\n\r\n        ctx.globalCompositeOperation = COLORBLENDING.SOURCE_OVER;\r\n        // console.log(this.gs.graphCore.trees)\r\n\r\n        this.time+=0.1;\r\n\r\n\r\n        if(this.BoidsBehaviors) {\r\n            this.BoidsBehaviors.Update();\r\n            this.BoidsBehaviors.Render(ctx);\r\n        }\r\n    }\r\n    public getPath(x: number, y: number) {\r\n        if(this.selPath) {\r\n        //     console.log('detecting...', this.selPath);\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../lib';\nexport class BoidsPath {\n    r: number = 5;\n    nodes: NVector3[];\n    constructor(r: number) {\n        this.nodes = [];\n        this.r = r;\n    }\n    public AddNode(node: NVector3): void {\n        this.nodes.push(node);\n    }\n    public GetNodes(): NVector3[] {\n        let p: NVector3[] = [];\n        for (let i = 0; i < this.nodes.length; ++i) {\n            p.push(new NVector3(this.nodes[i].x, this.nodes[i].y, 0));\n            // p.push(this.nodes[i]);\n        }\n        return p;\n    }\n}","import { NVector3, remap } from '../../../lib';\nimport { BoidsPath } from './BoidsPath';\nexport class Boid {\n    public static MAX_VELOCITY: number = 5;\n    public static MAX_FORCE: number = 3;\n\n    // Collision avoidance\n    public static MAX_AVOID_AHEAD: number = 50;\n    public static AVOID_FORCE: number = 600;\n\n    // Queuing\n    public static MAX_QUEUE_AHEAD: number = 30;\n    public static MAX_QUEUE_RADIUS: number = 30;\n\n    // Separation\n    public static MAX_SEPARATION: number = 2.0;\n    public static SEPARATION_RADIUS: number = 30;\n\n    public MAX_FORCE: number;\n    public position: NVector3;\n    public velocity: NVector3;\n    public maxVelocity: number;\n    public desired: NVector3;\n    public steering: NVector3;\n    public mass: number;\n    public boidsPath: BoidsPath;\n    public currentNode: number;\n    public pathDir: number;\n    public rotation: number;\n    public vec: NVector3;\n    public preVec: NVector3[];\n\n    public avoidance: NVector3;\n    public ahead: NVector3;\n    public alpha: number;\n\n    isOriented: boolean;\n    activeBase64ID: string = ' ';\n    angle: number;\n    constructor(posX: number, posY: number, totalMass: number) {\n        // Boid.MAX_FORCE = Boid.MAX_VELOCITY * 3;\n        Boid.MAX_FORCE = Boid.MAX_VELOCITY; // * Math.random() * 2;\n        this.MAX_FORCE = Boid.MAX_FORCE;\n        this.position = new NVector3(posX, posY);\n        this.velocity = new NVector3(-1, -2);\n        this.desired = new NVector3(0, 0);\n        this.steering = new NVector3(0, 0);\n        this.vec = new NVector3(0, 0);\n        this.rotation = 0;\n        this.mass = totalMass;\n        // this.path = undefined;\n        this.currentNode = 0;\n        this.pathDir = 1;\n        this.angle = 0;\n        this.isOriented = false;\n\n        this.avoidance = new NVector3(0, 0);\n\n        this.maxVelocity = this.MAX_FORCE * (0.8 + Math.random() * 0.6);\n\n        this.Truncate(this.velocity, this.maxVelocity);\n        this.preVec = [];\n        // x = position.x;\n        // y = position.y;\n\n        // graphics.lineStyle(2, 0xffaabb);\n        // graphics.beginFill(0xFF0000);\n        // graphics.moveTo(0, 0);\n        // graphics.lineTo(0, -20);\n        // graphics.lineTo(10, 20);\n        // graphics.lineTo(-10, 20);\n        // graphics.lineTo(0, -20);\n        // graphics.endFill();\n\n        // graphics.moveTo(0, 0);\n        // this.activeBase64ID = '';\n    }\n    // GetNeighborAhead(): Boid {\n    // let ret: Boid | undefined = undefined;\n    // let qa: NVector3 = this.velocity.Clone();\n\n    // qa.Normalize();\n    // qa.Scale(Boid.MAX_QUEUE_AHEAD);\n\n    // this.ahead = this.position.Clone().Add(qa);\n\n    // for (let i = 0; i < Game.instance.boids.length; i++) {\n    //     let neighbour: Boid = Game.instance.boids[i];\n    //     let d: Number = this.Distance(ahead, neighbour.position);\n\n    //     if (neighbour != this && d <= Boid.MAX_QUEUE_RADIUS) {\n    //         ret = neighbour;\n    //         break;\n    //     }\n    // }\n\n    // return ret;\n    // }\n\n    // Queue(): NVector3 {\n    //     let v: NVector3 = this.velocity.Clone();\n    //     let brake: NVector3 = new NVector3(0, 0);\n    //     let neighbour: Boid = this.GetNeighborAhead();\n\n    //     if (neighbour != null) {\n    //         brake.x = -this.steering.x * 0.8;\n    //         brake.y = -this.steering.y * 0.8;\n\n    //         v.Scale(-1);\n    //         brake = brake.Add(v);\n    //         brake = brake.Add(this.Separation());\n\n    //         if (this.Distance(this.position, neighbour.position) <= Boid.MAX_QUEUE_RADIUS) {\n    //             this.velocity.Scale(0.3);\n    //         }\n    //     }\n\n    //     // Used to render the brake force vector on the screen\n    //     braking = brake;\n\n    //     return brake;\n    // }\n\n    // // Link: http://gamedev.tutsplus.com/tutorials/implementation/the-three-simple-rules-of-flocking-behaviors-alignment-cohesion-and-separation/\n    // separation(): NVector3 {\n    //     let force: NVector3 = new NVector3();\n    //     let neighborCount: int = 0;\n\n    //     for (let i: int = 0; i < Game.instance.boids.length; i++) {\n    //         let b: Boid = Game.instance.boids[i];\n\n    //         if (b != this && distance(b, this) <= SEPARATION_RADIUS) {\n    //             force.x += b.position.x - this.position.x;\n    //             force.y += b.position.y - this.position.y;\n    //             neighborCount++;\n    //         }\n    //     }\n\n    //     if (neighborCount != 0) {\n    //         force.x /= neighborCount;\n    //         force.y /= neighborCount;\n\n    //         force.scaleBy(-1);\n    //     }\n\n    //     force.normalize();\n    //     force.scaleBy(MAX_SEPARATION);\n\n    //     return force;\n    // }\n    public CollisionAvoidance(): NVector3 {\n        let tv: NVector3 = this.velocity.Clone();\n        tv.normalize();\n        tv.scale(Boid.MAX_AVOID_AHEAD * this.velocity.Length() / this.maxVelocity);\n\n        this.ahead = this.position.Clone().Add(tv);\n\n        let mostThreatening = undefined; // Obstacle\n\n        // for (let i = 0; i < Game.instance.obstacles.length; i++) {\n        //     // let obstacle: Obstacle = Game.instance.obstacles[i];\n        //     // let collision: Boolean = obstacle is Circle ?lineIntersecsCircle(this.position, this.ahead, obstacle as Circle) : lineIntersecsRectangle(this.position, this.ahead, obstacle as Rectangle);\n\n        //     if (collision && (mostThreatening == null || this.Distance(this.position, obstacle) < this.Distance(this.position, mostThreatening))) {\n        //         mostThreatening = obstacle;\n        //     }\n        // }\n\n        if (mostThreatening !== undefined) {\n            this.alpha = 0.4; // make the boid a little bit transparent to indicate it is colliding\n\n            // this.avoidance.x = this.ahead.x - mostThreatening.center.x;\n            // this.avoidance.y = this.ahead.y - mostThreatening.center.y;\n\n            this.avoidance.normalize();\n            this.avoidance.scale(Boid.AVOID_FORCE);\n        } else {\n            this.alpha = 1; // make the boid opaque to indicate there is no collision.\n            this.avoidance.scale(0); // nullify the this.avoidance force\n        }\n\n        return this.avoidance;\n    }\n    public Distance(a: NVector3, b: NVector3): number {\n        return Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\n    }\n    public Truncate(v: NVector3, max: number): void {\n        let i: number = max / v.Length();\n        i = i < 1.0 ? i : 1.0;\n        v.scale(i);\n    }\n    public GetAngle(vector: NVector3): number {\n        return Math.atan2(vector.y, vector.x);\n    }\n    public Update(): void {\n        // steering = Seek(Flock.mouse);\n        this.steering = this.PathFollowing();\n\n        if (true) {\n            // let width = 500\n            // let doorway: NVector3 = new NVector3(width / 2, -100);\n\n            // steering = seek(doorway);\n            this.steering = this.steering.Add(this.CollisionAvoidance());\n            // this.steering = this.steering.Add(this.Queue());\n        }\n\n        this.Truncate(this.steering, this.MAX_FORCE);\n        this.steering.scale(1 / this.mass);\n\n        this.velocity = this.velocity.Add(this.steering);\n        this.Truncate(this.velocity, this.maxVelocity);\n\n        this.position = this.position.Add(this.velocity);\n\n        if (this.isOriented) {\n            let v = new NVector3(this.velocity.x, this.velocity.y);\n            // let v = new NVector3(this.velocity.x - this.vec.x, this.velocity.y - this.vec.y).Normalize();\n            this.rotation = v.GetAngle();\n        }\n\n        this.vec = new NVector3(this.position.x, this.position.y);\n        this.AddVecHistory();\n    }\n    public AddVecHistory() {\n        this.preVec.push(new NVector3(this.vec.x, this.vec.y));\n        if (this.preVec.length > 20) { this.preVec.shift(); }\n    }\n    public Render(ctx: CanvasRenderingContext2D) {\n        if (true) {\n            // this.DrawForces(ctx);\n            this.DrawTail(ctx);\n        }\n\n        if (this.activeBase64ID !== ' ') {\n            ctx.globalCompositeOperation = 'source-over';\n            let img = new Image();\n            img.src = this.activeBase64ID;\n            ctx.save();\n            ctx.globalAlpha = 0.85;\n            ctx.translate(this.vec.x, this.vec.y);\n            ctx.rotate(this.rotation);\n            ctx.drawImage(img, -img.width / 2, -img.width / 2);\n            ctx.restore();\n            ctx.globalCompositeOperation = 'lighter';\n        } else {\n            ctx.beginPath();\n            ctx.fillStyle = 'rgba(0,255,0,0.7)';\n            ctx.arc(this.vec.x, this.vec.y, 5, 0, 3.14 * 2);\n        }\n        ctx.closePath();\n        ctx.fill();\n        // this.DrawShape(ctx);\n\n    }\n    DrawTail(ctx: CanvasRenderingContext2D) {\n        let i = this.preVec.length;\n        while (i--) {\n            ctx.beginPath();\n            ctx.fillStyle = `rgba(0,255,0,${remap(i, 0.0, this.preVec.length, 0.01, 0.175)})`;\n            ctx.arc(this.preVec[i].x, this.preVec[i].y, remap(i, 0.0, this.preVec.length, 0.1, 10), 0, 3.14 * 2);\n            ctx.closePath();\n            ctx.fill();\n        }\n    }\n    public DrawShape(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = '#FF0000';\n\n        ctx.lineWidth = 0.1;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, -20);\n        ctx.lineTo(10, 20);\n        ctx.lineTo(-10, 20);\n        ctx.lineTo(0, -20);\n        ctx.closePath();\n\n        ctx.moveTo(0, 0);\n    }\n    public DrawForces(ctx: CanvasRenderingContext2D): void {\n        let velocity: NVector3 = this.velocity.Clone();\n        let steering: NVector3 = this.steering.Clone();\n        let desired: NVector3 = this.desired.Clone();\n\n        velocity.normalize();\n        steering.normalize();\n        desired.normalize();\n\n        // Force vectors\n        // if (!BoidsBehaviors.showForces) {\n        this.DrawForceVector(ctx, velocity, '#00FF00');\n        this.DrawForceVector(ctx, desired, '#0000FF');\n        // }\n    }\n    public DrawForceVector(ctx: CanvasRenderingContext2D, force: NVector3, color: string, scale: number = 100): void {\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(this.vec.x, this.vec.y);\n        ctx.lineTo(this.vec.x + force.x * scale, this.vec.y + force.y * scale);\n        ctx.closePath();\n        ctx.stroke();\n    }\n    private Seek(target: NVector3): NVector3 {\n        let force: NVector3;\n\n        this.desired = target.Sub(this.position);\n        this.desired.normalize();\n        this.desired.scale(this.maxVelocity);\n\n        force = this.desired.Sub(this.velocity);\n\n        return force;\n    }\n    private PathFollowing(): NVector3 {\n        let target: NVector3 | undefined = undefined;\n\n        let nodes: NVector3[] = this.boidsPath.GetNodes();\n\n        target = nodes[this.currentNode];\n\n        if (this.Distance(this.position, target) <= this.boidsPath.r) {\n            this.currentNode += this.pathDir;\n\n            if (this.currentNode >= nodes.length || this.currentNode < 0) {\n                this.pathDir *= -1;\n                this.currentNode += this.pathDir;\n            }\n        }\n        return target !== undefined ? this.Seek(target) : new NVector3(0, 0, 0);\n    }\n}","import { NVector3, getRandomArbitrary } from '../../../lib';\nimport { BoidsPath } from './BoidsPath';\nimport { Boid } from './Boid';\n\nimport { Node } from '../../GraphSystem/GraphCore/Graph/Node';\n\n// import { AppDrawing } from '../../AppDrawing/AppDrawing';\n\n// http://www.red3d.com/cwr/steer/\n\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-path-following--Flockdev-8769\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-leader-following--Flockdev-10810\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-queue--Flockdev-14365\n\n// https://gamedevelopment.tutsplus.com/series/understanding-steering-behaviors--gamedev-12732\nexport class BoidsBehaviors {\n    public static mouse: NVector3 = new NVector3(100, 100, 0);\n    public static width: number = 400;\n    public static height: number = 400;\n    public static showForces: boolean = false;\n    public static instance: BoidsBehaviors;\n    public boids: Boid[] = [];\n    public boidsPath: BoidsPath;\n    // public forces: Sprite;\n    public t: number;\n    isOriented: boolean;\n    activeBase64ID: string;\n    constructor(width: number, height: number) {\n        BoidsBehaviors.instance = this;\n        BoidsBehaviors.width = width;\n        BoidsBehaviors.height = height;\n        this.isOriented = false;\n        this.t = 0.0;\n        // this.initPath(new BoidsPath(20));\n        // addEventListener(Event.ADDED_TO_STAGE, init);\n    }\n    public InitPathByAPolyline(boidsPath: BoidsPath, numBoid: number = 7) {\n        this.boidsPath = boidsPath;\n        this.InitBoid(numBoid);\n    }\n    public InitPathByNode(boidsPath: Node[], numBoid: number = 7) {\n    //     console.log(boidsPath)\n        this.boidsPath = new BoidsPath(10);\n\n        for(let i = 0 ; i < boidsPath.length; ++i) {\n            if(boidsPath[i]){\n                this.boidsPath.AddNode(boidsPath[i].point);\n            }\n        }\n        this.InitBoid(numBoid);\n    }\n    public InitPath(boidsPath: BoidsPath, numPath: number = 8, numBoid: number = 7) {\n        this.boidsPath = boidsPath;\n        this.Init(numPath, numBoid);\n    }\n    public Init(numPath: number, numBoid: number): void {\n        this.reset();\n        this.boidsPath.r = 30;\n\n        // Add path nodescircles\n        let maxPathNodes: number = numPath;\n        for (let i = 0; i < maxPathNodes; i++) {\n            let node: NVector3 = new NVector3(BoidsBehaviors.width * i / maxPathNodes + 50, BoidsBehaviors.height * Math.random() * 0.8 + 20, 0);\n            // let node: NVector3 = new NVector3(this.boidsPath.nodes[0].x, this.boidsPath.nodes[0].y);\n            this.boidsPath.AddNode(node);\n        }\n        this.InitBoid(numBoid);\n    }\n    public InitBoid(numBoid: number = 7) {\n        let boid: Boid;\n        for (let i = 0; i < numBoid; i++) {\n            boid = new Boid(BoidsBehaviors.width / 2 + Math.random() * 50, 20 * Math.random(), 20 + Math.random() * 20);\n            boid.activeBase64ID = this.activeBase64ID;\n            boid.boidsPath = this.boidsPath;\n            this.boids.push(boid);\n        }\n\n        // this.forces = new Sprite();\n\n        // addChild(forces);\n\n        // addChild(new Button(Boids.width - 80, Boids.height - 60, \"Reload\", Boids.instance.init));\n        // addChild(new Button(Boids.width - 130, Boids.height - 60, \" + \", IncreasePathRadius));\n        // addChild(new Button(Boids.width - 180, Boids.height - 60, \" - \", DecreasePathRadius));\n        // addChild(new Button(Boids.width - 260, Boids.height - 60, \"Forces\", ToggleShowForces));\n    }\n    public ShiftSpeed(min: number, max: number) {\n        for (let b of this.boids) {\n            b.maxVelocity = getRandomArbitrary(min, max);\n        }\n    }\n    public IncreasePathRadius(): void {\n        BoidsBehaviors.showForces = true;\n        this.boidsPath.r += 2;\n    }\n    public DecreasePathRadius(): void {\n        BoidsBehaviors.showForces = true;\n        this.boidsPath.r -= 2;\n    }\n    public ToggleShowForces(): void {\n        BoidsBehaviors.showForces = !BoidsBehaviors.showForces;\n    }\n    public ShiftRadius(v: number) {\n        this.boidsPath.r = v;\n    }\n    public ShiftForce(min: number, max: number) {\n        for (let b of this.boids) {\n            b.maxVelocity = getRandomArbitrary(min, max);\n        }\n    }\n    public ShiftOriented(v: boolean) {\n        for (let b of this.boids) {\n            b.isOriented = v;\n        }\n    }\n    public reset(): void {\n        // while (numChildren) {\n        //     removeChildAt(0);\n        // }\n        // boids.length = 0;\n        // path.getNodes().length = 0;\n        // showForces = false;\n\n        // stage.removeEventListener(MouseEvent.CLICK, ToggleShowForces);\n    }\n    public Update(): void {\n        for (let i = 0; i < this.boids.length; i++) { this.boids[i].Update(); }\n        if (this.t > 16) { this.t = 0; }\n        this.t += 0.5;  // AppDrawing.app.cCanvas.delta;\n    }\n    public Render(ctx: CanvasRenderingContext2D) {\n        ctx.globalCompositeOperation = 'lighter';\n        this.drawPath(ctx);\n        for (let i = 0; i < this.boids.length; i++) {\n            this.boids[i].Render(ctx);\n            // this.drawForces(ctx, this.boids[i]);\n        }\n        ctx.globalCompositeOperation = 'source-over';\n    }\n    public drawPath(ctx: CanvasRenderingContext2D): void {\n        let nodes: NVector3[] = this.boidsPath.GetNodes();\n        for (let i: number = 0; i < nodes.length; ++i) {\n            this.drawPathPoint(ctx, nodes[i], '#FF00CC');\n\n            if (BoidsBehaviors.showForces) {\n                this.drawCircle(ctx, nodes[i], 'gray', this.boidsPath.r);\n            }\n        }\n\n        ctx.beginPath();\n        ctx.lineWidth = 0.2;\n        ctx.strokeStyle = '#ffffff';\n        ctx.setLineDash([4, 4]);\n        ctx.lineDashOffset = -this.t;\n        ctx.moveTo(nodes[0].x, nodes[0].y);\n        for (let i = 1; i < nodes.length; ++i) { ctx.lineTo(nodes[i].x, nodes[i].y); }\n        // ctx.closePath();\n        ctx.stroke();\n        ctx.setLineDash([0, 0]);\n\n        ctx.beginPath();\n        ctx.lineWidth = 0.3;\n        ctx.strokeStyle = '#000000';\n        ctx.setLineDash([4, 8]);\n        ctx.lineDashOffset = -this.t;\n        ctx.moveTo(nodes[0].x, nodes[0].y);\n        for (let i = 1; i < nodes.length; ++i) { ctx.lineTo(nodes[i].x, nodes[i].y); }\n        // ctx.closePath();\n        ctx.stroke();\n        ctx.setLineDash([0, 0]);\n    }\n    public drawPathPoint(ctx: CanvasRenderingContext2D, force: NVector3, color: string): void {\n\n        ctx.fillStyle = 'rgba(255,0,0,0.6)';\n        ctx.beginPath();\n        ctx.arc(force.x, force.y, 2.5, 0, 3.14 * 2);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n        // forces.graphics.lineStyle(1, 0x323232);\n        // forces.graphics.beginFill(0xFF5000);\n        // forces.graphics.drawCircle(force.x, force.y, 6);\n        // forces.graphics.endFill();\n    }\n    public drawCircle(ctx: CanvasRenderingContext2D, force: NVector3, color: string, radius: number): void {\n        ctx.fillStyle = color;\n        ctx.beginPath();\n        ctx.arc(force.x, force.y, 2, 0, 3.14 * 2);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // forces.graphics.lineStyle(1, 0x323232);\n        // //forces.graphics.beginFill(0xFF5000);\n        // forces.graphics.drawCircle(force.x, force.y, radius);\n        // //forces.graphics.endFill();\n    }\n    public set IsOrient(v: boolean) {\n        this.isOriented = v;\n        this.ShiftOriented(v);\n    }\n    public get IsOrient() {\n        return this.isOriented;\n    }\n}","import { Core } from '../Core';\r\nimport { NVector3, NLine } from '../../lib';\r\nimport { Analysis } from './Analysis';\r\nimport { GraphCore } from './GraphCore';\r\nimport { RendererGraph } from './RendererGraph';\r\nimport { Node } from './GraphCore/Graph/Node';\r\n\r\n// import { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\n\r\nimport { costFnDistanceGeo } from './GraphUtility/GraphUtility';\r\n\r\nimport { BoidsBehaviors } from '../AgencySystem/BoidsBehaviors/BoidsBehaviors';\r\n\r\nexport class GraphSystem {\r\n    nnaEngine: Core\r\n    analysis: Analysis;\r\n    graphCore: GraphCore;\r\n    renderGraph: RendererGraph;\r\n\r\n    constructor(nnaEngine: Core) {\r\n        this.nnaEngine = nnaEngine;\r\n        this.analysis = new Analysis(this);\r\n        this.graphCore = new GraphCore(this);\r\n        this.renderGraph = new RendererGraph(this)\r\n\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.graphCore.initGraph(lns);\r\n    }\r\n\r\n    public setUnit(unit: string) {\r\n        this.graphCore.setUnit(unit);\r\n    }\r\n    public computePath(origin: NVector3[], destination: NVector3[], BETA: number = 0.002) {\r\n        this.graphCore.computePath(origin, destination, BETA);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.renderGraph.render(ctx, isPanning);\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // console.log('ddd');\r\n        this.initTwoPoint();\r\n        // this.computePath([this.start], [this.end])\r\n        const n = this.graphCore.graph.FindClosestNode(this.renderGraph.start);\r\n        const cost = (p0: Node, p1: Node, beta: number = 0.0002): number => {\r\n            return p1.point.distanceTo(p0.point) * 0.5;\r\n        }\r\n        if (n){\r\n            this.graphCore.graph.updatePropagationByNode(n, cost, 0.02);\r\n        }\r\n\r\n    }\r\n    public getPath(x: number, y: number){\r\n        this.renderGraph.getPath(x,y);\r\n    }\r\n    public initByCPoints(cps: any){\r\n        // public initByCPoints(cps: CPoint[]){\r\n        const nodes: Node[] = [];\r\n        for(let i = 0 ; i < cps.length; ++i) {\r\n            const n = this.graphCore.graph.FindClosestNode(cps[i].v) as Node;\r\n            nodes.push(n);\r\n        }\r\n        this.graphCore.graph.updatePropagationByNodes(nodes, costFnDistanceGeo, 0.02);\r\n\r\n    }\r\n    public initByCPointsBackpro(cps: any){\r\n        // public initByCPointsBackpro(cps: CPoint[]){\r\n        const nodes: NVector3[] = [];\r\n        for(let i = 0 ; i < cps.length; ++i) {\r\n            // const n = this.graphCore.graph.FindClosestNode(cps[i].v) as Node;\r\n            nodes.push(cps[i].v);\r\n        }\r\n        const path = this.graphCore.graph.updateBackpropagation(nodes);\r\n    //     console.log(path);\r\n        this.renderGraph.path = path;\r\n    }\r\n    public initByCPoint(cps: any){\r\n        // public initByCPoint(cps: CPoint[]){\r\n        // console.log(cps.length);\r\n\r\n        if(cps.length > 0) {\r\n            const start = cps[0].v;\r\n            const ends: NVector3[] = [];\r\n    \r\n            for(let i = 1 ; i < cps.length; ++i) {\r\n                ends.push(cps[i].v);\r\n            }\r\n\r\n            // const vs = cps.shift() as CPoint;\r\n            // this.end = cps[cps.length -2].v\r\n            const n = this.graphCore.graph.FindClosestNode(start) as Node;\r\n            this.renderGraph.start = n.point; // cps[cps.length -1].v\r\n            // const cost = (p0: Node, p1: Node, beta: number = 0.0002): number => {\r\n            //     return p1.point.distanceTo(p0.point) * 0.5;\r\n            // }\r\n            if (n){\r\n                this.graphCore.graph.updatePropagationByNode(n, costFnDistanceGeo, 0.02);\r\n\r\n                // const vEnds: NVector3[] = []; \r\n                // for(let i = 0 ; i < cps.length; ++i) {\r\n                //     this.end = cps[i].v;\r\n                //     vEnds.push(cps[i].v);\r\n                // }\r\n                // console.log(vEnds);\r\n\r\n                const path = this.graphCore.graph.updateBackpropagation(ends);\r\n                // console.log(path);\r\n                this.renderGraph.path = path;\r\n                this.initAgentVis();\r\n\r\n            }\r\n        }\r\n    }\r\n    public initAgentVis(){\r\n        if(this.renderGraph.path[0] && this.renderGraph.BoidsBehaviors === undefined){\r\n            this.renderGraph.BoidsBehaviors = new BoidsBehaviors(500, 500);\r\n            this.renderGraph.BoidsBehaviors?.InitPathByNode(this.renderGraph.path[0], 10);\r\n        }\r\n    }\r\n    public initTwoPoint(){\r\n       \r\n        const width = (this.graphCore.graph.maxPt.x - this.graphCore.graph.minPt.x);\r\n        const height = (this.graphCore.graph.maxPt.y - this.graphCore.graph.minPt.y);\r\n\r\n        // console.log(width, height);\r\n        \r\n        let x = this.graphCore.graph.minPt.x + (width * Math.random());\r\n        let y = this.graphCore.graph.minPt.y+ (height * Math.random());\r\n\r\n        this.renderGraph.start = this.graphCore.graph.nodes[ Math.floor((this.graphCore.graph.nodes.length -1) * Math.random()) ].point;\r\n\r\n        x = this.graphCore.graph.minPt.x + (width * Math.random());\r\n        y = this.graphCore.graph.minPt.y+ (height * Math.random());\r\n        // this.end = new NVector3(x, y, 0);\r\n\r\n        this.renderGraph.end = this.graphCore.graph.nodes[ Math.floor((this.graphCore.graph.nodes.length -1) * Math.random()) ].point;\r\n\r\n    }\r\n\r\n}","import { Core } from '../Core';\r\nexport class VoxelSystem {\r\n    nnaEngine: Core\r\n    constructor(nnaEngine: Core) {\r\n        this.nnaEngine = nnaEngine;\r\n\r\n    }\r\n}","import { AgencySystem } from './AgencySystem';\r\nimport { GraphSystem } from './GraphSystem';\r\nimport { VoxelSystem } from './VoxelSystem';\r\nimport { NNAEngineV3 } from '..';\r\nimport { NVector3, NLine } from '../lib'\r\n\r\nexport class Core {\r\n    app: NNAEngineV3;\r\n    agencySystem: AgencySystem;\r\n    graphSystem: GraphSystem;\r\n    voxelSystem: VoxelSystem;\r\n\r\n    constructor(app: NNAEngineV3) {\r\n        this.app = app;\r\n        this.agencySystem = new AgencySystem(this);\r\n        this.graphSystem = new GraphSystem(this);\r\n        this.voxelSystem = new VoxelSystem(this);\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.graphSystem.initGraph(lns);\r\n    }\r\n\r\n    public setUnit(unit: string) {\r\n        this.graphSystem.setUnit(unit);\r\n    }\r\n    public computePath(origin: NVector3[], destination: NVector3[], BETA: number = 0.002) {\r\n        this.graphSystem.computePath(origin, destination, BETA);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        // console.log('working');\r\n        this.graphSystem.render(ctx, isPanning);\r\n        this.agencySystem.render(ctx, isPanning)\r\n\r\n               // if(this.sandbox.definition) {\r\n\r\n        //     for(let i = 0 ; i < this.renderer.length; ++i) {\r\n        //         this.renderer[i](ctx, this.isPanning);\r\n        //     }\r\n\r\n\r\n        //     this.sandbox.definition.render(ctx, this.isPanning);\r\n\r\n        //     if(this.sandbox.definition.controller.isInspectionMode) {\r\n                ctx.fillStyle = \"#ffffff\";\r\n                ctx.font = \"12px Arial\";\r\n\r\n                const geoPos = this.app.toMap(this.app.controller.m.x, this.app.controller.m.y);\r\n                ctx.fillText(`Lat: ${geoPos[0]}, Lon: ${geoPos[1]}, Zoom level: `, 150, 20 );\r\n                // ctx.fillText(`Lat: ${geoPos[0]}, Lon: ${geoPos[1]}, Zoom level: ${this.sandbox.mapView.zoom}`, this.sandbox.mapView.width * 0.5 - 150, 20 );\r\n                // ctx.fillText(`FPS: ${Math.floor(this.app.core.graphSystem.nnaEngine. .definition.nnaEngineV3.fps)}`, this.sandbox.mapView.width * 0.5 - 150, 40 );\r\n                // ctx.fillText(`Activated App: ${this.sandbox.definition.ACTIVATED_APP}`, this.sandbox.mapView.width * 0.5 - 150, 60 );\r\n        //     }\r\n        // }\r\n        \r\n    }\r\n}","import { NNAEngineV3 } from '..';\r\nexport class IO {\r\n    NNAEngineV3: NNAEngineV3;\r\n    constructor(NNAEngineV3: NNAEngineV3){\r\n        this.NNAEngineV3 = NNAEngineV3;\r\n    }\r\n    public async importCSV(path: string){ // http://localhost:8080/src/assets/data.txt\r\n\r\n    //     console.log('import');\r\n\r\n        // let file = 'torus.obj';\r\n        // return fetch(`${NJSLoader.path}/3dData/${file}`)\r\n        // return fetch(path, {mode: 'no-cors'})\r\n        return fetch(path)\r\n            .then((response: Response) => {\r\n                return response.text();\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .then((d: any) => {\r\n                // console.log(d);\r\n                // if (njslabSandboxStatic.app.appVisGL3D) {\r\n                //     njslabSandboxStatic.app.appVisGL3D.activeCommands.LoadOBJ(d);\r\n                // }\r\n                return d;\r\n            })\r\n            .catch((err: Error) => {\r\n            //     console.log(err);\r\n            });\r\n\r\n    }\r\n}\r\n","import { APP, MouseEventData, KeyboardEventData, NVector3, NLine, CSVData, getAllUrlParams } from './lib';\r\nimport { HTMLView } from './View/HTMLView';\r\nimport { Controller } from './Controller/Controller';\r\nimport { Core } from './Core/Core';\r\nimport { IO } from './IO';\r\n\r\nexport class NNAEngineV3 {\r\n\r\n    view: HTMLView;\r\n    core: Core;\r\n    io: IO;\r\n    controller: Controller;\r\n\r\n    data: CSVData;\r\n\r\n    lastCalledTime: number = Date.now();;\r\n    fps: number = 30;\r\n    delta: number = 1;\r\n\r\n    public toScreen(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n    public toMap(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n\r\n    constructor() {\r\n        this.controller = new Controller(this);\r\n        this.view = new HTMLView(this);\r\n        this.core = new Core(this);\r\n        this.io = new IO(this);\r\n        const param = getAllUrlParams();\r\n    //     console.log(param);\r\n    //     console.log('NNAEngineV3 is running...')\r\n\r\n\r\n\r\n        // const request = new Request('http://njslab.com/NJSLabEnv/NY_street_lat_long.csv');\r\n\r\n        // fetch(request, {mode: 'no-cors'}).then( (response) => {\r\n        //     // Convert to JSON\r\n        //     return response.text();\r\n        // }).then( (j) => {\r\n        //     // Yay, `j` is a JavaScript object\r\n        // //     console.log('jjjjjjjjjjjjjj', j)\r\n        //     // console.log(JSON.stringify(j));\r\n        // }).catch((error) => {\r\n        // //     console.log('Request failed', error)\r\n        // }).then((d: any) => {\r\n        // //     console.log('dddddddddddddddddddddddddd');\r\n        // //     console.log(d);\r\n        // }\r\n        // );\r\n\r\n    }\r\n    // https://cors-anywhere.herokuapp.com/http://njslab.com/NJSLabEnv/NY_street_lat_long.csv\r\n    public importDummyData(url: string = 'https://raw.githubusercontent.com/NamjuLee/data/master/NYC/NY_street_lat_long.csv'){\r\n    // public importDummyData(url: string = 'http://njslab.com/NJSLabEnv/NY_street_lat_long.csv'){\r\n        // this.io.importCSV(``).then( (d: any) => {\r\n        this.io.importCSV(url).then( (d: any) => {\r\n        //     console.log(d);\r\n            this.data = new CSVData();\r\n            this.data.ComputeCSV(d);\r\n            this.data.initLines((x: number, y: number) => this.toScreen(x, y));\r\n\r\n            this.core.graphSystem.initGraph(this.data.lineTest);\r\n        });\r\n    }\r\n    public updateProjection(projection: { toMap: (x: number, y: number) => number[] , toScreen: (x: number, y: number) => number[]} ){\r\n        this.toScreen = projection.toScreen;\r\n        this.toMap = projection.toMap;\r\n    }\r\n    public apiCall(app: APP, action: string, data: any | undefined) {\r\n        this.controller.execution(app, action, data);\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.core.initGraph(lns);\r\n    }\r\n    public reset(){\r\n        this.view.reset();\r\n    }\r\n    public setUnit(unit: string) {\r\n        this.core.setUnit(unit);\r\n    }\r\n    public computePath(origin: NVector3[], destination: NVector3[], BETA: number = 0.002) {\r\n        this.core.computePath(origin, destination, BETA);\r\n    }\r\n    public mouseEvent(m: MouseEventData){\r\n        // console.log(m);\r\n        this.controller.mouseEvent(m);\r\n    }\r\n    public keyEvent(e: KeyboardEventData){\r\n        // this.controller.ke(m);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.core.render(ctx, isPanning)\r\n        \r\n        // if(isPanning) {\r\n        //     if (this.data) {\r\n        //         this.data.updateProjection(this.definition.app.projection.ToScreen);\r\n        //     }\r\n        // }\r\n\r\n        // if (this.data) {\r\n        //     this.data.render(ctx, this.definition.app.projection.ToScreen, this.definition.controller.m.x, this.definition.controller.m.y);\r\n        // }\r\n\r\n       this.ComputeFPS();\r\n        // console.log('render');\r\n    }\r\n    private ComputeFPS(){\r\n        this.delta = (Date.now() - this.lastCalledTime )/1000;\r\n        this.lastCalledTime = Date.now();\r\n        this.fps = 1 / this.delta;\r\n    }\r\n}","import { MOUSE_TYPE, COMMAND, MouseEventData } from '../../lib'\r\nimport { ActiveCommandController } from '../';\r\nexport class CommandBase {\r\n    activeCommandController: ActiveCommandController;\r\n    type: COMMAND = COMMAND.SELECT;\r\n\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n\r\n        this.activeCommandController = activeCommandController;\r\n\r\n    }\r\n    public mouseEvent(e: MouseEventData) {\r\n        // console.log(e.type)\r\n        switch (e.type) {\r\n            case MOUSE_TYPE.LEFT:\r\n                this.MouseLeftClickPre(e); return;\r\n            case MOUSE_TYPE.MIDDLE:\r\n                this.MouseMiddleClickPre(e); return;\r\n            case MOUSE_TYPE.RIGHT:\r\n                this.MouseRightClickPre(e); return;\r\n            case MOUSE_TYPE.DOUBLE:\r\n                this.MouseDoubleClickPre(e); return;\r\n            case MOUSE_TYPE.MOVE:\r\n                this.MouseMovePre(e); return;\r\n            case MOUSE_TYPE.DRAG:\r\n                this.MouseDragPre(e); return;\r\n            case MOUSE_TYPE.DOWN:\r\n                this.MouseDownPre(e); return;\r\n            case MOUSE_TYPE.UP:\r\n                this.MouseUpPre(e); return;\r\n            case MOUSE_TYPE.WHEEL:\r\n                this.MouseWheelPre(e); return;\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n     // .......................................................\r\n     public MouseDown(e: MouseEventData) {/* */ }\r\n     public MouseDownPre(e: MouseEventData) {\r\n        //  this.scene.MouseDown(e.x, e.y);\r\n\r\n        this.activeCommandController.drawingEngine.scene.capture = this.activeCommandController.drawingEngine.geometryCommon.find(e.x, e.y);\r\n        // console.log(this.activeCommandController.drawingEngine.scene.capture);\r\n\r\n        this.MouseDown(e);\r\n     }\r\n     public MouseLeftClick(e: MouseEventData) {/* */ }\r\n     public MouseLeftClickPre(e: MouseEventData) {\r\n\r\n        this.activeCommandController.drawingEngine.scene.capture = this.activeCommandController.drawingEngine.geometryCommon.find(e.x, e.y);\r\n\r\n        if(this.activeCommandController.drawingEngine.scene.capture){\r\n            this.activeCommandController.drawingEngine.scene.capture.isSelected = !this.activeCommandController.drawingEngine.scene.capture.isSelected;\r\n        } else {\r\n            this.activeCommandController.drawingEngine.geometryCommon.resetSelections();\r\n            // this.activeCommandController.drawingEngine.scene.resetSelections();\r\n        }\r\n\r\n        // console.log(this.activeCommandController.drawingEngine.scene.capture)\r\n        //  this.scene.MouseLeftClick(e.x, e.y);\r\n         this.MouseLeftClick(e);\r\n     }\r\n     public MouseMiddleClick(e: MouseEventData) {/* */ }\r\n     public MouseMiddleClickPre(e: MouseEventData) {\r\n        //  this.scene.MouseMiddleClick(e.x, e.y);\r\n         this.MouseMiddleClick(e);\r\n     }\r\n     public MouseRightClick(e: MouseEventData) { /* */ }\r\n     public MouseRightClickPre(e: MouseEventData) {\r\n        //  this.scene.MouseRightClick(e.x, e.y);\r\n         this.MouseRightClick(e);\r\n     }\r\n     public MouseUp(e: MouseEventData) { /* */ }\r\n     public MouseUpPre(e: MouseEventData) {\r\n        //  this.scene.MouseUp(e.x, e.y);\r\n\r\n        this.activeCommandController.drawingEngine.scene.capture = undefined;\r\n        // console.log('this.activeCommandController.drawingEngine.scene.capture', this.activeCommandController.drawingEngine.scene.capture)\r\n        this.MouseUp(e);\r\n \r\n     }\r\n     public MouseDoubleClick(e: MouseEventData) {/* */ }\r\n     public MouseDoubleClickPre(e: MouseEventData) {\r\n        //  this.scene.MouseDoubleClick(e.x, e.y);\r\n         this.MouseDoubleClick(e);\r\n     }\r\n     public MouseMove(e: MouseEventData) {/* */ }\r\n     public MouseMovePre(e: MouseEventData) {\r\n\r\n        this.activeCommandController.drawingEngine.geometryCommon.updateHover(e.x, e.y);\r\n        //  this.scene.MouseMove(e.x, e.y);\r\n         this.MouseMove(e);\r\n     }\r\n     public MouseDrag(e: MouseEventData) {/* */ }\r\n     public MouseDragPre(e: MouseEventData) {\r\n        //  this.scene.MouseDrag(e.x, e.y);\r\n        if (this.activeCommandController.drawingEngine.scene.capture) {\r\n            const mv = this.activeCommandController.drawingEngine.projection.toMap(e.x, e.y); \r\n            this.activeCommandController.drawingEngine.scene.capture.translate(e.x, e.y, mv[0], mv[1]);\r\n        }\r\n         this.MouseDrag(e);\r\n     }\r\n     public MouseWheel(e: MouseEventData) {/* */ }\r\n     public MouseWheelPre(e: MouseEventData) {\r\n        //  this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n         // console.log(\"drag\");\r\n         this.MouseWheel(e);\r\n     }\r\n}","import { NVector3 } from '../../lib';\r\nimport { GeometryBase } from './GeometryBase';\r\nexport class Collision {\r\n    geometryBase: GeometryBase;\r\n\r\n    isCollided: boolean = false;\r\n\r\n    neighborShapes: GeometryBase[] = [];\r\n\r\n    minVec: NVector3;\r\n    maxVec: NVector3;\r\n\r\n    isVisited: boolean = false;\r\n    numOrder: number = -1;\r\n\r\n    constructor(geometryBase: GeometryBase) {\r\n        this.geometryBase = geometryBase;\r\n        const r = 5;\r\n        this.minVec = new NVector3(this.geometryBase.v.x - r, this.geometryBase.v.y - r, 0);\r\n        this.maxVec = new NVector3(this.geometryBase.v.x + r, this.geometryBase.v.y + r, 0);\r\n    }\r\n    public Reset(){\r\n        this.neighborShapes = [];\r\n        this.numOrder = -1;\r\n        this.geometryBase.numVisit = 0;\r\n        this.geometryBase.isCollapse = false;\r\n        this.isCollided = false;\r\n        this.isVisited = false;\r\n    }\r\n}","import { ACTIVE_UI, getUUID } from '../../lib';\r\nimport { Scene } from '../../Scene';\r\nimport { Collision } from './Collision';\r\nimport { NVector3 } from '../../lib';\r\n\r\nexport class GeometryBase {\r\n    scene: Scene;\r\n    public v: NVector3;\r\n    public type: ACTIVE_UI;\r\n    public id: string = '';\r\n    numVisit: number = 0;\r\n\r\n    public isCollapse: boolean = false;\r\n\r\n    public isHidden: boolean = false;\r\n    public isRenderable: boolean = true;\r\n\r\n    public isSelected: boolean = false;\r\n    public isHover: boolean = false;\r\n    public collision: Collision;\r\n\r\n    constructor(scene: Scene, x: number, y: number) {\r\n        this.scene = scene;\r\n        this.v = new NVector3(x, y, 0);\r\n        this.id = getUUID();\r\n        \r\n        this.collision = new Collision(this);\r\n    }\r\n    public toJson() {\r\n        return { };\r\n    }\r\n    public translate(x: number, y: number, long: number, lat: number) {\r\n\r\n    }\r\n    public isInside(x: number, y: number): boolean {\r\n        return false;\r\n    }\r\n    public update(isPanning: boolean, toScreen: (x: number, y: number) => number[]) {\r\n        /* */\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        /* */\r\n    }\r\n    public renderPost(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        /* */\r\n    }\r\n}","import { GeometryBase } from '../Base/GeometryBase';\r\nimport { ACTIVE_UI, NVector3, distanceToXY } from '../../lib';\r\n\r\nimport { Scene } from '../../Scene';\r\n\r\nimport { Collision } from '../Base/Collision';\r\n\r\nexport interface IPoint {\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n}\r\n\r\nexport class CPoint extends GeometryBase {\r\n    \r\n    r: number = 5;\r\n    id: string;\r\n    t: number = 0.0;\r\n    color = '#00ff00';\r\n    colorHover = '#0ffff0';\r\n\r\n    collision: Collision;\r\n\r\n    constructor(scene: Scene, param: IPoint) {\r\n        super(scene, param.x, param.y);\r\n        this.type = ACTIVE_UI.point;\r\n        this.v = new NVector3(param.x, param.y, param.z);\r\n    }\r\n    public translate(x: number, y: number, long: number, lat: number) {\r\n        this.v.x = x;\r\n        this.v.y = y;\r\n        this.v.long = long;\r\n        this.v.lat = lat;\r\n    }\r\n    public isInside(x: number, y: number): boolean {\r\n        if (distanceToXY(this.v.x, this.v.y, x, y) < this.r + 3) {\r\n            this.isHover = true;\r\n            return true;\r\n        }\r\n        this.isHover = false;\r\n        return false;\r\n    }\r\n    public update(isPanning: boolean, toScreen: ( x: number, y: number) => number[] ) {\r\n        if (isPanning && this.scene.drawingEngine.projection.isCustom) {\r\n            const sv = toScreen(this.v.long, this.v.lat);\r\n            this.v.x = sv[0];\r\n            this.v.y = sv[1];\r\n        }\r\n    }\r\n    public toJson() {\r\n        return { x: this.v.x, y: this.v.y }\r\n    }\r\n    public renderPost(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n\r\n        let r = this.r + (Math.sin(this.t))\r\n        if(this.isHover) {\r\n            r += 3;\r\n            ctx.fillStyle = this.colorHover;\r\n        } else {\r\n            ctx.fillStyle = this.color;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, r  , 0.0, Math.PI * 2.0 );\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        if(this.isSelected) {\r\n            ctx.lineWidth =3;\r\n            ctx.strokeStyle = '#ffffff';\r\n            ctx.stroke();\r\n        }\r\n        \r\n        this.t += 0.06;\r\n    }\r\n\r\n}","import { COMMAND, MouseEventData } from '../../lib'\r\nimport { CommandBase } from './CommandBase';\r\nimport { ActiveCommandController } from '../';\r\nimport { CPoint } from '../../Geometry/Point';\r\nexport class CommandSelect extends CommandBase {\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n        super(activeCommandController);\r\n        this.type = COMMAND.SELECT;\r\n\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n    //     console.log('sel' , e)\r\n    }\r\n}\r\nexport class CommandPoint extends CommandBase {\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n        super(activeCommandController);\r\n        this.type = COMMAND.POINT;\r\n\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n        const p = new CPoint(this.activeCommandController.drawingEngine.scene, {x: e.x, y: e.y, z : 0})\r\n        const mv = this.activeCommandController.drawingEngine.projection.toMap(e.x, e.y);\r\n        p.v.long = mv[0];\r\n        p.v.lat = mv[1];\r\n\r\n        this.activeCommandController.drawingEngine.scene.addGeometry(p);\r\n        // console.log(this.activeCommandController.hasShift)\r\n        if(this.activeCommandController.hasShift) { return }\r\n        this.activeCommandController.drawingEngine.setCommand();\r\n    }\r\n}\r\nexport class CommandLine extends CommandBase {\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n        super(activeCommandController);\r\n        this.type = COMMAND.LINE;\r\n\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n    //     console.log('line' , e)\r\n    }\r\n}","// import { MouseEventData } from '../../../../Core/EventInteraction';\r\nimport { DrawingEngine } from '../';\r\nimport { CommandBase } from './Commands/CommandBase';\r\nimport { CommandSelect, CommandPoint, CommandLine } from './Commands/CommandShape';\r\n\r\nimport { COMMAND } from '../lib'\r\n\r\nimport { fetchJson } from '../../../NJSCore/IO';\r\nimport { CPoint } from '../Geometry/Point';\r\n\r\nexport class ActiveCommandController {\r\n    drawingEngine: DrawingEngine;\r\n\r\n    \r\n    activeCommand: CommandBase;\r\n    public commands = {};\r\n\r\n    hasShift: boolean = false;\r\n    inspection: boolean = false;\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n\r\n        this.commands = {\r\n            SELECT : new CommandSelect(this),\r\n            POINT : new CommandPoint(this),\r\n            LINE : new CommandLine(this),\r\n        }\r\n\r\n        // this.commands.Line = new CommandBase(this);\r\n        // this.commands.Point = new CommandBase(this);\r\n        // this.commands.Line = new CommandBase(this);\r\n\r\n        this.activeCommand = this.commands[COMMAND.SELECT];\r\n    }\r\n    public setCommander(commander: string) {\r\n        switch (commander) {\r\n            case 'save':\r\n            //     console.log('save!!');\r\n                break;\r\n            case 'load':\r\n            //     console.log('load!!');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // console.log(commander);\r\n        switch (commander as COMMAND) {\r\n            case COMMAND.SELECT:\r\n                // console.log(commander);\r\n                this.activeCommand = this.commands[commander];\r\n                // console.log(this.activeCommand);\r\n                break;\r\n            case COMMAND.POINT:\r\n                // console.log(commander);\r\n                this.activeCommand = this.commands[commander];\r\n                // console.log(this.activeCommand);\r\n                break;\r\n            case COMMAND.LINE:\r\n                // console.log(commander);\r\n                this.activeCommand = this.commands[commander];\r\n                // console.log(this.activeCommand);\r\n                break;\r\n            // case 'point':\r\n            //     this.activeCommand = this.commands[commander];\r\n            //     break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    public apiCall(command: string): any {\r\n\r\n\r\n        switch (command ) {\r\n            case 'getSelectedCPoint':\r\n                return this.drawingEngine.geometryCommon.getSelCPoint();\r\n            case 'importZipData':\r\n                return this.popZipData();\r\n            case 'importClustering':\r\n                return this.drawingEngine.addon.InitClustering();\r\n            case 'importClusteringCollision':\r\n                return this.drawingEngine.addon.InitClusteringCollision();\r\n\r\n            case 'save':\r\n                return this.drawingEngine.geometryCommon.toJson();\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    public async popZipData (){\r\n                \r\n        const json = await fetchJson('https://raw.githubusercontent.com/NamjuLee/data/master/US/zip.json');\r\n    //     console.log(json);\r\n        let count = 0;\r\n        for(let i of json['pos']) {\r\n            // console.log(i);\r\n\r\n            const p = this.greatePointByGeoPos(i[0], i[1]);\r\n            p.t += Math.random() * 10;\r\n            if(count++ > 2000) { return; }\r\n        }\r\n    \r\n\r\n    }\r\n    public greatePointByGeoPos(long: number, lat: number) {\r\n        const spos = this.drawingEngine.projection.toScreen(long, lat);\r\n        const p = new CPoint(this.drawingEngine.scene, {x: spos[0], y: spos[1], z: 0 });\r\n        p.v.long = long;\r\n        p.v.lat = lat;\r\n        this.drawingEngine.scene.addGeometry(p);\r\n        return p;\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nexport class Projection{\r\n    drawingEngine: DrawingEngine;\r\n    public isCustom: boolean = false;\r\n    constructor(drawingEngine: DrawingEngine){\r\n        this.drawingEngine = drawingEngine;\r\n\r\n    }\r\n    public updateProjection(projection: { toMap: (x: number, y: number) => number[] , toScreen: (x: number, y: number) => number[]} ){\r\n        this.toMap = projection.toMap;\r\n        this.toScreen = projection.toScreen;\r\n        this.isCustom = true;\r\n    }\r\n    public toScreen(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n    public toMap(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n}","import { DrawingEngine } from '../';\r\n// import firebase from 'firebase';\r\n\r\nexport class IO {\r\n    public drawingEngine: DrawingEngine;\r\n\r\n\r\n    firebaseConfig = {\r\n        apiKey: \"AIzaSyA1yKg85WGZoshbk8xR23cXr3SwpqXVgIc\",\r\n        authDomain: \"njs-data.firebaseapp.com\",\r\n        projectId: \"njs-data\",\r\n        storageBucket: \"njs-data.appspot.com\",\r\n        messagingSenderId: \"635991152770\",\r\n        appId: \"1:635991152770:web:722f5356e0d14cea50fc9b\"\r\n      };\r\n\r\n    // ref: firebase.database.Reference;\r\n\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n\r\n        // let fbdatabase = firebase.initializeApp(this.firebaseConfig);\r\n        // console.log('fbdb', fbdatabase);\r\n    \r\n        // // let db = fbdatabase.database();\r\n        // // this.ref = db.ref('drawingEngine');\r\n        // // console.log(this.ref);\r\n    \r\n        // // let data = {\r\n        // //     name:'mlData',\r\n        // //     score: '120'\r\n        // // }\r\n        // // this.sendData(data);\r\n\r\n        // // this.ref.on('value', this.getData, this.getError);\r\n    }\r\n    public sendData(data: {}) {\r\n        // let result = this.ref.push(data);\r\n        // console.log(result.key);\r\n    }\r\n\r\n    public getData = (d: any) => {\r\n        let data = d.val();\r\n    //     console.log('get data', data);\r\n        \r\n        for(let i in data) {\r\n        //     console.log(i, data[i]);\r\n        }\r\n    }\r\n    public getError = (d: any) => {\r\n        console.error(d);\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nimport { GeometryBase } from './Base/GeometryBase';\r\nexport class GeometryCommon{\r\n    drawingEngine: DrawingEngine;\r\n    constructor(drawingEngine: DrawingEngine){\r\n        this.drawingEngine = drawingEngine;\r\n\r\n    }\r\n    public find(x: number, y: number): GeometryBase | undefined {\r\n        for (let key in this.drawingEngine.scene.geoDict) {\r\n            if (this.drawingEngine.scene.geoDict[key].isInside(x, y)) {\r\n                return this.drawingEngine.scene.geoDict[key];\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n    public resetSelections(){\r\n        for (let i = 0 ; i < this.drawingEngine.scene.geometryList.length; ++i) {\r\n            this.drawingEngine.scene.geometryList[i].isSelected = false;\r\n        }\r\n    }\r\n    public getAllVecFromCPoint(){\r\n        const vs = [];\r\n        for (let i = 0 ; i < this.drawingEngine.scene.pointList.length; ++i) {\r\n            vs.push(this.drawingEngine.scene.pointList[i].v);\r\n        }\r\n        return vs;\r\n    }\r\n    public getAllFromCPoint(){\r\n        const vs = [];\r\n        for (let i = 0 ; i < this.drawingEngine.scene.pointList.length; ++i) {\r\n            vs.push(this.drawingEngine.scene.pointList[i]);\r\n        }\r\n        return vs;\r\n    }\r\n    public getSelCPoint(){\r\n        const vs = [];\r\n        for (let i = 0 ; i < this.drawingEngine.scene.pointList.length; ++i) {\r\n            if (this.drawingEngine.scene.pointList[i].isSelected) {\r\n                vs.push(this.drawingEngine.scene.pointList[i]);\r\n            }\r\n        }\r\n        return vs;\r\n    }\r\n    public updateHover(x: number, y: number) {\r\n        for (let i = 0 ; i < this.drawingEngine.scene.geometryList.length; ++i) {\r\n            this.drawingEngine.scene.geometryList[i].isInside(x, y)\r\n        }\r\n    }\r\n    public toJson() {\r\n        const data = [];\r\n        for(let i = 0 ; i < this.drawingEngine.scene.geometryList.length; ++i) {\r\n            data.push(this.drawingEngine.scene.geometryList[i].toJson());\r\n        }\r\n        return data;\r\n    }\r\n}","import { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\nimport { distance, NVector3 } from '../../Clustering/lib';\r\nimport { Renderer } from './Renderer';\r\n\r\nexport class PointCluster {\r\n    public renderer: Renderer;\r\n    public points: CPoint[];\r\n    public r0: number = 32 * 0.5;\r\n    public r1: number = 48 * 0.5;\r\n    public isHover: boolean = false;\r\n    public isVisited: boolean = false;\r\n    public boundingBoxMin: NVector3 = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n    public boundingBoxMax: NVector3 = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n    public minVec: NVector3;\r\n    public maxVec: NVector3;\r\n    public vec = new NVector3(0, 0, 0);\r\n    private t: number = 1.0;\r\n    private GridResolution = 85;\r\n    private tempVecGridList: NVector3[] = [];\r\n    private tempGeoGridList: CPoint[][][] = [];\r\n\r\n    constructor(renderer: Renderer, geometries: CPoint[]) {\r\n        this.renderer = renderer;\r\n        this.points = geometries;\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vec.x += this.points[i].v.x;\r\n            this.vec.y += this.points[i].v.y;\r\n            this.UpdateBoundingBox(this.points[i].v);\r\n        }\r\n        this.vec.x /= this.points.length;\r\n        this.vec.y /= this.points.length;\r\n        this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n        this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n        // for(let i = 0; i < this.geometries.length; ++i) {\r\n        // this.geometries[i].isAniEasing = true;\r\n        // this.geometries[i].tVec = this.vec;\r\n        // }\r\n    }\r\n    public IsInside(m: NVector3) {\r\n        if(distance(this.vec, m ) < this.r1) {\r\n            this.isHover = true;\r\n            // this.points[0].scene.annotationInstance.activeCommandController.activeMouseCursor.SetActiveCursorHovering();\r\n            // this.points[0].scene.annotationInstance.renderer.needFocus = true;\r\n            // this.points[0].scene.annotationInstance.activeCommandController.acProperties.hasHovering = true;\r\n            return true;\r\n        } else {\r\n            this.isHover = false;\r\n            return false;\r\n        }\r\n    }\r\n    public AddPost(geo: CPoint) {\r\n        // @ts-ignore\r\n        if(this.points.includes(geo)) { return; }\r\n        this.points.push(geo);\r\n        this.vec = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n        this.vec.x += this.points[i].v.x;\r\n        this.vec.y += this.points[i].v.y;\r\n        this.UpdateBoundingBox(this.points[i].v);\r\n        }\r\n        this.vec.x /= this.points.length;\r\n        this.vec.y /= this.points.length;\r\n        this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n        this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n    }\r\n    public NeedDecompose() {\r\n        if (this.boundingBoxMax.x - this.boundingBoxMin.x > this.GridResolution) { return true; }\r\n        if (this.boundingBoxMax.y - this.boundingBoxMin.y > this.GridResolution) { return true; }\r\n        return false;\r\n    }\r\n    public Split() {\r\n        this.DeepRemove();\r\n        const xNum = (this.boundingBoxMax.x - this.boundingBoxMin.x) / this.GridResolution < 1 ? 1: (this.boundingBoxMax.x - this.boundingBoxMin.x) / this.GridResolution;\r\n        const yNum = (this.boundingBoxMax.y - this.boundingBoxMin.y) / this.GridResolution < 1 ? 1: (this.boundingBoxMax.y - this.boundingBoxMin.y) / this.GridResolution;\r\n        const grid = this.buildGrid(xNum, yNum);\r\n        this.BuildSubCluster(grid, xNum, yNum);\r\n    }\r\n    public Merge(other: PointCluster){\r\n        this.points.concat(other.points);\r\n        this.vec = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vec.x += this.points[i].v.x;\r\n            this.vec.y += this.points[i].v.y;\r\n            this.UpdateBoundingBox(this.points[i].v);\r\n        }\r\n        this.vec.x /= this.points.length;\r\n        this.vec.y /= this.points.length;\r\n        this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n        this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n        other.DeepRemove();\r\n    }\r\n    public DeepRemove(){\r\n        this.renderer.RemoveCluster(this);\r\n    }\r\n    public buildGrid(xNum: number, yNum: number) {\r\n        this.tempGeoGridList = []\r\n        let gridList = [];;\r\n        for(let y = 0; y < yNum; ++y) {\r\n            const theY = this.boundingBoxMin.y + y * this.GridResolution;\r\n            const geoMat: CPoint[][] = [];\r\n            for(let x = 0; x < xNum; ++x) {\r\n                const theX = this.boundingBoxMin.x + x * this.GridResolution;\r\n                gridList.push(new NVector3(theX, theY));\r\n                const geoList: CPoint[]= [];\r\n                geoMat.push(geoList);\r\n            }\r\n            this.tempGeoGridList.push(geoMat);\r\n        }\r\n        this.tempVecGridList = gridList;\r\n        return gridList;\r\n    }\r\n    public BuildSubCluster(vs: NVector3[], xNum: number, yNum: number){\r\n        for(let i = 0 ; i < this.points.length; ++i) {\r\n            this.GetCellAtPoint(this.points[i].v, xNum, yNum).push(this.points[i]);\r\n        }\r\n        for(let y = 0; y < this.tempGeoGridList.length; ++y) {\r\n            for(let x = 0; x < this.tempGeoGridList[y].length; ++x) {\r\n            if(this.tempGeoGridList[y][x]) {\r\n                if (this.tempGeoGridList[y][x].length === 1) {\r\n                    this.tempGeoGridList[y][x][0].collision.Reset();\r\n                } else if(this.tempGeoGridList[y][x].length > 1) {\r\n                    this.renderer.clustersRPoint.push(new PointCluster(this.renderer, this.tempGeoGridList[y][x]));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private GetCellAtPoint(tv: NVector3, xNum: number, yNum: number) {\r\n        let dp: NVector3 = new NVector3(tv.x - this.boundingBoxMin.x, tv.y - this.boundingBoxMin.y);\r\n        // let dp: NVector3 = new NVector3(this.boundingBoxMin.x - tv.x, this.boundingBoxMin.y - tv.y);\r\n        let i: number = Math.round(dp.x / this.GridResolution);\r\n        let j: number = Math.round(dp.y / this.GridResolution);\r\n        if (i >= xNum) { i = xNum - 1; }\r\n        if (j >= yNum) { j = yNum - 1; }\r\n        if (i < 0) { i = 0; }\r\n        if (j < 0) { j = 0; }\r\n        i = Math.round(i);\r\n        j = Math.round(j);\r\n        // console.log(j, i);\r\n        // console.log(this.tempGeoGridList)\r\n        return this.tempGeoGridList[j][i];\r\n    }\r\n    public Draw(ctx: CanvasRenderingContext2D, renderer: Renderer, isPanning: boolean) {\r\n        this.UpdateTimeer();\r\n\r\n        if (isPanning) {\r\n            this.vec = new NVector3(0, 0, 0);\r\n            this.boundingBoxMin = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n            this.boundingBoxMax = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.vec.x += this.points[i].v.x;\r\n                this.vec.y += this.points[i].v.y;\r\n                this.UpdateBoundingBox(this.points[i].v);\r\n            }\r\n            this.vec.x /= this.points.length;\r\n            this.vec.y /= this.points.length;\r\n            this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n            this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n            // this.vec.y -= this.r * 0.5 // offset the ghost center along y\r\n        }\r\n\r\n        // renderer.optimizer.optimizer.optimizer.renderer.draw.shape.cluster.DrawingPresetClustering(ctx, this.points, this.vec, this.r0, this.r1, this.isHover, this.t);\r\n        \r\n        if(renderer.optimizer.inspection) {\r\n            ctx.beginPath();\r\n            ctx.rect(this.minVec.x, this.minVec.y, this.maxVec.x - this.minVec.x, this.maxVec.y - this.minVec.y)\r\n            ctx.closePath();\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\r\n            ctx.fill();\r\n            ctx.lineWidth = 0.5;\r\n            ctx.beginPath();\r\n            ctx.rect(this.boundingBoxMin.x, this.boundingBoxMin.y, this.boundingBoxMax.x - this.boundingBoxMin.x, this.boundingBoxMax.y - this.boundingBoxMin.y)\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n            if (this.tempVecGridList.length > 0) {\r\n                for(let i = 0 ; i < this.tempVecGridList.length; ++i) {\r\n                    ctx.beginPath();\r\n                    ctx.rect(this.tempVecGridList[i].x, this.tempVecGridList[i].y, this.GridResolution, this.GridResolution);\r\n                    ctx.closePath();\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    private UpdateTimeer(){\r\n        if (true ) {\r\n            this.t -= 0.1; // this.points[0].scene.annotationInstance.customization.themeCurrent.properties.timeTransitionA;\r\n            this.t = this.t < 0.4 ? 0.4 : this.t;\r\n        } else {\r\n            this.t += 0.1; // this.points[0].scene.annotationInstance.customization.themeCurrent.properties.timeTransitionB;\r\n            this.t = this.t > 1 ? 1 : this.t;\r\n        }\r\n    }\r\n    private UpdateBoundingBox(vec: NVector3){\r\n        this.boundingBoxMin.x = vec.x < this.boundingBoxMin.x ? vec.x : this.boundingBoxMin.x;\r\n        this.boundingBoxMin.y = vec.y < this.boundingBoxMin.y ? vec.y : this.boundingBoxMin.y;\r\n        this.boundingBoxMax.x = vec.x > this.boundingBoxMax.x ? vec.x : this.boundingBoxMax.x;\r\n        this.boundingBoxMax.y = vec.y > this.boundingBoxMax.y ? vec.y : this.boundingBoxMax.y;\r\n    }\r\n}","import { PointCluster } from './PointCluster';\r\nimport { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\nimport { ClusteringCollisionBasedGraph } from '../';\r\n\r\nexport class Renderer {\r\n    public clustersRPoint: PointCluster[] = [];\r\n    public optimizer: ClusteringCollisionBasedGraph;\r\n    constructor(optimizer: ClusteringCollisionBasedGraph) {\r\n        this.optimizer = optimizer;\r\n    }\r\n    public InitGeometry(){\r\n        this.clustersRPoint = [];\r\n    }\r\n    public addClusterByGeometries(geo: CPoint[][] ) {\r\n        for(let i = 0; i < geo.length; ++i) {\r\n            this.clustersRPoint.push(new PointCluster(this, geo[i]));\r\n        }\r\n    }\r\n    public RemoveCluster(cluster: PointCluster ){\r\n        this.clustersRPoint.splice(this.clustersRPoint.indexOf(cluster), 1);\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D, isStationary: boolean): void {\r\n    //     console.log(this.clustersRPoint.length);\r\n        if (this.clustersRPoint.length > 0) {\r\n            for(let i = 0 ; i < this.clustersRPoint.length; ++i) {\r\n                this.clustersRPoint[i].Draw(ctx, this, isStationary);\r\n            }\r\n        }\r\n\r\n    }\r\n}","import { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\nimport { PointCluster } from './PointCluster';\r\nimport { ClusteringCollisionBasedGraph } from '..';\r\n\r\nimport { distance, AABBintersect2D } from '../../../../../../Tools/Clustering/ClusteringCollisionBasedGraph/lib';\r\n\r\nexport class GraphClustering {\r\n    public optimizer: ClusteringCollisionBasedGraph;\r\n    public pointList: CPoint[] = []\r\n    // listNPoint: CPoint[] = []\r\n\r\n    constructor(optimizer: ClusteringCollisionBasedGraph) {\r\n        this.optimizer = optimizer;\r\n    }\r\n\r\n    public update(): void {\r\n        this.updatePoints();\r\n\r\n        // 1: build connectivity based on collision\r\n        // this.listNPoint = this.BuildConnectivity(this.listNPoint);\r\n        this.pointList = this.BuildConnectivity(this.pointList);\r\n        this.initGeometry();\r\n        // 2: construct clusters graph based on the connectivity\r\n        const geoList = this.buildGraph(this.pointList);\r\n\r\n        if (geoList !== undefined) {\r\n            this.addClusterByGeometries(geoList);\r\n            // // 3: recursive checking for the collision while repositioning clusters\r\n            this.PostUpdateCollisionBasedonGraph();\r\n\r\n            const graphs = this.NeedDecompose();\r\n            if (graphs.length > 0) {\r\n                // 4: tessellate big clusters based on a resolution\r\n                this.SplitClusters(graphs);\r\n                // 5: post-process for merging based on a tolerance\r\n                this.PostMergeCluster();\r\n            }\r\n        }\r\n    }\r\n    public initGeometry() {\r\n        this.optimizer.renderer.InitGeometry();\r\n    }\r\n    public addClusterByGeometries(outGraphList: CPoint[][]) {\r\n        this.optimizer.renderer.addClusterByGeometries(outGraphList);\r\n    }\r\n    private updatePoints() {\r\n        this.pointList = [];\r\n\r\n        for (let i = 0; i < this.optimizer.points.length; ++i) {\r\n            if (this.optimizer.points[i].isHidden ||\r\n                !this.optimizer.points[i].isRenderable) {\r\n                continue\r\n            } else {\r\n                const pt = this.optimizer.points[i];\r\n                pt.collision.Reset();\r\n                this.pointList.push(pt)\r\n            }\r\n        }\r\n\r\n    }\r\n    private BuildConnectivity(listPoints: CPoint[]) {\r\n        for (let i = 0; i < listPoints.length; ++i) {\r\n            const pt = listPoints[i];\r\n            for (let j = i + 1; j < listPoints.length; ++j) {\r\n                const other = listPoints[j];\r\n                if (!other.isCollapse && other !== pt && AABBintersect2D([pt.collision.minVec, pt.collision.maxVec], [other.collision.minVec, other.collision.maxVec])) {\r\n                    pt.collision.isCollided = true;\r\n                    pt.isCollapse = true;\r\n                    pt.numVisit = 0;\r\n                    pt.collision.neighborShapes.push(other);\r\n                    other.collision.isCollided = true;\r\n                    other.isCollapse = true;\r\n                    other.numVisit = 0;\r\n                    other.collision.neighborShapes.push(pt);\r\n                    // other.collision.neighborShapes.push(pt);\r\n                    // pt.collision.numOrder = numOrder++;\r\n                    // break;\r\n                }\r\n            }\r\n        }\r\n        return listPoints;\r\n    }\r\n    private buildGraph(listPoints: CPoint[]) {\r\n        let outList: CPoint[][] = [];\r\n        for (let i = 0; i < listPoints.length; ++i) {\r\n            let ptList: CPoint[] = [];\r\n            let queue = [listPoints[i]];\r\n            queue[0].collision.isVisited = true;\r\n            ptList.push(queue[0]);\r\n            let safeguard = 0;\r\n            let current = undefined;\r\n            while ((current = queue.shift()) !== undefined) {\r\n                for (let i = 0; i < current.collision.neighborShapes.length; ++i) {\r\n                    if (!current.collision.neighborShapes[i].collision.isVisited) {\r\n                        current.collision.neighborShapes[i].collision.isVisited = true;\r\n                        queue.push(current.collision.neighborShapes[i] as CPoint);\r\n                        ptList.push(current.collision.neighborShapes[i] as CPoint);\r\n                    }\r\n                }\r\n                if (safeguard++ > 1000) { console.debug('fail to optimize'); return; }\r\n            }\r\n            if (ptList.length > 1) {\r\n                outList.push(ptList);\r\n            }\r\n        }\r\n        return outList;\r\n    }\r\n    public PostUpdateCollisionBasedonGraph() {\r\n        // for (let i = 0; i < this.optimizer.renderer.clustersNPoint.length; ++i) {\r\n        //     this.UpdateByQueue(this.optimizer.renderer.clustersNPoint[i], this.listNPoint);\r\n        // }\r\n        for (let i = 0; i < this.optimizer.renderer.clustersRPoint.length; ++i) {\r\n            this.UpdateByQueue(this.optimizer.renderer.clustersRPoint[i], this.pointList);\r\n        }\r\n    }\r\n    private UpdateByQueue(cluster: PointCluster, geometries: CPoint[]) {\r\n        let remain = 0;\r\n        const queue = [...geometries]\r\n        while (queue.length) {\r\n            const geo = queue.shift();\r\n\r\n            if (geo) {\r\n                // console.log(queue.length);\r\n                // safeguard and performance optimization\r\n                if (geo.numVisit > 100) { geo.numVisit = 0; break; }\r\n                if (queue.length === 0) {\r\n                    if (geometries.length < remain++) { break; }\r\n                }\r\n                // end safeguard and performance optimization\r\n                if (!geo.collision.isCollided) {\r\n                    if (AABBintersect2D([geo.collision.minVec, geo.collision.maxVec], [cluster.minVec, cluster.maxVec])) {\r\n                        geo.collision.isCollided = true;\r\n                        geo.isCollapse = true;\r\n                        geo.numVisit = 0;\r\n                        cluster.AddPost(geo);\r\n                    } else {\r\n                        geo.numVisit++;\r\n                        queue.push(geo);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private NeedDecompose() {\r\n        const clusterGraph = [];\r\n\r\n        for (let i = 0; i < this.optimizer.renderer.clustersRPoint.length; ++i) {\r\n            if (this.optimizer.renderer.clustersRPoint[i].NeedDecompose()) {\r\n                clusterGraph.push(this.optimizer.renderer.clustersRPoint[i]);\r\n            }\r\n        }\r\n        return clusterGraph;\r\n    }\r\n    private SplitClusters(clusters: PointCluster[]) {\r\n        for (let i = 0; i < clusters.length; ++i) {\r\n            clusters[i].Split();\r\n        }\r\n    }\r\n    private PostMergeCluster() {\r\n        this.PostMergeClusterCompute(this.optimizer.renderer.clustersRPoint);\r\n    }\r\n    private PostMergeClusterCompute(clusters: PointCluster[]) {\r\n        for (let i = 0; i < clusters.length - 1; ++i) {\r\n            const cluster = clusters[i];\r\n            for (let j = i + 1; j < clusters.length; ++j) {\r\n                const other = clusters[j]\r\n                if (!other.isVisited) {\r\n                    if (distance(cluster.vec, other.vec) < cluster.r1 + 20) {\r\n                        other.isVisited = true;\r\n                        cluster.Merge(other);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { NVector3 } from '../Clustering/lib';\r\n\r\nimport { Renderer } from './Core/Renderer';\r\nimport { GraphClustering } from './Core/GraphClustering';\r\nimport { CPoint } from '../../DrawingEngine/Geometry/Point';\r\n\r\nexport class ClusteringCollisionBasedGraph {\r\n\r\n    graphClustering: GraphClustering;\r\n    renderer: Renderer;\r\n\r\n    mv: NVector3 = new NVector3(0, 0);\r\n\r\n    inspection: boolean = true;\r\n\r\n    points: CPoint[] = [];\r\n\r\n    constructor() {\r\n        this.graphClustering = new GraphClustering(this);\r\n        this.renderer = new Renderer(this);\r\n    }\r\n    public push(vs: CPoint[]) {\r\n        this.points = vs;\r\n        this.update();\r\n    }\r\n    public mouseInteraction(x: number, y: number){\r\n        // this.mv = this.optimizer.getCellAtPoint(new NVector3(x, y)).vec;\r\n    }\r\n    public update(): void {\r\n        this.graphClustering.update();\r\n        // console.log(this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming);\r\n        // if (this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming) {\r\n        // this.initGrid(width, height);\r\n        // }\r\n    //     console.log(this);\r\n    }\r\n    public getCellAtPoint(dp: NVector3) {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isStationary: boolean) {\r\n        this.renderer.Render(ctx, isStationary)\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nimport { MouseEventData, MOUSE_TYPE } from '../lib';\r\nimport { Clustering, OPTIMIZER } from '../../Addon/Clustering/';\r\nimport { ClusteringCollisionBasedGraph } from '../../Addon/ClusteringCollisionBasedGraph';\r\n\r\nexport class Addon {\r\n    drawingEngine: DrawingEngine;\r\n    clustering: Clustering | undefined = undefined;\r\n    clusteringCollisionBasedGraph: ClusteringCollisionBasedGraph | undefined = undefined;\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n    }\r\n    async InitClustering() {\r\n        return import('../../Addon/Clustering/').then(({ Clustering }) => {\r\n\r\n            const  vs = this.drawingEngine.geometryCommon.getAllVecFromCPoint();\r\n\r\n            this.clustering = new Clustering(OPTIMIZER.GRID);\r\n            this.clustering.optimizer.rx = 9;\r\n            this.clustering.optimizer.ry = 5;\r\n            this.clustering.push(vs , this.drawingEngine.renderer.ctx.canvas.width, this.drawingEngine.renderer.ctx.canvas.height);\r\n\r\n\r\n        }).catch(err => {\r\n        //     console.log('Stop loading clustering Addon.'); console.log(err);\r\n        }); \r\n    }\r\n    async InitClusteringCollision() {\r\n        return import('../../Addon/Clustering/').then(({ Clustering }) => {\r\n\r\n            const  vs = this.drawingEngine.geometryCommon.getAllFromCPoint();\r\n\r\n            this.clusteringCollisionBasedGraph = new ClusteringCollisionBasedGraph();\r\n            // this.clusteringCollisionBasedGraph.optimizer.rx = 9;\r\n            // this.clusteringCollisionBasedGraph.optimizer.ry = 5;\r\n            this.clusteringCollisionBasedGraph.push(vs);\r\n\r\n\r\n        }).catch(err => {\r\n        //     console.log('Stop loading clustering Addon.'); console.log(err);\r\n        }); \r\n    }\r\n\r\n    \r\n    public mouseInteraction(e: MouseEventData) {\r\n        switch (e.type) {\r\n            case MOUSE_TYPE.LEFT:\r\n                break;\r\n            case MOUSE_TYPE.MIDDLE:\r\n                break;\r\n            case MOUSE_TYPE.RIGHT:\r\n                break;\r\n            case MOUSE_TYPE.DOUBLE:\r\n                break;\r\n            case MOUSE_TYPE.MOVE:\r\n                this.clustering?.mouseInteraction(e.x, e.y);\r\n                break;\r\n            case MOUSE_TYPE.DRAG:\r\n                break;\r\n            case MOUSE_TYPE.DOWN:\r\n                break;\r\n            case MOUSE_TYPE.UP:\r\n                break;\r\n            case MOUSE_TYPE.WHEEL:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.clustering?.render(ctx, isPanning, this.drawingEngine.renderer.ctx.canvas.width, this.drawingEngine.renderer.ctx.canvas.height);\r\n        // this.clusteringCollisionBasedGraph?.render(ctx, isPanning, this.drawingEngine.renderer.ctx.canvas.width, this.drawingEngine.renderer.ctx.canvas.height);\r\n        this.clusteringCollisionBasedGraph?.render(ctx, isPanning);\r\n    }\r\n\r\n}","import { DrawingEngine } from '../'\r\n\r\nexport class Customization {\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Renderer {\r\n\r\n    public drawingEngine: DrawingEngine;\r\n\r\n    private lastCalledTime: number = Date.now();\r\n    private delta: number = 1;\r\n    public fps: number = 30;\r\n\r\n    public ctx: CanvasRenderingContext2D;\r\n\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.ctx = ctx;\r\n        this.update(isPanning);\r\n        this.renderPost(ctx, isPanning);\r\n     }\r\n    public update( isPanning: boolean) {\r\n        for (let key in this.drawingEngine.scene.geoDict) {\r\n            this.drawingEngine.scene.geoDict[key].update( isPanning, this.drawingEngine.projection.toScreen );\r\n        }\r\n     }\r\n    public renderPost(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        for (let key in this.drawingEngine.scene.geoDict) {\r\n            this.drawingEngine.scene.geoDict[key].renderPost(ctx, isPanning );\r\n        }\r\n        this.ComputeFPS();\r\n    }\r\n    private ComputeFPS(){\r\n        this.delta = (Date.now() - this.lastCalledTime )/1000;\r\n        this.lastCalledTime = Date.now();\r\n        this.fps = 1 / this.delta;\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nimport { ACTIVE_UI } from '../lib';\r\nimport { GeometryBase } from '../Geometry/Base/GeometryBase';\r\nimport { CPoint } from '../Geometry/Point';\r\n\r\nexport class Scene {\r\n    public drawingEngine: DrawingEngine;\r\n    \r\n    public _capture: GeometryBase | undefined = undefined; \r\n    public geometryList : GeometryBase[] = [];\r\n    public pointList : CPoint[] = [];\r\n\r\n    public geoDict: {} = {};\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n    }\r\n    public get capture(): GeometryBase | undefined {\r\n        return this._capture;\r\n    }\r\n    public set capture(g: GeometryBase | undefined) {\r\n        if (g) {\r\n            this.drawingEngine.ableToPan = false;\r\n        } else {\r\n            this.drawingEngine.ableToPan = true;\r\n        }\r\n        // console.log(g);\r\n        this._capture = g;\r\n    }\r\n    public addGeometry(g: GeometryBase) {\r\n        this.geoDict[g.id] = g;\r\n        this.geometryList.push(g);\r\n        if(g.type === ACTIVE_UI.point) {\r\n            this.pointList.push(g as CPoint);\r\n        }\r\n    }\r\n\r\n}","\r\nimport { MouseEventData } from './lib';\r\n\r\nimport { ActiveCommandController } from './ActiveCommand';\r\nimport { Projection } from './Projection';\r\nimport { IO } from './IO/IO';\r\nimport { GeometryCommon } from './Geometry/GeometryCommon';\r\nimport { Addon } from './Addon';\r\nimport { Renderer } from './Renderer';\r\nimport { Scene } from './Scene';\r\nimport { KeyboardEventData } from '../../NJSCore';\r\n\r\n// import { tensor2d, tidy, Tensor2D } from '@tensorflow/tfjs';\r\n// import * as tf from '@tensorflow/tfjs';\r\n\r\n\r\nexport class DrawingEngine {\r\n\r\n    public activeCommand: ActiveCommandController;\r\n    public projection: Projection;\r\n    public geometryCommon: GeometryCommon;\r\n    public scene: Scene;\r\n    public addon: Addon;\r\n    public renderer: Renderer;\r\n    public io: IO;\r\n\r\n    _ableToPan: boolean = true;\r\n\r\n    constructor() {\r\n        this.io = new IO(this);\r\n        this.addon = new Addon(this);\r\n        this.projection = new Projection(this);\r\n        this.geometryCommon = new GeometryCommon(this);\r\n        this.activeCommand = new ActiveCommandController(this);\r\n        this.scene = new Scene(this);\r\n        this.renderer = new Renderer(this);\r\n    }\r\n\r\n    public apiCall(command: string): any {\r\n        return this.activeCommand.apiCall(command);\r\n    }\r\n    public updateProjection(projection: { toMap: (x: number, y: number) => number[] , toScreen: (x: number, y: number) => number[]} ){\r\n        this.projection.updateProjection(projection);\r\n    }\r\n    public setCommand(command: string = 'SELECT') {\r\n    //     console.log(command);\r\n        this.activeCommand.setCommander(command);\r\n    }\r\n    public mouseEvent(m: MouseEventData){\r\n        this.activeCommand.activeCommand.mouseEvent(m);\r\n\r\n        this.addon.mouseInteraction(m);\r\n    }\r\n    public keyEvent(m: KeyboardEventData){\r\n        // this.activeCommand.activeCommand.k(m);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.renderer.render(ctx, isPanning);\r\n\r\n        this.addon.render(ctx, isPanning);\r\n    }\r\n    public set ableToPan(v: boolean) {\r\n        this._ableToPan = v;\r\n        this.bindAbleToPan(v);\r\n        // this.definition.app.ableToPan = v;\r\n    }\r\n    public bindAbleToPan(v: boolean){\r\n\r\n    }\r\n}","import { NWindow } from '../../View/NWindow/NWindow';\r\nimport { JSAPIEnv } from '../../Environment/JSAPI';\r\n\r\nimport { NNAEngineV3 } from '../../NJSEngine/NNAEngineV3';\r\nimport { DrawingEngine } from '../../NJSEngine/DrawingEngine';\r\nimport { APP, KeyboardEventData, MouseEventData } from '../../NJSCore';\r\n\r\nimport { NJSSandbox } from '../';\r\n\r\nexport class BindingNNA {\r\n    njsSandbox: NJSSandbox;\r\n    drawingEngine: DrawingEngine;\r\n    nna: NNAEngineV3;\r\n    constructor(njsSandbox: NJSSandbox) {\r\n        this.njsSandbox = njsSandbox;\r\n    }\r\n    public async initBinding() {\r\n        // console.log(this);\r\n        this.njsSandbox.win = new NWindow(this.njsSandbox.div, 'NNA Engine V4 by NJSTUDIO', 1200, 600);\r\n\r\n        this.njsSandbox.env = await new JSAPIEnv(this.njsSandbox.win.getContext());\r\n\r\n        this.drawingEngine = new DrawingEngine();\r\n         this.drawingEngine.updateProjection({ \r\n            toMap: (x: number, y: number) => this.njsSandbox.env.projection.ToMap(x, y), \r\n            toScreen: (x: number, y: number) => this.njsSandbox.env.projection.ToScreen(x, y)\r\n        });\r\n         this.drawingEngine.bindAbleToPan = (v: boolean) => {\r\n            this.njsSandbox.env.ableToPan = v;\r\n            // this.nna\r\n        }\r\n\r\n        this.njsSandbox.env.appendEventListener( { \r\n            mouse: (m: MouseEventData) =>  this.drawingEngine.mouseEvent(m), \r\n            keyboard: (k: KeyboardEventData) =>  this.drawingEngine.keyEvent(k) \r\n        });\r\n\r\n        \r\n        this.nna = new NNAEngineV3();\r\n        this.nna.updateProjection({ \r\n            toMap: (x: number, y: number) => this.njsSandbox.env.projection.ToMap(x, y), \r\n            toScreen: (x: number, y: number) => this.njsSandbox.env.projection.ToScreen(x, y)\r\n        });\r\n        this.njsSandbox.env.appendEventListener( { \r\n            mouse: (m: MouseEventData) => this.nna.mouseEvent(m), \r\n            keyboard: (k: KeyboardEventData) => this.nna.keyEvent(k) \r\n        });\r\n\r\n        // ........................ append renderer \r\n        this.njsSandbox.env.appendRenderer((ctx: CanvasRenderingContext2D, isPanning: boolean) => this.nna.render(ctx, isPanning));\r\n        this.njsSandbox.env.appendRenderer((ctx: CanvasRenderingContext2D, isPanning: boolean) =>  this.drawingEngine.render(ctx, isPanning));\r\n\r\n\r\n        // ........................ append left menu \r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'save',\r\n            callBack: () =>  this.drawingEngine.setCommand('save')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'load',\r\n            callBack: () =>  this.drawingEngine.setCommand('load')\r\n        });\r\n        \r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Select',\r\n            callBack: () =>  this.drawingEngine.setCommand('SELECT')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Point',\r\n            callBack: () =>  this.drawingEngine.setCommand('POINT')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Line',\r\n            callBack: () =>  this.drawingEngine.setCommand('LINE')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Polyl',\r\n            callBack: () =>  this.drawingEngine.setCommand('POLYLINE')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Circle',\r\n            callBack: () =>  this.drawingEngine.setCommand('CIRCLE')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Rect',\r\n            callBack: () =>  this.drawingEngine.setCommand('RECTANGLE')\r\n        });\r\n\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'ZipData',\r\n            callBack: () =>  this.drawingEngine.apiCall('importZipData')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'clusterGrid',\r\n            callBack: () =>  this.drawingEngine.apiCall('importClustering')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'clusterCol',\r\n            callBack: () =>  this.drawingEngine.apiCall('importClusteringCollision')\r\n        });\r\n\r\n        \r\n        // ........................ append top menu\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'import',\r\n            width: 60,\r\n            callBack: () => this.nna.importDummyData(),\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Origin',\r\n            width: 60,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.NETWORK, 'addOrigins', this.drawingEngine.apiCall('getSelectedCPoint'));\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Destination',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.NETWORK, 'addDestinations', this.drawingEngine.apiCall('getSelectedCPoint'));\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Agent',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.AGENCY, 'runAgent', undefined);\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'pathOpti',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.GA, 'pathOptimization', this.drawingEngine.apiCall('getSelectedCPoint'));\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Inspection',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.controller.inspection = !this.nna.controller.inspection;\r\n                this.drawingEngine.activeCommand.inspection = !this.drawingEngine.activeCommand.inspection;\r\n                // this.njsSandbox.env.definition.controller.isInspectionMode = !this.njsSandbox.env.definition.controller.isInspectionMode;\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Capture',\r\n            width: 60,\r\n            callBack: () =>this.nna.apiCall(APP.NETWORK, 'capture', undefined )\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Download',\r\n            width: 60,\r\n            callBack: () => this.nna.apiCall(APP.NETWORK, 'download', undefined )\r\n        });  \r\n\r\n    }\r\n}","\r\nexport enum OPTIMIZER {\r\n    NONE = 'NONE',\r\n    GRID = 'GRID',\r\n    GRID_SCREEN = 'GRID_SCREEN',\r\n    COLLISION = 'COLLISION',\r\n    AGENT = 'AGENT',\r\n}","import { NVector3 } from '../lib';\r\n// import { GTYPE } from '../../../../../../../lib/Enumeration';\r\n// import { AGeometryBase } from '../../../../Common/Base/AGeometryBase';\r\n// import { GridBased } from '../';\r\n\r\nexport class GridSystemScreen {\r\n\r\n    public xInterval: number = 0;\r\n    public yInterval: number = 0;\r\n    public rx: number = 9;\r\n    public ry: number = 7;\r\n    public cells: Cell[][] = [];\r\n\r\n    public points: NVector3[] = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n    public update(width: number, height: number): void {\r\n        // console.log(this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming);\r\n        // if (this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming) {\r\n        this.initGrid(width, height);\r\n        // }\r\n    }\r\n    private initGrid(width: number, height: number) {\r\n        this.cells = [];\r\n        this.xInterval = width / (this.rx - 1);\r\n        this.yInterval = height / (this.ry - 1);\r\n\r\n        for(let y = 0; y < this.ry; y++){\r\n            const cellList: Cell[] = [];\r\n            for(let x = 0; x < this.rx; x++) {\r\n                cellList.push(new Cell(this, x, y));\r\n            }\r\n            this.cells.push(cellList);\r\n        }\r\n\r\n        for(let i = 0 ; i < this.points.length; ++i){\r\n            const p = this.points[i];\r\n            this.getCellAtPoint(p).push(p);\r\n        }\r\n        for(let y = 0; y < this.ry; ++y){\r\n            for(let x = 0; x < this.rx; ++x) {\r\n                if(this.cells[y][x].points.length < 2) {\r\n                    this.cells[y][x].isRenderable = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public getCellAtPoint(dp: NVector3) {\r\n        let i: number = (Math.round(dp.x / this.xInterval));\r\n        let j: number = (Math.round(dp.y / this.yInterval));\r\n        if (i >= this.rx) { i = this.rx - 1; }\r\n        if (j >= this.ry) { j = this.ry - 1; }\r\n        if (i < 0) { i = 0; }\r\n        if (j < 0) { j = 0; }\r\n        return this.cells[j][i];\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D){\r\n        for(let y = 0; y < this.cells.length; y++){\r\n            for(let x = 0; x < this.cells[y].length; x++) {\r\n                // if(this.cells[y][x]){\r\n                this.cells[y][x].draw(ctx);\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Cell {\r\n    grid: GridSystemScreen;\r\n    r0: number = 32 * 0.5;\r\n    r1: number = 48 * 0.5;\r\n    vec: NVector3;\r\n    vecRender: NVector3;\r\n    xI: number;\r\n    yI: number;\r\n    isHover: boolean = false;\r\n    points: NVector3[] = []\r\n    _isRenderable: boolean = true;\r\n    constructor(grid: GridSystemScreen, xI: number, yI: number) {\r\n    this.grid = grid;\r\n    this.xI = xI;\r\n    this.yI = yI;\r\n    this.vec = new NVector3(xI * this.grid.xInterval, yI * this.grid.yInterval);\r\n    // this.geometries = [];\r\n    }\r\n    public push(geo: NVector3){\r\n        geo.isRenderable = false;\r\n        this.points.push(geo);\r\n        this.vecRender = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vecRender.x += this.points[i].x;\r\n            this.vecRender.y += this.points[i].y;\r\n        }\r\n        this.vecRender.x /= this.points.length;\r\n        this.vecRender.y /= this.points.length;\r\n    }\r\n    public get isRenderable() {\r\n        return this._isRenderable;\r\n    }\r\n    public set isRenderable(v: boolean) {\r\n        if(!v) {\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.points[i].isRenderable = true;\r\n            }\r\n            this.points = [];\r\n        }\r\n        this._isRenderable = v;\r\n    }\r\n    // public IsInside(m: NVector3) {\r\n    // if(Distance(this.vec, m ) < this.r1 + 2) {\r\n    // this.isHover = true;\r\n    // return true;\r\n    // } else {\r\n    // this.isHover = false;\r\n    // return false;\r\n    // }\r\n    // }\r\n    public draw(ctx: CanvasRenderingContext2D, isPanning: boolean = false) {\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n    //     console.log(isPanning)\r\n        if (!this.isRenderable) { return; }\r\n        if (isPanning) {\r\n            this.vecRender = new NVector3(0, 0, 0);\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.vecRender.x += this.points[i].x;\r\n                this.vecRender.y += this.points[i].y;\r\n            }\r\n            this.vecRender.x /= this.points.length;\r\n            this.vecRender.y /= this.points.length;\r\n            // this.vec.y -= this.r * 0.5 // offset the ghost center along y\r\n        }\r\n        // ctx.beginPath();\r\n        // ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        // ctx.closePath();\r\n        const r = 5 + this.points.length * 0.1;\r\n        ctx.fillStyle = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.stroke = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.fill();\r\n        // console.log(this.geometries.length);\r\n        ctx.beginPath();\r\n        ctx.arc(this.vecRender.x, this.vecRender.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        // ctx.stroke();\r\n        ctx.fill();\r\n\r\n        // this.grid.optimizer.optimizer.optimizer.renderer.draw.shape.cluster.DrawingPresetClustering(ctx, this.geometries, this.vecRender, this.r0, this.r1, this.isHover);\r\n    }\r\n}","import { NVector3 } from '../lib';\r\n// import { GTYPE } from '../../../../../../../lib/Enumeration';\r\n// import { AGeometryBase } from '../../../../Common/Base/AGeometryBase';\r\n// import { GridBased } from '../';\r\n\r\nexport class GridSystemDynamic {\r\n\r\n    public xInterval: number = 0;\r\n    public yInterval: number = 0;\r\n    public width = 0;\r\n    public height = 0;\r\n    public rx: number = 9;\r\n    public ry: number = 7;\r\n    public cells: Cell[][] = [];\r\n\r\n    public points: NVector3[] = [];\r\n\r\n    public minP: NVector3 = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n    public maxP: NVector3 = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n\r\n    constructor() {\r\n        /* */\r\n    }\r\n    public update(width: number, height: number): void {\r\n        // console.log(this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming);\r\n        // if (this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming) {\r\n        this.initGrid(width, height);\r\n        // }\r\n    }\r\n    private initGrid(width: number, height: number) {\r\n        // console.log(width);\r\n        this.minP = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        this.maxP = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n\r\n        for(let i = 0 ; i < this.points.length; ++i){\r\n            const v = this.points[i];\r\n            if (this.minP.x > v.x) { this.minP.x = v.x; }\r\n            if (this.minP.y > v.y) { this.minP.y = v.y; }\r\n            if (this.minP.z > v.z) { this.minP.z = v.z; }\r\n\r\n            if (this.maxP.x < v.x) { this.maxP.x = v.x; }\r\n            if (this.maxP.y < v.y) { this.maxP.y = v.y; }\r\n            if (this.maxP.z < v.z) { this.maxP.z = v.z; }\r\n        }\r\n    //     console.log(this);\r\n\r\n        this.cells = [];\r\n        this.width = (this.maxP.x - this.minP.x);\r\n        this.height = (this.maxP.y - this.minP.y);\r\n\r\n    //     console.log('width', this.width, 'height', this.height)\r\n\r\n        this.xInterval = this.width / (this.rx - 1);\r\n        this.yInterval = this.height / (this.ry - 1);\r\n        \r\n    //     console.log('this.xInterval', this.xInterval, 'this.yInterval', this.yInterval)\r\n\r\n        for(let y = 0; y < this.ry; y++){\r\n            const cellList: Cell[] = [];\r\n            for(let x = 0; x < this.rx; x++) {\r\n                cellList.push(new Cell(this, x, y));\r\n            }\r\n            this.cells.push(cellList);\r\n        }\r\n\r\n        for(let i = 0 ; i < this.points.length; ++i){\r\n            const p = this.points[i];\r\n            this.getCellAtPoint(p).push(p);\r\n        }\r\n        for(let y = 0; y < this.ry; ++y){\r\n            for(let x = 0; x < this.rx; ++x) {\r\n                if(this.cells[y][x].points.length < 1) {\r\n                    this.cells[y][x].isRenderable = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public getCellAtPoint(dp: NVector3) {\r\n        // let dp: NVector3 = vec.Sub(this);\r\n        let i: number = (Math.round((dp.x - this.minP.x ) / this.xInterval));\r\n        let j: number = (Math.round((dp.y - this.minP.y  ) / this.yInterval));\r\n        if (i >= this.rx) { i = this.rx - 1; }\r\n        if (j >= this.ry) { j = this.ry - 1; }\r\n        if (i < 0) { i = 0; }\r\n        if (j < 0) { j = 0; }\r\n        return this.cells[j][i];\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D){\r\n\r\n        for(let y = 0; y < this.cells.length; y++){\r\n            for(let x = 0; x < this.cells[y].length; x++) {\r\n                // if(this.cells[y][x]){\r\n                this.cells[y][x].draw(ctx);\r\n                // }\r\n            }\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(this.minP.x, this.minP.y, this.maxP.x - this.minP.x, this.maxP.y - this.minP.y);\r\n        ctx.stroke();\r\n    }\r\n}\r\n\r\nclass Cell {\r\n\r\n    grid: GridSystemDynamic;\r\n    r0: number = 32 * 0.5;\r\n    r1: number = 48 * 0.5;\r\n    vec: NVector3;\r\n    vecRender: NVector3;\r\n    xI: number;\r\n    yI: number;\r\n    isHover: boolean = false;\r\n    points: NVector3[] = []\r\n    _isRenderable: boolean = true;\r\n\r\n    constructor(grid: GridSystemDynamic, xI: number, yI: number) {\r\n    this.grid = grid;\r\n    this.xI = xI;\r\n    this.yI = yI;\r\n    this.vec = new NVector3(grid.minP.x + (xI * this.grid.xInterval), grid.minP.y + (yI * this.grid.yInterval));\r\n//     console.log('x', this.vec.x, 'y', this.vec.y, )\r\n    // this.geometries = [];\r\n    }\r\n    public push(geo: NVector3){\r\n        geo.isRenderable = false;\r\n        this.points.push(geo);\r\n        this.vecRender = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vecRender.x += this.points[i].x;\r\n            this.vecRender.y += this.points[i].y;\r\n        }\r\n        this.vecRender.x /= this.points.length;\r\n        this.vecRender.y /= this.points.length;\r\n    }\r\n    public get isRenderable() {\r\n        return this._isRenderable;\r\n    }\r\n    public set isRenderable(v: boolean) {\r\n        if(!v) {\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.points[i].isRenderable = true;\r\n            }\r\n            this.points = [];\r\n        }\r\n        this._isRenderable = v;\r\n    }\r\n    // public IsInside(m: NVector3) {\r\n    // if(Distance(this.vec, m ) < this.r1 + 2) {\r\n    // this.isHover = true;\r\n    // return true;\r\n    // } else {\r\n    // this.isHover = false;\r\n    // return false;\r\n    // }\r\n    // }\r\n    public draw(ctx: CanvasRenderingContext2D, isPanning: boolean = false) {\r\n        if (!this.isRenderable) { \r\n            ctx.beginPath();\r\n            ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n            ctx.closePath();\r\n            ctx.stroke();    \r\n            return; \r\n        }\r\n\r\n\r\n\r\n        // console.log(isPanning)\r\n        if (isPanning) {\r\n            this.vecRender = new NVector3(0, 0, 0);\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.vecRender.x += this.points[i].x;\r\n                this.vecRender.y += this.points[i].y;\r\n            }\r\n            this.vecRender.x /= this.points.length;\r\n            this.vecRender.y /= this.points.length;\r\n            // this.vec.y -= this.r * 0.5 // offset the ghost center along y\r\n        }\r\n        // ctx.beginPath();\r\n        // ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        // ctx.closePath();\r\n        const r = 5 + this.points.length * 0.1;\r\n        ctx.fillStyle = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.stroke = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.fill();\r\n        // console.log(this.geometries.length);\r\n        ctx.beginPath();\r\n        ctx.arc(this.vecRender.x, this.vecRender.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        // ctx.stroke();\r\n        ctx.fill();\r\n\r\n\r\n        // ctx.fillStyle = '#ffffff';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.vec.x, this.vec.y, 20, 0, Math.PI * 2);\r\n        // ctx.closePath();\r\n        // // ctx.stroke();\r\n        // ctx.fill();\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        // this.grid.optimizer.optimizer.optimizer.renderer.draw.shape.cluster.DrawingPresetClustering(ctx, this.geometries, this.vecRender, this.r0, this.r1, this.isHover);\r\n    }\r\n}","import { NVector3 } from './lib';\r\nimport { OPTIMIZER } from './lib/enum';\r\nimport { GridSystemScreen } from './Core/GridSystemScreen';\r\nimport { GridSystemDynamic } from './Core/GridSystemDynamic';\r\n\r\nexport { OPTIMIZER }\r\nexport class Clustering {\r\n    optimizerType: OPTIMIZER;\r\n\r\n    optimizer: GridSystemDynamic | GridSystemScreen;\r\n\r\n    mv: NVector3 = new NVector3(0, 0);\r\n\r\n    inspection: boolean = true;\r\n\r\n    constructor(optimizer: OPTIMIZER) {\r\n        this.optimizerType = optimizer;\r\n        \r\n        switch (optimizer) {\r\n            case OPTIMIZER.GRID_SCREEN:\r\n                this.optimizer = new GridSystemScreen();\r\n                break;\r\n            case OPTIMIZER.GRID:\r\n                this.optimizer = new GridSystemDynamic();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        console.debug('clustering... v 0.1.5')\r\n    }\r\n    public push(vs: NVector3[], width: number, height: number) {\r\n        this.optimizer.points = vs;\r\n        this.update(width, height);\r\n    }\r\n    public mouseInteraction(x: number, y: number){\r\n        this.mv = this.optimizer.getCellAtPoint(new NVector3(x, y)).vec;\r\n    }\r\n    public update(width: number, height: number) {\r\n        this.optimizer.update(width, height);\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isStationary: boolean, width: number, height: number) {\r\n        if (isStationary) {\r\n            this.update(width, height);\r\n        }\r\n        this.optimizer.render(ctx)\r\n\r\n        if(this.mv){\r\n            ctx.fillStyle = '#00ff00';\r\n            ctx.beginPath();\r\n            ctx.arc(this.mv.x, this.mv.y,9, 0.0, 3.14 * 2)\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        \r\n\r\n    }\r\n\r\n}","\nexport const AABBintersect2D = (v0: NVector3[], v1: NVector3[]): boolean => {\n    const v0minX = v0[0].x;\n    const v0maxX = v0[1].x;\n    const v1minX = v1[0].x;\n    const v1maxX = v1[1].x;\n    const v0minY = v0[0].y;\n    const v0maxY = v0[1].y;\n    const v1minY = v1[0].y;\n    const v1maxY = v1[1].y;\n    // const v0minZ = 0;\n    // const v0maxZ = 0;\n    // const v1minZ = 0;\n    // const v1maxZ = 0;\n    return (v0minX <= v1maxX && v0maxX >= v1minX) &&\n        (v0minY <= v1maxY && v0maxY >= v1minY); // &&\n    // (v0minZ <= v1maxZ && v0maxZ >= v1minZ);\n};\nexport const distance = (v0: NVector3, v1: NVector3): number => {\n    return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n    // return NWebassemblyController.ctrller.Distance(v0.x, v0.y, v0.z, v1.x, v1.y, v1.z);\n}\n\nexport class NVector3 {\n    public static getMidVec(v0: NVector3, v1: NVector3): NVector3 {\n        return new NVector3(v0.x + ((v1.x - v0.x) * 0.5), v0.y + ((v1.y - v0.y) * 0.5), v0.z + ((v1.z - v0.z) * 0.5));\n    }\n    public static distanceTo(v0: NVector3, v1: NVector3): number {\n        return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n    }\n    public static Clone(v: NVector3): NVector3 {\n        return NVector3.DeepCopy(v);\n    }\n    public static DeepCopy(v: NVector3): NVector3 {\n        const out = new NVector3(v.x, v.y, v.z);\n        out.long = v.long; out.lat = v.lat;\n        // out.proX = v.proX; out.proY = v.proY; out.proZ = v.proZ;\n        return out;\n    }\n    public static Dot(a: NVector3, b: NVector3) {\n        return a.x * b.x + a.y * b.y + a.z * b.z;\n    }\n    public static ZAxis(): NVector3 {\n        return new NVector3(0, 0, 1);\n    }\n    public static YAxis(): NVector3 {\n        return new NVector3(0, 1, 0);\n    }\n    public static Zero(): NVector3 {\n        return new NVector3(0, 0, 0);\n    }\n    public static Origin(): NVector3 {\n        return new NVector3(0, 0, 0);\n    }\n    public x: number = 0;\n    public y: number = 0;\n    public z: number = 0;\n    public long: number = 0;\n    public lat: number = 0;\n    public elevation: number = 0;\n\n    public d: boolean = true;\n    public isRenderable: boolean = true;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    public Set(x: number, y: number, z: number): NVector3 {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public scale(v: number): NVector3 {\n        this.x *= v;\n        this.y *= v;\n        this.z *= v;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public Mult(v: number): NVector3 {\n        this.x *= v;\n        this.y *= v;\n        this.z *= v;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public DivByVal(v: number): NVector3 {\n        this.x /= v;\n        this.y /= v;\n        this.z /= v;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public DivByVec(v: NVector3): NVector3 {\n        this.x /= v.x;\n        this.y /= v.y;\n        this.z /= v.z;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public Add(v: NVector3): NVector3 {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public Sub(v: NVector3): NVector3 {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public Negate() {\n        this.x *= -1;\n        this.y *= -1;\n        this.z *= -1;\n        return new NVector3(this.x, this.y, this.z);\n    }\n    public Equals(v: NVector3) {\n        return this.x === v.x && this.y === v.y && this.z === v.z;\n    }\n    public distanceTo(v1: NVector3): number {\n        return NVector3.distanceTo(this, v1);\n    }\n    public normalize(): NVector3 {\n        let len: number = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        if (len < 0.0001) {\n            return this;\n        }\n        this.x = this.x / len;\n        this.y = this.y / len;\n        this.z = this.z / len;\n        return this;\n    }\n    public Clone(): NVector3 {\n        const other = new NVector3(this.x, this.y, this.z);\n        other.long = this.long; other.lat = this.lat; other.elevation = this.elevation;\n        return other;\n    }\n    public Length(): number {\n        const len = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        if (len < 0.00001) {\n            return 0.00001;\n        }\n        return len;\n    }\n    public Unitize(): NVector3 {\n        return this.normalize();\n    }\n    // public DistanceByArray(vs: number[]) {\n    //     return NVector3.DistanceByArray([this.x, this.y, this.z], vs);\n    //   }\n    //   public Distance2(v: NVector3): number {\n    //     return NVector3.Distance2(new NVector3(this.x, this.y, this.z), v);\n    //   }\n    //   public DotProduct(v: NVector3): number {\n    //     return NVector3.DotProduct(new NVector3(this.x, this.y, this.z), v);\n    //   }\n    //   public CrossProduct(v: NVector3): NVector3 {\n    //     return NVector3.CrossProduct(new NVector3(this.x, this.y, this.z), v);\n    //   }\n    //   public SquareLength(): number {\n    //     let len: number = NVector3.Length(new NVector3(this.x, this.y, this.z));\n    //     return len * len;\n    //   }\n    //   public FadeExp(attr: NVector3, dVal: number) {\n    //     let v = new NVector3(this.x, this.y, this.z);\n    //     v.Sub(attr);\n    //     return Math.exp(-dVal * v.SquareLength());\n    //   }\n    public GetAngle(): number {\n        return Math.atan2(this.y, this.x);\n    }\n    public GetAngleDegree() {\n        return 180 * this.GetAngle() / Math.PI;\n    }\n    public ToJSON() {\n        /* */\n    }\n    public ToString(): string {\n        let t: string = 'x: ' + this.x.toFixed(3).toString() + ' , y: ' + this.y.toFixed(3).toString() + ', z: ' + this.z.toFixed(3).toString();\n        return t;\n    }\n    public ToFloat32Array() {\n        return new Float32Array([this.x, this.y, this.z]);\n    }\n}\n\n\nexport class CPoint {\n    public vec: NVector3;\n    public id: string = '';\n    public numVisit: number = 0;\n\n    public isCollapse: boolean = false;\n\n    public isHidden: boolean = false;\n    public isRenderable: boolean = true;\n\n    public isSelected: boolean = false;\n    public isHover: boolean = false;\n    public collision: Collision;\n    constructor(x: number, y: number) {\n        this.vec = new NVector3(x, y, 0);\n        this.collision = new Collision(this);\n    }\n}\nexport class Collision {\n    base: CPoint;\n    isCollided: boolean = false;\n\n    neighborShapes: CPoint[] = [];\n\n    minVec: NVector3;\n    maxVec: NVector3;\n\n    isVisited: boolean = false;\n    numOrder: number = -1;\n\n    constructor(base: CPoint) {\n        this.base = base;\n        const r = 5;\n        this.minVec = new NVector3(this.base.vec.x - r, this.base.vec.y - r, 0);\n        this.maxVec = new NVector3(this.base.vec.x + r, this.base.vec.y + r, 0);\n    }\n    public Reset(){\n        this.neighborShapes = [];\n        this.numOrder = -1;\n        this.base.numVisit = 0;\n        this.base.isCollapse = false;\n        this.isCollided = false;\n        this.isVisited = false;\n    }\n}"],"names":["Controller","constructor","window","this","addIconTopPanel","param","btn","document","createElement","style","width","zIndex","position","border","textContent","text","onclick","callBack","builder","divFulldownArea","appendChild","addToggleTopPanel","addIconLeftPanel","height","color","background","onmouseenter","onmouseleave","divLeftUI","addIconLeft","Builder","divMain","divMainBody","divTopArea","divBottomArea","divForGraphicContext","colorTopMenu","colorBGmenu","initPanel","titleString","initDivMain","initDivTopArea","initDivFulldownArea","box","float","padding","title","initDivContextArea","initDivLeftArea","id","closeBtn","top","left","remove","initBottomArea","bottomToolbarArea","bottomTextarea","isPressed","prePos","ondrag","e","onmousemove","xOff","clientX","yOff","clientY","parseFloat","onmousedown","updateZindex","onmouseup","onmouseout","appendCloseTop","hostDiv","bootom","updateResize","setTimeout","divHost","NWindow","controller","getContext","removeChild","IO","app","OpenGeoJsonEx01","path","ArcGIS","AppendMapViewEvent","mapView","watch","renderer","isPanning","on","canvas","ResizeCanvas","Projection","App","ToMap","x","y","mp","toMap","clone","longitude","latitude","ToScreen","long","lat","mPoint","spatialReference","p","toScreen","ToScreenFromProjected","ToScreenFromGeoPos","ToScreenFromProjectedPos","proX","proY","ToScreenOld","wkid","Canvas","t","frameRate","ctx","xOffCurrent","yOffCurrent","xOffPre","yOffPre","zoomFactor","zoomFactorPre","zoomFactorCurrent","div3d","smoothingEnabled","dropRate","isRenderSkip","isLoop","timeLastRender","delta","now","then","interval","last","frameVisTimer","theDate","asyncSafeGuard","pointerEvents","globalCompositeOperation","clientWidth","clientHeight","Start","Init","Draw","requestAnimationFrame","Clear","Render","clearRect","EventInteraction","mouseEventDataPre","MouseEventData","InitArcGISMapEventV4x","ev","CommonEventBuilderArcGIS","type","MOUSE_TYPE","native","button","MouseEvent","ableToPan","stopPropagation","key","slice","KeyDownJSAPI4X","MouseClickLeftArcGIS","mEvent","preX","preY","yGLPicking","target","getBoundingClientRect","bottom","pressedShift","shiftKey","pressedAlt","altKey","pressedCtrl","ctrlKey","k","kEventData","CommonEventBuilder","KeyEvent","kEvent","KeyboardEventData","keyCode","code","hasCtrlKey","hasShiftKey","hasAltKey","hasMetaCommand","metaKey","Renderer","sandbox","num","i","length","JSAPIEnv","idDiv","map","arcGIS","io","projection","eventInteraction","keyEvents","MouseEvents","Map","basemap","MapView","container","center","zoom","when","SpatialReference","appendRenderer","fn","push","appendEventListener","event","mouse","keyboard","m","remap","CValue","OldMin","OldMax","NewMin","NewMax","getRandomArbitrary","min","max","Math","random","GraphView","HTMLView","div","networkUI","undefined","apiCall","APP","reset","removePanelNetwork","initPanelNetwork","nnaEngine","inspection","NVector3","dataOrigins","destinationOrigins","action","data","view","core","graphSystem","initByCPoint","initByCPoints","initByCPointsBackpro","initAgentVis","agencySystem","gaSystem","mouseEvent","getPath","pointData","update","Node","vec","distanceTo","node","Path","pathsOrigin","nodes","fitness","distance","generateIndividual","cityIndex","setCityInit","array","temporaryValue","randomIndex","currentIndex","floor","shuffle","city","getFitness","getDistance","tourDistance","fromNode","otherNode","containsCity","Population","populationSize","initialise","paths","newTour","getFittestPath","fittest","other","GeneticAlgorithm","tourmanager","mutationRate","nodeSize","elitism","evolvePopulation","pop","newPopulation","elitismOffset","thePath","parent1","tournamentSelection","parent2","child","crossover","mutate","startPos","endPos","place","ii","tourPos1","tourPos2","city1","city2","populationNew","randomId","GASystem","seed","cities","placesAll","ga","pathFittest","timer","cost","Number","MAX_VALUE","pos","mask","m_w","m_z","init","mouseClick","tournamentSize","population_size","goePos","v","optimize","result","render","isPan","fillStyle","strokeStyle","lineWidth","p0","p1","beginPath","moveTo","lineTo","closePath","stroke","arc","PI","fill","AgencySystem","Analysis","gs","Graph","graphCore","edges","minPt","maxPt","MIN_VALUE","nodeOrigin","initGraph","lns","AddEdgeByLines","elevation","AddNode","AddEdge","n1","n2","testedEdge","FindEdge","edge","Edge","point","n0","FindClosestNode","index","disMin","d","updatePropagation","originTree","Optimizer","Beta","networkDistance","euclideanDistance","n","updatePropagationByNode","updatePropagationByNodes","origins","origin","queue","current","dis","distanceToGeo","shift","j","np","newcost","newtemp","updateBackpropagation","vs","destination","smallest","countVisit","CONNECTIVITY","GetMidPoint","updateScreenPos","countOrigin","countDestination","countVisitTemp","z","deepCopy","sv","Tree","gc","nodeDestinations","pointOrigin","polylines","duplicateGraph","updateOriginByPt","graph","desID","GetPathsPolylines","pls","pl","NPolyline","id0","id1","costFnDistanceGeo","meterFromGeoGPSPos","GraphCore","trees","destinations","idDestination","setUnit","unit","computePath","BETA","computePathWeighted","oWeight","dWeight","mergeAgents","tree","Properties","RendererGraph","BoidsBehaviors","start","end","selPath","time","properties","cols","getFalseColor","font","fillText","toFixed","selPathId","MAX_SAFE_INTEGER","mx","my","COLORBLENDING","setLineDash","theDis","distanceToXY","lineDashOffset","Update","BoidsPath","r","GetNodes","Boid","posX","posY","totalMass","MAX_FORCE","velocity","maxVelocity","desired","steering","mass","boidsPath","currentNode","pathDir","rotation","preVec","avoidance","ahead","alpha","isOriented","activeBase64ID","angle","MAX_VELOCITY","Truncate","CollisionAvoidance","mostThreatening","tv","Clone","normalize","scale","MAX_AVOID_AHEAD","Length","Add","AVOID_FORCE","Distance","a","b","sqrt","GetAngle","vector","atan2","PathFollowing","AddVecHistory","DrawTail","img","Image","src","save","globalAlpha","translate","rotate","drawImage","restore","DrawShape","DrawForces","DrawForceVector","force","Seek","Sub","MAX_QUEUE_AHEAD","MAX_QUEUE_RADIUS","MAX_SEPARATION","SEPARATION_RADIUS","boids","instance","InitPathByAPolyline","numBoid","InitBoid","InitPathByNode","InitPath","numPath","maxPathNodes","boid","ShiftSpeed","IncreasePathRadius","showForces","DecreasePathRadius","ToggleShowForces","ShiftRadius","ShiftForce","ShiftOriented","drawPath","drawPathPoint","drawCircle","radius","IsOrient","GraphSystem","analysis","renderGraph","initTwoPoint","cps","ends","VoxelSystem","Core","voxelSystem","geoPos","NNAEngineV3","fetch","response","catch","err","lastCalledTime","Date","fps","getAllUrlParams","importDummyData","url","importCSV","CSVData","ComputeCSV","initLines","lineTest","updateProjection","execution","keyEvent","ComputeFPS","CommandBase","activeCommandController","COMMAND","MouseLeftClickPre","MouseMiddleClickPre","MouseRightClickPre","MouseDoubleClickPre","MouseMovePre","MouseDragPre","MouseDownPre","MouseUpPre","MouseWheelPre","MouseDown","drawingEngine","scene","capture","geometryCommon","find","MouseLeftClick","isSelected","resetSelections","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","updateHover","MouseDrag","mv","MouseWheel","Collision","geometryBase","isCollided","neighborShapes","minVec","maxVec","isVisited","numOrder","Reset","numVisit","isCollapse","GeometryBase","isHidden","isRenderable","isHover","collision","getTime","replace","c","toString","getUUID","toJson","isInside","renderPost","CPoint","super","colorHover","ACTIVE_UI","isCustom","sin","CommandSelect","CommandPoint","addGeometry","hasShift","setCommand","CommandLine","ActiveCommandController","activeCommand","commands","SELECT","POINT","LINE","setCommander","commander","command","getSelCPoint","popZipData","addon","InitClustering","InitClusteringCollision","json","fetchJson","count","greatePointByGeoPos","spos","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getData","val","getError","console","error","sendData","GeometryCommon","geoDict","geometryList","getAllVecFromCPoint","pointList","getAllFromCPoint","PointCluster","geometries","points","r0","r1","boundingBoxMin","boundingBoxMax","MIN_SAFE_INTEGER","GridResolution","tempVecGridList","tempGeoGridList","UpdateBoundingBox","IsInside","AddPost","geo","includes","NeedDecompose","Split","DeepRemove","xNum","yNum","grid","buildGrid","BuildSubCluster","Merge","concat","RemoveCluster","gridList","theY","geoMat","theX","geoList","GetCellAtPoint","clustersRPoint","dp","round","UpdateTimeer","optimizer","rect","InitGeometry","addClusterByGeometries","cluster","splice","indexOf","isStationary","GraphClustering","updatePoints","BuildConnectivity","initGeometry","buildGraph","PostUpdateCollisionBasedonGraph","graphs","SplitClusters","PostMergeCluster","outGraphList","pt","listPoints","AABBintersect2D","outList","ptList","safeguard","debug","UpdateByQueue","remain","clusterGraph","clusters","PostMergeClusterCompute","ClusteringCollisionBasedGraph","graphClustering","mouseInteraction","getCellAtPoint","Addon","clustering","clusteringCollisionBasedGraph","async","Clustering","OPTIMIZER","rx","ry","Scene","_capture","g","DrawingEngine","_ableToPan","bindAbleToPan","BindingNNA","njsSandbox","nna","win","env","GridSystemScreen","xInterval","yInterval","cells","initGrid","cellList","Cell","draw","xI","yI","vecRender","_isRenderable","GridSystemDynamic","minP","maxP","optimizerType","GRID_SCREEN","GRID","v0","v1","v0minX","v0maxX","v1minX","v1maxX","v0minY","v0maxY","v1minY","v1maxY","DeepCopy","out","Set","Mult","DivByVal","DivByVec","Negate","Equals","len","Unitize","GetAngleDegree","ToJSON","ToString","ToFloat32Array","Float32Array","base"],"sourceRoot":""}