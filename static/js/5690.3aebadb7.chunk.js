"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[5690],{55690:function(t,e,i){i.r(e),i.d(e,{Renderer:function(){return n},Solution:function(){return h}});var s=i(55913);class h{constructor(t){this.divHost=void 0,this.renderer=void 0,this.divHost=t,this.divHost.style.display="flex",this.divHost.style.alignItems="center";const e=document.createElement("div");e.style.marginLeft="auto",e.style.marginRight="auto",e.style.backgroundColor="#555",e.style.width="1000px",e.style.height="600px",this.divHost.appendChild(e),this.renderer=new n(e);let i=document.createElement("div");e.appendChild(i),i.textContent="Reset",i.onclick=()=>{this.renderer.Build()};const s=g("Connectivity");e.appendChild(s.div),s.checkBox.checked=!1,s.checkBox.onchange=()=>{console.log(s.checkBox.checked),!0===s.checkBox.checked?this.renderer.connectionDiagonal=!0:this.renderer.connectionDiagonal=!1},i=document.createElement("div"),e.appendChild(i),i.textContent="Play and Stop toggle",i.onclick=()=>{this.renderer.playToggle=!this.renderer.playToggle};const h=a("Heuristic intensity",0,1e3);e.appendChild(h.div),h.slider.oninput=()=>{const t=1/+h.slider.value-.001;this.renderer.graph.heuristicConst=t}}destroy(){for(this.renderer.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}const o=(t,e,i,s)=>{t.fillStyle=i,t.beginPath(),t.rect(e.x*s,e.y*s,s-1,s-1),t.closePath(),t.fill()};class n extends s.bb{constructor(t){super(t),this.w=0,this.h=0,this.cols=0,this.rows=0,this.cellSize=20,this.gridWidth=0,this.gridHeight=0,this.chanceOfWalls=.35,this.connectionDiagonal=!1,this.graph=void 0,this.playToggle=!0,this.frame=0,this.divTextIteration=void 0,this.canvas.style.position="relative",this.canvas.style.width="100%",this.canvas.style.height="100%",this.divTextIteration=document.createElement("div"),t.appendChild(this.divTextIteration),this.Build(),this.start()}render(t){if(this.playToggle){this.graph.propagation();this.divTextIteration.textContent="".concat(this.frame++," iterations")}this.graph.doneComputation&&this.Build();for(let e=0;e<this.cols;e++)for(let i=0;i<this.rows;i++){const s=this.graph.grid[e][i];let h="rgb(190, 190, 190)";s.blocked&&(h="rgba(0, 0, 0, 0.9)"),s===this.graph.endNode&&(h="rgba(255, 0, 255, 0.9)"),o(t,s,h,this.cellSize)}for(let e=0;e<this.graph.openNodes.length;e++){const i=this.graph.openNodes[e];o(t,i,"rgb(0, 0, 255)",this.cellSize)}for(let e=0;e<this.graph.closedNodes.length;e++){const i=this.graph.closedNodes[e];o(t,i,"rgb(255, 0, 0)",this.cellSize)}for(let e=0;e<this.graph.path.length;e++){const i=this.graph.path[e];o(t,i,"rgb(0, 255, 0)",this.cellSize)}for(let e=0;e<this.cols;e++)for(let i=0;i<this.rows;i++){const s=this.graph.grid[e][i];if(!s.blocked)for(let e=0;e<s.neighbors.length;++e)t.strokeStyle="#fff",t.lineWidth=.58,t.beginPath(),t.moveTo(this.cellSize*s.x+.5*this.cellSize,this.cellSize*s.y+.5*this.cellSize),t.lineTo(this.cellSize*s.neighbors[e].x+.5*this.cellSize,this.cellSize*s.neighbors[e].y+.5*this.cellSize),t.stroke()}}Build(){this.frame=0,this.w=this.canvas.width,this.h=this.canvas.height,this.cols=Math.floor(this.w/this.cellSize),this.rows=Math.floor(this.h/this.cellSize),this.gridWidth=this.w,this.gridHeight=this.h,this.graph=new r,this.graph.connectionDiagonal=this.connectionDiagonal;for(let t=0;t<this.cols;t++)for(let e=0;e<this.rows;e++){void 0===this.graph.grid[t]&&(this.graph.grid[t]=[]);const i=new l(t,e);Math.random()<this.chanceOfWalls&&(i.blocked=!0),this.graph.grid[t][e]=i}this.graph.startNode=this.getRandomCell(),this.graph.startNode.blocked=!1,this.graph.endNode=this.getRandomCell(),this.graph.endNode.blocked=!1;for(let t=0;t<this.cols;t++)for(let e=0;e<this.rows;e++)this.graph.buildConnection(this.graph.grid[t][e],this.cols,this.rows);this.graph.openNodes.push(this.graph.startNode)}getRandomCell(){return this.graph.grid[Math.floor(Math.random()*this.cols)][Math.floor(Math.random()*this.rows)]}}class r{constructor(){this.grid=[],this.openNodes=[],this.closedNodes=[],this.startNode=void 0,this.endNode=void 0,this.path=[],this.heuristicConst=1,this.doneComputation=!1,this.connectionDiagonal=!1,this.buildConnection=(t,e,i)=>{if(t.blocked)return;let s=t.x,h=t.y;s<e-1&&(this.grid[s+1][h].blocked||t.neighbors.push(this.grid[s+1][h])),h<i-1&&(this.grid[s][h+1].blocked||t.neighbors.push(this.grid[s][h+1])),s>0&&(this.grid[s-1][h].blocked||t.neighbors.push(this.grid[s-1][h])),h>0&&(this.grid[s][h-1].blocked||t.neighbors.push(this.grid[s][h-1])),this.connectionDiagonal&&(console.log(this.connectionDiagonal),s>0&&h>0&&(this.grid[s-1][h-1].blocked||t.neighbors.push(this.grid[s-1][h-1])),s<e-1&&h<i-1&&(this.grid[s+1][h+1].blocked||t.neighbors.push(this.grid[s+1][h+1])),s>0&&h<i-1&&(this.grid[s-1][h+1].blocked||t.neighbors.push(this.grid[s-1][h+1])),s<e-1&&h>0&&(this.grid[s+1][h-1].blocked||t.neighbors.push(this.grid[s+1][h-1])))}}gePath(){let t,e=this.grid[0].length*this.grid.length;for(;e--;)if(t=this.propagation(),void 0!==t&&t.length)return t;return t}propagation(){if(!(this.openNodes.length>0))return this.doneComputation=!0,this.path;{let t=0;for(let h=0;h<this.openNodes.length;h++)this.openNodes[h].f<this.openNodes[t].f&&(t=h),this.openNodes[h].f===this.openNodes[t].f&&this.openNodes[h].g>this.openNodes[t].g&&(t=h);let e=this.openNodes[t];if(e===this.endNode)return this.doneComputation=!0,this.path;this.path=[];let i=e;for(;i.previous;)this.path.push(i.previous),i=i.previous;this.openNodes.splice(this.openNodes.indexOf(e),1),this.closedNodes.push(e);let s=e.neighbors;for(let h=0;h<s.length;h++){let t=s[h];if(!this.closedNodes.includes(t)&&!t.blocked){let i=e.g+d(t,e)*this.heuristicConst;if(this.openNodes.includes(t))continue;this.openNodes.push(t),t.g=i,t.h=d(t,this.endNode),t.f=t.g+t.h,t.previous=e}}}}}class l{constructor(t,e){this.f=0,this.h=0,this.g=0,this.x=0,this.y=0,this.z=0,this.neighbors=[],this.previous=void 0,this.blocked=!1,this.f=0,this.h=0,this.g=0,this.x=t,this.y=e,this.neighbors=[],this.blocked=!1}}const d=(t,e)=>{let i=0;return i=c(t.x,t.y,t.z,e.x,e.y,e.z),i},c=(t,e,i,s,h,o)=>Math.sqrt((t-s)*(t-s)+(e-h)*(e-h)+(i-o)*(i-o)),a=(t,e,i)=>{const s=document.createElement("div");s.style.display="flex";const h=document.createElement("input");h.type="range",h.min="".concat(e),h.max="".concat(i);const o=document.createElement("div");return o.textContent=t,o.style.color="#aaa",s.appendChild(h),s.appendChild(o),{div:s,slider:h}},g=t=>{const e=document.createElement("div");e.style.display="flex";const i=document.createElement("input");i.type="checkbox",i.defaultChecked=!1;const s=document.createElement("div");return s.textContent=t,s.style.color="#aaa",e.appendChild(i),e.appendChild(s),{div:e,checkBox:i}}}}]);
//# sourceMappingURL=5690.3aebadb7.chunk.js.map