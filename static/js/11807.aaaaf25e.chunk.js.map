{"version":3,"file":"static/js/11807.aaaaf25e.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent02.ts"],"sourcesContent":["import { IndependentPanelCanvas } from '../../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// import { TFUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            const b = document.createElement('button');\r\n            b.textContent = 'run';\r\n            b.style.position = 'absolute';\r\n            b.style.left = '650px';\r\n            b.onclick = () => {\r\n                console.log(this);\r\n            };\r\n            this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n                return 0\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, -0.9, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    Init() {\r\n        console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        // for (let i = -10; i < 10; ++i) {\r\n        //     for (let j = -10; j < 10; ++j) {\r\n        //         ctx.beginPath();\r\n        //         ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        //         ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n        //         ctx.closePath();\r\n        //         ctx.fill();\r\n        //     }\r\n        // }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.Grid(ctx);\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            // return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n            return this.tfLinearRegression.predict2d(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 1;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}"],"names":["DefinitionIndeCanvasCore","constructor","scene","width","height","indeCanvas","mOffX","mOffY","this","definitions","push","InitIndeCanvas","implementation","app","needUI","IndependentPanelCanvas","viewController","NUIWrapper","NUI","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","canvas","Init","MouseMove","x","y","MouseMovePre","IsMouseInsidePanel","vec","HeadHeight","MouseDown","MouseDownPre","MouseUp","MouseUpPre","MouseDrag","MouseDragPre","MouseLeftClick","MouseLeftClickPre","MouseMiddleClick","MouseMiddleClickPre","MouseRightClick","MouseRightClickPre","MouseDoubleClick","MouseDoubleClickPre","MouseWheel","v","MouseWheelPre","TFPolynomialRegressionGradientDescent02","tfProjct","super","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","vsTemp","selVec","undefined","tfLinearRegression","t","InitData","InitUI","div","document","createElement","style","position","left","color","textContent","append","divHost","getElementById","b","onclick","console","log","model","modelViewCoreWrapper","viewWrapper","TFDataUtility","then","d","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","map","data","NVector3","MathUtility","tf","PolynomialRegression","MapX","MapY","Grid","fillStyle","beginPath","rect","closePath","fill","pop","length","xx","yy","i","train","RenderLine","arc","Math","PI","curveX","ys","predict2d","curveY","dataSync","dispose","lineWidth","strokeStyle","moveTo","lineTo","stroke","weights","bias","dim","leraningRate","optimizer","weight","random","print","predict1d","mul","add","square","predict3d","pow","predict4d","predict5d","predict","loss","pred","label","sub","mean","xVal","yVal","xs","minimize","numTensors"],"sourceRoot":""}