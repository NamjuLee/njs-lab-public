{"version":3,"file":"static/js/50690.df6f17fa.chunk.js","mappings":"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","sources":["../node_modules/concaveman/index.js","../node_modules/point-in-polygon/flat.js","../node_modules/point-in-polygon/index.js","../node_modules/point-in-polygon/nested.js","../node_modules/rbush/rbush.min.js","../node_modules/robust-predicates/umd/orient2d.min.js","../node_modules/tinyqueue/index.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/feature.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/reverse.js","../node_modules/topojson-client/src/stitch.js","../node_modules/@turf/tin/index.ts","../node_modules/@turf/clone/index.ts","../node_modules/topojson-client/src/merge.js","../node_modules/@turf/concave/node_modules/topojson-server/src/object.js","../node_modules/@turf/concave/node_modules/topojson-server/src/hash/hashmap.js","../node_modules/@turf/concave/node_modules/topojson-server/src/hash/point-equal.js","../node_modules/@turf/concave/node_modules/topojson-server/src/hash/point-hash.js","../node_modules/@turf/concave/node_modules/topojson-server/src/join.js","../node_modules/@turf/concave/node_modules/topojson-server/src/hash/hashset.js","../node_modules/@turf/concave/node_modules/topojson-server/src/cut.js","../node_modules/@turf/concave/node_modules/topojson-server/src/geometry.js","../node_modules/@turf/concave/node_modules/topojson-server/src/topology.js","../node_modules/@turf/concave/node_modules/topojson-server/src/bounds.js","../node_modules/@turf/concave/node_modules/topojson-server/src/prequantize.js","../node_modules/@turf/concave/node_modules/topojson-server/src/dedup.js","../node_modules/@turf/concave/node_modules/topojson-server/src/extract.js","../node_modules/@turf/concave/node_modules/topojson-server/src/delta.js","../node_modules/@turf/concave/lib/turf-line-dissolve.ts","../node_modules/@turf/concave/lib/turf-dissolve.ts","../node_modules/@turf/concave/lib/turf-polygon-dissolve.ts","../node_modules/@turf/concave/index.ts","../node_modules/@turf/distance/index.ts","../node_modules/@turf/invariant/index.ts"],"sourcesContent":["'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nvar orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\n// Fix for require issue in webpack https://github.com/mapbox/concaveman/issues/18\nif (Queue.default) {\n    Queue = Queue.default;\n}\n\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = new RBush(16);\n    tree.toBBox = function (a) {\n        return {\n            minX: a[0],\n            minY: a[1],\n            maxX: a[0],\n            maxY: a[1]\n        };\n    };\n    tree.compareMinX = function (a, b) { return a[0] - b[0]; };\n    tree.compareMinY = function (a, b) { return a[1] - b[1]; };\n\n    tree.load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = new RBush(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new Queue([], compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\nfunction cross(p1, p2, p3) {\n    return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 &&\n        cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nfunction compareByX(a, b) {\n    return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\n\nfunction convexHull(points) {\n    points.sort(compareByX);\n\n    var lower = [];\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [];\n    for (var ii = points.length - 1; ii >= 0; ii--) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n            upper.pop();\n        }\n        upper.push(points[ii]);\n    }\n\n    upper.pop();\n    lower.pop();\n    return lower.concat(upper);\n}\n","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).predicates={})}(this,function(t){\"use strict\";const e=134217729,n=33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const f=33306690738754716e-32,i=22204460492503146e-32,u=11093356479670487e-47,c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=f*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}(4,c),K=i*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=u*h+n*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,\"__esModule\",{value:!0})});\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","export default function(x) {\n  return x;\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n","// http://en.wikipedia.org/wiki/Delaunay_triangulation\n// https://github.com/ironwallaby/delaunay\nimport { FeatureCollection, Point, Polygon } from \"geojson\";\nimport { featureCollection, polygon } from \"@turf/helpers\";\n\ninterface Pt {\n  x: number;\n  y: number;\n  z?: number;\n  __sentinel?: boolean;\n}\ninterface Vertice {\n  x: number;\n  y: number;\n}\n\n/**\n * Takes a set of {@link Point|points} and creates a\n * [Triangulated Irregular Network](http://en.wikipedia.org/wiki/Triangulated_irregular_network),\n * or a TIN for short, returned as a collection of Polygons. These are often used\n * for developing elevation contour maps or stepped heat visualizations.\n *\n * If an optional z-value property is provided then it is added as properties called `a`, `b`,\n * and `c` representing its value at each of the points that represent the corners of the\n * triangle.\n *\n * @name tin\n * @param {FeatureCollection<Point>} points input points\n * @param {String} [z] name of the property from which to pull z values\n * This is optional: if not given, then there will be no extra data added to the derived triangles.\n * @returns {FeatureCollection<Polygon>} TIN output\n * @example\n * // generate some random point data\n * var points = turf.randomPoint(30, {bbox: [50, 30, 70, 50]});\n *\n * // add a random property to each point between 0 and 9\n * for (var i = 0; i < points.features.length; i++) {\n *   points.features[i].properties.z = ~~(Math.random() * 9);\n * }\n * var tin = turf.tin(points, 'z');\n *\n * //addToMap\n * var addToMap = [tin, points]\n * for (var i = 0; i < tin.features.length; i++) {\n *   var properties  = tin.features[i].properties;\n *   properties.fill = '#' + properties.a + properties.b + properties.c;\n * }\n */\nfunction tin(\n  points: FeatureCollection<Point, any>,\n  z?: string\n): FeatureCollection<Polygon> {\n  // break down points\n  let isPointZ = false;\n  return featureCollection(\n    triangulate(\n      points.features.map((p) => {\n        const point: Pt = {\n          x: p.geometry.coordinates[0],\n          y: p.geometry.coordinates[1],\n        };\n        if (z) {\n          point.z = p.properties[z];\n        } else if (p.geometry.coordinates.length === 3) {\n          isPointZ = true;\n          point.z = p.geometry.coordinates[2];\n        }\n        return point;\n      })\n    ).map((triangle: any) => {\n      const a = [triangle.a.x, triangle.a.y];\n      const b = [triangle.b.x, triangle.b.y];\n      const c = [triangle.c.x, triangle.c.y];\n      let properties = {};\n\n      // Add z coordinates to triangle points if user passed\n      // them in that way otherwise add it as a property.\n      if (isPointZ) {\n        a.push(triangle.a.z);\n        b.push(triangle.b.z);\n        c.push(triangle.c.z);\n      } else {\n        properties = {\n          a: triangle.a.z,\n          b: triangle.b.z,\n          c: triangle.c.z,\n        };\n      }\n\n      return polygon([[a, b, c, a]], properties);\n    })\n  );\n}\n\nclass Triangle {\n  public a: Pt;\n  public b: Pt;\n  public c: Pt;\n  public x: number;\n  public y: number;\n  public r: number;\n\n  constructor(a: Pt, b: Pt, c: Pt) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n\n    const A = b.x - a.x;\n    const B = b.y - a.y;\n    const C = c.x - a.x;\n    const D = c.y - a.y;\n    const E = A * (a.x + b.x) + B * (a.y + b.y);\n    const F = C * (a.x + c.x) + D * (a.y + c.y);\n    const G = 2 * (A * (c.y - b.y) - B * (c.x - b.x));\n    let dx;\n    let dy;\n\n    // If the points of the triangle are collinear, then just find the\n    // extremes and use the midpoint as the center of the circumcircle.\n    this.x = (D * E - B * F) / G;\n    this.y = (A * F - C * E) / G;\n    dx = this.x - a.x;\n    dy = this.y - a.y;\n    this.r = dx * dx + dy * dy;\n  }\n}\n\nfunction byX(a: Pt, b: Pt) {\n  return b.x - a.x;\n}\n\nfunction dedup(edges: number[]) {\n  let j = edges.length;\n  let a;\n  let b;\n  let i;\n  let m;\n  let n;\n\n  outer: while (j) {\n    b = edges[--j];\n    a = edges[--j];\n    i = j;\n    while (i) {\n      n = edges[--i];\n      m = edges[--i];\n      if ((a === m && b === n) || (a === n && b === m)) {\n        edges.splice(j, 2);\n        edges.splice(i, 2);\n        j -= 2;\n        continue outer;\n      }\n    }\n  }\n}\n\nfunction triangulate(vertices: Vertice[]) {\n  // Bail if there aren't enough vertices to form any triangles.\n  if (vertices.length < 3) {\n    return [];\n  }\n\n  // Ensure the vertex array is in order of descending X coordinate\n  // (which is needed to ensure a subquadratic runtime), and then find\n  // the bounding box around the points.\n  vertices.sort(byX);\n\n  let i = vertices.length - 1;\n  const xmin = vertices[i].x;\n  const xmax = vertices[0].x;\n  let ymin = vertices[i].y;\n  let ymax = ymin;\n  const epsilon = 1e-12;\n\n  let a;\n  let b;\n  let c;\n  let A;\n  let B;\n  let G;\n\n  while (i--) {\n    if (vertices[i].y < ymin) {\n      ymin = vertices[i].y;\n    }\n    if (vertices[i].y > ymax) {\n      ymax = vertices[i].y;\n    }\n  }\n\n  // Find a supertriangle, which is a triangle that surrounds all the\n  // vertices. This is used like something of a sentinel value to remove\n  // cases in the main algorithm, and is removed before we return any\n  // results.\n\n  // Once found, put it in the \"open\" list. (The \"open\" list is for\n  // triangles who may still need to be considered; the \"closed\" list is\n  // for triangles which do not.)\n  let dx = xmax - xmin;\n  let dy = ymax - ymin;\n  const dmax = dx > dy ? dx : dy;\n  const xmid = (xmax + xmin) * 0.5;\n  const ymid = (ymax + ymin) * 0.5;\n  const open = [\n    new Triangle(\n      {\n        __sentinel: true,\n        x: xmid - 20 * dmax,\n        y: ymid - dmax,\n      },\n      {\n        __sentinel: true,\n        x: xmid,\n        y: ymid + 20 * dmax,\n      },\n      {\n        __sentinel: true,\n        x: xmid + 20 * dmax,\n        y: ymid - dmax,\n      }\n    ),\n  ];\n  const closed = [];\n  const edges: any = [];\n  let j;\n\n  // Incrementally add each vertex to the mesh.\n  i = vertices.length;\n  while (i--) {\n    // For each open triangle, check to see if the current point is\n    // inside it's circumcircle. If it is, remove the triangle and add\n    // it's edges to an edge list.\n    edges.length = 0;\n    j = open.length;\n    while (j--) {\n      // If this point is to the right of this triangle's circumcircle,\n      // then this triangle should never get checked again. Remove it\n      // from the open list, add it to the closed list, and skip.\n      dx = vertices[i].x - open[j].x;\n      if (dx > 0 && dx * dx > open[j].r) {\n        closed.push(open[j]);\n        open.splice(j, 1);\n        continue;\n      }\n\n      // If not, skip this triangle.\n      dy = vertices[i].y - open[j].y;\n      if (dx * dx + dy * dy > open[j].r) {\n        continue;\n      }\n\n      // Remove the triangle and add it's edges to the edge list.\n      edges.push(\n        open[j].a,\n        open[j].b,\n        open[j].b,\n        open[j].c,\n        open[j].c,\n        open[j].a\n      );\n      open.splice(j, 1);\n    }\n\n    // Remove any doubled edges.\n    dedup(edges);\n\n    // Add a new triangle for each edge.\n    j = edges.length;\n    while (j) {\n      b = edges[--j];\n      a = edges[--j];\n      c = vertices[i];\n      // Avoid adding colinear triangles (which have error-prone\n      // circumcircles)\n      A = b.x - a.x;\n      B = b.y - a.y;\n      G = 2 * (A * (c.y - b.y) - B * (c.x - b.x));\n      if (Math.abs(G) > epsilon) {\n        open.push(new Triangle(a, b, c));\n      }\n    }\n  }\n\n  // Copy any remaining open triangles to the closed list, and then\n  // remove any triangles that share a vertex with the supertriangle.\n  Array.prototype.push.apply(closed, open);\n\n  i = closed.length;\n  while (i--) {\n    if (\n      closed[i].a.__sentinel ||\n      closed[i].b.__sentinel ||\n      closed[i].c.__sentinel\n    ) {\n      closed.splice(i, 1);\n    }\n  }\n\n  return closed;\n}\n\nexport { Pt, Vertice, tin };\nexport default tin;\n","import { Feature, GeoJsonProperties } from \"geojson\";\nimport { AllGeoJSON } from \"@turf/helpers\";\n\n/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone<T extends AllGeoJSON>(geojson: T): T {\n  if (!geojson) {\n    throw new Error(\"geojson is required\");\n  }\n\n  switch (geojson.type) {\n    case \"Feature\":\n      return cloneFeature(geojson);\n    case \"FeatureCollection\":\n      return cloneFeatureCollection(geojson);\n    case \"Point\":\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiPoint\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n    case \"GeometryCollection\":\n      return cloneGeometry(geojson);\n    default:\n      throw new Error(\"unknown GeoJSON type\");\n  }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson: any) {\n  const cloned: any = { type: \"Feature\" };\n  // Preserve Foreign Members\n  Object.keys(geojson).forEach((key) => {\n    switch (key) {\n      case \"type\":\n      case \"properties\":\n      case \"geometry\":\n        return;\n      default:\n        cloned[key] = geojson[key];\n    }\n  });\n  // Add properties & geometry last\n  cloned.properties = cloneProperties(geojson.properties);\n  if (geojson.geometry == null) {\n    cloned.geometry = null;\n  } else {\n    cloned.geometry = cloneGeometry(geojson.geometry);\n  }\n  return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties: GeoJsonProperties) {\n  const cloned: { [key: string]: any } = {};\n  if (!properties) {\n    return cloned;\n  }\n  Object.keys(properties).forEach((key) => {\n    const value = properties[key];\n    if (typeof value === \"object\") {\n      if (value === null) {\n        // handle null\n        cloned[key] = null;\n      } else if (Array.isArray(value)) {\n        // handle Array\n        cloned[key] = value.map((item) => {\n          return item;\n        });\n      } else {\n        // handle generic Object\n        cloned[key] = cloneProperties(value);\n      }\n    } else {\n      cloned[key] = value;\n    }\n  });\n  return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson: any) {\n  const cloned: any = { type: \"FeatureCollection\" };\n\n  // Preserve Foreign Members\n  Object.keys(geojson).forEach((key) => {\n    switch (key) {\n      case \"type\":\n      case \"features\":\n        return;\n      default:\n        cloned[key] = geojson[key];\n    }\n  });\n  // Add features\n  cloned.features = geojson.features.map((feature: Feature<any>) => {\n    return cloneFeature(feature);\n  });\n  return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry: any) {\n  const geom: any = { type: geometry.type };\n  if (geometry.bbox) {\n    geom.bbox = geometry.bbox;\n  }\n\n  if (geometry.type === \"GeometryCollection\") {\n    geom.geometries = geometry.geometries.map((g: any) => {\n      return cloneGeometry(g);\n    });\n    return geom;\n  }\n  geom.coordinates = deepSlice(geometry.coordinates);\n  return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice<C = any[]>(coords: C): C {\n  const cloned: any = coords;\n  if (typeof cloned[0] !== \"object\") {\n    return cloned.slice();\n  }\n  return cloned.map((coord: any) => {\n    return deepSlice(coord);\n  });\n}\n\nexport { clone, cloneProperties };\nexport default clone;\n","import {object} from \"./feature.js\";\nimport stitch from \"./stitch.js\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    }).filter(function(arcs) {\n      return arcs.length > 0;\n    })\n  };\n}\n","export var hasOwnProperty = Object.prototype.hasOwnProperty;\n","export default function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n}\n","export default function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n}\n","// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nexport default function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}\n","import hashset from \"./hash/hashset.js\";\nimport hashmap from \"./hash/hashmap.js\";\nimport equalPoint from \"./hash/point-equal.js\";\nimport hashPoint from \"./hash/point-hash.js\";\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n}\n","export default function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n}\n","import join from \"./join.js\";\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nexport default function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n}\n\nfunction rotateArray(array, start, end, offset) {\n  reverse(array, start, end);\n  reverse(array, start, start + offset);\n  reverse(array, start + offset, end);\n}\n\nfunction reverse(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n","// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nexport default function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n}\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n","import bounds from \"./bounds.js\";\nimport cut from \"./cut.js\";\nimport dedup from \"./dedup.js\";\nimport delta from \"./delta.js\";\nimport extract from \"./extract.js\";\nimport geometry from \"./geometry.js\";\nimport hashmap from \"./hash/hashmap.js\";\nimport {hasOwnProperty} from \"./object.js\";\nimport prequantize from \"./prequantize.js\";\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nexport default function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry) {\n    if (geometry && hasOwnProperty.call(indexGeometryType, geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n}\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n","import {hasOwnProperty} from \"./object.js\";\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nexport default function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && hasOwnProperty.call(boundGeometryType, geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n}\n","import {hasOwnProperty} from \"./object.js\";\n\nexport default function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && hasOwnProperty.call(quantizeGeometryType, o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n}\n","import hashmap from \"./hash/hashmap.js\";\nimport equalPoint from \"./hash/point-equal.js\";\nimport hashPoint from \"./hash/point-hash.js\";\n\n// Given a cut topology, combines duplicate arcs.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n}\n","import {hasOwnProperty} from \"./object.js\";\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nexport default function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && hasOwnProperty.call(extractGeometryType, geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n}\n","// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nexport default function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n}\n","import {\n  Feature,\n  FeatureCollection,\n  LineString,\n  MultiLineString,\n} from \"geojson\";\nimport { clone } from \"@turf/clone\";\nimport { isObject, lineString, multiLineString } from \"@turf/helpers\";\nimport { getType } from \"@turf/invariant\";\nimport { lineReduce } from \"@turf/meta\";\n\n/**\n * Merges all connected (non-forking, non-junctioning) line strings into single lineStrings.\n * [LineString] -> LineString|MultiLineString\n *\n * @param {FeatureCollection<LineString|MultiLineString>} geojson Lines to dissolve\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<LineString|MultiLineString>} Dissolved lines\n */\nfunction lineDissolve(\n  geojson: FeatureCollection<LineString | MultiLineString>,\n  options: { mutate?: boolean } = {}\n): Feature<LineString | MultiLineString> | null {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) {\n    throw new Error(\"options is invalid\");\n  }\n  const mutate = options.mutate;\n\n  // Validation\n  if (getType(geojson) !== \"FeatureCollection\") {\n    throw new Error(\"geojson must be a FeatureCollection\");\n  }\n  if (!geojson.features.length) {\n    throw new Error(\"geojson is empty\");\n  }\n\n  // Clone geojson to avoid side effects\n  if (mutate === false || mutate === undefined) {\n    geojson = clone(geojson);\n  }\n\n  const result: any[] = [];\n  const lastLine = lineReduce(\n    geojson,\n    (previousLine: any, currentLine: any) => {\n      // Attempt to merge this LineString with the other LineStrings, updating\n      // the reference as it is merged with others and grows.\n      const merged = mergeLineStrings(previousLine, currentLine);\n\n      // Accumulate the merged LineString\n      if (merged) {\n        return merged;\n        // Put the unmerged LineString back into the list\n      } else {\n        result.push(previousLine);\n        return currentLine;\n      }\n    }\n  );\n  // Append the last line\n  if (lastLine) {\n    result.push(lastLine);\n  }\n\n  // Return null if no lines were dissolved\n  if (!result.length) {\n    return null;\n    // Return LineString if only 1 line was dissolved\n  } else if (result.length === 1) {\n    return result[0];\n    // Return MultiLineString if multiple lines were dissolved with gaps\n  } else {\n    return multiLineString(\n      result.map((line) => {\n        return line.coordinates;\n      })\n    );\n  }\n}\n\n// [Number, Number] -> String\nfunction coordId(coord: number[]) {\n  return coord[0].toString() + \",\" + coord[1].toString();\n}\n\n/**\n * LineString, LineString -> LineString\n *\n * @private\n * @param {Feature<LineString>} a line1\n * @param {Feature<LineString>} b line2\n * @returns {Feature<LineString>|null} Merged LineString\n */\nfunction mergeLineStrings(a: Feature<LineString>, b: Feature<LineString>) {\n  const coords1 = a.geometry.coordinates;\n  const coords2 = b.geometry.coordinates;\n\n  const s1 = coordId(coords1[0]);\n  const e1 = coordId(coords1[coords1.length - 1]);\n  const s2 = coordId(coords2[0]);\n  const e2 = coordId(coords2[coords2.length - 1]);\n\n  // TODO: handle case where more than one of these is true!\n  let coords;\n  if (s1 === e2) {\n    coords = coords2.concat(coords1.slice(1));\n  } else if (s2 === e1) {\n    coords = coords1.concat(coords2.slice(1));\n  } else if (s1 === s2) {\n    coords = coords1.slice(1).reverse().concat(coords2);\n  } else if (e1 === e2) {\n    coords = coords1.concat(coords2.reverse().slice(1));\n  } else {\n    return null;\n  }\n\n  return lineString(coords);\n}\n\nexport { lineDissolve };\nexport default lineDissolve;\n","import {\n  Feature,\n  FeatureCollection,\n  LineString,\n  MultiLineString,\n  MultiPolygon,\n  Polygon,\n} from \"geojson\";\nimport { clone } from \"@turf/clone\";\nimport { isObject } from \"@turf/helpers\";\nimport { getType } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { lineDissolve } from \"./turf-line-dissolve.js\";\nimport { polygonDissolve } from \"./turf-polygon-dissolve.js\";\n\n/**\n * Transform function: attempts to dissolve geojson objects where possible\n * [GeoJSON] -> GeoJSON geometry\n *\n * @private\n * @param {FeatureCollection<LineString|MultiLineString|Polygon|MultiPolygon>} geojson Features to dissolved\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<MultiLineString|MultiPolygon>} Dissolved Features\n */\nfunction dissolve(\n  geojson: FeatureCollection<\n    LineString | MultiLineString | Polygon | MultiPolygon\n  >,\n  options: {\n    mutate?: boolean;\n  } = {}\n): Feature<LineString | MultiLineString | Polygon | MultiPolygon> | null {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) {\n    throw new Error(\"options is invalid\");\n  }\n  const mutate = options.mutate;\n\n  // Validation\n  if (getType(geojson) !== \"FeatureCollection\") {\n    throw new Error(\"geojson must be a FeatureCollection\");\n  }\n  if (!geojson.features.length) {\n    throw new Error(\"geojson is empty\");\n  }\n\n  // Clone geojson to avoid side effects\n  // Topojson modifies in place, so we need to deep clone first\n  if (mutate === false || mutate === undefined) {\n    geojson = clone(geojson);\n  }\n\n  // Assert homogenity\n  const type = getHomogenousType(geojson);\n  if (!type) {\n    throw new Error(\"geojson must be homogenous\");\n  }\n\n  // Data => Typescript hack\n  const data: any = geojson;\n\n  switch (type) {\n    case \"LineString\":\n      return lineDissolve(data, options);\n    case \"Polygon\":\n      return polygonDissolve(data, options);\n    default:\n      throw new Error(type + \" is not supported\");\n  }\n}\n\n/**\n * Checks if GeoJSON is Homogenous\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {string|null} Homogenous type or null if multiple types\n */\nfunction getHomogenousType(geojson: any) {\n  const types: { [key: string]: boolean } = {};\n  flattenEach(geojson, (feature) => {\n    types[feature.geometry.type] = true;\n  });\n  const keys = Object.keys(types);\n  if (keys.length === 1) {\n    return keys[0];\n  }\n  return null;\n}\n\nexport { dissolve };\nexport default dissolve;\n","import { Feature, FeatureCollection, MultiPolygon, Polygon } from \"geojson\";\nimport { clone } from \"@turf/clone\";\nimport { geometryCollection } from \"@turf/helpers\";\nimport { getType } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { merge } from \"topojson-client\";\nimport { topology } from \"topojson-server\";\n\n/**\n * Dissolves all overlapping (Multi)Polygon\n *\n * @param {FeatureCollection<Polygon|MultiPolygon>} geojson Polygons to dissolve\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<Polygon|MultiPolygon>} Dissolved Polygons\n */\nfunction polygonDissolve(\n  geojson: FeatureCollection<Polygon | MultiPolygon>,\n  options: { mutate?: boolean } = {}\n): Feature<Polygon | MultiPolygon> | null {\n  // Validation\n  if (getType(geojson) !== \"FeatureCollection\") {\n    throw new Error(\"geojson must be a FeatureCollection\");\n  }\n  if (!geojson.features.length) {\n    throw new Error(\"geojson is empty\");\n  }\n\n  // Clone geojson to avoid side effects\n  // Topojson modifies in place, so we need to deep clone first\n  if (options.mutate === false || options.mutate === undefined) {\n    geojson = clone(geojson);\n  }\n\n  const geoms: any[] = [];\n  flattenEach(geojson, (feature) => {\n    geoms.push(feature.geometry);\n  });\n  const topo: any = topology({ geoms: geometryCollection(geoms).geometry });\n  const merged: any = merge(topo, topo.objects.geoms.geometries);\n  return merged;\n}\n\nexport { polygonDissolve };\nexport default polygonDissolve;\n","import { distance } from \"@turf/distance\";\nimport { feature, featureCollection } from \"@turf/helpers\";\nimport {\n  Feature,\n  FeatureCollection,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"geojson\";\nimport { Units } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\nimport { tin } from \"@turf/tin\";\nimport { dissolve } from \"./lib/turf-dissolve.js\";\n\n/**\n * Takes a set of {@link Point|points} and returns a concave hull Polygon or MultiPolygon.\n * Internally, this uses [turf-tin](https://github.com/Turfjs/turf-tin) to generate geometries.\n *\n * @name concave\n * @param {FeatureCollection<Point>} points input points\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.maxEdge=Infinity] the length (in 'units') of an edge necessary for part of the\n * hull to become concave.\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<(Polygon|MultiPolygon)>|null} a concave hull (null value is returned if unable to compute hull)\n * @example\n * var points = turf.featureCollection([\n *   turf.point([-63.601226, 44.642643]),\n *   turf.point([-63.591442, 44.651436]),\n *   turf.point([-63.580799, 44.648749]),\n *   turf.point([-63.573589, 44.641788]),\n *   turf.point([-63.587665, 44.64533]),\n *   turf.point([-63.595218, 44.64765])\n * ]);\n * var options = {units: 'miles', maxEdge: 1};\n *\n * var hull = turf.concave(points, options);\n *\n * //addToMap\n * var addToMap = [points, hull]\n */\nfunction concave(\n  points: FeatureCollection<Point>,\n  options: { maxEdge?: number; units?: Units } = {}\n): Feature<Polygon | MultiPolygon> | null {\n  const maxEdge = options.maxEdge || Infinity;\n\n  const cleaned = removeDuplicates(points);\n\n  const tinPolys = tin(cleaned);\n  // calculate length of all edges and area of all triangles\n  // and remove triangles that fail the max length test\n  tinPolys.features = tinPolys.features.filter((triangle) => {\n    const pt1 = triangle.geometry.coordinates[0][0];\n    const pt2 = triangle.geometry.coordinates[0][1];\n    const pt3 = triangle.geometry.coordinates[0][2];\n    const dist1 = distance(pt1, pt2, options);\n    const dist2 = distance(pt2, pt3, options);\n    const dist3 = distance(pt1, pt3, options);\n    return dist1 <= maxEdge && dist2 <= maxEdge && dist3 <= maxEdge;\n  });\n\n  if (tinPolys.features.length < 1) {\n    return null;\n  }\n\n  // merge the adjacent triangles\n  const dissolved: any = dissolve(tinPolys);\n\n  // geojson-dissolve always returns a MultiPolygon\n  if (dissolved.coordinates.length === 1) {\n    dissolved.coordinates = dissolved.coordinates[0];\n    dissolved.type = \"Polygon\";\n  }\n  return feature(dissolved);\n}\n\n/**\n * Removes duplicated points in a collection returning a new collection\n *\n * @private\n * @param {FeatureCollection<Point>} points to be cleaned\n * @returns {FeatureCollection<Point>} cleaned set of points\n */\nfunction removeDuplicates(\n  points: FeatureCollection<Point>\n): FeatureCollection<Point> {\n  const cleaned: Array<Feature<Point>> = [];\n  const existing: { [key: string]: boolean } = {};\n\n  featureEach(points, (pt) => {\n    if (!pt.geometry) {\n      return;\n    }\n    const key = pt.geometry.coordinates.join(\"-\");\n    if (!Object.prototype.hasOwnProperty.call(existing, key)) {\n      cleaned.push(pt);\n      existing[key] = true;\n    }\n  });\n  return featureCollection(cleaned);\n}\n\nexport { concave };\nexport default concave;\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, Coord, Units } from \"@turf/helpers\";\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Coord|coordinates} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord} from origin coordinate\n * @param {Coord} to destination coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two coordinates\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(\n  from: Coord,\n  to: Coord,\n  options: {\n    units?: Units;\n  } = {}\n) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n\n  var a =\n    Math.pow(Math.sin(dLat / 2), 2) +\n    Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\n\nexport { distance };\nexport default distance;\n","import {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  LineString,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"geojson\";\nimport { isNumber } from \"@turf/helpers\";\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord: Feature<Point> | Point | number[]): number[] {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n\n  if (!Array.isArray(coord)) {\n    if (\n      coord.type === \"Feature\" &&\n      coord.geometry !== null &&\n      coord.geometry.type === \"Point\"\n    ) {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (\n    Array.isArray(coord) &&\n    coord.length >= 2 &&\n    !Array.isArray(coord[0]) &&\n    !Array.isArray(coord[1])\n  ) {\n    return [...coord];\n  }\n\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords<\n  G extends\n    | Point\n    | LineString\n    | Polygon\n    | MultiPoint\n    | MultiLineString\n    | MultiPolygon,\n>(coords: any[] | Feature<G> | G): any[] {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n\n  // Feature\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    // Geometry\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates: any[]): boolean {\n  if (\n    coordinates.length > 1 &&\n    isNumber(coordinates[0]) &&\n    isNumber(coordinates[1])\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value: any, type: string, name: string): void {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" +\n        name +\n        \": must be a \" +\n        type +\n        \", given \" +\n        value.type\n    );\n  }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature: Feature<any>, type: string, name: string): void {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" +\n        name +\n        \": must be a \" +\n        type +\n        \", given \" +\n        feature.geometry.type\n    );\n  }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(\n  featureCollection: FeatureCollection<any>,\n  type: string,\n  name: string\n) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" +\n          name +\n          \": must be a \" +\n          type +\n          \", given \" +\n          feature.geometry.type\n      );\n    }\n  }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom<G extends Geometry>(geojson: Feature<G> | G): G {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(\n  geojson: Feature<any> | FeatureCollection<any> | Geometry,\n  _name?: string\n): string {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\n\nexport {\n  getCoord,\n  getCoords,\n  containsNumber,\n  geojsonType,\n  featureOf,\n  collectionOf,\n  getGeom,\n  getType,\n};\n// No default export!\n"],"names":["RBush","require","Queue","pointInPolygon","orient","concaveman","points","concavity","lengthThreshold","Math","max","undefined","hull","left","top","right","bottom","i","length","p","cull","filtered","slice","push","sort","compareByX","lower","cross","pop","upper","ii","concat","convexHull","fastConvexHull","tree","toBBox","a","minX","minY","maxX","maxY","compareMinX","b","compareMinY","load","last","queue","remove","insertNode","segTree","insert","updateBBox","sqConcavity","sqLenThreshold","node","shift","next","sqLen","getSqDist","maxSqLen","findCandidate","prev","min","concave","c","d","maxDist","compareDist","data","children","child","dist","leaf","sqSegDist","sqSegBoxDist","peek","item","d0","d1","noIntersections","bbox","inside","sqSegSegDist","d2","d3","d4","p1","q1","p2","q2","edges","search","p3","dx","dy","x","y","t","x0","y0","x1","y1","x2","y2","x3","y3","sc","sN","tc","tN","ux","uy","vx","vy","wx","wy","e","D","sD","tD","default","module","exports","point","vs","start","end","len","j","xi","yi","xj","yj","pointInPolygonFlat","pointInPolygonNested","Array","isArray","nested","flat","r","h","n","o","s","l","log","f","exp","u","sqrt","floor","this","_maxEntries","_minEntries","ceil","clear","indexOf","m","height","prototype","all","_all","collides","_build","_splitRoot","_insert","splice","_condense","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","Float64Array","orient2d","abs","_","w","A","F","O","P","g","k","q","z","B","C","E","G","H","I","J","K","L","N","Q","orient2dfast","Object","defineProperty","value","TinyQueue","constructor","compare","defaultCompare","_down","_up","pos","parent","current","halfLength","best","topology","objects","type","features","geometries","map","feature","id","properties","geometry","object","transformPoint","transform","identity","kx","scale","ky","translate","input","output","arcs","arc","array","reverse","line","ring","polygon","coordinates","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","flush","forEach","p0","dp","ends","fg","unshift","gf","tin","isPointZ","featureCollection","vertices","byX","xmin","xmax","ymin","ymax","epsilon","dmax","xmid","ymid","open","Triangle","__sentinel","closed","dedup","triangulate","triangle","outer","clone","geojson","Error","cloneFeature","cloned","keys","key","cloneFeatureCollection","cloneGeometry","cloneProperties","geom","deepSlice","coords","coord","mergeArcs","arguments","polygonsByArc","polygons","groups","extract","area","planarRingArea","group","neighbors","stitch","ki","filter","hasOwnProperty","size","hash","equal","keyType","keyEmpty","valueType","keystore","LN2","valstore","mask","set","index","matchKey","collisions","maybeSet","get","missingValue","pointA","pointB","buffer","ArrayBuffer","floats","uints","Uint32Array","currentIndex","nextIndex","lines","rings","indexes","indexByPoint","hashmap","hashIndex","equalIndex","Int32Array","visitedByIndex","leftByIndex","rightByIndex","junctionByIndex","Int8Array","junctionCount","lineStart","lineEnd","sequence","ringStart","ringEnd","previousIndex","leftIndex","rightIndex","hashPoint","equalPoint","junctionByPoint","empty","store","add","match","has","values","hashset","rotateArray","offset","mid","inputs","outputs","geomifyFeatureCollection","geomifyFeature","geomifyGeometry","quantization","Infinity","boundGeometry","boundGeometryType","GeometryCollection","Point","boundPoint","MultiPoint","LineString","boundLine","MultiLineString","Polygon","MultiPolygon","boundMultiLine","bounds","quantizePoint","round","quantizePoints","pi","px","py","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometry","quantizeGeometryType","prequantize","arcCount","arcsByEnd","dedupLine","dedupRing","startPoint","endPoint","startArcs","startArc","endArcs","endArc","equalLine","reverseEqualLine","equalRing","reverseEqualRing","findMinimumOffset","arcA","arcB","ia","ib","ja","jb","ka","kb","minimum","minimumPoint","junctions","join","lineMid","ringMid","ringFixed","cut","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","indexByArc","hashArc","equalArc","indexGeometry","indexGeometryType","indexArcs","indexMultiArcs","delta","lineDissolve","options","isObject","mutate","getType","result","lastLine","lineReduce","previousLine","currentLine","merged","coords1","coords2","s1","coordId","e1","s2","e2","lineString","mergeLineStrings","multiLineString","toString","dissolve","types","flattenEach","getHomogenousType","geoms","topo","geometryCollection","merge","polygonDissolve","maxEdge","cleaned","existing","featureEach","pt","call","removeDuplicates","tinPolys","pt1","pt2","pt3","dist1","distance","dist2","dist3","dissolved","from","to","coordinates1","getCoord","coordinates2","dLat","degreesToRadians","dLon","lat1","lat2","sin","cos","radiansToLength","atan2","units","collectionOf","name","getGeom","_name"],"sourceRoot":""}