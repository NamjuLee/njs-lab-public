{"version":3,"file":"static/js/2971.e666aeb0.chunk.js","mappings":"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","sources":["njslab/Tools/RaytracerScene/index.ts"],"sourcesContent":["import { RendererCanvas, Vector3, normalize, crossProduct, distanceEuclidean, reflect, dotProduct } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#000';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        let btn = document.createElement('div');\r\n        btn.style.paddingTop = '5px';\r\n        btn.style.paddingBottom = '5px';\r\n        div.appendChild(btn);\r\n        btn.textContent = 'Click twice in different locations to build a wall';\r\n\r\n        const sl2 = getSlider('bounces', 2, 200);\r\n        div.appendChild(sl2.div);\r\n        sl2.slider.oninput = () => {\r\n            this.renderer.updateIter(+sl2.slider.value)\r\n        };\r\n\r\n        const cBox = getCheckBox('Ray Direction');\r\n        div.appendChild(cBox.div);\r\n        cBox.checkBox.checked = false;\r\n        cBox.checkBox.onchange = () => {\r\n            // console.log(cBox.checkBox.checked)\r\n            if (cBox.checkBox.checked === true) {\r\n                this.renderer.isRayDirection = true;\r\n            } else {\r\n                this.renderer.isRayDirection = false;\r\n            }\r\n        }\r\n\r\n        const cBoxLine = getCheckBox('Line');\r\n        div.appendChild(cBoxLine.div);\r\n        cBoxLine.checkBox.checked = true;\r\n        cBoxLine.checkBox.onchange = () => {\r\n            // console.log(cBoxLine.checkBox.checked)\r\n            if (cBoxLine.checkBox.checked === true) {\r\n                this.renderer.isLineRenderer = true;\r\n            } else {\r\n                this.renderer.isLineRenderer = false;\r\n            }\r\n            this.renderer.updateIter(this.renderer.iter);\r\n        }\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    walls: Wall[] = [];\r\n    sun: Sun;\r\n    t: number = 0.0;\r\n    iter = 10;\r\n    isRayDirection = false;\r\n    isLineRenderer = true;\r\n    private p0: Vector3 | undefined = undefined;\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n\r\n        this.sun = new Sun(new Vector3(300, 100, 0));\r\n        this.walls.push(new Wall(50, 200, 400, 500))\r\n        this.walls.push(new Wall(100, 500, 500, 600))\r\n        this.walls.push(new Wall(500, 100, 400, 400))\r\n        this.walls.push(new Wall(50, 100, 600, 50))\r\n        this.walls.push(new Wall(500, 600, 600, 50))\r\n        this.walls.push(new Wall(50, 100, 50, 300))\r\n        this.walls.push(new Wall(50, 300, 100, 500))\r\n\r\n        this.start();\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        if (this.p0) {\r\n            this.walls.push(new Wall(this.p0.x, this.p0.y, x, y));\r\n            this.p0 = undefined;\r\n            this.updateIter(this.iter);\r\n            return;\r\n        }\r\n\r\n        if (this.p0 === undefined) {\r\n            this.p0 = new Vector3(x, y);\r\n            return;\r\n        }\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        if (this.isRayDirection) {\r\n            this.sun.updateDirection(x, y);\r\n            this.isStatic = false;\r\n            this.loop(this.ctx);\r\n        }\r\n    }\r\n    public updateIter(iter) {\r\n        this.iter = iter;\r\n        this.isStatic = false;\r\n        this.loop(this.ctx);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.t += 0.01;\r\n        this.update(ctx);\r\n\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.strokeStyle = '#ffffff';\r\n\r\n        this.walls.forEach((w) => { w.draw(ctx); });\r\n        this.sun.draw(ctx, this.t);\r\n\r\n        this.isStatic = true;\r\n    }\r\n    public update(ctx: CanvasRenderingContext2D) {\r\n\r\n        const sun = this.sun.getSunLine();\r\n\r\n\r\n        const pts = computeInter(sun, this.walls, this.iter)\r\n\r\n        ctx.lineWidth = 0.5\r\n        for (let i = 0; i < pts.length; ++i) {\r\n            const p = pts[i];\r\n            ctx.beginPath();\r\n            ctx.arc(p.x, p.y, 5, 0, Math.PI * 2.);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.globalCompositeOperation = 'multiply';\r\n\r\n        if (this.isLineRenderer) {\r\n            ctx.lineWidth = 10\r\n            if (pts.length > 0) {\r\n                ctx.strokeStyle = `rgba(255, 0, 0, ${1})`;\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.sun.v.x, this.sun.v.y)\r\n                ctx.lineTo(pts[0].x, pts[0].y)\r\n                ctx.stroke();\r\n                for (let i = 0; i < pts.length - 1; i++) {\r\n                    const o = 1.0 - i / pts.length;\r\n                    // console.log(o)\r\n                    ctx.strokeStyle = `rgba(255, 0, 0, ${o})`;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(pts[i].x, pts[i].y)\r\n                    ctx.lineTo(pts[i + 1].x, pts[i + 1].y)\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        } else {\r\n            if (pts.length > 0) {\r\n                const vs = []\r\n                vs.push(...getVecsBetweenVecsByDis(this.sun.v, pts[0], 20));\r\n                for (let i = 0; i < pts.length - 1; i++) {\r\n                    vs.push(...getVecsBetweenVecsByDis(pts[i], pts[1+i], 20));\r\n                }\r\n                for (let i = 0; i < vs.length; ++i) {\r\n                    const p = vs[i];\r\n                    const o = 1.0 - i / vs.length;\r\n                    ctx.fillStyle = `rgba(255, 0, 0, ${o})`;\r\n                    ctx.beginPath();\r\n                    ctx.arc(p.x, p.y, 5, 0, Math.PI * 2.);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n                }\r\n            }\r\n    \r\n        }\r\n \r\n\r\n\r\n    }\r\n}\r\nconst computeInter = (ray, walls, iter = 1000) => {\r\n\r\n    let pts = []\r\n\r\n    for (let j = 0; j < iter; ++j) {\r\n        let theDis = 10000\r\n        let theP;\r\n        let wallNext;\r\n\r\n        for (let i = 0; i < walls.length; ++i) {\r\n            const wall = walls[i];\r\n            const p = checkIntersection(ray.p0.x, ray.p0.y, ray.p1.x, ray.p1.y, wall.p0.x, wall.p0.y, wall.p1.x, wall.p1.y);\r\n            if (p !== undefined) {\r\n\r\n                const dis = distanceEuclidean(ray.p0.x, ray.p0.y, 0, p.x, p.y, 0);\r\n                if (dis > 10 && dis < theDis) {\r\n\r\n                    theP = p;\r\n                    wallNext = wall;\r\n                    theDis = dis;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (theP !== undefined) {\r\n            const rayVec = new Vector3(ray.p1.x - ray.p0.x, ray.p1.y - ray.p0.y, 0)\r\n            // console.log(rayVec, wallNext.nVec)\r\n            const rayBound = reflect(rayVec, wallNext.nVec)\r\n\r\n            ray = {\r\n                p0: theP,\r\n                p1: {\r\n                    x: theP.x + rayBound.x,\r\n                    y: theP.y + rayBound.y\r\n                }\r\n            }\r\n            // console.log(j , theP.x, rayBound.x);\r\n            pts.push(theP)\r\n\r\n        }\r\n\r\n        // console.log(j);\r\n\r\n    }\r\n    // console.log(pts);\r\n    return pts\r\n\r\n}\r\n\r\nconst getVecsBetweenVecsByDis = (v0: Vector3, v1: Vector3, dis: number) => {\r\n    const x = v1.x - v0.x;\r\n    const y = v1.y - v0.y;\r\n    const z = v1.z - v0.z;\r\n    const nv = new Vector3(x, y, z);\r\n    const num = nv.length() / dis\r\n    nv.normalize();\r\n    \r\n    const vs = [];\r\n    for(let i = 0 ; i < num; ++i) {\r\n        const v = new Vector3(v0.x + nv.x * dis * i, v0.y + nv.y * dis * i, v0.z + nv.z * dis * i);\r\n        vs.push(v);\r\n    }\r\n    return vs;\r\n}\r\n\r\n\r\n\r\nclass Sun {\r\n    v: Vector3;\r\n    target = new Vector3(0, 0, 0);\r\n    rayVec = new Vector3(0, 0, 0);;\r\n    constructor(v: Vector3) {\r\n        this.v = v;\r\n        this.updateDirection(300, 300);\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.lineWidth = 0.1;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.v.x, this.v.y);\r\n        ctx.lineTo(this.target.x, this.target.y);\r\n        ctx.stroke();\r\n\r\n        ctx.lineWidth = 0.5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.v.x, this.v.y);\r\n        ctx.lineTo(this.v.x + this.rayVec.x * 50, this.v.y + this.rayVec.y * 50);\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = '#FDB813'\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, Math.sin(20 * t) + 12, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    }\r\n    updateDirection(x: number, y: number) {\r\n        this.target.x = x;\r\n        this.target.y = y;\r\n\r\n        this.rayVec.x = this.v.x + this.target.x;\r\n        this.rayVec.y = this.v.y + this.target.y;\r\n\r\n        this.rayVec.x = this.target.x - this.v.x;\r\n        this.rayVec.y = this.target.y - this.v.y;\r\n\r\n        // this.rayVec = normalize(this.rayVec);\r\n    }\r\n    getSunLine() {\r\n        return {\r\n            p0: this.v,\r\n            p1: new Vector3(this.v.x + this.rayVec.x * 1000, this.v.y + this.rayVec.y * 1000)\r\n        }\r\n    }\r\n}\r\n\r\nclass Wall {\r\n    p0: Vector3;\r\n    p1: Vector3;\r\n    nVec: Vector3;\r\n    constructor(x0, y0, x1, y1) {\r\n        this.p0 = new Vector3(x0, y0);\r\n        this.p1 = new Vector3(x1, y1);\r\n        this.computeNormal();\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.lineWidth = 5;\r\n        ctx.strokeStyle = '#ffffff';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.stroke();\r\n    }\r\n    computeNormal() {\r\n        const dir = new Vector3(this.p1.x - this.p0.x, this.p1.y - this.p0.y, 0)\r\n        this.nVec = crossProduct(dir, new Vector3(0, 0, 1));\r\n        this.nVec = normalize(this.nVec);\r\n    }\r\n}\r\n\r\nexport const pointOnSegment2D = (px: number, py: number, x0: number, y0: number, x1: number, y1: number) => {\r\n    if (x0 !== x1) {\r\n        if (x0 <= px && px <= x1) { return true; }\r\n        if (x0 >= px && px >= x1) { return true; }\r\n    } else {\r\n        if (y0 <= py && py <= y1) { return true; }\r\n        if (y0 >= py && py >= y1) { return true; }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const checkIntersection = (x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number) => {\r\n    const denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\r\n    const numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\r\n    const numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\r\n\r\n    if (denom === 0) {\r\n        if (numeA === 0 && numeB === 0) {\r\n            return undefined // COLINEAR;\r\n        }\r\n        return undefined // PARALLEL;\r\n    }\r\n\r\n    const uA = numeA / denom;\r\n    const uB = numeB / denom;\r\n\r\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\r\n        return ({\r\n            x: x1 + (uA * (x2 - x1)),\r\n            y: y1 + (uA * (y2 - y1)),\r\n            z: 0\r\n        });\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider\r\n    }\r\n};\r\n\r\nconst getCheckBox = (title: string) => {\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const checkBox = document.createElement('input');\r\n    checkBox.type = 'checkbox';\r\n    checkBox.defaultChecked = false;\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(checkBox);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, checkBox\r\n    }\r\n};"],"names":["Solution","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","btn","paddingTop","paddingBottom","textContent","sl2","getSlider","slider","oninput","updateIter","value","cBox","getCheckBox","checkBox","checked","onchange","isRayDirection","cBoxLine","isLineRenderer","iter","destroy","lastElementChild","removeChild","walls","sun","t","p0","undefined","canvas","position","Sun","Vector3","push","Wall","start","x","y","updateDirection","isStatic","loop","ctx","update","globalCompositeOperation","strokeStyle","forEach","w","draw","getSunLine","pts","computeInter","lineWidth","i","length","p","beginPath","arc","Math","PI","closePath","stroke","moveTo","v","lineTo","o","vs","getVecsBetweenVecsByDis","fillStyle","fill","RendererCanvas","ray","j","theDis","theP","wallNext","wall","checkIntersection","p1","dis","distanceEuclidean","rayVec","rayBound","reflect","nVec","v0","v1","z","nv","num","normalize","target","sin","x0","y0","x1","y1","computeNormal","dir","crossProduct","pointOnSegment2D","px","py","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","title","min","max","type","text","color","defaultChecked"],"sourceRoot":""}