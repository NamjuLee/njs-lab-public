{"version":3,"file":"static/js/3053.fddc20b3.chunk.js","mappings":"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,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,EAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,EAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAE/E,KAAC,EA9OqB,GCObE,EAAmC,0CAiB5C,WAAYjH,GAAsB,IAAD,EAGjB,OAHiB,gBAC7B,cAAMA,IAhBVC,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EACjBC,GAAiB,GAAG,EACpB0G,OAAqB,GAAG,EAExBC,wBAAkB,IAClBC,EAAY,EAGR,EAAKjI,WAAWhF,MAAQ,yCACxB,EAAKwG,OAAO,CAChB,CA2HC,OA3HA,4BACD,WAGIjJ,KAAKyP,mBAAqB,IAAIE,EAE9B3P,KAAK4P,WACL5P,KAAK6P,QACT,GAAC,oBACD,WACI,IAAM7M,EAAMsD,SAASC,cAAc,OAEnCvD,EAAIwD,MAAMC,SAAW,WACrBzD,EAAIwD,MAAMsJ,KAAO,QACjB9M,EAAIwD,MAAM3B,MAAQ,UAElB,IAAM6K,EAAIpJ,SAASC,cAAc,KACjCmJ,EAAEK,YAAc,mCAChB/M,EAAIgN,OAAON,GAEX,IAAMO,EAAU3J,SAAS4J,eAAe,aACpCD,GACAA,EAAQD,OAAOhN,EAGvB,GAAC,sBACD,WAAY,IAAD,OACP+H,EAAcoF,UAAUC,MAAK,SAAC7B,GAC1B,IAAI8B,EAAOC,OAAOC,iBACdC,EAAOF,OAAOG,iBACdC,EAAOJ,OAAOC,iBACdI,EAAOL,OAAOG,iBAElBlC,EAAElD,KAAI,SAACa,GACH,IAAIrL,EAAKqL,EAAiB,WACtBrL,EAAI2P,IAAQA,EAAO3P,GACnBA,EAAIwP,IAAQA,EAAOxP,GAEvB,IAAIC,EAAKoL,EAAU,IACfpL,EAAI6P,IAAQA,EAAO7P,GACnBA,EAAI4P,IAAQA,EAAO5P,EAC3B,IAAG,IAEe,EAFf,UAEcyN,GAAC,IAAlB,2BAAoB,CAAC,IAAZrC,EAAI,QACLrL,EAAKqL,EAAiB,WACtBpL,EAAKoL,EAAU,IACnB,EAAKsD,OAAOxL,KAAK,IAAIoB,EAAAA,GACjBgE,EAAAA,GAAAA,MAAkBvI,EAAGwP,EAAMG,EAAM,GAAK,IACtCpH,EAAAA,GAAAA,MAAkBtI,EAAG4P,EAAMC,EAAM,GAAK,KAC9C,CAAC,+BACL,GACJ,GAAC,uBACD,SAAU9P,EAAWC,GACjBd,KAAK8I,GAAG9E,KAAK,IAAIoB,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IAEtD,GAAC,kBACD,SAAKoC,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK0B,MAAO,EAAG,EAClD,GAAC,kBACD,SAAKwB,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK2B,OAAQ,EAAG,EACnD,GAAC,qCACD,SAAwBY,GAOpB,GANAA,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAI+G,KAAK,EAAG,EAAG/G,EAAID,OAAOZ,MAAOa,EAAID,OAAOX,QAC5CY,EAAIgH,YACJhH,EAAIiH,OAEiB,KAAP,EAATxJ,KAAK0P,GAAc,CACpB,IAAMxM,EAAIlD,KAAKwP,OAAOoB,MAClB1N,GACAlD,KAAK8I,GAAG9E,KAAKd,EAErB,CAGA,GAAIlD,KAAK8I,GAAGtE,OAAS,EAAG,CAEpB,IADA,IAAM4K,EAAK,GAAIE,EAAK,GACXhL,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAK8K,EAAGpL,KAAKhE,KAAK8I,GAAGxE,GAAGzD,GAAIyO,EAAGtL,KAAKhE,KAAK8I,GAAGxE,GAAGxD,GAGrFd,KAAKyP,mBAAmBoB,MAAMzB,EAAIE,GAGlCtP,KAAK0J,WAAWnH,EACpB,CAEAA,EAAIqD,UAAY,UAChB,IAAK,IAAItB,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC/B,EAAI8G,YACJ9G,EAAIoH,IAAIP,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGzD,EAAG,EAAG,EAAG,EAAGb,KAAK0B,OAClD0H,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGxD,EAAG,EAAG,EAAGd,KAAK2B,OAAQ,GAAI,EAAG,EAAa,EAAViI,KAAKC,IACtEtH,EAAIgH,YACJhH,EAAIiH,OAERxJ,KAAK0P,GAAK,EACd,GAAC,wBACD,SAAkBnN,GAAgC,IAAD,OACvCuO,EAAQ,CAAC,EAAG,GAGZvE,EAAKV,EAAAA,KAAQ,WACf,OAAO,EAAK4D,mBAAmBsB,QAAQlF,EAAAA,IAAYiF,GACvD,IAEIE,EAAQzE,EAAG8C,WACf9C,EAAG0E,UAGH,IACInH,EAAKkH,EAAM,GAGXjH,EAAKiH,EAAM,GAEfzO,EAAIyH,UAAY,EAChBzH,EAAI0H,YAAc,UAClB1H,EAAI8G,YACJ9G,EAAI2H,OAAOd,EAAAA,GAAAA,MATF,EASwB,EAAG,EAAG,EAAGpJ,KAAK0B,OAAQ0H,EAAAA,GAAAA,MAAkBU,EAAI,EAAG,EAAG9J,KAAK2B,OAAQ,IAChGY,EAAI4H,OAAOf,EAAAA,GAAAA,MAPF,EAOwB,EAAG,EAAG,EAAGpJ,KAAK0B,OAAQ0H,EAAAA,GAAAA,MAAkBW,EAAI,EAAG,EAAG/J,KAAK2B,OAAQ,IAChGY,EAAI6H,QAER,KAAC,EAhJ2C,CAAS5C,GAkJnDmI,EAAkB,WAMpB,cAAe,oBALf/E,YAAM,OACN5B,UAAI,OAEJkI,aAAuB,GAAI,KAC3BC,eAAS,EAELnR,KAAK4K,OAASiB,EAAAA,IAAYA,EAAAA,IAAUjC,KAAKgE,WACzC5N,KAAKgJ,KAAO6C,EAAAA,IAAYA,EAAAA,IAAUjC,KAAKgE,WAEvC5N,KAAKmR,UAAYtF,EAAAA,IAAAA,IAAa7L,KAAKkR,aACvC,CAyBA,OAzBC,+BACD,SAAerQ,GACX,OAAOA,EAAE2N,IAAIxO,KAAK4K,QAAQ8D,IAAI1O,KAAKgJ,KACvC,GAAC,kBACD,SAAYoI,EAA0BC,GAClC,OAAOD,EAAKpC,IAAIqC,GAAO1C,SAAStB,MACpC,GAAC,mBACD,SAAaiE,EAAgBC,GAAiB,IAAD,OAEzC1F,EAAAA,KAAQ,WACJ,IAAMS,EAAKT,EAAAA,IAAYyF,GACjB/E,EAAKV,EAAAA,IAAY0F,GACvB,EAAKJ,UAAUK,UAAS,kBAAW,EAAKC,KAAK,EAAKV,QAAQzE,GAAKC,EAAG,GACtE,GAKJ,KAOA,EApCoB,GClJXmF,EAAuC,0CAkBhD,WAAYpJ,GAAsB,IAAD,EAKf,OALe,gBAC7B,cAAMA,IAjBVC,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EACjBC,GAAiB,GAAG,EACpB0G,OAAqB,GAAG,EACxBmC,YAA+BC,EAAU,EAEzCnC,wBAAkB,IAClBC,EAAY,EAGR,EAAKjI,WAAWhF,MAAQ,yCACxB,EAAKwG,OACL,EAAK2G,WACL,EAAKC,SAAS,CAClB,CAsJC,OAtJA,8BACD,WACI,IAAM7M,EAAMsD,SAASC,cAAc,OAEnCvD,EAAIwD,MAAMC,SAAW,WACrBzD,EAAIwD,MAAMsJ,KAAO,QACjB9M,EAAIwD,MAAM3B,MAAQ,UAElB,IAAM6K,EAAIpJ,SAASC,cAAc,KACjCmJ,EAAEK,YAAc,mCAChB/M,EAAIgN,OAAON,GAGX,IAAMO,EAAU3J,SAAS4J,eAAe,aACxC,GAAID,EAAS,CACTA,EAAQD,OAAOhN,GAEf,IAAMqL,EAAI/H,SAASC,cAAc,UACjC8H,EAAE0B,YAAc,MAChB1B,EAAE7H,MAAMC,SAAW,WACnB4H,EAAE7H,MAAMsJ,KAAO,QACfzB,EAAEwD,QAAU,WACZ,EAEA7R,KAAKD,MAAM+H,eAAeC,IAAI+J,MAAMC,qBAAqBC,YAAYhP,IAAIgN,OAAO3B,EACpF,CAEJ,GAAC,sBACD,WAAY,IAAD,OACPtD,EAAcoF,UAAUC,MAAK,SAAC7B,GAC1B,IAAI8B,EAAOC,OAAOC,iBACdC,EAAOF,OAAOG,iBACdC,EAAOJ,OAAOC,iBACdI,EAAOL,OAAOG,iBAElBlC,EAAElD,KAAI,SAACa,GACH,IAAIrL,EAAKqL,EAAiB,WACtBrL,EAAI2P,IAAQA,EAAO3P,GACnBA,EAAIwP,IAAQA,EAAOxP,GAEvB,IAAIC,EAAKoL,EAAU,IACfpL,EAAI6P,IAAQA,EAAO7P,GACnBA,EAAI4P,IAAQA,EAAO5P,EAC3B,IAAG,IAEe,EAFf,UAEcyN,GAAC,IAAlB,2BAAoB,CAAC,IAAZrC,EAAI,QACLrL,EAAKqL,EAAiB,WACtBpL,EAAKoL,EAAU,IACnB,EAAKsD,OAAOxL,KAAK,IAAIoB,EAAAA,GACjBgE,EAAAA,GAAAA,MAAkBvI,EAAGwP,EAAMG,GAAO,GAAK,IACvCpH,EAAAA,GAAAA,MAAkBtI,EAAG4P,EAAMC,GAAO,GAAK,KAC/C,CAAC,+BACL,GACJ,GAAC,kBACD,WAGI3Q,KAAKyP,mBAAqB,IAAIwC,CAClC,GAAC,uBACD,SAAUpR,EAAWC,GACjBd,KAAK8I,GAAG9E,KAAK,IAAIoB,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IAEtD,GAAC,8BACD,WAEI,GACH,kBACD,SAAKoC,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK0B,OAAQ,EAAG,EACnD,GAAC,kBACD,SAAKwB,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK2B,OAAQ,GAAI,EACpD,GAAC,kBACD,SAAKY,GASD,GACH,qCACD,SAAwBA,GAQpB,GAPAvC,KAAKkS,KAAK3P,GACVA,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAI+G,KAAK,EAAG,EAAG/G,EAAID,OAAOZ,MAAOa,EAAID,OAAOX,QAC5CY,EAAIgH,YACJhH,EAAIiH,OAEiB,KAAP,EAATxJ,KAAK0P,GAAc,CACpB,IAAMxM,EAAIlD,KAAKwP,OAAOoB,MAClB1N,GACAlD,KAAK8I,GAAG9E,KAAKd,EAErB,CAGA,GAAIlD,KAAK8I,GAAGtE,OAAS,EAAG,CAEpB,IADA,IAAM4K,EAAK,GAAIE,EAAK,GACXhL,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAK8K,EAAGpL,KAAKhE,KAAK8I,GAAGxE,GAAGzD,GAAIyO,EAAGtL,KAAKhE,KAAK8I,GAAGxE,GAAGxD,GAIrFd,KAAKyP,mBAAmBoB,MAAMzB,EAAIE,GAGlCtP,KAAK0J,WAAWnH,EACpB,CAEAA,EAAIqD,UAAY,UAChB,IAAK,IAAItB,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC/B,EAAI8G,YACJ9G,EAAIoH,IACAP,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGzD,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAC/C0H,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGxD,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GACpD,EAAG,EAAa,EAAViI,KAAKC,IACftH,EAAIgH,YACJhH,EAAIiH,OAERxJ,KAAK0P,GAAK,EACd,GAAC,wBACD,SAAkBnN,GAEd,IAF8C,IAAD,OACvC4P,EAAmB,GAChBtR,GAAK,EAAGA,GAAK,EAAGA,GAAK,IAC1BsR,EAAOnO,KAAKnD,GAIhB,IAAM0L,EAAKV,EAAAA,KAAQ,WAEf,OAAO,EAAK4D,mBAAmB2C,UAAUvG,EAAAA,IAAYsG,GACzD,IAEIE,EAAS9F,EAAG8C,WAChB9C,EAAG0E,UAGH1O,EAAIyH,UAAY,EAChBzH,EAAI0H,YAAc,UAClB1H,EAAI8G,YACJ9G,EAAI2H,OAAOd,EAAAA,GAAAA,MAAkB+I,EAAO,IAAK,EAAG,EAAG,EAAGnS,KAAK0B,OAAQ0H,EAAAA,GAAAA,MAAkBiJ,EAAO,IAAK,EAAG,EAAGrS,KAAK2B,OAAQ,IAEhH,IAAK,IAAI2C,EAAI,EAAGA,EAAI6N,EAAO3N,SAAUF,EACjC/B,EAAI4H,OAAOf,EAAAA,GAAAA,MAAkB+I,EAAO7N,IAAK,EAAG,EAAG,EAAGtE,KAAK0B,OAAQ0H,EAAAA,GAAAA,MAAkBiJ,EAAO/N,IAAK,EAAG,EAAGtE,KAAK2B,OAAQ,IAEpHY,EAAI6H,QAER,KAAC,EA9K+C,CAAS5C,GAgLvDyK,EAAoB,WAOtB,cAAe,oBANfK,QAAyB,GAAG,KAC5BtJ,UAAI,OAEJuJ,IAAc,EAAE,KAChBrB,aAAuB,GAAI,KAC3BC,eAAS,EAEL,IAAK,IAAI7M,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAMsG,EAASiB,EAAAA,IAAYA,EAAAA,IAA2B,EAAhBjC,KAAKgE,SAAgB,IAC3DhD,EAAO4H,QACPxS,KAAKsS,QAAQtO,KAAK4G,EACtB,CAEA5K,KAAKgJ,KAAO6C,EAAAA,IAAYA,EAAAA,IAA2B,EAAhBjC,KAAKgE,SAAgB,IACxD5N,KAAKmR,UAAYtF,EAAAA,IAAAA,KAAc7L,KAAKkR,aACxC,CAuEA,OAvEC,iCAED,SAAiBrQ,GAIb,OAFWA,EAAE2N,IAAIxO,KAAKsS,QAAQ,IACzB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAKb,OAHWA,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,IAClC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAMb,OAJWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAOb,OALWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAQb,OANWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,qBACD,SAAenI,GACX,OAAiB,IAAbb,KAAKuS,IAAoBvS,KAAKyS,UAAU5R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAK0S,UAAU7R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAK2S,UAAU9R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAKoS,UAAUvR,GAErCb,KAAK4S,UAAU/R,EAC1B,GAAC,kBACD,SAAYuQ,EAA0BC,GAClC,OAAOD,EAAKpC,IAAIqC,GAAO1C,SAAStB,MACpC,GAAC,mBACD,SAAaiE,EAAgBC,GAAiB,IAAD,OAEzC1F,EAAAA,KAAQ,WACJ,IAAMS,EAAKT,EAAAA,IAAYyF,GACjB/E,EAAKV,EAAAA,IAAY0F,GACvB,EAAKJ,UAAUK,UAAS,kBAAW,EAAKC,KAAK,EAAKV,QAAQzE,GAAKC,EAAG,GACtE,GAKJ,KAOA,EAvFsB,GCjLbsG,EAAkD,0CAiB3D,WAAYvK,GAAiE,IAAD,EAA3C5G,EAAa,uDAAG,IAAKC,EAAc,uDAAG,IAGvD,OAH0D,gBACtE,cAAM2G,EAAU5G,EAAOC,IAhB3B4G,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EACjBC,GAAiB,GAAG,EACpB6I,YAA+BC,EAAU,EAEzCnC,wBAAkB,EAId,EAAKhI,WAAWhF,MAAQ,yCACxB,EAAKwG,OAAO,CAEhB,CA+MC,OA/MA,4BACD,WAGIjJ,KAAKyP,mBAAqB,IAAIwC,EAE9BjS,KAAKyH,WAAWnF,OAAOkE,MAAME,OAAS,KAiDtCqE,EAAcoF,UAAUC,MAAK,SAAC7B,GAC1B,GAGR,GAAC,uBACD,SAAU1N,EAAWC,GAEjB,IADA,IAAMgS,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC,GAAIc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAAM,IAEnC,YADAtE,KAAK2R,OAAS3R,KAAK8I,GAAGxE,IAI9BtE,KAAK8I,GAAG9E,KAAK,IAAIoB,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IAEtD,GAAC,8BACD,WAEI,GACH,uBACD,SAAUD,EAAWC,GAGjB,IAFA,IAAI6Q,OAA+BC,EAC7BkB,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAG,CACxBc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAC7B,MACTqN,EAAS3R,KAAK8I,GAAGxE,GAEzB,CAEItE,KAAK2R,OADLA,QAGcC,CAEtB,GAAC,uBACD,SAAU/Q,EAAWC,GACbd,KAAK2R,SACL3R,KAAK2R,OAAO9Q,EAAIb,KAAKkJ,KAAKrI,GAC1Bb,KAAK2R,OAAO7Q,EAAId,KAAKmJ,KAAKrI,GAElC,GAAC,qBACD,WACId,KAAK2R,YAASC,CAClB,GAAC,kBACD,SAAK1O,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK0B,OAAQ,EAAG,EACnD,GAAC,kBACD,SAAKwB,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK2B,OAAQ,GAAI,EACpD,GAAC,sBACD,SAASY,GACLA,EAAI0H,YAAc,UAGlB,IAFA,IAAM8I,EAAY/S,KAAK0B,MAAQ,GAAK,EAC9BsR,EAAYhT,KAAK2B,OAAS,GAAK,EAC5B2C,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAExB/B,EAAIyH,UADE,KAAN1F,EACgB,EAEA,EAEpB,IAAI2O,EAAKF,EAAYzO,EACjBwF,EAAK,EACLoJ,EAAKD,EACLlJ,EAAK/J,KAAK2B,OACdY,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,SAEJ6I,EAAK,EACLnJ,EAAKkJ,EAAY1O,EACjB4O,EAAKlT,KAAK0B,MACVqI,EAAKD,EACLvH,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,QACR,CACJ,GAAC,qCACD,SAAwB7H,GAYpB,GATAA,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAI+G,KAAK,EAAG,EAAG/G,EAAID,OAAOZ,MAAOa,EAAID,OAAOX,QAC5CY,EAAIgH,YACJhH,EAAIiH,OAEJxJ,KAAKmT,SAAS5Q,GAGVvC,KAAK8I,GAAGtE,OAAS,EAAG,CAEpB,IADA,IAAM4K,EAAK,GAAIE,EAAK,GACXhL,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAK8K,EAAGpL,KAAKhE,KAAK8I,GAAGxE,GAAGzD,GAAIyO,EAAGtL,KAAKhE,KAAK8I,GAAGxE,GAAGxD,GAIrFd,KAAKyP,mBAAmBoB,MAAMzB,EAAIE,GAGlCtP,KAAK0J,WAAWnH,EACpB,CAIAA,EAAIqD,UAAY,UAChB,IAAK,IAAItB,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC/B,EAAI8G,YACJ9G,EAAIoH,IACAP,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGzD,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAC/C0H,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGxD,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GACpD,EAAG,EAAa,EAAViI,KAAKC,IACftH,EAAIgH,YACJhH,EAAIiH,OAGJxJ,KAAK2R,SACLpP,EAAIqD,UAAY,UAChBrD,EAAIwD,KAAO,aACXxD,EAAIuD,UAAY,SAChBvD,EAAI4D,SAAS,KAAD,OAAMnG,KAAK2R,OAAO9Q,EAAEuS,QAAQ,GAAE,cAAMpT,KAAK2R,OAAO7Q,EAAEsS,QAAQ,IAClEhK,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO9Q,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAChD0H,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO7Q,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GAAK,GAItE,GAAC,wBACD,SAAkBY,GAEd,IAF8C,IAAD,OACvC4P,EAAmB,GAChBtR,GAAK,EAAGA,GAAK,EAAGA,GAAK,IAC1BsR,EAAOnO,KAAKnD,GAIhB,IAAM0L,EAAKV,EAAAA,KAAQ,WACf,OAAO,EAAK4D,mBAAmBsB,QAAQlF,EAAAA,IAAYsG,GACvD,IAEIE,EAAS9F,EAAG8C,WAChB9C,EAAG0E,UAGH1O,EAAIyH,UAAY,EAChBzH,EAAI0H,YAAc,UAClB1H,EAAI8G,YACJ9G,EAAI2H,OAAOd,EAAAA,GAAAA,MAAkB+I,EAAO,IAAK,EAAG,EAAG,EAAGnS,KAAK0B,OAAQ0H,EAAAA,GAAAA,MAAkBiJ,EAAO,IAAK,EAAG,EAAGrS,KAAK2B,OAAQ,IAEhH,IAAK,IAAI2C,EAAI,EAAGA,EAAI6N,EAAO3N,SAAUF,EACjC/B,EAAI4H,OAAOf,EAAAA,GAAAA,MAAkB+I,EAAO7N,IAAK,EAAG,EAAG,EAAGtE,KAAK0B,OAAQ0H,EAAAA,GAAAA,MAAkBiJ,EAAO/N,IAAK,EAAG,EAAGtE,KAAK2B,OAAQ,IAEpHY,EAAI6H,QAER,KAAC,EArO0D,CAAS5C,GAuOlEyK,EAAoB,WAOtB,cAAe,oBANfK,QAAyB,GAAG,KAC5BtJ,UAAI,OAEJuJ,IAAc,EAAE,KAChBrB,aAAuB,GAAI,KAC3BC,eAAS,EAEL,IAAK,IAAI7M,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAMsG,EAASiB,EAAAA,IAAYA,EAAAA,IAA2B,EAAhBjC,KAAKgE,SAAgB,IAC3DhD,EAAO4H,QACPxS,KAAKsS,QAAQtO,KAAK4G,EACtB,CAEA5K,KAAKgJ,KAAO6C,EAAAA,IAAYA,EAAAA,IAA2B,EAAhBjC,KAAKgE,SAAgB,IACxD5N,KAAKmR,UAAYtF,EAAAA,IAAAA,KAAc7L,KAAKkR,aACxC,CAuEA,OAvEC,iCAED,SAAiBrQ,GAIb,OAFWA,EAAE2N,IAAIxO,KAAKsS,QAAQ,IACzB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAKb,OAHWA,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,IAClC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAMb,OAJWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAOb,OALWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAQb,OANWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,qBACD,SAAenI,GACX,OAAiB,IAAbb,KAAKuS,IAAoBvS,KAAKyS,UAAU5R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAK0S,UAAU7R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAK2S,UAAU9R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAKoS,UAAUvR,GAErCb,KAAK4S,UAAU/R,EAC1B,GAAC,kBACD,SAAYuQ,EAA0BC,GAClC,OAAOD,EAAKpC,IAAIqC,GAAO1C,SAAStB,MACpC,GAAC,mBACD,SAAaiE,EAAgBC,GAAiB,IAAD,OAEzC1F,EAAAA,KAAQ,WACJ,IAAMS,EAAKT,EAAAA,IAAYyF,GACjB/E,EAAKV,EAAAA,IAAY0F,GACvB,EAAKJ,UAAUK,UAAS,kBAAW,EAAKC,KAAK,EAAKV,QAAQzE,GAAKC,EAAG,GACtE,GAKJ,KAOA,EAvFsB,GCnOb8G,EAAS,0CAiBlB,WAAY/K,GAAiE,IAAD,EAA3C5G,EAAa,uDAAG,IAAKC,EAAc,uDAAG,IAGvD,OAH0D,gBACtE,cAAM2G,EAAU5G,EAAOC,IAhB3B4G,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EACjBC,GAAiB,GAAG,EACpB6I,YAA+BC,EAAU,EAEzC0B,aAAO,EAIH,EAAK7L,WAAWhF,MAAQ,qCACxB,EAAKwG,OAAO,CAEhB,CAoJC,OApJA,4BACD,WAEIjJ,KAAKsT,QAAU,IAAIC,CACvB,GAAC,uBACD,SAAU1S,EAAWC,GAEjB,IADA,IAAMgS,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC,GAAIc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAAM,IAEnC,YADAtE,KAAK2R,OAAS3R,KAAK8I,GAAGxE,IAI9BtE,KAAK8I,GAAG9E,KAAK,IAAIoB,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IAEtD,GAAC,uBACD,SAAUD,EAAWC,GAGjB,IAFA,IAAI6Q,OAA+BC,EAC7BkB,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAG,CACxBc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAC7B,MACTqN,EAAS3R,KAAK8I,GAAGxE,GAEzB,CAEItE,KAAK2R,OADLA,QAGcC,CAEtB,GAAC,uBACD,SAAU/Q,EAAWC,GACbd,KAAK2R,SACL3R,KAAK2R,OAAO9Q,EAAIb,KAAKkJ,KAAKrI,GAC1Bb,KAAK2R,OAAO7Q,EAAId,KAAKmJ,KAAKrI,GAElC,GAAC,qBACD,WACId,KAAK2R,YAASC,CAClB,GAAC,kBACD,SAAK1O,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK0B,OAAQ,EAAG,EACnD,GAAC,kBACD,SAAKwB,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK2B,OAAQ,GAAI,EACpD,GAAC,sBACD,SAASY,GACLA,EAAI0H,YAAc,UAGlB,IAFA,IAAM8I,EAAY/S,KAAK0B,MAAQ,GAAK,EAC9BsR,EAAYhT,KAAK2B,OAAS,GAAK,EAC5B2C,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAExB/B,EAAIyH,UADE,KAAN1F,EACgB,EAEA,EAEpB,IAAI2O,EAAKF,EAAYzO,EACjBwF,EAAK,EACLoJ,EAAKD,EACLlJ,EAAK/J,KAAK2B,OACdY,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,SAEJ6I,EAAK,EACLnJ,EAAKkJ,EAAY1O,EACjB4O,EAAKlT,KAAK0B,MACVqI,EAAKD,EACLvH,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,QACR,CACJ,GAAC,qCACD,SAAwB7H,GAYpB,GATAA,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAI+G,KAAK,EAAG,EAAG/G,EAAID,OAAOZ,MAAOa,EAAID,OAAOX,QAC5CY,EAAIgH,YACJhH,EAAIiH,OAEJxJ,KAAKmT,SAAS5Q,GAGVvC,KAAK8I,GAAGtE,OAAS,EAAG,CAEpB,IADA,IAAM4K,EAAK,GAAIE,EAAK,GACXhL,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAK8K,EAAGpL,KAAKhE,KAAK8I,GAAGxE,GAAGzD,GAAIyO,EAAGtL,KAAKhE,KAAK8I,GAAGxE,GAAGxD,GAOrFd,KAAK0J,WAAWnH,EACpB,CAIAA,EAAIqD,UAAY,UAChB,IAAK,IAAItB,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC/B,EAAI8G,YACJ9G,EAAIoH,IACAP,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGzD,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAC/C0H,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGxD,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GACpD,EAAG,EAAa,EAAViI,KAAKC,IACftH,EAAIgH,YACJhH,EAAIiH,OAGJxJ,KAAK2R,SACLpP,EAAIqD,UAAY,UAChBrD,EAAIwD,KAAO,aACXxD,EAAIuD,UAAY,SAChBvD,EAAI4D,SAAS,KAAD,OAAMnG,KAAK2R,OAAO9Q,EAAEuS,QAAQ,GAAE,cAAMpT,KAAK2R,OAAO7Q,EAAEsS,QAAQ,IAClEhK,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO9Q,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAChD0H,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO7Q,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GAAK,GAItE,GAAC,wBACD,SAAkBY,GAuBd,KAEH,EA1KiB,CAASiF,GA4KzB+L,EAAO,WAET,aAAe,IAAD,4BADdzB,WAAK,EAED9R,KAAK8R,MAAQjG,EAAAA,MAEb,IAAM2H,EAAS3H,EAAAA,IAAAA,MAAgB,CAC3B4H,WAAY,CAAC,GACbC,MAAO,EACPC,WAAY,YAEVC,EAAS/H,EAAAA,IAAAA,MAAgB,CAC3B6H,MAAO,EACPC,WAAY,YAIhB3T,KAAK8R,MAAMpD,IAAI8E,GACfxT,KAAK8R,MAAMpD,IAAIkF,GAEf,IAAMC,EAAgC,CAClC1C,UAAWtF,EAAAA,IAAAA,IAAa,IACxB4F,KAAM5F,EAAAA,IAAAA,kBAGV7L,KAAK8R,MAAMgC,QAAQD,GAKnB7T,KAAK+T,SAAS3D,MAAK,WACf,IAAMvP,EAAIgL,EAAAA,IAAY,CAClB,CAAC,EAAG,GACJ,CAAC,GAAK,IACN,CAAC,EAAG,KAEO,EAAKiG,MAAMf,QAAQlQ,GACZ2R,OAC1B,GACJ,CA4CC,OA5CA,8BACD,WACI,IAAM3R,EAAIgL,EAAAA,IAAY,CAClB,CAAC,EAAG,GACJ,CAAC,GAAK,IACN,CAAC,EAAG,KAGF/K,EAAI+K,EAAAA,IAAY,CAClB,CAAC,GACD,CAAC,IACD,CAAC,KAKL7L,KAAK8R,MAAMkC,IAAInT,EAAGC,EAHH,CACXmT,OAAQ,KAEiB7D,MAAK,SAAC8D,GAAQ,OAAKC,QAAQC,IAAIF,EAASG,QAAQ,IAChBrU,KAAK8R,MAAMf,QAAQlQ,GAEvD2R,OAC7B,GAAC,6DACD,+FACU3F,EAAShB,EAAAA,IAAY,CACvB,CAAC,EAAG,GACJ,CAAC,GAAK,IACN,CAAC,EAAG,KAGFkB,EAASlB,EAAAA,IAAY,CACvB,CAAC,GACD,CAAC,IACD,CAAC,KAECyI,EAAuB,CACzBL,OAAQ,GACRM,SAAS,GAGJjQ,EAAI,EAAE,KAAD,OAAEA,EAAI,KAAG,iCACItE,KAAK8R,MAAMkC,IAAInH,EAAQE,EAAQuH,GAAQ,KAAD,EAA/C,gBADShQ,EAAC,gEAM/B,kDAxBA,MAwBA,EAlFQ,GC9KAkQ,EAAY,0CAmBrB,WAAYlM,GAAiE,IAAD,EAA3C5G,EAAa,uDAAG,IAAKC,EAAc,uDAAG,IAIrD,OAJwD,gBACtE,cAAM2G,EAAU5G,EAAOC,IAlB3B4G,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EACjBC,GAAiB,GAAG,EACpB6I,YAA+BC,EAAU,EAEzC0B,aAAO,IACPmB,cAAQ,IACRC,OAAmB,GAIf,EAAKjN,WAAWhF,MAAQ,SACxB,EAAKwG,OACL,EAAK4G,SAAS,CAClB,CAwHC,OAxHA,8BACD,WACI,IAAM7M,EAAMsD,SAASC,cAAc,OAEnCvD,EAAIwD,MAAMC,SAAW,WACrBzD,EAAIwD,MAAMsJ,KAAO,OACjB9M,EAAIwD,MAAM3B,MAAQ,UAElB,IAAM6K,EAAIpJ,SAASC,cAAc,KACjCmJ,EAAEK,YAAc,kFAChBL,EAAElJ,MAAMmO,SAAW,OACnB3R,EAAIgN,OAAON,GAEX,IAAMO,EAAU3J,SAAS4J,eAAe,aACpCD,GACAA,EAAQD,OAAOhN,EAGvB,GAAC,kBACD,WAEIhD,KAAKsT,QAAU,IAAIC,EAGnB,IADA,IAAImB,EAAS,GACJpQ,EAAI,EAAGA,GAAK,KAAMA,EACvB,IAAK,IAAIsQ,EAAI,EAAGA,GAAK,KAAMA,EAGvBF,EAAO1Q,KAAK,CAAK,GAAJ4Q,EAAa,GAAJtQ,IAK9BtE,KAAKyU,SAAW5I,EAAAA,IAAY6I,EAEhC,GAAC,uBACD,SAAU7T,EAAWC,GAEjB,IADA,IAAMgS,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC,GAAIc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAAM,IAEnC,YADAtE,KAAK2R,OAAS3R,KAAK8I,GAAGxE,IAI9BtE,KAAK8I,GAAG9E,KAAK,IAAIoB,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IAEtD,GAAC,uBACD,SAAUD,EAAWC,GAGjB,IAFA,IAAI6Q,OAA+BC,EAC7BkB,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAG,CACxBc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAC7B,MACTqN,EAAS3R,KAAK8I,GAAGxE,GAEzB,CAEItE,KAAK2R,OADLA,QAGcC,CAEtB,GAAC,uBACD,SAAU/Q,EAAWC,GACbd,KAAK2R,SACL3R,KAAK2R,OAAO9Q,EAAIb,KAAKkJ,KAAKrI,GAC1Bb,KAAK2R,OAAO7Q,EAAId,KAAKmJ,KAAKrI,GAElC,GAAC,qBACD,WACId,KAAK2R,YAASC,CAClB,GAAC,kBACD,SAAK1O,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK0B,OAAQ,EAAG,EACnD,GAAC,kBACD,SAAKwB,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK2B,OAAQ,GAAI,EACpD,GAAC,qCACD,SAAwBY,GAAgC,IAAD,OAMnDsJ,EAAAA,KAAQ,WACJ,IACMqD,EADI,EAAKoE,QAAQxB,MAAMf,QAAQ,EAAK0D,UACRpF,WAKlC9M,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAI+G,KAAK,EAAG,EAAG/G,EAAID,OAAOZ,MAAOa,EAAID,OAAOX,QAC5CY,EAAIgH,YACJhH,EAAIiH,OAKJ,IADA,IAAIqL,EAAQ,EACHvQ,EAAI,EAAGA,GAAK,GAAIA,IACrB,IAAK,IAAIsQ,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,EAAKF,OAAO1Q,KAAKM,GACjB,IACIzD,EADS,GACLyD,EACJxD,EAFS,GAEL8T,EACFE,EAAM5F,EAAO2F,GAEnBtS,EAAIqD,UAAS,eAAiB,IAANkP,EAAS,IAAI,EAAC,IAAI,EAAC,OAE3CvS,EAAI8G,YACJ9G,EAAI+G,KAAKzI,EAAGC,EARC,OASbyB,EAAIgH,YACJhH,EAAIiH,OAEJqL,GACJ,CAGR,GAEJ,KAAC,EAhJoB,CAASrN,GAkJ5B+L,EAAO,WAcT,cAAe,oBAbfzB,WAAK,OACLjF,OAAShB,EAAAA,IAAY,CACjB,CAAC,EAAK,GACN,CAAC,EAAK,GACN,CAAC,EAAK,GACN,CAAC,EAAK,KACP,KACHkB,OAASlB,EAAAA,IAAY,CACjB,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAGD7L,KAAK8R,MAAQjG,EAAAA,MAEb,IAAM2H,EAAS3H,EAAAA,IAAAA,MAAgB,CAC3B4H,WAAY,CAAC,GACbC,MAAO,GACPC,WAAY,YAEVC,EAAS/H,EAAAA,IAAAA,MAAgB,CAC3B6H,MAAO,EACPC,WAAY,YAEhB3T,KAAK8R,MAAMpD,IAAI8E,GACfxT,KAAK8R,MAAMpD,IAAIkF,GACf5T,KAAK8R,MAAMgC,QAAQ,CACf3C,UAAWtF,EAAAA,IAAAA,KAAc,KACzB4F,KAAM5F,EAAAA,IAAAA,mBAEV7L,KAAK+U,WACT,CAYC,OAZA,iCACD,WAAoB,IAAD,OACf/U,KAAK6Q,QAAQT,MAAK,SAAClB,GAEf8F,YAAW,kBAAM,EAAKD,WAAW,GAAE,EACvC,GACJ,GAAC,4DACD,mGACiB/U,KAAK8R,MAAMkC,IAAIhU,KAAK6M,OAAQ7M,KAAK+M,OAAQ,CAClDkH,OAAQ,GACRM,SAAS,IACV,KAAD,mFACL,kDANA,MAMA,EA7CQ,GCjJAU,EAAa,0CAmBtB,WAAY3M,GAAiE,IAAD,EAA3C5G,EAAa,uDAAG,IAAKC,EAAc,uDAAG,IAGvD,OAH0D,gBACtE,cAAM2G,EAAU5G,EAAOC,IAlB3B4G,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EAIjByK,aAAO,IACPmB,cAAQ,IACRC,OAAmB,GAIf,EAAKjN,WAAWhF,MAAQ,qCACxB,EAAKwG,OAAO,CAEhB,CAUC,OAVA,4BACD,WACIjJ,KAAKsT,QAAU,IAAIC,CACvB,GAAC,qCACD,SAAwBhR,GAEpBsJ,EAAAA,KAAQ,WACJ,GAGR,KAAC,EAlCqB,CAASrE,GAoC7B+L,EAAO,WAiBT,cAAe,oBAhBfzB,WAAK,OACLoD,kBAAY,OACZC,kBAAY,EAeR,IAAM5G,EAAIxD,EAAcqK,cACxBvJ,EAAAA,IAAAA,QAAgB0C,GAIhB,IADA,IAAMmG,EAAS,GACNpQ,EAAI,EAAGA,EAAIiK,EAAE/J,SAAUF,EAAG,CAE/B,IADA,IAAI+Q,EAAM,GACDT,EAAI,EAAGA,EAAIrG,EAAEjK,GAAGE,OAAS,IAAKoQ,EACnCS,EAAIrR,KAAKuK,EAAEjK,GAAGsQ,IAElBF,EAAO1Q,KAAKqR,EAChB,CAGA,IADA,IAAMC,EAAS,GACNhR,EAAI,EAAGA,EAAIiK,EAAE/J,SAAUF,EACE,IAA1BiK,EAAEjK,GAAGiK,EAAEjK,GAAGE,OAAS,GACnB8Q,EAAOtR,KAAK,CAAC,EAAG,EAAG,IACc,IAA1BuK,EAAEjK,GAAGiK,EAAEjK,GAAGE,OAAS,GAC1B8Q,EAAOtR,KAAK,CAAC,EAAG,EAAG,IACc,IAA1BuK,EAAEjK,GAAGiK,EAAEjK,GAAGE,OAAS,IAC1B8Q,EAAOtR,KAAK,CAAC,EAAG,EAAG,IAS3BhE,KAAKkV,aAAerJ,EAAAA,IAAY6I,GAChC1U,KAAKmV,aAAetJ,EAAAA,IAAYyJ,GAGhCtV,KAAKkV,aAAa1C,QAClBxS,KAAKmV,aAAa3C,QAElBxS,KAAK8R,MAAQjG,EAAAA,MAIb,IAAM2H,EAAS3H,EAAAA,IAAAA,MAAgB,CAC3B4H,WAAY,CAACzT,KAAKkV,aAAavI,MAAM,IACrC+G,MAAO,GACPC,WAAY,YAEVC,EAAS/H,EAAAA,IAAAA,MAAgB,CAE3B6H,MAAO,EACPC,WAAY,YAEhB3T,KAAK8R,MAAMpD,IAAI8E,GACfxT,KAAK8R,MAAMpD,IAAIkF,GACf5T,KAAK8R,MAAMgC,QAAQ,CACf3C,UAAWtF,EAAAA,IAAAA,OAGX4F,KAAM5F,EAAAA,IAAAA,oBACN0J,QAAS,CAAC,cAEdvV,KAAK8R,MAAM0D,UAGXxV,KAAK+U,WACT,CAiBC,OAjBA,0EACD,8GACU/U,KAAK8R,MAAMnM,KAAK,wBAAwB,KAAD,kBACnB3F,KAAK8R,MAAMnM,KAAK,gCAAgC,KAAD,EAAxD,OAEjB3F,KAAK6Q,QAAQT,MAAK,SAAClB,GAEf8F,YAAW,kBAAM,EAAKD,WAAW,GAAE,EACvC,IAAG,gDACN,kDATA,IASA,4DACD,mGACiB/U,KAAK8R,MAAMkC,IAAIhU,KAAKkV,aAAclV,KAAKmV,aAAc,CAE9DlB,OAAQ,GACRM,SAAS,EACTkB,eAAgB,CAACzV,KAAKkV,aAAclV,KAAKmV,gBAC1C,KAAD,mFACL,kDARA,MAQA,EAlGQ,GChCAO,EAAqB,0CAmB9B,WAAYpN,GAAiE,IAAD,EAA3C5G,EAAa,uDAAG,IAAKC,EAAc,uDAAG,IAGvD,OAH0D,gBACtE,cAAM2G,EAAU5G,EAAOC,IAlB3B4G,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EAIjByK,aAAO,IACPmB,cAAQ,IACRC,OAAmB,GAIf,EAAKjN,WAAWhF,MAAQ,qCACxB,EAAKwG,OAAO,CAEhB,CAkBC,OAlBA,qEACD,gGAC+B,OAArBsF,EAAI,IAAIoH,EAAc,EAAD,OACrBpH,EAAEtF,OAAOmH,MAAK,WAChB,EAAKkD,QAAU,IAAIC,EAAQ,SAAUhF,EAAE2G,aAAc3G,EAAE4G,cACvD,EAAK7B,QAAQsC,gBAEb,EAAKtC,QAAU,IAAIC,EAAQ,SAAUhF,EAAE2G,aAAc3G,EAAE4G,cACvD,EAAK7B,QAAQuC,eAEjB,IAAG,KAAD,sCACL,kDAXA,IAWA,qCACD,SAAwBtT,GAEpBsJ,EAAAA,KAAQ,WACJ,GAGR,KAAC,EA1C6B,CAASrE,GA6CrCmO,EAAW,WAIb,cAAe,oBAHfG,SAAG,OACHZ,kBAAY,OACZC,kBAAY,CAGZ,CA6EC,OA7EA,qEACD,+HACoBnV,KAAK+V,UAAU,KAAD,EAC9B,GADMxH,EAAC,OACA,CAOH,IANAvO,KAAK8V,IAAM9V,KAAKgW,YAAYzH,GAC5B1C,EAAAA,IAAAA,QAAgB7L,KAAK8V,KAGfpB,EAAS,GACTuB,EAAa,GACV3R,EAAI,EAAGA,EAAItE,KAAK8V,IAAItR,SAAUF,EAAG,CAEtC,IADI+Q,EAAM,GACDT,EAAI,EAAGA,EAAI5U,KAAK8V,IAAIxR,GAAGE,OAAS,IAAKoQ,EAAKS,EAAIrR,KAAKhE,KAAK8V,IAAIxR,GAAGsQ,IACxEF,EAAO1Q,KAAKqR,GACZY,EAAWjS,KAAKhE,KAAK8V,IAAIxR,GAAGtE,KAAK8V,IAAIxR,GAAGE,OAAS,GACrD,CAOA,IAJMuK,EAAMlD,EAAAA,IAAOoK,GACbC,EAASnH,EAAIM,WAEbiG,EAAS,GACNhR,EAAI,EAAGA,EAAI2R,EAAWzR,SAAUF,EAAG,CAExC,IADM+M,EAAQ,GACLuD,EAAI,EAAGA,GAAKsB,EAAO,KAAMtB,EAC1BA,IAAMqB,EAAW3R,GACjB+M,EAAMrN,KAAK,GAEXqN,EAAMrN,KAAK,GAGnBsR,EAAOtR,KAAKqN,EAChB,CAGArR,KAAKkV,aAAerJ,EAAAA,IAAY6I,GAChC1U,KAAKmV,aAAetJ,EAAAA,IAAYyJ,GAEhCtV,KAAKkV,aAAa1C,QAClBxS,KAAKmV,aAAa3C,OACtB,CAAC,gDACJ,kDAzCA,IAyCA,yBACD,SAAoB2D,GAKhB,IAJA,IAAMC,EAAeD,EAAQE,MAAM,WAC7BC,EAAUF,EAAa,GAAGC,MAAM,KAChCE,EAAQ,GAELjS,EAAI,EAAGA,EAAI8R,EAAa5R,OAAQF,IAAK,CAC1C,IAAM4H,EAAOkK,EAAa9R,GAAG+R,MAAM,KACnC,GAAInK,EAAK1H,SAAW8R,EAAQ9R,OAAQ,CAGhC,IADA,IAAMgS,EAAO,GACJ5B,EAAI,EAAGA,EAAI0B,EAAQ9R,OAAQoQ,IAAK,CACrC,IAAM6B,GAAYvK,EAAK0I,GACnB8B,MAAMD,GACND,EAAKxS,KAAKkI,EAAK0I,IAEf4B,EAAKxS,KAAKyS,EAElB,CACAF,EAAMvS,KAAKwS,EACf,CACJ,CACA,OAAOD,CACX,GAAC,8DACD,mFAGI,MADW,4BACX,kBACOvL,MAAM,uCAAD,OAFD,8BAGNoF,MAAK,SAAC8D,GAEH,OAAOA,EAASyC,MACpB,IACCC,OAAM,SAACC,GACR,KACE,2CACT,kDAbA,MAaA,EAnFY,GAsFXtD,EAAO,WAOT,WAAYuD,EAAc5B,EAAqCC,IAAsC,oBANrG4B,QAAE,OACFC,QAAE,OACFF,UAAI,OACJhF,WAAK,OACLoD,kBAAY,OACZC,kBAAY,EAERnV,KAAK8W,KAAOA,EACZ9W,KAAKkV,aAAeA,EACpBlV,KAAKmV,aAAeA,CACxB,CAuEC,OAvEA,qCACD,WACInV,KAAK8R,MAAQjG,EAAAA,MACb,IAAMoL,EAAWpL,EAAAA,IAAAA,MAAgB,CAC7B4H,WAAY,CAACzT,KAAKkV,aAAavI,MAAM,IACrC+G,MAAO,GACPC,WAAY,YAEVC,EAAS/H,EAAAA,IAAAA,MAAgB,CAE3B6H,MAAO1T,KAAKmV,aAAaxI,MAAM,GAC/BgH,WAAY,YAEhB3T,KAAK8R,MAAMpD,IAAIuI,GACfjX,KAAK8R,MAAMpD,IAAIkF,GACf5T,KAAKkX,SACT,GAAC,2BACD,WACIlX,KAAK8R,MAAQjG,EAAAA,MACb,IAAMoL,EAAWpL,EAAAA,IAAAA,MAAgB,CAC7B4H,WAAY,CAACzT,KAAKkV,aAAavI,MAAM,IACrC+G,MAAO,GACPC,WAAY,YAEVwD,EAAWtL,EAAAA,IAAAA,MAAgB,CAE7B6H,MAAO,GACPC,WAAY,YAEVC,EAAS/H,EAAAA,IAAAA,MAAgB,CAE3B6H,MAAO1T,KAAKmV,aAAaxI,MAAM,GAC/BgH,WAAY,YAEhB3T,KAAK8R,MAAMpD,IAAIuI,GACfjX,KAAK8R,MAAMpD,IAAIyI,GACfnX,KAAK8R,MAAMpD,IAAIkF,GACf5T,KAAKkX,SACT,GAAC,qBACD,WACIlX,KAAK8R,MAAMgC,QAAQ,CACf3C,UAAWtF,EAAAA,IAAAA,OAGX4F,KAAM5F,EAAAA,IAAAA,oBACN0J,QAAS,CAAC,cAEdvV,KAAK8R,MAAM0D,UAGXxV,KAAK+U,WACT,GAAC,gEACD,8FACgC,OAA5B/U,KAAK+W,GAAKK,YAAYC,MAAM,SAEtBrX,KAAK8R,MAAMnM,KAAK,wBAAwB,KAAD,EAG7C3F,KAAK6Q,QAAQT,MAAK,SAAClB,GACf,EAAK8H,GAAKI,YAAYC,MAEtBrC,YAAW,kBAAM,EAAKD,WAAW,GAAE,EACvC,IAAG,gDACN,kDAZA,IAYA,4DACD,uHAOC,kDARA,MAQA,EAlFQ,G,sBCzIAuC,EAAoC,0CAiB7C,WAAYhP,GAAiE,IAAD,EAA3C5G,EAAa,uDAAG,IAAKC,EAAc,uDAAG,IAGvD,OAH0D,gBACtE,cAAM2G,EAAU5G,EAAOC,IAhB3B4G,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EACjBC,GAAiB,GAAG,EACpB6I,YAA+BC,EAM3B,EAAKnK,WAAWhF,MAAQ,qCACxB,EAAKwG,OAAO,CAEhB,CAsJC,OAtJA,4BACD,WAAQ,IAAD,OAGH8B,EAAcoF,UAAUC,MAAK,SAAC7B,GAG1B,EAAKsC,MAAMtC,EAGf,GAEJ,GAAC,4DACD,WAAYA,GAAM,kFAQd,OAPMgJ,EAAaC,EAAgBjJ,GAE3BmG,EAAmB6C,EAAnB7C,OAAQY,EAAWiC,EAAXjC,OAEVxD,EAAQ2F,IAEdC,EAAAA,KAAAA,aAAwB,CAAEZ,KAAM,iBAAmBhF,GACnD,SACM6F,EAAW7F,EAAO4C,EAAQY,GAAQ,KAAD,EAEvCsC,EAAU9F,EAAOvD,EAAGgJ,GAAY,2CACnC,mDAbA,IAaA,uBACD,SAAU1W,EAAWC,GAEjB,IADA,IAAMgS,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC,GAAIc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAAM,IAEnC,YADAtE,KAAK2R,OAAS3R,KAAK8I,GAAGxE,IAI9BtE,KAAK8I,GAAG9E,KAAK,IAAIoB,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IAEtD,GAAC,8BACD,WAEI,GACH,uBACD,SAAUD,EAAWC,GAGjB,IAFA,IAAI6Q,OAA+BC,EAC7BkB,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAG,CACxBc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAC7B,MACTqN,EAAS3R,KAAK8I,GAAGxE,GAEzB,CAEItE,KAAK2R,OADLA,QAGcC,CAEtB,GAAC,uBACD,SAAU/Q,EAAWC,GACbd,KAAK2R,SACL3R,KAAK2R,OAAO9Q,EAAIb,KAAKkJ,KAAKrI,GAC1Bb,KAAK2R,OAAO7Q,EAAId,KAAKmJ,KAAKrI,GAElC,GAAC,qBACD,WACId,KAAK2R,YAASC,CAClB,GAAC,kBACD,SAAK1O,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK0B,OAAQ,EAAG,EACnD,GAAC,kBACD,SAAKwB,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK2B,OAAQ,GAAI,EACpD,GAAC,sBACD,SAASY,GACLA,EAAI0H,YAAc,UAGlB,IAFA,IAAM8I,EAAY/S,KAAK0B,MAAQ,GAAK,EAC9BsR,EAAYhT,KAAK2B,OAAS,GAAK,EAC5B2C,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAExB/B,EAAIyH,UADE,KAAN1F,EACgB,EAEA,EAEpB,IAAI2O,EAAKF,EAAYzO,EACjBwF,EAAK,EACLoJ,EAAKD,EACLlJ,EAAK/J,KAAK2B,OACdY,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,SAEJ6I,EAAK,EACLnJ,EAAKkJ,EAAY1O,EACjB4O,EAAKlT,KAAK0B,MACVqI,EAAKD,EACLvH,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,QACR,CACJ,GAAC,qCACD,SAAwB7H,GAYpB,GATAA,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAI+G,KAAK,EAAG,EAAG/G,EAAID,OAAOZ,MAAOa,EAAID,OAAOX,QAC5CY,EAAIgH,YACJhH,EAAIiH,OAEJxJ,KAAKmT,SAAS5Q,GAGVvC,KAAK8I,GAAGtE,OAAS,EAAG,CAEpB,IADA,IAAM4K,EAAK,GAAIE,EAAK,GACXhL,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAK8K,EAAGpL,KAAKhE,KAAK8I,GAAGxE,GAAGzD,GAAIyO,EAAGtL,KAAKhE,KAAK8I,GAAGxE,GAAGxD,GAOrFd,KAAK0J,WAAWnH,EACpB,CACAA,EAAIqD,UAAY,UAChB,IAAK,IAAItB,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC/B,EAAI8G,YACJ9G,EAAIoH,IACAP,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGzD,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAC/C0H,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGxD,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GACpD,EAAG,EAAa,EAAViI,KAAKC,IACftH,EAAIgH,YACJhH,EAAIiH,OAGJxJ,KAAK2R,SACLpP,EAAIqD,UAAY,UAChBrD,EAAIwD,KAAO,aACXxD,EAAIuD,UAAY,SAChBvD,EAAI4D,SAAS,KAAD,OAAMnG,KAAK2R,OAAO9Q,EAAEuS,QAAQ,GAAE,cAAMpT,KAAK2R,OAAO7Q,EAAEsS,QAAQ,IAClEhK,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO9Q,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAChD0H,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO7Q,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GAAK,GAItE,GAAC,wBACD,SAAkBY,GAEd,IADA,IAAM4P,EAAmB,GAChBtR,GAAK,EAAGA,GAAK,EAAGA,GAAK,IAC1BsR,EAAOnO,KAAKnD,EAEpB,KAAC,EA5K4C,CAAS2G,GA+K1D,SAASoQ,EAAU9F,EAAsB+F,EAAgBC,GACrD,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,SAAUC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SAKtC,EAAoBrM,EAAAA,KAAQ,WAExB,IAAMS,EAAKT,EAAAA,IAAY,EAAG,EAAG,KACvBsM,EAAQrG,EAAMf,QAAQzE,EAAG8L,QAAQ,CAAC,IAAK,KAEvCC,EAAW/L,EACZkC,IAAIuJ,EAAS/I,IAAIgJ,IACjBtJ,IAAIsJ,GAEHM,EAAcH,EAAM3J,IAAI0J,EAASlJ,IAAIiJ,IACtCvJ,IAAIuJ,GAGT,MAAO,CAACI,EAAShJ,WAAYiJ,EAAYjJ,WAC7C,IAAE,eAdK/C,EAAE,KAAE6L,EAAK,KAiBVI,EAAkBC,MAAMC,KAAKnM,GAAIjB,KAAI,SAACqN,EAAKpU,GAC7C,MAAO,CAAEzD,EAAG6X,EAAK5X,EAAGqX,EAAM7T,GAC9B,IAEMqU,EAAiBd,EAAUxM,KAAI,SAACkD,GAAM,MAAM,CAC9C1N,EAAG0N,EAAE9C,WAAY3K,EAAGyN,EAAEhD,IACzB,IAEDmM,EAAAA,OAAAA,YACI,CAAEZ,KAAM,sCACR,CAAE8B,OAAQ,CAACD,EAAgBJ,GAAkBM,OAAQ,CAAC,WAAY,cAClE,CACIC,OAAQ,aACRC,OAAQ,MACRpX,OAAQ,KAGpB,CAAC,SAGcgW,EAAW,EAAD,iDAqBxB,OArBwB,0BAAzB,WAA0B7F,EAAsB4C,EAA4BY,GAA0B,sEASjF,OAPjBxD,EAAMgC,QAAQ,CACV3C,UAAWtF,EAAAA,IAAAA,OACX4F,KAAM5F,EAAAA,IAAAA,iBACN0J,QAAS,CAAC,SAGI,GACH,GAAG,EAAD,OAEJzD,EAAMkC,IAAIU,EAAQY,EAAQ,CACnC0D,UAJc,GAKd/E,OAJW,GAKXM,SAAS,EACT0E,UAAWvB,EAAAA,KAAAA,aACP,CAAEZ,KAAM,wBACR,CAAC,OAAQ,OACT,CAAEnV,OAAQ,IAAKsX,UAAW,CAAC,kBAEhC,KAAD,+EACL,sBAGM,IAAMxB,EAAc,WAEvB,IAAM3F,EAAQjG,EAAAA,MAYd,OAVAiG,EAAMpD,IAAI7C,EAAAA,IAAAA,MAAgB,CACtB4H,WAAY,CAAC,GACbC,MAAO,GACPwF,SAAS,KAGbpH,EAAMpD,IAAI7C,EAAAA,IAAAA,MAAgB,CACtB6H,MAAO,EACPwF,SAAS,KAENpH,CACX,EACa0F,EAAkB,SAACtL,GAI5B,OAAOL,EAAAA,KAAQ,WAEXA,EAAAA,IAAAA,QAAgBK,GAGhB,IAAMwI,EAASxI,EAAKb,KAAI,SAACkD,GAAM,OAAKA,EAAE9C,UAAU,IAC1C6J,EAASpJ,EAAKb,KAAI,SAACkD,GAAM,OAAKA,EAAEhD,GAAG,IAEnC4N,EAActN,EAAAA,IAAY6I,EAAQ,CAACA,EAAOlQ,OAAQ,IAClD4U,EAAcvN,EAAAA,IAAYyJ,EAAQ,CAACA,EAAO9Q,OAAQ,IAGlDuT,EAAWoB,EAAYpK,MACvBiJ,EAAWmB,EAAYtK,MACvBqJ,EAAWkB,EAAYrK,MACvBkJ,EAAWmB,EAAYvK,MAK7B,MAAO,CACH6F,OAJqByE,EAAYnK,IAAIgJ,GAAUhV,IAAI+U,EAAS/I,IAAIgJ,IAKhE1C,OAJqB8D,EAAYpK,IAAIiJ,GAAUjV,IAAIkV,EAASlJ,IAAIiJ,IAMhEF,SAAAA,EACAC,SAAAA,EACAE,SAAAA,EACAD,SAAAA,EAER,GACJ,ECpSaoB,EAAO,0CAmBhB,WAAY/Q,GAAiE,IAAD,EAA3C5G,EAAa,uDAAG,IAAKC,EAAc,uDAAG,IAIrD,OAJwD,gBACtE,cAAM2G,EAAU5G,EAAOC,IAlB3B4G,KAAe,IAAI,EACnBC,KAAe,IAAI,EAEnBC,OAAiB,GAAG,EACpBC,OAAiB,GAAG,EAEpBC,WAAqB,EAAE,EACvBC,WAAqB,EAAE,EAEvBC,IAAc,GAAG,EACjBC,GAAiB,GAAG,EACpB6I,YAA+BC,EAAU,EAEzC0H,IAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAAW,EAE9F7J,mBAA6C,GAIzC,EAAKhI,WAAWhF,MAAQ,YACxB,EAAKwG,OACL,EAAK4G,SAAS,CAClB,CAoOC,OApOA,4BACD,WACI7P,KAAKyP,mBAAmBzL,KAAK,IAAIiO,EAAqB,IACtDjS,KAAKyP,mBAAmBzL,KAAK,IAAIiO,EAAqB,IACtDjS,KAAKyP,mBAAmBzL,KAAK,IAAIiO,EAAqB,IACtDjS,KAAKyP,mBAAmBzL,KAAK,IAAIiO,EAAqB,IAMtDjS,KAAKyH,WAAWnF,OAAOkE,MAAME,OAAS,KAEtCqE,EAAcoF,UAAUC,MAAK,SAAC7B,GAC1B,IAKS,IAAIgL,EAGrB,GAAC,oBACD,WACI,IAAMvW,EAAMsD,SAASC,cAAc,OAEnCvD,EAAIwD,MAAMC,SAAW,WACrBzD,EAAIwD,MAAMsJ,KAAO,OACjB9M,EAAIwD,MAAM3B,MAAQ,UAElB,IAAI6K,EAAIpJ,SAASC,cAAc,KAC/BmJ,EAAEK,YAAc,mCAChB/M,EAAIgN,OAAON,IAEXA,EAAIpJ,SAASC,cAAc,MACzBwJ,YAAc,mBAChBL,EAAElJ,MAAMgT,UAAY,MACpB9J,EAAElJ,MAAMiT,aAAe,MACvB/J,EAAElJ,MAAM3B,MAAQ7E,KAAKsZ,IAAI,GACzBtW,EAAIgN,OAAON,IAEXA,EAAIpJ,SAASC,cAAc,MACzBC,MAAMgT,UAAY,MACpB9J,EAAElJ,MAAMiT,aAAe,MACvB/J,EAAElJ,MAAM3B,MAAQ7E,KAAKsZ,IAAI,GACzB5J,EAAEK,YAAc,2BAChB/M,EAAIgN,OAAON,IAEXA,EAAIpJ,SAASC,cAAc,MACzBC,MAAMgT,UAAY,MACpB9J,EAAElJ,MAAMiT,aAAe,MACvB/J,EAAElJ,MAAM3B,MAAQ7E,KAAKsZ,IAAI,GACzB5J,EAAEK,YAAc,2BAChB/M,EAAIgN,OAAON,IAEXA,EAAIpJ,SAASC,cAAc,MACzBC,MAAMgT,UAAY,MACpB9J,EAAElJ,MAAMiT,aAAe,MACvB/J,EAAElJ,MAAM3B,MAAQ7E,KAAKsZ,IAAI,GACzB5J,EAAEK,YAAc,2BAChB/M,EAAIgN,OAAON,GAEX,IAAMO,EAAU3J,SAAS4J,eAAe,aACpCD,GACAA,EAAQD,OAAOhN,EAYvB,GAAC,uBACD,SAAUnC,EAAWC,GAEjB,IADA,IAAMgS,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC,GAAIc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAAM,IAEnC,YADAtE,KAAK2R,OAAS3R,KAAK8I,GAAGxE,IAI9BtE,KAAK8I,GAAG9E,KAAK,IAAIoB,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IAEtD,GAAC,8BACD,WAEI,GACH,uBACD,SAAUD,EAAWC,GAGjB,IAFA,IAAI6Q,OAA+BC,EAC7BkB,EAAI,IAAI1N,EAAAA,GAASpF,KAAKkJ,KAAKrI,GAAIb,KAAKmJ,KAAKrI,IACtCwD,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAG,CACxBc,EAAAA,GAAAA,SAAkB0N,EAAG9S,KAAK8I,GAAGxE,IAC7B,MACTqN,EAAS3R,KAAK8I,GAAGxE,GAEzB,CAEItE,KAAK2R,OADLA,QAGcC,CAEtB,GAAC,uBACD,SAAU/Q,EAAWC,GACbd,KAAK2R,SACL3R,KAAK2R,OAAO9Q,EAAIb,KAAKkJ,KAAKrI,GAC1Bb,KAAK2R,OAAO7Q,EAAId,KAAKmJ,KAAKrI,GAElC,GAAC,qBACD,WACId,KAAK2R,YAASC,CAClB,GAAC,kBACD,SAAK1O,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK0B,OAAQ,EAAG,EACnD,GAAC,kBACD,SAAKwB,GACD,OAAOkG,EAAAA,GAAAA,MAAkBlG,EAAG,EAAGlD,KAAK2B,OAAQ,GAAI,EACpD,GAAC,sBACD,SAASY,GACLA,EAAI0H,YAAc,UAGlB,IAFA,IAAM8I,EAAY/S,KAAK0B,MAAQ,GAAK,EAC9BsR,EAAYhT,KAAK2B,OAAS,GAAK,EAC5B2C,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAExB/B,EAAIyH,UADE,KAAN1F,EACgB,EAEA,EAEpB,IAAI2O,EAAKF,EAAYzO,EACjBwF,EAAK,EACLoJ,EAAKD,EACLlJ,EAAK/J,KAAK2B,OACdY,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,SAEJ6I,EAAK,EACLnJ,EAAKkJ,EAAY1O,EACjB4O,EAAKlT,KAAK0B,MACVqI,EAAKD,EACLvH,EAAI8G,YACJ9G,EAAI2H,OAAO+I,EAAInJ,GACfvH,EAAI4H,OAAO+I,EAAInJ,GACfxH,EAAI6H,QACR,CACJ,GAAC,qCACD,SAAwB7H,GAYpB,GATAA,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAI+G,KAAK,EAAG,EAAG/G,EAAID,OAAOZ,MAAOa,EAAID,OAAOX,QAC5CY,EAAIgH,YACJhH,EAAIiH,OAEJxJ,KAAKmT,SAAS5Q,GAGVvC,KAAK8I,GAAGtE,OAAS,EAEjB,IAAK,IAAIsO,EAAI,EAAGA,EAAI9S,KAAKyP,mBAAmBjL,SAAUsO,EAAG,CAErD,IADA,IAAM1D,EAAK,GAAIE,EAAK,GACXhL,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAAK8K,EAAGpL,KAAKhE,KAAK8I,GAAGxE,GAAGzD,GAAIyO,EAAGtL,KAAKhE,KAAK8I,GAAGxE,GAAGxD,GAIrFd,KAAKyP,mBAAmBqD,GAAGjC,MAAMzB,EAAIE,GAGrCtP,KAAK0J,WAAWnH,EACpB,CAKJA,EAAIqD,UAAY,UAChB,IAAK,IAAItB,EAAI,EAAGA,EAAItE,KAAK8I,GAAGtE,SAAUF,EAClC/B,EAAI8G,YACJ9G,EAAIoH,IACAP,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGzD,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAC/C0H,EAAAA,GAAAA,MAAkBpJ,KAAK8I,GAAGxE,GAAGxD,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GACpD,EAAG,EAAa,EAAViI,KAAKC,IACftH,EAAIgH,YACJhH,EAAIiH,OAGJxJ,KAAK2R,SACLpP,EAAIqD,UAAY,UAChBrD,EAAIwD,KAAO,aACXxD,EAAIuD,UAAY,SAChBvD,EAAI4D,SAAS,KAAD,OAAMnG,KAAK2R,OAAO9Q,EAAEuS,QAAQ,GAAE,cAAMpT,KAAK2R,OAAO7Q,EAAEsS,QAAQ,IAClEhK,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO9Q,GAAI,EAAG,EAAG,EAAGb,KAAK0B,OAChD0H,EAAAA,GAAAA,MAAkBpJ,KAAK2R,OAAO7Q,GAAI,EAAG,EAAGd,KAAK2B,OAAQ,GAAK,GAItE,GAAC,wBACD,SAAkBY,GACd,IAD8C,IAAD,kBACpCuQ,GAEL,IADA,IAAMX,EAAmB,GAChBtR,GAAK,EAAGA,GAAK,EAAGA,GAAK,IAC1BsR,EAAOnO,KAAKnD,GAIhB,IAAM0L,EAAKV,EAAAA,KAAQ,WACf,OAAO,EAAK4D,mBAAmBqD,GAAG/B,QAAQlF,EAAAA,IAAYsG,GAC1D,IAEIE,EAAS9F,EAAG8C,WAChB9C,EAAG0E,UAGH1O,EAAIyH,UAAY,EAChBzH,EAAI0H,YAAc,EAAKqP,IAAIxG,GAC3BvQ,EAAI8G,YACJ9G,EAAI2H,OAAOd,EAAAA,GAAAA,MAAkB+I,EAAO,IAAK,EAAG,EAAG,EAAG,EAAKzQ,OAAQ0H,EAAAA,GAAAA,MAAkBiJ,EAAO,IAAK,EAAG,EAAG,EAAK1Q,OAAQ,IAEhH,IAAK,IAAI2C,EAAI,EAAGA,EAAI6N,EAAO3N,SAAUF,EACjC/B,EAAI4H,OAAOf,EAAAA,GAAAA,MAAkB+I,EAAO7N,IAAK,EAAG,EAAG,EAAG,EAAK5C,OAAQ0H,EAAAA,GAAAA,MAAkBiJ,EAAO/N,IAAK,EAAG,EAAG,EAAK3C,OAAQ,IAEpHY,EAAI6H,QAAS,EAvBR0I,EAAI,EAAGA,EAAI9S,KAAKyP,mBAAmBjL,SAAUsO,EAAI,EAAjDA,EAyBb,KAAC,EA5Pe,CAAStL,GA8PvByK,EAAoB,WAOtB,aAA8B,IAAlBM,EAAW,uDAAG,GAAC,oBAN3BD,QAAyB,GAAG,KAC5BtJ,UAAI,OAEJuJ,IAAc,EAAE,KAChBrB,aAAuB,GAAI,KAC3BC,eAAS,EAELnR,KAAKuS,IAAMA,EACX,IAAK,IAAIjO,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAMsG,EAASiB,EAAAA,IAAYA,EAAAA,IAA2B,EAAhBjC,KAAKgE,SAAgB,IAC3DhD,EAAO4H,QACPxS,KAAKsS,QAAQtO,KAAK4G,EACtB,CAEA5K,KAAKgJ,KAAO6C,EAAAA,IAAYA,EAAAA,IAA2B,EAAhBjC,KAAKgE,SAAgB,IACxD5N,KAAKmR,UAAYtF,EAAAA,IAAAA,KAAc7L,KAAKkR,aAExC,CAuEA,OAvEC,iCAED,SAAiBrQ,GAIb,OAFWA,EAAE2N,IAAIxO,KAAKsS,QAAQ,IACzB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAKb,OAHWA,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,IAClC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAMb,OAJWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAOb,OALWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,uBACD,SAAiBnI,GAQb,OANWA,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,IAC3C5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE4N,IAAI5C,EAAAA,IAAU,IAAI2C,IAAIxO,KAAKsS,QAAQ,KACzC5D,IAAI7N,EAAE8N,SAASH,IAAIxO,KAAKsS,QAAQ,KAChC5D,IAAI7N,EAAE2N,IAAIxO,KAAKsS,QAAQ,KACvB5D,IAAI1O,KAAKgJ,KAElB,GAAC,qBACD,SAAenI,GACX,OAAiB,IAAbb,KAAKuS,IAAoBvS,KAAKyS,UAAU5R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAK0S,UAAU7R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAK2S,UAAU9R,GAC3B,IAAbb,KAAKuS,IAAoBvS,KAAKoS,UAAUvR,IACxCb,KAAKuS,IAAoBvS,KAAK4S,UAAU/R,GAEhD,GAAC,kBACD,SAAYuQ,EAA0BC,GAClC,OAAOD,EAAKpC,IAAIqC,GAAO1C,SAAStB,MACpC,GAAC,mBACD,SAAaiE,EAAgBC,GAAiB,IAAD,OAEzC1F,EAAAA,KAAQ,WACJ,IAAMS,EAAKT,EAAAA,IAAYyF,GACjB/E,EAAKV,EAAAA,IAAY0F,GACvB,EAAKJ,UAAUK,UAAS,kBAAW,EAAKC,KAAK,EAAKV,QAAQzE,GAAKC,EAAG,GACtE,GAKJ,KAOA,EAzFsB,GAiGpBmN,GAAaC,IACbC,GAAc,GAePL,GAAS,WAOlB,cAAe,oBANfM,gBAAU,OACVC,iBAAW,OACXC,gBAAU,OACVC,iBAAW,OACXC,mBAAa,OACbC,mBAAa,CACG,CAgGf,OAhGgB,qEAEjB,4GA0CI,OAxCMC,EAAM,IAAIC,MACV9X,EAASgE,SAASC,cAAc,UAChChE,EAAMD,EAAOyE,WAAW,MACxBsT,EAAa,IAAIC,SAAQ,SAACC,EAASC,GACrCL,EAAIM,YAAc,GAClBN,EAAIO,OAAS,WACTP,EAAIzY,MAAQyY,EAAIQ,aAChBR,EAAIxY,OAASwY,EAAIS,cAEjB,IAAMC,EACF,IAAIC,YAAYC,SAEdC,EAAY,IAClB1Y,EAAOZ,MAAQyY,EAAIzY,MACnBY,EAAOX,OAASqZ,EAEhB,IAAK,IAAI1W,EAAI,EAAGA,EAAIyW,GAAkCzW,IAAK,CACvD,IAAM2W,EAAmB,IAAIC,aACzBL,EAAoBvW,EAAIoV,GAAasB,EAAY,EACjDtB,OACJnX,EAAI4Y,UACAhB,EAAK,EAAG7V,EAAI0W,EAAWb,EAAIzY,MAAOsZ,EAAW,EAAG,EAAGb,EAAIzY,MACvDsZ,GAIJ,IAFA,IAAMI,EAAY7Y,EAAI8Y,aAAa,EAAG,EAAG/Y,EAAOZ,MAAOY,EAAOX,QAErDiT,EAAI,EAAGA,EAAIwG,EAAUlP,KAAK1H,OAAS,EAAGoQ,IAG3CqG,EAAiBrG,GAAKwG,EAAUlP,KAAS,EAAJ0I,GAAS,GAEtD,CACA,EAAKqF,cAAgB,IAAIiB,aAAaL,EAG1C,EACAV,EAAImB,IAvDZ,4EAwDI,IAEMC,EAAgBvQ,MAxD1B,gFAyDI,SACqBsP,QAAQkB,IAAI,CAACnB,EAAYkB,IAAgB,KAAD,EAE1B,OAF7BrM,EAAM,OACNuM,EAAsBvM,EAAO,GAAG,EAAD,GACZwM,WAAU,UAAOD,EAAeE,cAAa,oBAAtE3b,KAAKka,cAAa,eAGlBla,KAAKga,YAAcha,KAAKia,cAAc9N,MAAM,EAAGuN,QAC/C1Z,KAAK+Z,WAAa/Z,KAAKia,cAAc9N,MAAMuN,QAC3C1Z,KAAK8Z,YAAc9Z,KAAKka,cAAc/N,MAAM,EAAGyN,MAC/C5Z,KAAK6Z,WAAa7Z,KAAKka,cAAc/N,MAAMyN,MAAkC,iDAChF,kDAtDgB,IAwDjB,0BAQA,WAMI,MAAO,CAAEtN,GALET,EAAAA,IACP7L,KAAKga,YACL,CAACha,KAAKga,YAAYxV,OAASkV,GA5FhB,GACA,GA2F8C,IAGhDpE,OAFEzJ,EAAAA,IACX7L,KAAK8Z,YAAa,CAAC9Z,KAAK8Z,YAAYtV,OAASoV,GAAaA,KAElE,GAEA,yBAWA,SAAY1M,GACR,IAAIZ,EAAKT,EAAAA,IACL7L,KAAK+Z,WACL,CAAC/Z,KAAK+Z,WAAWvV,OAASkV,GAhHf,GACA,GA+G6C,IACxDpE,EAASzJ,EAAAA,IACT7L,KAAK6Z,WAAY,CAAC7Z,KAAK6Z,WAAWrV,OAASoV,GAAaA,KAM5D,OAJmB,MAAf1M,IACAZ,EAAKA,EAAGH,MAAM,CAAC,EAAG,EAAG,EAAG,GAAI,CAACe,EArHlB,GACA,GAoHiD,IAC5DoI,EAASA,EAAOnJ,MAAM,CAAC,EAAG,GAAI,CAACe,EAAa0M,MAEzC,CAAEtN,GAAAA,EAAIgJ,OAAAA,EACjB,KAAC,EAvGiB,GCpXTsG,GAAK,0CAEd,WAAYC,GAAuB,IAAD,EAGlB,OAHkB,gBAC9B,cAAMA,IAFVC,EAAc,CAAC,EAAG,GAId,EAAK7S,OAAO,CAChB,CAgBC,OAhBA,4BACD,WACA,GACC,qCACD,SAAwB1G,GACpBA,EAAIqD,UAAY,UAChBrD,EAAI8G,YACJ9G,EAAIoH,IAAI3J,KAAK8b,EAAE,GAAI9b,KAAK8b,EAAE,GAAI,EAAG,EAAG,MACpCvZ,EAAIgH,YACJhH,EAAIiH,MACR,GAAC,uBACD,SAAU3I,EAAWC,GACjBd,KAAK8b,EAAI,CAACjb,EAAGC,EACjB,GAAC,uBACD,SAAUD,EAAWC,GACjBd,KAAK8b,EAAI,CAACjb,EAAGC,EACjB,KAAC,EAtBa,CAAS0G,GCgBduU,GAAS,WAOlB,WAAYjU,IAAiC,oBAN7CA,oBAAc,OACdxF,YAAM,OACN0Z,6BAAuB,OAEvBpU,YAA0C,GAGtC5H,KAAK8H,eAAiBA,EACtB9H,KAAKsC,OAASwF,EAAeC,IAAI+J,MAAMmK,oBAAoBC,cAAc5Z,OAEzEtC,KAAKgc,wBAA0B,IAAIlc,EAAwBE,MAC3DA,KAAKiJ,OACLjJ,KAAKmc,iBACLnc,KAAKoc,cACLpc,KAAKqc,cACT,CA+FC,OA/FA,4BACD,WACIrc,KAAK4H,YAAc,EACvB,GAAC,iBACD,WACI,OAAO5H,KAAK8H,eAAeC,IAAI+J,MAAMmK,oBAAoBC,cAAc5Z,OAAOA,OAAOZ,KACzF,GAAC,kBACD,WACI,OAAO1B,KAAK8H,eAAeC,IAAI+J,MAAMmK,oBAAoBC,cAAc5Z,OAAOA,OAAOX,MACzF,GAAC,4BACD,WAAkB,IACgB,EADjB,UACC3B,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BqB,KAAKjJ,KAAK8H,eAAeC,IAAI+J,MAAMmK,oBAAoBC,cAAc5Z,OAAOC,IAAM,CAAC,+BAC3H,GAAC,oBACD,SAAOA,GACH,GACH,uBACD,SAAU1B,EAAWC,GAAY,IACC,EADF,UACdd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BrH,aAAaM,EAAGC,EAAI,CAAC,+BAC7D,GAAC,4BACD,SAAeD,EAAWC,GAAY,IACJ,EADG,UACnBd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BjH,kBAAkBE,EAAGC,EAAI,CAAC,+BAClE,GAAC,uBACD,SAAUD,EAAWC,GAAY,IACC,EADF,UACdd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BvH,aAAaQ,EAAGC,EAAI,CAAC,+BAC7D,GAAC,qBACD,SAAQD,EAAWC,GAAY,IACG,EADJ,UACZd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BzH,WAAWU,EAAGC,EAAI,CAAC,+BAC3D,GAAC,uBACD,SAAUD,EAAWC,GAAY,IACC,EADF,UACdd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BtH,aAAaO,EAAGC,EAAI,CAAC,+BAC7D,GAAC,8BACD,SAAiBD,EAAWC,GAAY,IACN,EADK,UACrBd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BlH,oBAAoBG,EAAGC,EAAI,CAAC,+BACpE,GAAC,6BACD,SAAgBD,EAAWC,GAAY,IACL,EADI,UACpBd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BnH,mBAAmBI,EAAGC,EAAI,CAAC,+BACnE,GAAC,8BACD,SAAiBD,EAAWC,GAAY,IACN,EADK,UACrBd,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BpH,oBAAoBK,EAAGC,EAAI,CAAC,+BACpE,GAAC,wBACD,SAAWD,EAAWC,EAAWoC,GAAY,IACX,EADU,UAC1BlD,KAAK4H,aAAW,IAA9B,2BAAgC,CAAtB,QAA0BxH,cAAcS,EAAGC,EAAGoC,EAAI,CAAC,+BACjE,GAAC,qBACD,WACIlD,KAAK4H,YAAc,EACvB,GAAC,yBACD,WACI,GAEH,4BACD,SAAe1E,GAED,UAANA,GAAiB,IAAI0Y,GAAM5b,MAIrB,iBAANkD,GAAwB,IAAIsR,EAAaxU,KAAM,IAAK,KAC9C,kBAANkD,GAAyB,IAAI+R,EAAcjV,KAAM,IAAK,KAChD,0BAANkD,GAAiC,IAAIwS,EAAsB1V,KAAM,IAAK,KAEhE,yCAANkD,GAAgD,IAAIoU,EAAqCtX,KAAM,IAAK,KAG9F,cAANkD,GAAqB,IAAImQ,EAAUrT,KAAM,IAAK,KAExC,uBAANkD,GAA8B,IAAImF,EAAqBrI,MACjD,yBAANkD,GAAgC,IAAIyH,EAAoC3K,MAClE,yBAANkD,GAAgC,IAAIqM,EAAoCvP,MAElE,8BAANkD,GAAqC,IAAIwO,EAAwC1R,MAC3E,8BAANkD,GAAqC,IAAI2P,EAAmD7S,KAAM,IAAK,KAEjG,YAANkD,GAAmB,IAAImW,EAAQrZ,KAAM,IAAK,IAIlD,GAAC,0BACD,WACIA,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,uBAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,0BAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,2BAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,gBAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,mCAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,kDAE1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,4BAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,gCAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,kCAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,kCAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,gBAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,uCAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,uCAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,wCAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,gBAC1Fxc,KAAK8H,eAAeC,IAAIE,eAAeC,WAAWC,IAAImU,oBAAoBC,MAAM,GAAGC,OAAO,0BAC9F,KAAC,EA/GiB,E","sources":["njslab/Lab/AppTFEnv/Implementation/TFProject/Core/ActiveCommandController.ts","lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegression01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegressionGradientDescent02.ts","lib/NJSCore/ML/Core/TFDataUtility.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFLinearRegressionGradientDescent01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent02.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent03Interaction.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel02XOR.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel03Iris.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel03SmartDrawing.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel01HorsepowerAndMilesPerGallon.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFMnist.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/Blank.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/index.ts"],"sourcesContent":["import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { TFProject } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: TFProject;\r\n\r\n    constructor(scene: TFProject) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { NVector3 } from '../../../../../';\r\nimport { MouseEventData } from '../../../../../IO/EventInteraction/MouseInteraction';\r\n\r\nimport { IndependentPanelWrapper } from '../../IndependentPanelWrapper';\r\nimport { ColorUtility } from '../../../../../Core/NColor/';\r\n\r\nimport { IndePanelPreset } from '../../Core/IndePanelPreset';\r\n\r\nimport { IndePanelBase } from './base/base/IndePanelBase';\r\n\r\nimport { BtnClose } from './base/BtnClose';\r\nimport { BtnMinimize } from './base/BtnMinimize';\r\nimport { BtnHam } from './base/BtnHam';\r\nimport { BtnResize } from './base/BtnResize';\r\n\r\nimport { BodyDiv } from './base/BodyDiv';\r\nimport { IndeSubPanel } from './base/IndeSubPanel';\r\n\r\nexport class IndependentPanelCanvas extends IndePanelBase {\r\n    independentPanelWrapper: IndependentPanelWrapper;\r\n    divInput: HTMLTextAreaElement;\r\n\r\n    btnClose: BtnClose;\r\n    btnMini: BtnMinimize;\r\n    btnHam: BtnHam;\r\n    btnResize: BtnResize;\r\n\r\n    bodyDiv: BodyDiv;\r\n    subMenu: IndeSubPanel;\r\n\r\n    subs: IndePanelBase[] = [];\r\n\r\n    _content: string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    isActive: boolean = true;\r\n\r\n    constructor(independentPanelWrapper: IndependentPanelWrapper, x: number = 0, y: number = 0, width: number = 300, height: number = 170, divNeeded: boolean = false) {\r\n        super(independentPanelWrapper);\r\n        this.independentPanelWrapper = independentPanelWrapper;\r\n        this.title = 'njslabSandbox V3';\r\n        this.width = width;\r\n        this.height = height;\r\n        if (x === 0 && y === 0) {\r\n            this.vec.x = (independentPanelWrapper.width * 0.5) - (this.width * 0.5);\r\n            this.vec.y = (independentPanelWrapper.height * 0.5) - (this.height * 0.5);\r\n        } else {\r\n            this.vec.x = x;\r\n            this.vec.y = y;\r\n        }\r\n        this.filletR = 7;\r\n        this.InitTop();\r\n        if (divNeeded) {\r\n            this.bodyDiv = new BodyDiv(this, this.vec.x, this.vec.y + this.HeadHeight, this.width, this.height - this.HeadHeight);\r\n            // this.bodyDiv.div.style.background = 'red';\r\n        }\r\n        this.InitCanvas(this.bodyDiv.div);\r\n    }\r\n\r\n    get IsMinimized() {\r\n        return this.isMinimized;\r\n    }\r\n    set IsMinimized(v: boolean) {\r\n        this.isMinimized = v;\r\n        this.btnResize.isHidden = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Hide(v); }\r\n    }\r\n    get Width() {\r\n        return this.width;\r\n    }\r\n    set Width(v: number) {\r\n        let off = v - this.width;\r\n        this.width = v;\r\n        this.btnHam.vec.x += off;\r\n        this.subMenu.vec.x += off;\r\n        if (this.bodyDiv) { this.bodyDiv.Width = v; }\r\n    }\r\n    get Height() {\r\n        return this.height;\r\n    }\r\n    set Height(v: number) {\r\n        this.height = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Height = v; }\r\n        // this.subMenu\r\n    }\r\n    get content() {\r\n        return this._content;\r\n    }\r\n    set content(v: string) {\r\n        this._content = v;\r\n        if (this.bodyDiv) { this.bodyDiv.content = v; }\r\n    }\r\n    get HasSubMenu() {\r\n        return this.hasSubMenu;\r\n    }\r\n    set HasSubMenu(v: boolean) {\r\n        this.hasSubMenu = v;\r\n        this.subMenu.IsHidden = !v;\r\n    }\r\n    InitTop() {\r\n        this.btnClose = new BtnClose(this, this.vec.x, this.vec.y);\r\n        this.btnMini = new BtnMinimize(this, this.vec.x + 25, this.vec.y);\r\n        this.btnHam = new BtnHam(this, this.vec.x - 25 + this.width, this.vec.y);\r\n        this.btnResize = new BtnResize(this, this.vec.x + this.width - 10, this.vec.y + this.height - 10, 10, 10);\r\n\r\n        this.subMenu = new IndeSubPanel(this);\r\n        this.subs.push(this.btnClose, this.btnMini, this.btnHam);\r\n    }\r\n    Translate(e: MouseEventData): void {\r\n        if (!this.isMoveable) { return; }\r\n        let xo = e.x - e.preX;\r\n        let yo = e.y - e.preY;\r\n        this.vec.x += xo;\r\n        this.vec.y += yo;\r\n        for (let i = 0; i < this.boundarVecs.length; ++i) { this.boundarVecs[i].x += xo; this.boundarVecs[i].y += yo; }\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Translate(e); }\r\n        this.btnResize.vec.x += xo;\r\n        this.btnResize.vec.y += yo;\r\n        this.subMenu.Translate(xo, yo);\r\n        if (this.bodyDiv) { this.bodyDiv.Translate(xo, yo); }\r\n\r\n    }\r\n    Remove() {\r\n        this.RemovePost();\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Remove(); }\r\n        if (this.bodyDiv) { this.bodyDiv.Remove(); }\r\n        this.btnResize.Remove();\r\n        this.independentPanelWrapper.indePanelRender.Remove(this);\r\n    }\r\n    RenderPost(ctx: CanvasRenderingContext2D): void {\r\n        // console.log(IndePanelRender.length);\r\n        // this.vec.x = this.mainPanel.vec.x + this.xOff;\r\n        // this.vec.y = this.mainPanel.vec.y + this.yOff;\r\n        this.ComputeBoundary();\r\n\r\n        let color;\r\n        // if (this.isOver) {\r\n        //     color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuOver, this.transparent);\r\n        // } else {\r\n        color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuNormal, this.transparent);\r\n        // }\r\n        if (this.isMinimized) {\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n\r\n        } else {\r\n            IndePanelPreset.RoundedRectFillWithColorMainMenu(ctx, this.title, this.boundarVecs, this.filletR, 0, this.isOver, this.isSelected, color);\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n        }\r\n        this.RenderHeadTitle(ctx);\r\n        if (!this.isMinimized) {\r\n            this.RenderBodyContent(ctx);\r\n        }\r\n        if (this.hasSubMenu) {\r\n            this.subMenu.RenderPost(ctx);\r\n        }\r\n        this.RenderBtnHorizontal(ctx);\r\n    }\r\n    RenderBtnHorizontal(ctx: CanvasRenderingContext2D) {\r\n        /* */\r\n    }\r\n    RenderHeadTitle(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        // if (this.isOver) {\r\n        //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // } else {\r\n        ctx.fillStyle = '#ffffff';\r\n        // }\r\n        ctx.textBaseline = 'top';\r\n        ctx.textAlign = 'center';\r\n        ctx.font = '100 12px Arial';\r\n        ctx.shadowBlur = 0;\r\n        // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        ctx.shadowOffsetY = 0;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.fillText(this.title, this.vec.x + (this.width * 0.5), this.vec.y + (this.HeadHeight * 0.5) - 7);\r\n\r\n        ctx.restore();\r\n    }\r\n    RenderBodyContent(ctx: CanvasRenderingContext2D) {\r\n        // ctx.save();\r\n        // // if (this.isOver) {\r\n        // //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // // } else {\r\n        // ctx.fillStyle = '#000000';\r\n        // // }\r\n        // ctx.textBaseline = 'top';\r\n        // ctx.textAlign = 'center';\r\n        // ctx.font = '100 9px Sans-serif';\r\n        // ctx.fillText(this.content, this.vec.x + (this.width * 0.5), this.vec.y + (this.height * 0.5) - 5);\r\n\r\n        // ctx.shadowBlur = 0;\r\n        // // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        // ctx.shadowOffsetY = 0;\r\n        // ctx.shadowOffsetX = 0;\r\n\r\n        // ctx.restore();\r\n\r\n    }\r\n    RemovePost() {\r\n        this.isActive = false;\r\n    }\r\n    InitCanvas(hostDiv: HTMLElement) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.zIndex = '0';\r\n        hostDiv.appendChild(this.canvas);\r\n\r\n        this.canvas.id = 'NCanvasRenderer';\r\n        this.canvas.className = 'njslab-web-core-canvas-renderer';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.canvas.width = hostDiv.clientWidth; // hostDivForSize.clientWidth;\r\n        this.canvas.height = hostDiv.clientHeight; // hostDivForSize.clientHeight;\r\n\r\n        this.btnResize.ResizePropagation = (width: number, height: number) => {\r\n            this.canvas.width = width; // hostDivForSize.clientWidth;\r\n            this.canvas.height = height; // hostDivForSize.clientHeight;\r\n        };\r\n        this.LoopIndependentCanvas(this.ctx);\r\n    }\r\n    LoopIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        requestAnimationFrame(() => { this.LoopIndependentCanvas(ctx); });\r\n        this.RenderIndependentCanvas(ctx);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n    //     console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.canvas.width = width; // hostDivForSize.clientWidth;\r\n        this.canvas.height = height; // hostDivForSize.clientHeight;\r\n    }\r\n}","import { IndependentPanelCanvas } from '../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegression01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    a: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.LinearRegression();\r\n        this.RenderLine(ctx);\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.a * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.a * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public LinearRegression() {\r\n        let xSum = 0;\r\n        let ySum = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            xSum += this.vs[i].x;\r\n            ySum += this.vs[i].y;\r\n        }\r\n        let xMean = xSum / this.vs.length;\r\n        let yMean = ySum / this.vs.length;\r\n\r\n        let num = 0;\r\n        let den = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            num += (this.vs[i].x - xMean) * (this.vs[i].y - yMean);\r\n            den += (this.vs[i].x - xMean) * (this.vs[i].x - xMean);\r\n        }\r\n        this.a = num / den;\r\n        this.bias = yMean - this.a * xMean;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    weight: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.weight * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.weight * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public GradientDescent() {\r\n        let learningRate = 0.1;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let x = this.vs[i].x;\r\n            let y = this.vs[i].y;\r\n            let hypothesis = this.weight * x + this.bias;\r\n            let error = y - hypothesis;\r\n\r\n            this.weight = this.weight + (error * x) * learningRate;\r\n            this.bias = this.bias + (error) * learningRate;\r\n            // console.log(error);\r\n        }\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n\r\nexport class TFDataUtility {\r\n    static async getData() {\r\n        const carsDataReq = await fetch('https://storage.googleapis.com/tfjs-tutorials/carsData.json');\r\n        const carsData = await carsDataReq.json();\r\n        const cleaned = carsData.map((car: any) => ({\r\n            mpg: car.Miles_per_Gallon,\r\n            horsepower: car.Horsepower,\r\n        }))\r\n            .filter((car: any) => (car.mpg != null && car.horsepower != null));\r\n        return cleaned;\r\n    }\r\n    public static Get_XY_OneHot_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            // console.log(targetLength);\r\n            // console.log(targetsByClass);\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.oneHot(tf.tensor1d(targetsByClass).toInt(), targetLength + 1);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n    public static Get_XY_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.tensor1d(targetsByClass);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n\r\n    // tslint:disable-next-line:no-any\r\n    public static SplitTensorFromXY(xs: any, ys: any, testSplit: number = 0.5) {\r\n        const numTestExamples = Math.round(xs.shape[0] * testSplit);\r\n        const numTrainExamples = xs.shape[0] - numTestExamples;\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xs.shape[1]]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xs.shape[1]]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, ys.shape[1]]);\r\n        const yTest = ys.slice([numTrainExamples, 0], [numTestExamples, ys.shape[1]]);\r\n        return [xTrain, yTrain, xTest, yTest];\r\n\r\n        // return tf.tidy(() => {\r\n        //     const dataByClass = [];\r\n        //     const targetsByClass = [];\r\n        //     // for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //     //     dataByClass.push([]);\r\n        //     //     targetsByClass.push([]);\r\n        //     // }\r\n        //     // for (const example of IRIS_DATA) {\r\n        //     //     const target = example[example.length - 1];\r\n        //     //     const data = example.slice(0, example.length - 1);\r\n        //     //     dataByClass[target].push(data);\r\n        //     //     targetsByClass[target].push(target);\r\n        //     // }\r\n        //     // console.log();\r\n\r\n        //     const xTrains = [];\r\n        //     const yTrains = [];\r\n        //     const xTests = [];\r\n        //     const yTests = [];\r\n        //     for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //         const [xTrain, yTrain, xTest, yTest] = DataUtility.ConvertToTensors(dataByClass[i], targetsByClass[i], testSplit);\r\n        //         xTrains.push(xTrain);\r\n        //         yTrains.push(yTrain);\r\n        //         xTests.push(xTest);\r\n        //         yTests.push(yTest);\r\n        //     }\r\n\r\n        //     const concatAxis = 0;\r\n        //     return [\r\n        //         tf.concat(xTrains, concatAxis), tf.concat(yTrains, concatAxis),\r\n        //         tf.concat(xTests, concatAxis), tf.concat(yTests, concatAxis)\r\n        //     ];\r\n        // });\r\n\r\n    }\r\n    public static ConvertToTensors(data: number[][], targets: number[], testSplit: number) {\r\n    //     console.log('++');\r\n    //     console.log(data);\r\n    //     console.log(targets);\r\n    //     console.log(testSplit);\r\n\r\n        const numExamples = data.length;\r\n        if (numExamples !== targets.length) {\r\n            throw new Error('data and split have different numbers of examples');\r\n        }\r\n\r\n        const numTestExamples = Math.round(numExamples * testSplit);\r\n        const numTrainExamples = numExamples - numTestExamples;\r\n\r\n        const xDims = data[0].length;\r\n\r\n        // Create a 2D `tf.Tensor` to hold the feature data.\r\n        const xs = tf.tensor2d(data, [numExamples, xDims]);\r\n\r\n        // Create a 1D `tf.Tensor` to hold the labels, and convert the number label\r\n        // from the set {0, 1, 2} into one-hot encoding (.e.g., 0 --> [1, 0, 0]).\r\n        const ys = tf.oneHot(tf.tensor1d(targets).toInt(), 4); // IRIS_NUM_CLASSES\r\n\r\n        // Split the data into training and test sets, using `slice`.\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xDims]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xDims]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, 4]); // IRIS_NUM_CLASSES\r\n        const yTest = ys.slice([0, 0], [numTestExamples, 4]); // IRIS_NUM_CLASSES\r\n        return [xTrain, yTrain, xTest, yTest];\r\n    }\r\n\r\n    public static GetRandomNormal(num: number, mean: number = 0.0, stdDev: number = 0.55) {\r\n        return tf.randomNormal([num], mean, stdDev);\r\n    }\r\n    public static GetRandomNormalTensors(num: number = 1000) {\r\n\r\n        // let t0 = DataUtility.GetRandomNormal(num, 0.0, 0.55);\r\n        // let t1 = DataUtility.GetRandomNormal(num, 0.0, 0.03);\r\n        // t0.print();\r\n        // t1.print();\r\n\r\n    }\r\n\r\n    public static Shuffle(array: number[][]) {\r\n        var currentIndex = array.length, temp, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // And swap it with the current element.\r\n            temp = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temp;\r\n        }\r\n\r\n        return array;\r\n    }\r\n    // https://beta.observablehq.com/@tvirot/machine-learning-in-javascript-with-tensorflow-js#inputData\r\n    public static GetSyntheticDataTensor(totalNumData: number = 200, aCo: number = 0, bCo: number = 0, cCo: number = 0, dCo: number = 0, std: number = 0.2, needYNormal: boolean = false) {\r\n\r\n        return tf.tidy(() => {\r\n            const NUM_POINTS = totalNumData;\r\n            // const [a, b, c, d] = coeff.map(i => tf.scalar(i)); // a = tf.scalar(coeff[0]), and so on\r\n            const a = tf.scalar(aCo);\r\n            const b = tf.scalar(bCo);\r\n            const c = tf.scalar(cCo);\r\n            const d = tf.scalar(dCo);\r\n\r\n            const x = tf.randomUniform([NUM_POINTS], -1, 1);\r\n            const y = a.mul(x.pow(tf.scalar(3))).add(b.mul(x.square())).add(c.mul(x)).add(d).add(tf.randomNormal([NUM_POINTS], 0, std));\r\n\r\n            if (needYNormal) {\r\n                const ymin = y.min();\r\n                const ymax = y.max();\r\n                const theRange = ymax.sub(ymin);\r\n                const yNomalized = y.sub(ymin).div(theRange);\r\n                return { x, yNomalized };\r\n            }\r\n\r\n            return [x, y];\r\n        });\r\n    }\r\n    public static GetSyntheticData(totalNumData: number = 200, aCo: number = -0.2, bCo: number = -0.66, cCo: number = -0.1, dCo: number = 2.8, std: number = 0.2, needYNormal: boolean = false) {\r\n        return tf.tidy(() => {\r\n            const result = this.GetSyntheticDataTensor(totalNumData, aCo, bCo, cCo, dCo, std, needYNormal);\r\n            const xx = result[0].dataSync();\r\n            const yy = result[1].dataSync();\r\n            return { xx, yy };\r\n        });\r\n    }\r\n    public static GetIrisData() {\r\n        return [\r\n            [5.1, 3.5, 1.4, 0.2, 0], [4.9, 3.0, 1.4, 0.2, 0], [4.7, 3.2, 1.3, 0.2, 0],\r\n            [4.6, 3.1, 1.5, 0.2, 0], [5.0, 3.6, 1.4, 0.2, 0], [5.4, 3.9, 1.7, 0.4, 0],\r\n            [4.6, 3.4, 1.4, 0.3, 0], [5.0, 3.4, 1.5, 0.2, 0], [4.4, 2.9, 1.4, 0.2, 0],\r\n            [4.9, 3.1, 1.5, 0.1, 0], [5.4, 3.7, 1.5, 0.2, 0], [4.8, 3.4, 1.6, 0.2, 0],\r\n            [4.8, 3.0, 1.4, 0.1, 0], [4.3, 3.0, 1.1, 0.1, 0], [5.8, 4.0, 1.2, 0.2, 0],\r\n            [5.7, 4.4, 1.5, 0.4, 0], [5.4, 3.9, 1.3, 0.4, 0], [5.1, 3.5, 1.4, 0.3, 0],\r\n            [5.7, 3.8, 1.7, 0.3, 0], [5.1, 3.8, 1.5, 0.3, 0], [5.4, 3.4, 1.7, 0.2, 0],\r\n            [5.1, 3.7, 1.5, 0.4, 0], [4.6, 3.6, 1.0, 0.2, 0], [5.1, 3.3, 1.7, 0.5, 0],\r\n            [4.8, 3.4, 1.9, 0.2, 0], [5.0, 3.0, 1.6, 0.2, 0], [5.0, 3.4, 1.6, 0.4, 0],\r\n            [5.2, 3.5, 1.5, 0.2, 0], [5.2, 3.4, 1.4, 0.2, 0], [4.7, 3.2, 1.6, 0.2, 0],\r\n            [4.8, 3.1, 1.6, 0.2, 0], [5.4, 3.4, 1.5, 0.4, 0], [5.2, 4.1, 1.5, 0.1, 0],\r\n            [5.5, 4.2, 1.4, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [5.0, 3.2, 1.2, 0.2, 0],\r\n            [5.5, 3.5, 1.3, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [4.4, 3.0, 1.3, 0.2, 0],\r\n            [5.1, 3.4, 1.5, 0.2, 0], [5.0, 3.5, 1.3, 0.3, 0], [4.5, 2.3, 1.3, 0.3, 0],\r\n            [4.4, 3.2, 1.3, 0.2, 0], [5.0, 3.5, 1.6, 0.6, 0], [5.1, 3.8, 1.9, 0.4, 0],\r\n            [4.8, 3.0, 1.4, 0.3, 0], [5.1, 3.8, 1.6, 0.2, 0], [4.6, 3.2, 1.4, 0.2, 0],\r\n            [5.3, 3.7, 1.5, 0.2, 0], [5.0, 3.3, 1.4, 0.2, 0], [7.0, 3.2, 4.7, 1.4, 1],\r\n            [6.4, 3.2, 4.5, 1.5, 1], [6.9, 3.1, 4.9, 1.5, 1], [5.5, 2.3, 4.0, 1.3, 1],\r\n            [6.5, 2.8, 4.6, 1.5, 1], [5.7, 2.8, 4.5, 1.3, 1], [6.3, 3.3, 4.7, 1.6, 1],\r\n            [4.9, 2.4, 3.3, 1.0, 1], [6.6, 2.9, 4.6, 1.3, 1], [5.2, 2.7, 3.9, 1.4, 1],\r\n            [5.0, 2.0, 3.5, 1.0, 1], [5.9, 3.0, 4.2, 1.5, 1], [6.0, 2.2, 4.0, 1.0, 1],\r\n            [6.1, 2.9, 4.7, 1.4, 1], [5.6, 2.9, 3.6, 1.3, 1], [6.7, 3.1, 4.4, 1.4, 1],\r\n            [5.6, 3.0, 4.5, 1.5, 1], [5.8, 2.7, 4.1, 1.0, 1], [6.2, 2.2, 4.5, 1.5, 1],\r\n            [5.6, 2.5, 3.9, 1.1, 1], [5.9, 3.2, 4.8, 1.8, 1], [6.1, 2.8, 4.0, 1.3, 1],\r\n            [6.3, 2.5, 4.9, 1.5, 1], [6.1, 2.8, 4.7, 1.2, 1], [6.4, 2.9, 4.3, 1.3, 1],\r\n            [6.6, 3.0, 4.4, 1.4, 1], [6.8, 2.8, 4.8, 1.4, 1], [6.7, 3.0, 5.0, 1.7, 1],\r\n            [6.0, 2.9, 4.5, 1.5, 1], [5.7, 2.6, 3.5, 1.0, 1], [5.5, 2.4, 3.8, 1.1, 1],\r\n            [5.5, 2.4, 3.7, 1.0, 1], [5.8, 2.7, 3.9, 1.2, 1], [6.0, 2.7, 5.1, 1.6, 1],\r\n            [5.4, 3.0, 4.5, 1.5, 1], [6.0, 3.4, 4.5, 1.6, 1], [6.7, 3.1, 4.7, 1.5, 1],\r\n            [6.3, 2.3, 4.4, 1.3, 1], [5.6, 3.0, 4.1, 1.3, 1], [5.5, 2.5, 4.0, 1.3, 1],\r\n            [5.5, 2.6, 4.4, 1.2, 1], [6.1, 3.0, 4.6, 1.4, 1], [5.8, 2.6, 4.0, 1.2, 1],\r\n            [5.0, 2.3, 3.3, 1.0, 1], [5.6, 2.7, 4.2, 1.3, 1], [5.7, 3.0, 4.2, 1.2, 1],\r\n            [5.7, 2.9, 4.2, 1.3, 1], [6.2, 2.9, 4.3, 1.3, 1], [5.1, 2.5, 3.0, 1.1, 1],\r\n            [5.7, 2.8, 4.1, 1.3, 1], [6.3, 3.3, 6.0, 2.5, 2], [5.8, 2.7, 5.1, 1.9, 2],\r\n            [7.1, 3.0, 5.9, 2.1, 2], [6.3, 2.9, 5.6, 1.8, 2], [6.5, 3.0, 5.8, 2.2, 2],\r\n            [7.6, 3.0, 6.6, 2.1, 2], [4.9, 2.5, 4.5, 1.7, 2], [7.3, 2.9, 6.3, 1.8, 2],\r\n            [6.7, 2.5, 5.8, 1.8, 2], [7.2, 3.6, 6.1, 2.5, 2], [6.5, 3.2, 5.1, 2.0, 2],\r\n            [6.4, 2.7, 5.3, 1.9, 2], [6.8, 3.0, 5.5, 2.1, 2], [5.7, 2.5, 5.0, 2.0, 2],\r\n            [5.8, 2.8, 5.1, 2.4, 2], [6.4, 3.2, 5.3, 2.3, 2], [6.5, 3.0, 5.5, 1.8, 2],\r\n            [7.7, 3.8, 6.7, 2.2, 2], [7.7, 2.6, 6.9, 2.3, 2], [6.0, 2.2, 5.0, 1.5, 2],\r\n            [6.9, 3.2, 5.7, 2.3, 2], [5.6, 2.8, 4.9, 2.0, 2], [7.7, 2.8, 6.7, 2.0, 2],\r\n            [6.3, 2.7, 4.9, 1.8, 2], [6.7, 3.3, 5.7, 2.1, 2], [7.2, 3.2, 6.0, 1.8, 2],\r\n            [6.2, 2.8, 4.8, 1.8, 2], [6.1, 3.0, 4.9, 1.8, 2], [6.4, 2.8, 5.6, 2.1, 2],\r\n            [7.2, 3.0, 5.8, 1.6, 2], [7.4, 2.8, 6.1, 1.9, 2], [7.9, 3.8, 6.4, 2.0, 2],\r\n            [6.4, 2.8, 5.6, 2.2, 2], [6.3, 2.8, 5.1, 1.5, 2], [6.1, 2.6, 5.6, 1.4, 2],\r\n            [7.7, 3.0, 6.1, 2.3, 2], [6.3, 3.4, 5.6, 2.4, 2], [6.4, 3.1, 5.5, 1.8, 2],\r\n            [6.0, 3.0, 4.8, 1.8, 2], [6.9, 3.1, 5.4, 2.1, 2], [6.7, 3.1, 5.6, 2.4, 2],\r\n            [6.9, 3.1, 5.1, 2.3, 2], [5.8, 2.7, 5.1, 1.9, 2], [6.8, 3.2, 5.9, 2.3, 2],\r\n            [6.7, 3.3, 5.7, 2.5, 2], [6.7, 3.0, 5.2, 2.3, 2], [6.3, 2.5, 5.0, 1.9, 2],\r\n            [6.5, 3.0, 5.2, 2.0, 2], [6.2, 3.4, 5.4, 2.3, 2], [5.9, 3.0, 5.1, 1.8, 2],\r\n        ];\r\n    }\r\n    constructor() {\r\n        /* */\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\nexport class TFLinearRegressionGradientDescent01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n\r\n    tfLinearRegression: TFLinearRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new TFLinearRegression();\r\n\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, 0.1, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, 0.1, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const lineX = [0, 1];\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(lineX));\r\n        });\r\n\r\n        let lineY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        let x0 = 0;\r\n        let y0 = lineY[0];\r\n\r\n        let x1 = 1;\r\n        let y1 = lineY[1];\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFLinearRegression {\r\n    weight: tf.Variable;\r\n    bias: tf.Variable;\r\n\r\n    leraningRate: number = 0.5;\r\n    optimizer: tf.Optimizer;\r\n    constructor() {\r\n        this.weight = tf.variable(tf.scalar(Math.random()));\r\n        this.bias = tf.variable(tf.scalar(Math.random()));\r\n\r\n        this.optimizer = tf.train.sgd(this.leraningRate);\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return x.mul(this.weight).add(this.bias);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// import { TFUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            const b = document.createElement('button');\r\n            b.textContent = 'run';\r\n            b.style.position = 'absolute';\r\n            b.style.left = '650px';\r\n            b.onclick = () => {\r\n            //     console.log(this);\r\n            };\r\n            this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, -0.9, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    Init() {\r\n    //     console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        // for (let i = -10; i < 10; ++i) {\r\n        //     for (let j = -10; j < 10; ++j) {\r\n        //         ctx.beginPath();\r\n        //         ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        //         ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n        //         ctx.closePath();\r\n        //         ctx.fill();\r\n        //     }\r\n        // }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.Grid(ctx);\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            // return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n            return this.tfLinearRegression.predict2d(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 1;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n    //     console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent03Interaction extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n// import { LayersModel } from '@tensorflow/tfjs-layers';\r\nimport { ModelCompileArgs, ModelFitArgs } from '@tensorflow/tfjs';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        // const curveX: number[] = [];\r\n        // for (let x = -1; x <= 1; x += 0.05) {\r\n        //     curveX.push(x);\r\n        // }\r\n\r\n        // // ............................ predict\r\n        // const ys = tf.tidy(() => {\r\n        //     return this.tfModel.predict(tf.tensor1d(curveX));\r\n        // });\r\n\r\n        // let curveY = ys.dataSync();\r\n        // ys.dispose();\r\n        // // ............................ end predict\r\n\r\n        // ctx.lineWidth = 3;\r\n        // ctx.strokeStyle = '#00fff0';\r\n        // ctx.beginPath();\r\n        // ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        // for (let i = 1; i < curveX.length; ++i) {\r\n        //     ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        // }\r\n        // ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 4,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n\r\n        });\r\n\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n\r\n        const compileArgs: ModelCompileArgs = {\r\n            optimizer: tf.train.sgd(0.1),\r\n            loss: tf.losses.meanSquaredError,\r\n        };\r\n\r\n        this.model.compile(compileArgs);\r\n\r\n        // const data = tf.tensor2d([\r\n        //     [0.25, 0.92]\r\n        // ]);\r\n        this.train1().then(() => {\r\n            const x = tf.tensor2d([\r\n                [0, 0],\r\n                [0.5, 0.5],\r\n                [1, 1],\r\n            ]);\r\n            const result = this.model.predict(x);\r\n            (result as tf.Tensor).print();\r\n        });\r\n    }\r\n    train0() {\r\n        const x = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const y = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config = {\r\n            epochs: 10\r\n        };\r\n        this.model.fit(x, y, config).then((response) => console.log(response.history));\r\n        const outResult: tf.Tensor<tf.Rank> | tf.Tensor<tf.Rank>[] = this.model.predict(x);\r\n        // console.log(outResult);\r\n        (outResult as tf.Tensor).print();\r\n    }\r\n    async train1() {\r\n        const xTrain = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const yTrain = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config: ModelFitArgs = {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        };\r\n\r\n        for (let i = 0; i < 500; ++i) {\r\n            const response = await this.model.fit(xTrain, yTrain, config);\r\n            // response;\r\n        //     console.log(i, response.history.loss);\r\n        }\r\n\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel02XOR extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF XOR';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '10px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'ref: Coding Challenge #106: XOR Problem with TensorFlow.js by The Cording Train';\r\n        t.style.fontSize = '11px';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n\r\n        let inputs = [];\r\n        for (let i = 0; i <= 10; ++i) {\r\n            for (let j = 0; j <= 10; ++j) {\r\n                // let x1 = i / 10;\r\n                // let x2 = j / 10;\r\n                inputs.push([j * 0.1, i * 0.1]);\r\n            }\r\n        }\r\n        // console.log(inputs);\r\n        // console.log(;)\r\n        this.xPredict = tf.tensor2d(inputs);\r\n        // console.log(xPredict);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // let ys = this.tfModel.model.predict(this.xPredict);\r\n\r\n        // (ys as tf.Tensor<tf.Rank.R2>).print();\r\n        // let y_values = ys.dataSync();\r\n\r\n        tf.tidy(() => {\r\n            const d = this.tfModel.model.predict(this.xPredict);\r\n            const result = (d as tf.Tensor2D).dataSync();\r\n\r\n\r\n            // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n            ctx.fillStyle = '#000000';\r\n            ctx.beginPath();\r\n            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n\r\n\r\n\r\n            let index = 0;\r\n            for (let i = 0; i <= 10; i++) {\r\n                for (let j = 0; j <= 10; j++) {\r\n                    this.inputs.push(i);\r\n                    let offset = 42;\r\n                    let x = i * offset;\r\n                    let y = j * offset;\r\n                    const out = result[index];\r\n\r\n                    ctx.fillStyle = `rgba(${out * 255},${0},${0},1)`;\r\n                    // console.log(out);\r\n                    ctx.beginPath();\r\n                    ctx.rect(x, y, offset, offset);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n\r\n                    index++;\r\n                }\r\n            }\r\n            // console.log(index);\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    xTrain = tf.tensor2d([\r\n        [0.0, 0.0],\r\n        [1.0, 0.0],\r\n        [0.0, 1.0],\r\n        [1.0, 1.0]\r\n    ]);\r\n    yTrain = tf.tensor2d([\r\n        [0.0],\r\n        [1.0],\r\n        [1.0],\r\n        [0.0]\r\n    ]);\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 16,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(0.05),\r\n            loss: tf.losses.meanSquaredError,\r\n        });\r\n        this.trainLoop();\r\n    }\r\n    public trainLoop() {\r\n        this.train().then((result: any) => {\r\n            // console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.xTrain, this.yTrain, {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03Iris extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        this.tfModel = new TFModel();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n\r\n    // xTrain = tf.tensor2d([\r\n    //     [0.0, 0.0],\r\n    //     [1.0, 0.0],\r\n    //     [0.0, 1.0],\r\n    //     [1.0, 1.0]\r\n    // ]);\r\n    // yTrain = tf.tensor2d([\r\n    //     [0.0],\r\n    //     [1.0],\r\n    //     [1.0],\r\n    //     [0.0]\r\n    // ]);\r\n    constructor() {\r\n        const d = TFDataUtility.GetIrisData();\r\n        tf.util.shuffle(d);\r\n        // console.log(d);\r\n\r\n        const inputs = [];\r\n        for (let i = 0; i < d.length; ++i) {\r\n            let row = [];\r\n            for (let j = 0; j < d[i].length - 1; ++j) {\r\n                row.push(d[i][j]);\r\n            }\r\n            inputs.push(row);\r\n        }\r\n\r\n        const labels = []; //  d.map((d: number[]) => [d[d.length - 1]]);\r\n        for (let i = 0; i < d.length; ++i) {\r\n            if (d[i][d[i].length - 1] === 0) {\r\n                labels.push([1, 0, 0]);\r\n            } else if (d[i][d[i].length - 1] === 1) {\r\n                labels.push([0, 1, 0]);\r\n            } else if (d[i][d[i].length - 1] === 2) {\r\n                labels.push([0, 0, 1]);\r\n            }\r\n\r\n        }\r\n\r\n        // console.log(inputs);\r\n        // console.log(labels);\r\n\r\n        // console.log('tensor......................');\r\n        this.inputsTensor = tf.tensor2d(inputs);\r\n        this.labelsTensor = tf.tensor2d(labels);\r\n        // console.log(this.inputsTensor);\r\n        // console.log(this.labelsTensor);\r\n        this.inputsTensor.print();\r\n        this.labelsTensor.print();\r\n\r\n        this.model = tf.sequential();\r\n\r\n        // console.log(this.inputsTensor.shape[1]);\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 10,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: 3,\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        await this.model.save('downloads://my-model');\r\n        const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n    //     console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n        //     console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n            // batchSize: 100,\r\n            epochs: 50,\r\n            shuffle: true,\r\n            validationData: [this.inputsTensor, this.labelsTensor],\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { csv } from './smartDrawingTrainData.csv';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// const csv = require('./smartDrawingTrainData.csv');\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03SmartDrawing extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    async Init() {\r\n        const d = new DataProcess();\r\n        await d.Init().then(() => {\r\n            this.tfModel = new TFModel('model1', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel01();\r\n\r\n            this.tfModel = new TFModel('model2', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel02();\r\n\r\n        });\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\n\r\nclass DataProcess {\r\n    raw: any;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor() {\r\n        //\r\n    }\r\n    async Init() {\r\n        const d = await this.OpenCSV();\r\n        if (d) {\r\n            this.raw = this.processData(d);\r\n            tf.util.shuffle(this.raw);\r\n            // console.log(this.raw);\r\n\r\n            const inputs = [];\r\n            const labelsTemp = [];\r\n            for (let i = 0; i < this.raw.length; ++i) {\r\n                let row = [];\r\n                for (let j = 0; j < this.raw[i].length - 1; ++j) { row.push(this.raw[i][j]); }\r\n                inputs.push(row);\r\n                labelsTemp.push(this.raw[i][this.raw[i].length - 1]);\r\n            }\r\n        //     console.log(inputs);\r\n        //     console.log(labelsTemp);\r\n            const max = tf.max(labelsTemp);\r\n            const maxNum = max.dataSync();\r\n\r\n            const labels = [];\r\n            for (let i = 0; i < labelsTemp.length; ++i) {\r\n                const label = [];\r\n                for (let j = 0; j <= maxNum[0]; ++j) {\r\n                    if (j === labelsTemp[i]) {\r\n                        label.push(1);\r\n                    } else {\r\n                        label.push(0);\r\n                    }\r\n                }\r\n                labels.push(label);\r\n            }\r\n        //     console.log(labels);\r\n\r\n            this.inputsTensor = tf.tensor2d(inputs);\r\n            this.labelsTensor = tf.tensor2d(labels);\r\n\r\n            this.inputsTensor.print();\r\n            this.labelsTensor.print();\r\n        }\r\n    }\r\n    private processData(allText: any) {\r\n        const allTextLines = allText.split(/\\r\\n|\\n/);\r\n        const headers = allTextLines[0].split(',');\r\n        const lines = [];\r\n\r\n        for (let i = 1; i < allTextLines.length; i++) {\r\n            const data = allTextLines[i].split(',');\r\n            if (data.length === headers.length) {\r\n\r\n                const tarr = [];\r\n                for (let j = 0; j < headers.length; j++) {\r\n                    const dataTemp = +data[j];\r\n                    if (isNaN(dataTemp)) {\r\n                        tarr.push(data[j]);\r\n                    } else {\r\n                        tarr.push(dataTemp);\r\n                    }\r\n                }\r\n                lines.push(tarr);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n    public async OpenCSV() {\r\n        // if (njslabSandboxStatic.app) { if (njslabSandboxStatic.app.isProduction) { return; } }\r\n        let file = 'smartDrawingTrainData.csv';\r\n        // console.log(location.host);\r\n        return fetch(`njslabSandboxStatic/ML/SmartDrawing/${file}`)\r\n            .then((response: Response) => {\r\n            //     console.log(response);\r\n                return response.text();\r\n            })\r\n            .catch((err: Error) => {\r\n            //     console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nclass TFModel {\r\n    t0: number;\r\n    t1: number;\r\n    name: string;\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor(name: string, inputsTensor: tf.Tensor<tf.Rank.R2>, labelsTensor: tf.Tensor<tf.Rank.R2>) {\r\n        this.name = name;\r\n        this.inputsTensor = inputsTensor;\r\n        this.labelsTensor = labelsTensor;\r\n    }\r\n    CreateModel01() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    CreateModel02() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const hidden02 = tf.layers.dense({\r\n            // inputShape: [this.inputsTensor.shape[1]],\r\n            units: 15,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(hidden02);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    Compile() {\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        this.t0 = performance.now();\r\n\r\n        await this.model.save('downloads://my-model');\r\n        // const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n        // console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n            this.t1 = performance.now();\r\n        //     console.log(`${this.name}: ${result.history.loss[0]}, ${this.t1 - this.t0} `);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        // return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n        //     batchSize: 100,\r\n        //     epochs: 10,\r\n        //     shuffle: true,\r\n        //     validationData: [this.inputsTensor, this.labelsTensor],\r\n        // });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// // https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFModel01HorsepowerAndMilesPerGallon extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    // tfModel: ModelForHorsepowerGallon;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // this.tfModel = new ModelForHorsepowerGallon();\r\n            // this.train(d);\r\n            this.train(d);\r\n\r\n\r\n        });\r\n\r\n    }\r\n    async train(d: any) {\r\n        const tensorData = convertToTensor(d);\r\n        // console.log(tensorData);\r\n        const { inputs, labels } = tensorData;\r\n        // console.log(inputs, labels);\r\n        const model = createModel();\r\n\r\n        tfvis.show.modelSummary({ name: 'Model Summary' }, model);\r\n        // Train the model\r\n        await trainModel(model, inputs, labels);\r\n        // console.log('Done Training');\r\n        testModel(model, d, tensorData);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n    }\r\n}\r\n\r\nfunction testModel(model: tf.Sequential, inputData: any, normalizationData: any) {\r\n    const { inputMax, inputMin, labelMin, labelMax } = normalizationData;\r\n\r\n    // Generate predictions for a uniform range of numbers between 0 and 1;\r\n    // We un-normalize the data by doing the inverse of the min-max scaling\r\n    // that we did earlier.\r\n    const [xs, preds] = tf.tidy(() => {\r\n\r\n        const xs = tf.linspace(0, 1, 100);\r\n        const preds = model.predict(xs.reshape([100, 1])) as any;\r\n\r\n        const unNormXs = xs\r\n            .mul(inputMax.sub(inputMin))\r\n            .add(inputMin);\r\n\r\n        const unNormPreds = preds.mul(labelMax.sub(labelMin))\r\n            .add(labelMin);\r\n\r\n        // Un-normalize the data\r\n        return [unNormXs.dataSync(), unNormPreds.dataSync()];\r\n    });\r\n\r\n\r\n    const predictedPoints = Array.from(xs).map((val, i) => {\r\n        return { x: val, y: preds[i] };\r\n    });\r\n\r\n    const originalPoints = inputData.map((d: any) => ({\r\n        x: d.horsepower, y: d.mpg,\r\n    }));\r\n\r\n    tfvis.render.scatterplot(\r\n        { name: 'Model Predictions vs Original Data' },\r\n        { values: [originalPoints, predictedPoints], series: ['original', 'predicted'] },\r\n        {\r\n            xLabel: 'Horsepower',\r\n            yLabel: 'MPG',\r\n            height: 300\r\n        }\r\n    );\r\n}\r\n\r\n\r\nasync function trainModel(model: tf.Sequential, inputs: tf.Tensor<tf.Rank>, labels: tf.Tensor<tf.Rank>) {\r\n    // Prepare the model for training.\r\n    model.compile({\r\n        optimizer: tf.train.adam(),\r\n        loss: tf.losses.meanSquaredError,\r\n        metrics: ['mse'],\r\n    });\r\n\r\n    const batchSize = 32;\r\n    const epochs = 50;\r\n\r\n    return await model.fit(inputs, labels, {\r\n        batchSize,\r\n        epochs,\r\n        shuffle: true,\r\n        callbacks: tfvis.show.fitCallbacks(\r\n            { name: 'Training Performance' },\r\n            ['loss', 'mse'],\r\n            { height: 200, callbacks: ['onEpochEnd'] }\r\n        )\r\n    });\r\n}\r\n\r\n\r\nexport const createModel = () => {\r\n    // Create a sequential model\r\n    const model = tf.sequential();\r\n    // Add a single hidden layer\r\n    model.add(tf.layers.dense({\r\n        inputShape: [1],\r\n        units: 16,\r\n        useBias: true\r\n    }));\r\n    // Add an output layer\r\n    model.add(tf.layers.dense({\r\n        units: 1,\r\n        useBias: true\r\n    }));\r\n    return model;\r\n};\r\nexport const convertToTensor = (data: any) => {\r\n    // Wrapping these calculations in a tidy will dispose any\r\n    // intermediate tensors.\r\n\r\n    return tf.tidy(() => {\r\n        // Step 1. Shuffle the data\r\n        tf.util.shuffle(data);\r\n\r\n        // Step 2. Convert data to Tensor\r\n        const inputs = data.map((d: any) => d.horsepower);\r\n        const labels = data.map((d: any) => d.mpg);\r\n\r\n        const inputTensor = tf.tensor2d(inputs, [inputs.length, 1]);\r\n        const labelTensor = tf.tensor2d(labels, [labels.length, 1]);\r\n\r\n        // Step 3. Normalize the data to the range 0 - 1 using min-max scaling\r\n        const inputMax = inputTensor.max();\r\n        const inputMin = inputTensor.min();\r\n        const labelMax = labelTensor.max();\r\n        const labelMin = labelTensor.min();\r\n\r\n        const normalizedInputs = inputTensor.sub(inputMin).div(inputMax.sub(inputMin));\r\n        const normalizedLabels = labelTensor.sub(labelMin).div(labelMax.sub(labelMin));\r\n\r\n        return {\r\n            inputs: normalizedInputs,\r\n            labels: normalizedLabels,\r\n            // Return the min/max bounds so we can use them later.\r\n            inputMax,\r\n            inputMin,\r\n            labelMax,\r\n            labelMin,\r\n        };\r\n    });\r\n};","import * as tf from '@tensorflow/tfjs';\r\n\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFMnist extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF MNist ';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    Init() {\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(5));\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n        // tfData.\r\n\r\n        const data = new MnistData();\r\n    //     console.log(data.getTrainData());\r\n\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            //     const b = document.createElement('button');\r\n            //     b.textContent = 'run';\r\n            //     b.style.position = 'absolute';\r\n            //     b.style.left = '650px';\r\n            //     b.onclick = () => {\r\n            //     //     console.log(this);\r\n            //     };\r\n            //     this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // console.log(xx);\r\n                // console.log(yy);\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor(dim: number = 0) {\r\n        this.dim = dim;\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n        if (this.dim === 1) { return this.predict1d(x); }\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}\r\n\r\n\r\n// ..............................................................................................................................\r\n\r\nexport const IMAGE_H = 28;\r\nexport const IMAGE_W = 28;\r\nconst IMAGE_SIZE = IMAGE_H * IMAGE_W;\r\nconst NUM_CLASSES = 10;\r\nconst NUM_DATASET_ELEMENTS = 65000;\r\n\r\nconst NUM_TRAIN_ELEMENTS = 55000;\r\n// const NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\r\n\r\nconst MNIST_IMAGES_SPRITE_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\r\nconst MNIST_LABELS_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\r\n\r\n/**\r\n * A class that fetches the sprited MNIST dataset and provide data as\r\n * tf.Tensors.\r\n */\r\nexport class MnistData {\r\n    testLabels: Uint8Array;\r\n    trainLabels: Uint8Array;\r\n    testImages: Float32Array;\r\n    trainImages: Float32Array;\r\n    datasetImages: Float32Array;\r\n    datasetLabels: Uint8Array;\r\n    constructor() { }\r\n\r\n    async load() {\r\n        // Make a request for the MNIST sprited image.\r\n        const img = new Image();\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        const imgRequest = new Promise((resolve, reject) => {\r\n            img.crossOrigin = '';\r\n            img.onload = () => {\r\n                img.width = img.naturalWidth;\r\n                img.height = img.naturalHeight;\r\n\r\n                const datasetBytesBuffer =\r\n                    new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\r\n\r\n                const chunkSize = 5000;\r\n                canvas.width = img.width;\r\n                canvas.height = chunkSize;\r\n\r\n                for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\r\n                    const datasetBytesView = new Float32Array(\r\n                        datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\r\n                        IMAGE_SIZE * chunkSize);\r\n                    ctx.drawImage(\r\n                        img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\r\n                        chunkSize);\r\n\r\n                    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n                    for (let j = 0; j < imageData.data.length / 4; j++) {\r\n                        // All channels hold an equal value since the image is grayscale, so\r\n                        // just read the red channel.\r\n                        datasetBytesView[j] = imageData.data[j * 4] / 255;\r\n                    }\r\n                }\r\n                this.datasetImages = new Float32Array(datasetBytesBuffer);\r\n\r\n                // resolve();\r\n            };\r\n            img.src = MNIST_IMAGES_SPRITE_PATH;\r\n        });\r\n\r\n        const labelsRequest = fetch(MNIST_LABELS_PATH);\r\n        // const [imgResponse, labelsResponse] = await Promise.all([imgRequest, labelsRequest]);\r\n        const result = await Promise.all([imgRequest, labelsRequest]);\r\n        const labelsResponse: any = result[1];\r\n        this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\r\n\r\n        // Slice the the images and labels into train and test sets.\r\n        this.trainImages = this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n        this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n        this.trainLabels = this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n        this.testLabels = this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n    }\r\n\r\n    /**\r\n     * Get all training data as a data tensor and a labels tensor.\r\n     *\r\n     * @returns\r\n     *   xs: The data tensor, of shape `[numTrainExamples, 28, 28, 1]`.\r\n     *   labels: The one-hot encoded labels tensor, of shape\r\n     *     `[numTrainExamples, 10]`.\r\n     */\r\n    getTrainData() {\r\n        const xs = tf.tensor4d(\r\n            this.trainImages,\r\n            [this.trainImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n        const labels = tf.tensor2d(\r\n            this.trainLabels, [this.trainLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n        return { xs, labels };\r\n    }\r\n\r\n    /**\r\n     * Get all test data as a data tensor a a labels tensor.\r\n     *\r\n     * @param {number} numExamples Optional number of examples to get. If not\r\n     *     provided,\r\n     *   all test examples will be returned.\r\n     * @returns\r\n     *   xs: The data tensor, of shape `[numTestExamples, 28, 28, 1]`.\r\n     *   labels: The one-hot encoded labels tensor, of shape\r\n     *     `[numTestExamples, 10]`.\r\n     */\r\n    getTestData(numExamples: any) {\r\n        let xs = tf.tensor4d(\r\n            this.testImages,\r\n            [this.testImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n        let labels = tf.tensor2d(\r\n            this.testLabels, [this.testLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n\r\n        if (numExamples != null) {\r\n            xs = xs.slice([0, 0, 0, 0], [numExamples, IMAGE_H, IMAGE_W, 1]);\r\n            labels = labels.slice([0, 0], [numExamples, NUM_CLASSES]);\r\n        }\r\n        return { xs, labels };\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\nimport * as tf from '@tensorflow/tfjs';\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(tfProject: TFProject) {\r\n        super(tfProject);\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n    //     console.log(tf.version);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}","import { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\n\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\nimport { JSLinearRegression01 } from './Definition/JSLinearRegression01';\r\nimport { JSLinearRegressionGradientDescent02 } from './Definition/JSLinearRegressionGradientDescent02';\r\n\r\nimport { TFLinearRegressionGradientDescent01 } from './Definition/TFLinearRegressionGradientDescent01';\r\nimport { TFPolynomialRegressionGradientDescent02 } from './Definition/TFPolynomialRegressionGradientDescent02';\r\nimport { TFPolynomialRegressionGradientDescent03Interaction } from './Definition/TFPolynomialRegressionGradientDescent03Interaction';\r\nimport { TFModel01 } from './Definition/TFModel01';\r\nimport { TFModel02XOR } from './Definition/TFModel02XOR';\r\nimport { TFModel03Iris } from './Definition/TFModel03Iris';\r\nimport { TFModel03SmartDrawing } from './Definition/TFModel03SmartDrawing';\r\n\r\nimport { TFModel01HorsepowerAndMilesPerGallon } from './Definition/TFModel01HorsepowerAndMilesPerGallon';\r\nimport { TFMnist } from './Definition/TFMnist';\r\n\r\nimport { Blank } from './Definition/Blank';\r\nimport { Implementation } from '..';\r\nexport class TFProject {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n        this.InitDefault();\r\n        this.InitPullDown();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    InitDefault() {\r\n        // new TFModel03SmartDrawing(this);\r\n\r\n    }\r\n    LoadDefinition(v: string) {\r\n        // console.log('project code', v);\r\n        if (v === 'blank') { new Blank(this); }\r\n\r\n        // ...............................................................................\r\n\r\n        if (v === 'TFModel02XOR') { new TFModel02XOR(this, 480, 500); }\r\n        if (v === 'TFModel03Iris') { new TFModel03Iris(this, 480, 500); }\r\n        if (v === 'TFModel03SmartDrawing') { new TFModel03SmartDrawing(this, 480, 500); }\r\n\r\n        if (v === 'TFModel01HorsepowerAndMilesPerGallon') { new TFModel01HorsepowerAndMilesPerGallon(this, 500, 500); }\r\n\r\n        // ...............................................................................\r\n        if (v === 'TFModel01') { new TFModel01(this, 500, 500); }\r\n\r\n        if (v === 'JSLinearRegression') { new JSLinearRegression01(this); }\r\n        if (v === 'JSLinearRegressionGD') { new JSLinearRegressionGradientDescent02(this); }\r\n        if (v === 'TFLinearRegressionGD') { new TFLinearRegressionGradientDescent01(this); }\r\n\r\n        if (v === 'TFPolynomialRegression GD') { new TFPolynomialRegressionGradientDescent02(this); }\r\n        if (v === 'TFPolyRegress Interaction') { new TFPolynomialRegressionGradientDescent03Interaction(this, 500, 500); }\r\n\r\n        if (v === 'TFMnist') { new TFMnist(this, 500, 500); }\r\n\r\n    //     console.log(v);\r\n        // ...............................................................................\r\n    }\r\n    public InitPullDown() {\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel01');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel02XOR');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel03Iris');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel03SmartDrawing');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel01HorsepowerAndMilesPerGallon');\r\n\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPlayground01');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@JSLinearRegression');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@JSLinearRegressionGD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFLinearRegressionGD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolynomialRegression GD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolyRegress Interaction');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolyRegress Miles/Gallon');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TF Regression');\r\n    }\r\n}"],"names":["ActiveCommandController","scene","this","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","x","y","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","IndependentPanelCanvas","independentPanelWrapper","width","height","divNeeded","divInput","btnClose","btnMini","btnHam","btnResize","bodyDiv","subMenu","subs","_content","canvas","ctx","isActive","title","vec","filletR","InitTop","BodyDiv","HeadHeight","InitCanvas","div","isMinimized","v","isHidden","Hide","off","Width","Height","content","hasSubMenu","IsHidden","BtnClose","BtnMinimize","BtnHam","BtnResize","IndeSubPanel","push","isMoveable","xo","preX","yo","preY","i","boundarVecs","length","Translate","RemovePost","Remove","indePanelRender","color","ComputeBoundary","ColorUtility","IndePanelPreset","transparent","isOver","isSelected","NVector3","theme","colSelectedBG","RenderHeadTitle","RenderBodyContent","RenderPost","RenderBtnHorizontal","save","fillStyle","textBaseline","textAlign","font","shadowBlur","shadowOffsetY","shadowOffsetX","fillText","restore","hostDiv","document","createElement","style","position","zIndex","appendChild","id","className","pointerEvents","getContext","clientWidth","clientHeight","ResizePropagation","LoopIndependentCanvas","clearRect","requestAnimationFrame","RenderIndependentCanvas","IndePanelBase","DefinitionIndeCanvasCore","indeCanvas","mOffX","mOffY","definitions","InitIndeCanvas","implementation","app","needUI","viewController","NUIWrapper","NUI","IsMouseInsidePanel","JSLinearRegression01","tfProjct","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","a","bias","Init","MapX","MapY","MathUtility","beginPath","rect","closePath","fill","LinearRegression","RenderLine","arc","Math","PI","y0","y1","lineWidth","strokeStyle","moveTo","lineTo","stroke","xSum","ySum","xMean","yMean","num","den","JSLinearRegressionGradientDescent02","weight","GradientDescent","error","TFDataUtility","fetch","carsDataReq","json","carsData","cleaned","map","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter","csv","tf","dataByClass","targetsByClass","targetLength","example","data","slice","target","toInt","xs","ys","testSplit","numTestExamples","round","shape","numTrainExamples","xTrain","xTest","yTrain","yTest","targets","numExamples","Error","xDims","mean","stdDev","array","temp","randomIndex","currentIndex","floor","random","totalNumData","aCo","bCo","cCo","dCo","std","needYNormal","NUM_POINTS","b","c","d","mul","pow","add","square","ymin","min","theRange","max","sub","yNomalized","result","GetSyntheticDataTensor","xx","dataSync","yy","TFLinearRegressionGradientDescent01","vsTemp","tfLinearRegression","t","TFLinearRegression","InitData","InitUI","left","textContent","append","divHost","getElementById","getData","then","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","pop","train","lineX","predict","lineY","dispose","leraningRate","optimizer","pred","label","xVal","yVal","minimize","loss","TFPolynomialRegressionGradientDescent02","selVec","undefined","onclick","model","modelViewCoreWrapper","viewWrapper","PolynomialRegression","Grid","curveX","predict2d","curveY","weights","dim","print","predict5d","predict4d","predict3d","predict1d","TFPolynomialRegressionGradientDescent03Interaction","m","xInterval","yInterval","x0","x1","GridLine","toFixed","TFModel01","tfModel","TFModel","hidden","inputShape","units","activation","output","compileArgs","compile","train1","fit","epochs","response","console","log","history","config","shuffle","TFModel02XOR","xPredict","inputs","fontSize","j","index","out","trainLoop","setTimeout","TFModel03Iris","inputsTensor","labelsTensor","GetIrisData","row","labels","metrics","summary","validationData","TFModel03SmartDrawing","DataProcess","CreateModel01","CreateModel02","raw","OpenCSV","processData","labelsTemp","maxNum","allText","allTextLines","split","headers","lines","tarr","dataTemp","isNaN","text","catch","err","name","t0","t1","hidden01","Compile","hidden02","performance","now","TFModel01HorsepowerAndMilesPerGallon","tensorData","convertToTensor","createModel","tfvis","trainModel","testModel","inputData","normalizationData","inputMax","inputMin","labelMin","labelMax","preds","reshape","unNormXs","unNormPreds","predictedPoints","Array","from","val","originalPoints","values","series","xLabel","yLabel","batchSize","callbacks","useBias","inputTensor","labelTensor","TFMnist","col","MnistData","marginTop","marginBottom","IMAGE_SIZE","IMAGE_H","NUM_CLASSES","testLabels","trainLabels","testImages","trainImages","datasetImages","datasetLabels","img","Image","imgRequest","Promise","resolve","reject","crossOrigin","onload","naturalWidth","naturalHeight","datasetBytesBuffer","ArrayBuffer","NUM_DATASET_ELEMENTS","chunkSize","datasetBytesView","Float32Array","drawImage","imageData","getImageData","src","labelsRequest","all","labelsResponse","Uint8Array","arrayBuffer","Blank","tfProject","p","TFProject","activeCommandController","graphicsCoreWrapper","canvasWrapper","InitDefinition","InitDefault","InitPullDown","pullDownMenuWrapper","menus","AddApp"],"sourceRoot":""}