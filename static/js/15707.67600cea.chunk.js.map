{"version":3,"file":"static/js/15707.67600cea.chunk.js","mappings":"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","sources":["../node_modules/@upscalerjs/esrgan-slim/dist/esm/constants.generated.js","../node_modules/@upscalerjs/esrgan-slim/dist/esm/index.js","../node_modules/upscaler/dist/browser/esm/utils.js","../node_modules/upscaler/dist/browser/esm/loadModel.generated.js","../node_modules/upscaler/dist/browser/esm/warmup.js","../node_modules/upscaler/dist/browser/esm/image.generated.js","../node_modules/upscaler/dist/browser/esm/upscale.js","../node_modules/upscaler/dist/browser/esm/upscaler.js","njslab/app-legacy/Implementation/Demos/Demo400AppUpscale/index.ts","../node_modules/tensor-as-base64/dist/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["export const NAME = \"@upscalerjs/esrgan-slim\";\nexport const VERSION = \"1.0.0-canary.0\";\n","import { NAME, VERSION, } from './constants.generated';\n// TODO: Why do I need to specify TF here? Why can't it infer it from @upscaler/core's type definition?\nconst modelDefinition = (tf) => {\n    const Layer = tf.layers.Layer;\n    const SCALE = 4;\n    const BETA = 0.2;\n    const isTensorArray = (inputs) => {\n        return Array.isArray(inputs);\n    };\n    const getInput = (inputs) => {\n        if (isTensorArray(inputs)) {\n            return inputs[0];\n        }\n        return inputs;\n    };\n    class MultiplyBeta extends Layer {\n        beta;\n        constructor() {\n            super({});\n            this.beta = BETA;\n        }\n        call(inputs) {\n            return tf.mul(getInput(inputs), this.beta);\n        }\n        static className = 'MultiplyBeta';\n    }\n    class PixelShuffle extends Layer {\n        scale;\n        constructor() {\n            super({});\n            this.scale = SCALE;\n        }\n        computeOutputShape(inputShape) {\n            return [inputShape[0], inputShape[1], inputShape[2], 3,];\n        }\n        call(inputs) {\n            return tf.depthToSpace(getInput(inputs), this.scale, 'NHWC');\n        }\n        static className = 'PixelShuffle';\n    }\n    const modelDefinition = {\n        scale: SCALE,\n        channels: 3,\n        path: 'models/model.json',\n        packageInformation: {\n            name: NAME,\n            version: VERSION,\n        },\n        meta: {\n            dataset: 'div2k',\n        },\n        preprocess: (image) => tf.mul(image, 1 / 255),\n        postprocess: (output) => tf.tidy(() => {\n            const clippedValue = (output).clipByValue(0, 1);\n            output.dispose();\n            return tf.mul(clippedValue, 255);\n        }),\n        customLayers: [MultiplyBeta, PixelShuffle,],\n    };\n    return modelDefinition;\n};\nexport default modelDefinition;\n","import { tf, } from './dependencies.generated';\nimport { ROOT, } from './constants';\nexport const isString = (pixels) => typeof pixels === 'string';\nfunction makeIsNDimensionalTensor(rank) {\n    function fn(pixels) {\n        try {\n            return pixels.shape.length === rank;\n        }\n        catch (err) { }\n        return false;\n    }\n    return fn;\n}\n// const ERROR_URL_EXPLICIT_SCALE_REQUIRED =\n//   'https://thekevinscott.github.io/UpscalerJS/#/?id=you-must-provide-an-explicit-scale';\n// const ERROR_URL_EXPLICIT_SCALE_DISALLOWED =\n//   'https://thekevinscott.github.io/UpscalerJS/#/?id=you-are-requesting-the-pretrained-model-but-are-providing-an-explicit-scale';\nexport function getModelDefinitionError(modelDefinition) {\n    if (!modelDefinition) {\n        return new Error('You must provide a model definition');\n    }\n    if (!modelDefinition.path) {\n        return new Error('No model path provided');\n    }\n    if (!modelDefinition.scale) {\n        return new Error('No model scale provided');\n    }\n    return new Error('Bug with code');\n}\nexport const isValidModelDefinition = (modelDefinition) => {\n    if (modelDefinition === undefined) {\n        return false;\n    }\n    return !!(modelDefinition.path && modelDefinition.scale);\n};\nexport const registerCustomLayers = (modelDefinition) => {\n    if (modelDefinition.customLayers) {\n        modelDefinition.customLayers.forEach((layer) => {\n            tf.serialization.registerClass(layer);\n        });\n    }\n};\nexport const isFourDimensionalTensor = makeIsNDimensionalTensor(4);\nexport const isThreeDimensionalTensor = makeIsNDimensionalTensor(3);\nexport const isTensor = (input) => {\n    return input instanceof tf.Tensor;\n};\nconst MODEL_DIR = 'models';\nexport const buildURL = (modelFolder) => `${ROOT}/${MODEL_DIR}/${modelFolder}/model.json`;\nexport const buildConfigURL = (modelFolder) => `${ROOT}/${MODEL_DIR}/${modelFolder}/config.json`;\nexport const warn = (msg) => {\n    console.warn(Array.isArray(msg) ? msg.join('\\n') : msg); // skipcq: JS-0002\n};\nexport function isProgress(p) { return p !== undefined && typeof p === 'function'; }\nexport function isSingleArgProgress(p) { return isProgress(p) && p.length <= 1; }\nexport const isMultiArgTensorProgress = (p, output, progressOutput) => {\n    if (!isProgress(p) || p.length <= 1) {\n        return false;\n    }\n    return progressOutput === undefined && output === 'tensor' || progressOutput === 'tensor';\n};\nexport const isAborted = (abortSignal) => {\n    if (abortSignal) {\n        return abortSignal.aborted;\n    }\n    return false;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport async function wrapGenerator(gen, postNext) {\n    let result = undefined;\n    for (result = await gen.next(); !result.done; result = await gen.next()) {\n        if (postNext) {\n            await postNext(result.value);\n        }\n    }\n    return result.value;\n}\nexport function isModelDefinitionFn(modelDefinition) { return typeof modelDefinition === 'function'; }\n","import { tf, } from './dependencies.generated';\nimport { getModelDefinitionError, isValidModelDefinition, registerCustomLayers, } from './utils';\nconst CDNS = [\n    (packageName, version, path) => `https://cdn.jsdelivr.net/npm/${packageName}@${version}/${path}`,\n    (packageName, version, path) => `https://unpkg.com/${packageName}@${version}/${path}`,\n    // 'cdnjs',\n];\nexport const fetchModel = async (modelPath, packageInformation) => {\n    if (packageInformation) {\n        for (let i = 0; i < CDNS.length; i++) {\n            const getCDNFn = CDNS[i];\n            try {\n                const url = getCDNFn(packageInformation.name, packageInformation.version, modelPath);\n                return await tf.loadLayersModel(url);\n            }\n            catch (err) {\n                // there was an issue with the CDN, try another\n            }\n        }\n        throw new Error(`Could not resolve URL ${modelPath}`);\n    }\n    return await tf.loadLayersModel(modelPath);\n};\nexport const loadModel = async (modelDefinition) => {\n    if (isValidModelDefinition(modelDefinition)) {\n        registerCustomLayers(modelDefinition);\n        const model = await fetchModel(modelDefinition.path, modelDefinition.packageInformation);\n        return {\n            model,\n            modelDefinition,\n        };\n    }\n    else {\n        throw getModelDefinitionError(modelDefinition);\n    }\n};\n","import { tf, } from './dependencies.generated';\nconst isWarmupSizeByPatchSize = (size) => {\n    return 'patchSize' in size;\n};\nconst warmup = async (modelPackage, sizes) => {\n    await tf.nextFrame();\n    const { model, } = await modelPackage;\n    for (const size of sizes) {\n        if (isWarmupSizeByPatchSize(size)) {\n            const { patchSize, padding = 0, } = size;\n            const amount = patchSize + padding * 2;\n            const pred = tf.tidy(() => model.predict(tf.zeros([1, amount, amount, 3,])));\n            await tf.nextFrame();\n            pred.dataSync();\n            pred.dispose();\n        }\n        else {\n            if (typeof size[0] !== 'number' || typeof size[1] !== 'number') {\n                throw new Error(`Invalid value passed to warmup in warmupSizes. Expected two numbers, got ${size.join(',')}`);\n            }\n            const [width, height,] = size;\n            const pred = tf.tidy(() => model.predict(tf.zeros([1, height, width, 3,])));\n            await tf.nextFrame();\n            pred.dataSync();\n            pred.dispose();\n        }\n    }\n};\nexport default warmup;\n","import { tf, } from './dependencies.generated';\nimport { isFourDimensionalTensor, isThreeDimensionalTensor, isTensor, isString, } from './utils';\nexport const getInvalidTensorError = (input) => new Error([\n    `Unsupported dimensions for incoming pixels: ${input.shape.length}.`,\n    'Only 3 or 4 rank tensors are supported.',\n].join(' '));\nexport const getInvalidImageError = () => new Error([\n    'Failed to load image',\n].join(' '));\nexport const loadImage = (src) => new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = src;\n    img.crossOrigin = 'anonymous';\n    img.onload = () => resolve(img);\n    img.onerror = () => reject(getInvalidImageError());\n});\nconst getTensorFromInput = async (input) => {\n    if (isTensor(input)) {\n        return input;\n    }\n    if (isString(input)) {\n        const imgHTMLElement = await loadImage(input);\n        return tf.browser.fromPixels(imgHTMLElement);\n    }\n    return tf.browser.fromPixels(input);\n};\nexport const getImageAsTensor = async (input) => {\n    const tensor = await getTensorFromInput(input);\n    if (isThreeDimensionalTensor(tensor)) {\n        // https://github.com/tensorflow/tfjs/issues/1125\n        /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\n        const expandedTensor = tensor.expandDims(0);\n        tensor.dispose();\n        return expandedTensor;\n    }\n    if (isFourDimensionalTensor(tensor)) {\n        return tensor;\n    }\n    throw getInvalidTensorError(tensor);\n};\nexport const isHTMLImageElement = (pixels) => {\n    try {\n        return pixels instanceof HTMLImageElement;\n    }\n    catch (err) {\n        return false;\n    }\n};\n","import { tf, } from './dependencies.generated';\nimport { getImageAsTensor, } from './image.generated';\nimport tensorAsBase64 from 'tensor-as-base64';\nimport { wrapGenerator, warn, isTensor, isProgress, isMultiArgTensorProgress, isAborted, } from './utils';\nexport class AbortError extends Error {\n    message = 'The upscale request received an abort signal';\n}\nconst WARNING_UNDEFINED_PADDING_URL = 'https://thekevinscott.github.io/UpscalerJS/#/?id=padding-is-undefined';\nexport const WARNING_UNDEFINED_PADDING = [\n    '\"padding\" is undefined, but \"patchSize\" is explicitly defined.',\n    'Without padding, patches of images often have visible artifacting at the seams. Defining an explicit padding will resolve the artifacting.',\n    `For more information, see ${WARNING_UNDEFINED_PADDING_URL}.`,\n    'To hide this warning, pass an explicit padding of \"0\".',\n].join('\\n');\nconst WARNING_PROGRESS_WITHOUT_PATCH_SIZE_URL = 'https://thekevinscott.github.io/UpscalerJS/#/?id=progress-specified-without-patch-size';\nexport const WARNING_PROGRESS_WITHOUT_PATCH_SIZE = [\n    'The \"progress\" callback was provided but \"patchSize\" was not defined.',\n    'Without a \"patchSize\", the \"progress\" callback will never be called.',\n    `For more information, see ${WARNING_PROGRESS_WITHOUT_PATCH_SIZE_URL}.`,\n].join('\\n');\nconst getWidthAndHeight = (tensor) => {\n    if (tensor.shape.length === 4) {\n        return tensor.shape.slice(1, 3);\n    }\n    if (tensor.shape.length === 3) {\n        return tensor.shape.slice(0, 2);\n    }\n    throw new Error(`Invalid shape provided to getWidthAndHeight, expected tensor of rank 3 or 4: ${JSON.stringify(tensor.shape)}`);\n};\nexport const getRowsAndColumns = (pixels, patchSize) => {\n    const [height, width,] = getWidthAndHeight(pixels);\n    return {\n        rows: Math.ceil(height / patchSize),\n        columns: Math.ceil(width / patchSize),\n    };\n};\n// check that padding has not pushed our origins off the board\nconst checkAndAdjustStartingPosition = (dimension, origin, sliceOrigin) => {\n    // check that our origin is not off the board.\n    if (origin[dimension] < 0) {\n        // first, find out how much it overhangs\n        const amount = 0 - origin[dimension];\n        // then, increase origin by that amount (could also just set it to 0.)\n        origin[dimension] += amount;\n        // and increase sliceOrigin to accommodate\n        sliceOrigin[dimension] -= amount;\n    }\n};\nconst checkAndAdjustEndingPosition = (size, dimension, endPosition, origin, sliceOrigin, sliceEndPosition) => {\n    // check that our final positions are not off the board\n    if (endPosition[dimension] > size) {\n        // box overhangs in the y direction, bring origin back and cut off the appropriate section.\n        // first determine the amount of overhang\n        const amount = endPosition[dimension] - size;\n        let compensatingAmount = 0;\n        if (origin[dimension] - amount < 0) {\n            compensatingAmount = 0 - (origin[dimension] - amount);\n        }\n        // reduce origin to accommodate overhang\n        origin[dimension] -= amount - compensatingAmount;\n        // then, reduce endPosition by the same amount.\n        endPosition[dimension] -= amount;\n        // then, increase sliceOrigin amount\n        const sliceAmount = amount - compensatingAmount;\n        sliceOrigin[dimension] += sliceAmount;\n        sliceEndPosition[dimension] += sliceAmount;\n    }\n};\nconst checkAndAdjustSliceSize = (dimension, size, sliceEndPosition) => {\n    if (sliceEndPosition[dimension] > size[dimension]) {\n        sliceEndPosition[dimension] = size[dimension];\n    }\n};\nexport const getTensorDimensions = ({ row, col, patchSize, height, width, padding = 0, }) => {\n    // non typescript code can call this function, so we add runtime\n    // checks to ensure required values are present\n    if (row === undefined) {\n        throw new Error('row is undefined');\n    }\n    if (col === undefined) {\n        throw new Error('col is undefined');\n    }\n    if (patchSize === undefined) {\n        throw new Error('patchSize is undefined');\n    }\n    if (height === undefined) {\n        throw new Error('height is undefined');\n    }\n    if (width === undefined) {\n        throw new Error('width is undefined');\n    }\n    let yPatchSize = patchSize;\n    let xPatchSize = patchSize;\n    if (yPatchSize > height) {\n        yPatchSize = height;\n    }\n    if (xPatchSize > width) {\n        xPatchSize = width;\n    }\n    const origin = [\n        row * patchSize - padding,\n        col * patchSize - padding,\n    ];\n    const sliceOrigin = [padding, padding,];\n    checkAndAdjustStartingPosition(0, origin, sliceOrigin);\n    checkAndAdjustStartingPosition(1, origin, sliceOrigin);\n    const endPosition = [\n        origin[0] + yPatchSize + padding * 2,\n        origin[1] + xPatchSize + padding * 2,\n    ];\n    const sliceEndPosition = [\n        sliceOrigin[0] + yPatchSize,\n        sliceOrigin[1] + xPatchSize,\n    ];\n    checkAndAdjustEndingPosition(height, 0, endPosition, origin, sliceOrigin, sliceEndPosition);\n    checkAndAdjustEndingPosition(width, 1, endPosition, origin, sliceOrigin, sliceEndPosition);\n    const size = [\n        endPosition[0] - origin[0],\n        endPosition[1] - origin[1],\n    ];\n    checkAndAdjustSliceSize(0, size, sliceEndPosition);\n    checkAndAdjustSliceSize(1, size, sliceEndPosition);\n    const sliceSize = [\n        sliceEndPosition[0] - sliceOrigin[0],\n        sliceEndPosition[1] - sliceOrigin[1],\n    ];\n    return {\n        origin,\n        sliceOrigin,\n        size,\n        sliceSize,\n    };\n};\nexport function concatTensors(tensors, axis = 0) {\n    const concatenatedTensor = tf.concat(tensors, axis);\n    tensors.forEach(tensor => tensor.dispose());\n    return concatenatedTensor;\n}\nexport async function* predict(pixels, { output, progress, patchSize: originalPatchSize, padding, progressOutput, }, { model, modelDefinition, }) {\n    const scale = modelDefinition.scale;\n    if (originalPatchSize && padding === undefined) {\n        warn(WARNING_UNDEFINED_PADDING);\n    }\n    const patchSize = originalPatchSize;\n    if (patchSize) {\n        const channels = 3;\n        const [height, width,] = pixels.shape.slice(1);\n        const { rows, columns, } = getRowsAndColumns(pixels, patchSize);\n        yield;\n        const { size: originalSize, } = getTensorDimensions({\n            row: 0,\n            col: 0,\n            patchSize,\n            height,\n            width,\n            padding,\n        });\n        let upscaledTensor = tf.zeros([\n            1,\n            0,\n            originalSize[1] * scale * columns,\n            channels,\n        ]);\n        yield upscaledTensor;\n        const total = rows * columns;\n        for (let row = 0; row < rows; row++) {\n            let colTensor = tf.zeros([\n                1,\n                originalSize[0] * scale,\n                0,\n                channels,\n            ]);\n            yield [colTensor, upscaledTensor,];\n            for (let col = 0; col < columns; col++) {\n                const { origin, size, sliceOrigin, sliceSize, } = getTensorDimensions({\n                    row,\n                    col,\n                    patchSize,\n                    padding,\n                    height,\n                    width,\n                });\n                yield [upscaledTensor, colTensor,];\n                const slicedPixels = pixels.slice([0, origin[0], origin[1],], [-1, size[0], size[1],]);\n                yield [upscaledTensor, colTensor, slicedPixels,];\n                const prediction = model.predict(slicedPixels);\n                slicedPixels.dispose();\n                yield [upscaledTensor, colTensor, prediction,];\n                const slicedPrediction = prediction.slice([0, sliceOrigin[0] * scale, sliceOrigin[1] * scale,], [-1, sliceSize[0] * scale, sliceSize[1] * scale,]);\n                prediction.dispose();\n                yield [upscaledTensor, colTensor, slicedPrediction,];\n                if (progress !== undefined && isProgress(progress)) {\n                    const index = row * columns + col + 1;\n                    const percent = index / total;\n                    if (progress.length <= 1) {\n                        progress(percent);\n                    }\n                    else {\n                        const squeezedTensor = slicedPrediction.squeeze();\n                        if (isMultiArgTensorProgress(progress, output, progressOutput)) {\n                            // because we are returning a tensor, we cannot safely dispose of it\n                            progress(percent, squeezedTensor);\n                        }\n                        else {\n                            // because we are returning a string, we can safely dispose of our tensor\n                            const src = await tensorAsBase64(squeezedTensor);\n                            squeezedTensor.dispose();\n                            progress(percent, src);\n                        }\n                    }\n                }\n                yield [upscaledTensor, colTensor, slicedPrediction,];\n                colTensor = concatTensors([colTensor, slicedPrediction,], 2);\n                slicedPrediction.dispose();\n                yield [upscaledTensor, colTensor,];\n            }\n            upscaledTensor = concatTensors([upscaledTensor, colTensor,], 1);\n            colTensor.dispose();\n            yield [upscaledTensor,];\n        }\n        // https://github.com/tensorflow/tfjs/issues/1125\n        /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\n        const squeezedTensor = upscaledTensor.squeeze();\n        upscaledTensor.dispose();\n        return squeezedTensor;\n    }\n    if (progress) {\n        warn(WARNING_PROGRESS_WITHOUT_PATCH_SIZE);\n    }\n    return tf.tidy(() => {\n        const pred = model.predict(pixels);\n        // https://github.com/tensorflow/tfjs/issues/1125\n        /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\n        return pred.squeeze();\n    });\n}\nexport function getProcessedPixels(upscaledTensor, processFn) {\n    if (processFn) {\n        return processFn(upscaledTensor);\n    }\n    return upscaledTensor.clone();\n}\n// if given a tensor, we copy it; otherwise, we pass input through unadulterated\n// this allows us to safely dispose of memory ourselves without having to manage\n// what input is in which format\nexport const getCopyOfInput = (input) => isTensor(input) ? input.clone() : input;\nexport async function* upscale(input, args, { model, modelDefinition, }) {\n    const parsedInput = getCopyOfInput(input);\n    const startingPixels = await getImageAsTensor(parsedInput);\n    yield startingPixels;\n    const preprocessedPixels = getProcessedPixels(startingPixels, modelDefinition.preprocess);\n    startingPixels.dispose();\n    yield preprocessedPixels;\n    const gen = predict(preprocessedPixels, args, {\n        model,\n        modelDefinition,\n    });\n    let result = await gen.next();\n    yield result.value;\n    while (!result.done) {\n        result = await gen.next();\n        if (Array.isArray(result.value)) {\n            yield [...result.value, preprocessedPixels,];\n        }\n        else if (isTensor(result.value)) {\n            yield [result.value, preprocessedPixels,];\n        }\n        else {\n            yield preprocessedPixels;\n        }\n    }\n    preprocessedPixels.dispose();\n    const upscaledPixels = result.value;\n    const postprocessedPixels = getProcessedPixels(upscaledPixels, modelDefinition.postprocess);\n    upscaledPixels.dispose();\n    yield postprocessedPixels;\n    if (args.output === 'tensor') {\n        return postprocessedPixels;\n    }\n    const base64Src = await tensorAsBase64(postprocessedPixels);\n    postprocessedPixels.dispose();\n    return base64Src;\n}\nexport async function cancellableUpscale(input, { signal, ...args }, internalArgs) {\n    const tick = async (result) => {\n        await tf.nextFrame();\n        if (isAborted(signal) || isAborted(internalArgs.signal)) {\n            // only dispose tensor if we are aborting; if aborted, the called function will have\n            // no opportunity to dispose of its memory\n            if (Array.isArray(result)) {\n                result.forEach(r => r.dispose());\n            }\n            else if (isTensor(result)) {\n                result.dispose();\n            }\n            throw new AbortError();\n        }\n    };\n    await tick();\n    const upscaledPixels = await wrapGenerator(upscale(input, args, internalArgs), tick);\n    await tick();\n    return upscaledPixels;\n}\n","import { tf, ESRGANSlim, } from './dependencies.generated';\nimport { loadModel, } from './loadModel.generated';\nimport warmup from './warmup';\nimport { cancellableUpscale, } from './upscale';\nimport { isModelDefinitionFn, } from './utils';\n// TODO: Why do we need to explicitly cast this to ModelDefinition?\n// For some reason, TS is picking this up as *any* even though in the editor\n// it's defined as ModelDefinition\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nconst DEFAULT_MODEL = ESRGANSlim;\nconst getModel = (modelDefinition = DEFAULT_MODEL) => {\n    /* eslint-disable @typescript-eslint/no-unsafe-call */\n    /* eslint-disable @typescript-eslint/no-unsafe-return */\n    return isModelDefinitionFn(modelDefinition) ? modelDefinition(tf) : modelDefinition;\n};\nexport class Upscaler {\n    _opts;\n    _model;\n    abortController = new AbortController();\n    constructor(opts = {}) {\n        this._opts = {\n            ...opts,\n        };\n        this._model = loadModel(getModel(this._opts.model));\n        void warmup(this._model, this._opts.warmupSizes || []);\n    }\n    dispose = async () => {\n        const { model, } = await this._model;\n        model.dispose();\n    };\n    getModel = () => this._model;\n    warmup = async (warmupSizes) => {\n        await warmup(this._model, warmupSizes);\n    };\n    upscale = async (image, options = {}) => {\n        const { model, modelDefinition, } = await this._model;\n        return cancellableUpscale(image, options, {\n            model,\n            modelDefinition,\n            signal: this.abortController.signal,\n        });\n    };\n    abort = () => {\n        this.abortController.abort();\n        this.abortController = new AbortController();\n    };\n}\nexport default Upscaler;\n","import Upscaler from 'upscaler';\r\n\r\nimport { CanvasSD } from './Core/CanvasSD';\r\nimport { Implementation } from './Implementation';\r\n// import { Application } from '../';\r\nexport class AppUpscaler {\r\n    // app: Application;\r\n    canvasSD: CanvasSD;\r\n    implementation: Implementation;\r\n    host: HTMLElement;\r\n    divText: HTMLElement;\r\n    public static Init(id: string) {\r\n        new AppUpscaler(id);\r\n    }\r\n    constructor(id: string = 'main') {\r\n\r\n        // https://thekevinscott.github.io/UpscalerJS/#/?id=example\r\n\r\n        // const target = document.getElementById('target');\r\n        // const button = document.getElementById('button');\r\n        // const info = document.getElementById('info');\r\n\r\n\r\n        const path = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/map/worldMapGlobeA_small.png';\r\n        // const path = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint_02.jpg'\r\n\r\n        const img = new Image();\r\n\r\n        img.src = path;\r\n\r\n        const div = document.getElementById(id);\r\n\r\n        if (div) {\r\n            div.appendChild(img);\r\n        }\r\n        // button?.onclick = () => {\r\n        //   info.innerText = 'Upscaling...';\r\n        //   const start = new Date().getTime();\r\n\r\n        // img.onload = () => {\r\n\r\n        // };\r\n        // };\r\n\r\n        const upscaler = new Upscaler({\r\n            // // model: 'div2k/rdn-C3-D10-G64-G064-x2',\r\n            //   model: 'div2k-2x',\r\n            //   scale: 2,\r\n        });\r\n        upscaler.upscale(path).then((upscaledImgSrc) => {\r\n            console.log(upscaledImgSrc);\r\n            const imgResult = document.createElement('img');\r\n            imgResult.src = upscaledImgSrc as string;\r\n            // // target.innerHTML = '';\r\n            if (div) {\r\n                div.appendChild(imgResult);\r\n            }\r\n            // const ms = new Date().getTime() - start;\r\n            // info.innerText = `Upscaled in ${ms} ms`;\r\n        });\r\n        console.log('upscaler done');\r\n\r\n\r\n\r\n\r\n\r\n        // // this.app = app;\r\n        // console.log('id: ' + id + ', App Init!!!!!');\r\n        // const host = document.getElementById(id);\r\n        // if (host) { this.host = host; }\r\n        // this.InitHTML();\r\n        // // this.threeCore = new ThreeCore();\r\n        // // this.tfCore = new TFCore();\r\n        // this.canvasSD = new CanvasSD(this);\r\n        // this.implementation = new Implementation(this);\r\n    }\r\n    InitHTML() {\r\n        const btn0 = document.createElement('button');\r\n        btn0.style.width = '100px';\r\n        btn0.style.height = '20px';\r\n        btn0.style.marginLeft = '20px';\r\n        btn0.style.zIndex = '5';\r\n        // btn0.style.left = '20px';\r\n        // btn0.style.top = '20px';\r\n        // btn0.style.position = 'absolute';\r\n        btn0.name = 'Clear';\r\n        btn0.innerText = 'Clear';\r\n        btn0.value = 'Clear';\r\n        btn0.onclick = () => { console.log(this); this.canvasSD.Clear(); };\r\n\r\n        this.host.appendChild(btn0);\r\n        this.divText = document.createElement('div');\r\n        this.divText.id = 'classText';\r\n        this.divText.style.zIndex = '5';\r\n        // this.divText.style.left = '150px';\r\n        // this.divText.style.top = '20px';\r\n        // this.divText.style.position = 'absolute';\r\n        this.divText.innerText = 'class: ';\r\n        this.divText.style.marginLeft = '20px';\r\n        this.host.appendChild(this.divText);\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        console.log('this is init...');\r\n    }\r\n    Clear() {\r\n        this.canvasSD.Clear();\r\n    }\r\n}","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorAsBase64 = exports.tensorAsBuffer = void 0;\nexports.tensorAsBuffer = function (tensor) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, height, width, buffer, data, i, y, x, pos;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                _a = tensor.shape, height = _a[0], width = _a[1];\n                buffer = new Uint8ClampedArray(width * height * 4);\n                return [4 /*yield*/, tensor.data()];\n            case 1:\n                data = _b.sent();\n                i = 0;\n                for (y = 0; y < height; y++) {\n                    for (x = 0; x < width; x++) {\n                        pos = (y * width + x) * 4;\n                        buffer[pos] = data[i]; // R\n                        buffer[pos + 1] = data[i + 1]; // G\n                        buffer[pos + 2] = data[i + 2]; // B\n                        buffer[pos + 3] = 255; // Alpha\n                        i += 3;\n                    }\n                }\n                return [2 /*return*/, buffer];\n        }\n    });\n}); };\nexports.tensorAsBase64 = function (tensor) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, height, width, buffer, imageData, canvas, ctx;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                _a = tensor.shape, height = _a[0], width = _a[1];\n                return [4 /*yield*/, exports.tensorAsBuffer(tensor)];\n            case 1:\n                buffer = _b.sent();\n                imageData = new ImageData(width, height);\n                imageData.data.set(buffer);\n                canvas = document.createElement('canvas');\n                canvas.width = width;\n                canvas.height = height;\n                ctx = canvas.getContext('2d');\n                ctx.putImageData(imageData, 0, 0);\n                return [2 /*return*/, canvas.toDataURL()];\n        }\n    });\n}); };\nexports.default = exports.tensorAsBase64;\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["tf","Layer","layers","getInput","inputs","Array","isArray","isTensorArray","MultiplyBeta","constructor","super","this","beta","call","mul","PixelShuffle","scale","computeOutputShape","inputShape","depthToSpace","channels","path","packageInformation","name","version","meta","dataset","preprocess","image","postprocess","output","tidy","clippedValue","clipByValue","dispose","customLayers","makeIsNDimensionalTensor","rank","pixels","shape","length","err","isFourDimensionalTensor","isThreeDimensionalTensor","isTensor","input","warn","msg","console","join","isProgress","p","undefined","isMultiArgTensorProgress","progressOutput","isAborted","abortSignal","aborted","CDNS","packageName","loadModel","async","modelDefinition","isValidModelDefinition","forEach","layer","registerCustomLayers","model","modelPath","i","getCDNFn","url","Error","fetchModel","getModelDefinitionError","isWarmupSizeByPatchSize","size","modelPackage","sizes","patchSize","padding","amount","pred","predict","dataSync","width","height","loadImage","src","Promise","resolve","reject","img","Image","crossOrigin","onload","onerror","getImageAsTensor","tensor","imgHTMLElement","getTensorFromInput","expandedTensor","expandDims","getInvalidTensorError","AbortError","WARNING_UNDEFINED_PADDING","WARNING_PROGRESS_WITHOUT_PATCH_SIZE","getRowsAndColumns","slice","JSON","stringify","getWidthAndHeight","rows","Math","ceil","columns","checkAndAdjustStartingPosition","dimension","origin","sliceOrigin","checkAndAdjustEndingPosition","endPosition","sliceEndPosition","compensatingAmount","sliceAmount","checkAndAdjustSliceSize","getTensorDimensions","row","col","yPatchSize","xPatchSize","sliceSize","concatTensors","tensors","axis","concatenatedTensor","getProcessedPixels","upscaledTensor","processFn","clone","getCopyOfInput","upscale","args","parsedInput","startingPixels","preprocessedPixels","gen","progress","originalPatchSize","originalSize","total","colTensor","slicedPixels","prediction","slicedPrediction","percent","squeezedTensor","squeeze","tensorAsBase64","result","next","value","done","upscaledPixels","postprocessedPixels","base64Src","DEFAULT_MODEL","ESRGANSlim","opts","AbortController","_model","warmup","warmupSizes","options","internalArgs","signal","tick","r","postNext","wrapGenerator","cancellableUpscale","abortController","abort","_opts","isModelDefinitionFn","getModel","AppUpscaler","id","canvasSD","implementation","host","divText","div","document","getElementById","appendChild","Upscaler","then","upscaledImgSrc","log","imgResult","createElement","InitHTML","btn0","style","marginLeft","zIndex","innerText","onclick","Clear","Init","ctx","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","e","rejected","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","pop","push","Object","defineProperty","exports","tensorAsBuffer","_a","buffer","data","x","pos","_b","Uint8ClampedArray","imageData","canvas","ImageData","set","getContext","putImageData","toDataURL","_typeof","obj","prototype","_toPropertyKey","arg","key","hint","prim","toPrimitive","res","String","Number","_defineProperty","enumerable","configurable","writable"],"sourceRoot":""}