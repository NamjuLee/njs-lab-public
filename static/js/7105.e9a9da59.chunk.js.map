{"version":3,"file":"static/js/7105.e9a9da59.chunk.js","mappings":"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","sources":["njslab/Tools/WaterQualityInspector/WaterQualityInspector.ts","njslab/Tools/WaterQualityInspector/index.ts"],"sourcesContent":["import { getCSVFromURL } from 'njscore';\r\n\r\nexport class WaterQualityInspector {\r\n    data = {};\r\n\r\n    day = 24;\r\n    scale = 1.0\r\n    offsetData = 4;\r\n    constructor() {\r\n\r\n        document.onkeydown = (k) => {\r\n            this.offsetData ++;\r\n            console.log(this.offsetData)\r\n        }\r\n\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/Watabot/obs_104_1928_d047_15c7.csv').then((d) => {\r\n\r\n            const lines = d.split(/\\r\\n|\\r|\\n/g);\r\n            const index = lines[0].split(',');\r\n\r\n            const dataDic = {}\r\n            let needComputeData = true;\r\n            for (let i = 0; i < index.length; ++i) {\r\n                console.log(index[i])\r\n                if (needComputeData && index[i] === 'time (UTC)') {\r\n                    dataDic[index[i]] = [];\r\n                    needComputeData = false;\r\n                } else {\r\n                    dataDic[index[i]] = new Float32Array(lines.length - 1)\r\n                }\r\n            }\r\n\r\n            for (let i = 1; i < lines.length; ++i) {\r\n                const row = lines[i].split(',');\r\n                for (let j = 0; j < index.length; ++j) {\r\n                    const theIndex = index.indexOf(index[j]);\r\n                    if (theIndex !== -1) {\r\n                        dataDic[index[j]][i - 1] = row[theIndex]\r\n                    }\r\n                }\r\n\r\n            }\r\n            this.data = dataDic;\r\n            console.log(dataDic)\r\n        });\r\n    }\r\n    public Offset(v) {\r\n        if (v < 0) {\r\n            // this.offsetData -= this.offsetData * 0.5;\r\n        } else {\r\n            // this.offsetData += this.offsetData * 0.5;\r\n        }\r\n    }\r\n    public wheel(e: WheelEvent) {\r\n        if (e.deltaY < 0) {\r\n            this.scale += this.scale * .25;\r\n        } else {\r\n            this.scale -= this.scale * .25;\r\n        }\r\n        this.scale = this.scale < 0.012 ? 0.012 : this.scale;\r\n        console.log(this.scale)\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        const d = this.data['sea_water_turbidity (1)'];\r\n        const hourRes = 12\r\n\r\n        // let xx = 0\r\n        for (let i = 0; i < d.length; i ++) {\r\n\r\n\r\n            ctx.lineWidth = 0.5;\r\n            ctx.strokeStyle = `rgba(200, 200, 200, 1)`;\r\n            if (this.scale > 0.1) {\r\n                if (i % (hourRes * this.day) === 0) {\r\n                    const x = i * this.scale;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(x, 0);\r\n                    ctx.lineTo(x, ctx.canvas.height);\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = `rgba(0, 0, 255, 1)`;\r\n            if (this.scale > 0.02) {\r\n                if (i % (hourRes * this.day * 7) === 0) {\r\n                    const x = i * this.scale;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(x, 0);\r\n                    ctx.lineTo(x, ctx.canvas.height);\r\n                    ctx.stroke();\r\n                    // console.log(i)\r\n                }\r\n            }\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = `rgba(0, 255, 0, 1)`;\r\n            if (i % (hourRes * this.day * 30) === 0) {\r\n                const x = i * this.scale;\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, 0);\r\n                ctx.lineTo(x, ctx.canvas.height);\r\n                ctx.stroke();\r\n                // console.log(i)\r\n            }\r\n        }\r\n\r\n        // console.log(ctx);\r\n        // console.log(d)\r\n        // this.data day = 24\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = `rgba(255, 0, 0, 1)`;\r\n\r\n        ctx.beginPath();\r\n        let x = 0\r\n        ctx.moveTo(x, d[0])\r\n        for (let i = 1; i < d.length; i += this.offsetData) {\r\n\r\n            x += 1\r\n\r\n            const xP = x * this.scale * this.offsetData\r\n            let yP = 0;\r\n            let val = 0\r\n            let key = 'max' // max\r\n            switch (key) {\r\n                case 'mean':\r\n                    \r\n                    for (let j = 0 ; j < this.offsetData; ++j) {\r\n                        val+=d[i + j]\r\n                    }\r\n                    \r\n                    yP = val / this.offsetData;\r\n                    ctx.lineTo(xP, yP)\r\n                    break;\r\n            \r\n                default:\r\n\r\n                    for (let j = 0 ; j < this.offsetData; ++j) {      \r\n                        if (val < d[i + j]){\r\n                            val = d[i + j]\r\n                        }\r\n                    }\r\n                    yP = val // / this.offsetData;\r\n                    ctx.lineTo(xP, yP)\r\n            }\r\n\r\n            // console.log(i)\r\n        }\r\n        // console.log(x)\r\n        ctx.stroke();\r\n\r\n    }\r\n}","import { RendererCanvas, remap } from '../../../lib'\r\n\r\nimport { WaterQualityInspector } from './WaterQualityInspector';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '900px';\r\n        div.style.height = '500px';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n    waterQualityInspector: WaterQualityInspector;\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n        this.canvas.style.background = '#fff';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n        this.canvas.onwheel = (e) => {\r\n            // console.log(e.deltaY);\r\n            this.waterQualityInspector.wheel(e);\r\n        }\r\n\r\n\r\n        this.waterQualityInspector = new WaterQualityInspector();\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // ctx.beginPath();\r\n        // ctx.arc(0, 0, 10, 0, Math.PI * 2);\r\n        // ctx.closePath();\r\n        // ctx.fill();\r\n\r\n        this.waterQualityInspector.render(this.ctx);\r\n    }\r\n}"],"names":["WaterQualityInspector","data","day","scale","offsetData","document","onkeydown","k","console","log","getCSVFromURL","process","then","d","lines","split","index","dataDic","needComputeData","i","length","Float32Array","row","j","theIndex","indexOf","v","e","deltaY","this","ctx","lineWidth","strokeStyle","x","beginPath","moveTo","lineTo","canvas","height","stroke","xP","yP","val","Solution","divHost","renderer","style","display","alignItems","div","createElement","marginLeft","marginRight","backgroundColor","width","appendChild","Renderer","destroy","lastElementChild","removeChild","waterQualityInspector","position","background","onwheel","wheel","start","y","render","RendererCanvas"],"sourceRoot":""}