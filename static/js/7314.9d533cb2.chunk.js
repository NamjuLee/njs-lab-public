"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[7314],{96212:function(t,e,i){i.d(e,{Z:function(){return x}});var n,l=i(27366),s=i(10064),r=i(46784),o=i(84652),a=i(32718),h=i(92026),c=i(49861),u=i(89125),f=i(69912);class p{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.minValue=t,this.maxValue=e,this.noDataValue=i}}let d=n=class extends r.wq{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.statistics=null}static createEmptyBand(t,e){return new(n.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return null===(t=this.pixels)||void 0===t?void 0:t.length}addData(t){var e;if(!t.pixels||t.pixels.length!==this.width*this.height)throw new s.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(null!==(e=t.statistics)&&void 0!==e?e:new p)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if((0,h.pC)(t))for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,l]=e,s=this.pixels,r=this.width*this.height,o=s.length;let a,h,c;const u=[];for(let f=0;f<o;f++){c=n.createEmptyBand(t,r),a=s[f];for(let t=0;t<r;t++)h=a[t],c[t]=h>l?l:h<i?i:h;u.push(c)}this.pixels=u,this.pixelType=t}extractBands(t){const{pixels:e,statistics:i}=this;if((0,h.Wi)(t)||0===t.length||!e||0===e.length)return this;const l=e.length,s=t.some((t=>t>=e.length)),r=l===t.length&&!t.some(((t,e)=>t!==e));return s||r?this:new n({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:i&&t.map((t=>i[t]))})}clone(){const t=new n({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;(0,h.pC)(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=n.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const n=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=n?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,o.d9)(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:n}=this;if(!t||!n||!n.length)return void a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let l,s,r,o;l=s=r=n[0],n.length>=3?(s=n[1],r=n[2]):2===n.length&&(s=n[1]);const c=new Uint32Array(t),u=this.width*this.height;if(l.length===u)if((0,h.pC)(e)&&e.length===u)if(i)for(o=0;o<u;o++)e[o]&&(c[o]=e[o]<<24|r[o]<<16|s[o]<<8|l[o]);else for(o=0;o<u;o++)e[o]&&(c[o]=255<<24|r[o]<<16|s[o]<<8|l[o]);else for(o=0;o<u;o++)c[o]=255<<24|r[o]<<16|s[o]<<8|l[o];else a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:n}=this;if(!t||!e||!e.length)return void a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let s=1,r=0,o=1;if(n&&n.length>0){for(const t of n)if(null!=t.minValue&&(r=Math.min(r,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;o=Math.max(o,e)}s=255/o}else{let t=255;"s8"===l?(r=-128,t=127):"u16"===l?t=65535:"s16"===l?(r=-32768,t=32767):"u32"===l?t=4294967295:"s32"===l?(r=-2147483648,t=2147483647):"f32"===l?(r=-34e38,t=34e38):"f64"===l&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-r)}const c=new Uint32Array(t),u=this.width*this.height;let f,p,d,x,g;if(f=p=d=e[0],f.length!==u)return a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(p=e[1],e.length>=3&&(d=e[2]),(0,h.pC)(i)&&i.length===u)for(x=0;x<u;x++)i[x]&&(c[x]=255<<24|(d[x]-r)*s<<16|(p[x]-r)*s<<8|(f[x]-r)*s);else for(x=0;x<u;x++)c[x]=255<<24|(d[x]-r)*s<<16|(p[x]-r)*s<<8|(f[x]-r)*s;else if((0,h.pC)(i)&&i.length===u)for(x=0;x<u;x++)g=(f[x]-r)*s,i[x]&&(c[x]=255<<24|g<<16|g<<8|g);else for(x=0;x<u;x++)g=(f[x]-r)*s,c[x]=255<<24|g<<16|g<<8|g}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return a.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let n,l,s,r;n=l=s=e[0],e.length>=3?(l=e[1],s=e[2]):2===e.length&&(l=e[1]);const o=this.width*this.height;if(n.length!==o)return a.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let c=0;if((0,h.pC)(i)&&i.length===o)for(r=0;r<o;r++)t[c++]=n[r],t[c++]=l[r],t[c++]=s[r],t[c++]=1&i[r];else for(r=0;r<o;r++)t[c++]=n[r],t[c++]=l[r],t[c++]=s[r],t[c++]=1}_calculateBandStatistics(t,e){let i=1/0,n=-1/0;const l=t.length;let s,r=0;if((0,h.pC)(e))for(s=0;s<l;s++)e[s]&&(r=t[s],i=r<i?r:i,n=r>n?r:n);else for(s=0;s<l;s++)r=t[s],i=r<i?r:i,n=r>n?r:n;return new p(i,n)}};(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"width",void 0),(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"height",void 0),(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"pixelType",void 0),(0,l._)([(0,u.p)("pixelType")],d.prototype,"castPixelType",null),(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"validPixelCount",void 0),(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"mask",void 0),(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"maskIsAlpha",void 0),(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"pixels",void 0),(0,l._)([(0,c.Cb)({json:{write:!0}})],d.prototype,"statistics",void 0),d=n=(0,l._)([(0,f.j)("esri.layers.support.PixelBlock")],d);const x=d},17314:function(t,e,i){i.d(e,{CD:function(){return l},DX:function(){return n},Gd:function(){return c},Kh:function(){return v},Pz:function(){return u},Qh:function(){return G},SJ:function(){return f},Uk:function(){return I},Vl:function(){return R},XV:function(){return p},a2:function(){return g},nA:function(){return C},nk:function(){return a},oB:function(){return A},pW:function(){return U},qF:function(){return h},sS:function(){return k},us:function(){return M},zp:function(){return x}});var n,l,s,r=i(92026),o=i(96212);function a(t){return(0,r.pC)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function h(t,e){if(null===e||void 0===e||!e.length||!a(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new o.Z({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function c(t){if(null===t||void 0===t||!t.length||t.some((t=>!a(t))))return null;if(1===t.length)return(0,r.pC)(t[0])?t[0].clone():null;const e=t,{width:i,height:n,pixelType:l}=e[0];if(e.some((t=>t.width!==i||t.height!==n)))return null;const s=e.map((t=>{let{mask:e}=t;return e})).filter((t=>null!=t));let h=null;s.length&&(h=new Uint8Array(i*n),h.set(s[0]),s.length>1&&w(s.slice(1),h));const c=[];e.forEach((t=>{let{pixels:e}=t;return c.push(...e)}));const u=e.map((t=>{let{statistics:e}=t;return e})).filter((t=>null===t||void 0===t?void 0:t.length)),f=[];return u.forEach((t=>f.push(...t))),new o.Z({pixelType:l,width:i,height:n,mask:h,pixels:c,statistics:f.length?f:null})}function u(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let n=0;i[0][0]<0&&(n=i[0][0]);const l=Math.max(256,i[i.length-1][0]-n+1),s=new Uint8Array(4*l),r=[];let o,a=0,h=0;const c=5===i[0].length;if(l>65536)return i.forEach((t=>{r[t[0]-n]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:n,alphaSpecified:c};if(t.fillUnspecified)for(o=i[h],a=o[0]-n;a<l;a++)s[4*a]=o[1],s[4*a+1]=o[2],s[4*a+2]=o[3],s[4*a+3]=c?o[4]:255,a===o[0]-n&&(o=h===i.length-1?o:i[++h]);else for(a=0;a<i.length;a++)o=i[a],h=4*(o[0]-n),s[h]=o[1],s[h+1]=o[2],s[h+2]=o[3],s[h+3]=c?o[4]:255;return{indexedColormap:s,offset:n,alphaSpecified:c}}function f(t,e){if(!a(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const i=t.clone(),n=i.pixels;let l=i.mask;const s=i.width*i.height;if(1!==n.length)return t;const{indexedColormap:o,indexed2DColormap:h,offset:c,alphaSpecified:u}=e;let f=0;const p=n[0],d=new Uint8Array(p.length),x=new Uint8Array(p.length),g=new Uint8Array(p.length);let m,y=0;if(o){const t=o.length-1;if((0,r.pC)(l))for(f=0;f<s;f++)l[f]&&(y=4*(p[f]-c),y<c||y>t?l[f]=0:(d[f]=o[y],x[f]=o[y+1],g[f]=o[y+2],l[f]=o[y+3]));else{for(l=new Uint8Array(s),f=0;f<s;f++)y=4*(p[f]-c),y<c||y>t?l[f]=0:(d[f]=o[y],x[f]=o[y+1],g[f]=o[y+2],l[f]=o[y+3]);i.mask=l}}else if(h)if((0,r.pC)(l))for(f=0;f<s;f++)l[f]&&(m=h[p[f]],d[f]=m[0],x[f]=m[1],g[f]=m[2],l[f]=m[3]);else{for(l=new Uint8Array(s),f=0;f<s;f++)m=h[p[f]],d[f]=m[0],x[f]=m[1],g[f]=m[2],l[f]=m[3];i.mask=l}return i.pixels=[d,x,g],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=u,i}function p(t,e){if(!a(t))return null;const{pixels:i,mask:n}=t,l=i.length;let s=e.lut;const{offset:r}=e;s&&1===s[0].length&&(s=i.map((()=>s)));const h=[],c=e.outputPixelType||"u8";for(let o=0;o<l;o++){const t=d(i[o],n,s[o],r||0,c);h.push(t)}const u=new o.Z({width:t.width,height:t.height,pixels:h,mask:n,pixelType:c});return u.updateStatistics(),u}function d(t,e,i,n,l){const s=t.length,r=o.Z.createEmptyBand(l,s);if(e)for(let o=0;o<s;o++)e[o]&&(r[o]=i[t[o]-n]);else for(let o=0;o<s;o++)r[o]=i[t[o]-n];return r}function x(t,e){if(!a(t))return null;const i=t.clone(),{pixels:n}=i,l=i.width*i.height,s=e.length,r=Math.floor(s/2),o=e[Math.floor(r)],h=n[0];let c,u,f,p,d,x,g=!1;const m=new Uint8Array(l),y=new Uint8Array(l),w=new Uint8Array(l);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(l),k.fill(A?255:1),i.mask=k),d=0;d<l;d++)if(k[d]){for(c=h[d],g=!1,x=r,u=o,f=0,p=s-1;p-f>1;){if(c===u.value){g=!0;break}c>u.value?f=x:p=x,x=Math.floor((f+p)/2),u=e[Math.floor(x)]}g||(c===e[f].value?(u=e[f],g=!0):c===e[p].value?(u=e[p],g=!0):c<e[f].value?(g=!1,u=null):c>e[f].value&&(c<e[p].value?(u=e[f],g=!0):p===s-1?(g=!1,u=null):(u=e[p],g=!0))),g?(m[d]=u.mappedColor[0],y[d]=u.mappedColor[1],w[d]=u.mappedColor[2],k[d]=u.mappedColor[3]):m[d]=y[d]=w[d]=k[d]=0}return i.pixels=[m,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function g(t,e){if(!a(t))return null;const{width:i,height:n}=t,{inputRanges:l,outputValues:s,outputPixelType:r,noDataRanges:h,allowUnmatched:c}=e,u=t.pixels[0],f=o.Z.createEmptyBand(r,u.length);c&&f.set(u);const p=t.mask,d=l.length/2;for(let o=0;o<n;o++)for(let t=0;t<i;t++){const e=o*i+t;if(!p||p[e]){const t=u[e];for(let i=d-1;i>=0;i--)if(t>=l[2*i]&&t<=l[2*i+1]){f[e]=s[i];break}}}let x=p;if(null!==h&&void 0!==h&&h.length){x=new Uint8Array(i*n),p&&x.set(p);for(let t=0;t<n;t++)for(let e=0;e<i;e++){const n=t*i+e;if(!p||p[n]){const t=u[n];for(let e=0;e<d;e+=2)if(t>=h[e]&&t<=h[e+1]){f[n]=0,x[n]=0;break}}}}return new o.Z({width:i,height:n,pixelType:r,pixels:[f],mask:x})}function m(t,e,i,n){const l=null!=i&&i.length>=2?new Set(i):null,s=1===(null===i||void 0===i?void 0:i.length)?i[0]:null,r=!(null===e||void 0===e||!e.length);for(let o=0;o<t.length;o++)if(n[o]){const i=t[o];if(r){let t=!1;for(let n=0;n<e.length;n+=2)if(i>=e[n]&&i<=e[n+1]){t=!0;break}t||(n[o]=0)}n[o]&&(i===s||(null===l||void 0===l?void 0:l.has(i)))&&(n[o]=0)}}function y(t,e){const i=t[0].length;for(let n=0;n<i;n++)if(e[n]){let i=!1;for(let e=0;e<t.length;e++)if(t[e][n]){i=!0;break}i||(e[n]=0)}}function w(t,e){const i=t[0].length;for(let n=0;n<i;n++)if(e[n]){let i=!1;for(let e=0;e<t.length;e++)if(0===t[e][n]){i=!0;break}i&&(e[n]=0)}}function k(t,e){if(!a(t))return null;const{width:i,height:n,pixels:l}=t,s=i*n,r=new Uint8Array(s);t.mask?r.set(t.mask):r.fill(255);const h=l.length,{includedRanges:c,noDataValues:u,outputPixelType:f,matchAll:p,lookup:x}=e;if(x){const t=[];for(let e=0;e<h;e++){const i=d(l[e],r,x.lut,x.offset||0,"u8");t.push(i)}1===t.length?r.set(t[0]):p?y(t,r):w(t,r)}else if(p){const t=[];for(let e=0;e<h;e++){const i=new Uint8Array(s);i.set(r),m(l[e],c,u,i),t.push(i)}1===t.length?r.set(t[0]):y(t,r)}else for(let o=0;o<h;o++)m(l[o],c,u,r);return new o.Z({width:i,height:n,pixelType:f,pixels:l,mask:r})}function A(t,e,i){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const n=t.includes("16")?65536:256,l=t.includes("s")?-n/2:0,s=o.Z.createEmptyBand(t,n);for(let r=0;r<e.length;r++){const t=i[r],n=Math.ceil(e[2*r]-l),o=Math.floor(e[2*r+1]-l);for(let e=n;e<=o;e++)s[e]=t}return{lut:s,offset:l}}function C(t,e,i){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const n=t.includes("16")?65536:256,l=t.includes("s")?-n/2:0,s=new Uint8Array(n);if(e)for(let r=0;r<e.length;r++){const t=Math.ceil(e[2*r]-l),i=Math.floor(e[2*r+1]-l);for(let e=t;e<=i;e++)s[e]=255}if(i)for(let r=0;r<i.length;r++)s[i[r]-l]=0;return{lut:s,offset:l}}function v(t,e){if(!t||0===t.length)return null;const i=t.find((t=>t.pixelBlock));if(!i||(0,r.Wi)(i.pixelBlock))return null;const n=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,l=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,s=.01*Math.min(n,l),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,o.map((t=>t.extent.xmin))),h=Math.min.apply(null,o.map((t=>t.extent.ymin))),c=Math.max.apply(null,o.map((t=>t.extent.xmax))),u=Math.max.apply(null,o.map((t=>t.extent.ymax))),f={x:Math.round((e.xmin-a)/n),y:Math.round((u-e.ymax)/l)},p={width:Math.round((c-a)/n),height:Math.round((u-h)/l)},d={width:Math.round((e.xmax-e.xmin)/n),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==o.length||f.x<0||f.y<0||p.width<d.width||p.height<d.height?null:{extent:e,pixelBlock:M(o.map((t=>t.pixelBlock)),p,{clipOffset:f,clipSize:d})}}function b(t,e,i,n,l,s){const{width:r,height:o}=i.block,{x:a,y:h}=i.offset,{width:c,height:u}=i.mosaic,f=function(t,e,i,n,l,s,r,o){return{xmin:l<=i*t?0:l<i*t+t?l-i*t:t,ymin:s<=n*e?0:s<n*e+e?s-n*e:e,xmax:l+r<=i*t?0:l+r<i*t+t?l+r-i*t:t,ymax:s+o<=n*e?0:s+o<n*e+e?s+o-n*e:e}}(r,o,n,l,a,h,c,u);let p=0,d=0;if(s){var x;const t=s.hasGCSSShiftTransform?360:null!==(x=s.halfWorldWidth)&&void 0!==x?x:0,e=r*s.resolutionX,i=s.startX+n*e,l=i+e;i<t&&l>t?d=s.rightPadding:i>=t&&(p=s.leftMargin-s.rightPadding,d=0)}if(f.xmax-=d,"number"!=typeof e)for(let g=f.ymin;g<f.ymax;g++){const i=(l*o+g-h)*c+(n*r-a)+p,s=g*r;for(let n=f.xmin;n<f.xmax;n++)t[i+n]=e[s+n]}else for(let g=f.ymin;g<f.ymax;g++){const i=(l*o+g-h)*c+(n*r-a)+p;for(let n=f.xmin;n<f.xmax;n++)t[i+n]=e}}function M(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{clipOffset:n,clipSize:l,alignmentInfo:s,blockWidths:h}=i;if(h)return T(t,e,{blockWidths:h});const c=t.find((t=>a(t)));if((0,r.Wi)(c))return null;const u=l?l.width:e.width,f=l?l.height:e.height,p=c.width,d=c.height,x=e.width/p,g=e.height/d,m={offset:n||{x:0,y:0},mosaic:l||e,block:{width:p,height:d}},y=c.pixelType,w=o.Z.getPixelArrayConstructor(y),k=c.pixels.length,A=[];let C,v,M;for(let r=0;r<k;r++){v=new w(u*f);for(let e=0;e<g;e++)for(let i=0;i<x;i++){const n=t[e*x+i];a(n)&&(C=n.pixels[r],b(v,C,m,i,e,s))}A.push(v)}if(t.some((t=>(0,r.Wi)(t)||(0,r.pC)(t.mask)&&t.mask.length>0))){M=new Uint8Array(u*f);for(let e=0;e<g;e++)for(let i=0;i<x;i++){const n=t[e*x+i],l=(0,r.pC)(n)?n.mask:null;(0,r.pC)(l)?b(M,l,m,i,e,s):b(M,n?1:0,m,i,e,s)}}const U=new o.Z({width:u,height:f,pixels:A,pixelType:y,mask:M});return U.updateStatistics(),U}function T(t,e,i){const n=t.find((t=>(0,r.pC)(t)));if((0,r.Wi)(n))return null;const l=t.some((t=>!(0,r.pC)(t)||!!t.mask)),{width:s,height:h}=e,c=l?new Uint8Array(s*h):null,{blockWidths:u}=i,f=[],p=n.getPlaneCount(),d=o.Z.getPixelArrayConstructor(n.pixelType);if(l)for(let o=0,g=0;o<t.length;g+=u[o],o++){const e=t[o];if(!a(e))continue;const i=(0,r.Wg)(e.mask);for(let t=0;t<h;t++)for(let n=0;n<u[o];n++)c[t*s+n+g]=null==i?255:i[t*e.width+n]}for(let r=0;r<p;r++){const e=new d(s*h);for(let i=0,n=0;i<t.length;n+=u[i],i++){const l=t[i];if(!a(l))continue;const o=l.pixels[r];if(null!=o)for(let t=0;t<h;t++)for(let r=0;r<u[i];r++)e[t*s+r+n]=o[t*l.width+r]}f.push(e)}const x=new o.Z({width:s,height:h,mask:c,pixels:f,pixelType:n.pixelType});return x.updateStatistics(),x}function U(t,e,i){if(!a(t))return null;const{width:n,height:l}=t,s=e.x,r=e.y,o=i.width+s,h=i.height+r;if(s<0||r<0||o>n||h>l)return t;if(0===s&&0===r&&o===n&&h===l)return t;t.mask||(t.mask=new Uint8Array(n*l));const c=t.mask;for(let a=0;a<l;a++){const t=a*n;for(let e=0;e<n;e++)c[t+e]=a<r||a>=h||e<s||e>=o?0:1}return t.updateStatistics(),t}function B(t){if(!a(t))return null;const e=t.clone(),{width:i,height:n,pixels:l}=t,s=l[0],o=e.pixels[0],h=(0,r.Wg)(t.mask);for(let r=2;r<n-1;r++){const t=new Map;for(let n=r-2;n<r+2;n++)for(let e=0;e<4;e++){const l=n*i+e;Z(t,s[l],h?h[l]:1)}o[r*i]=_(t),o[r*i+1]=o[r*i+2]=o[r*i];let e=3;for(;e<i-1;e++){let n=(r-2)*i+e+1;Z(t,s[n],h?h[n]:1),n=(r-1)*i+e+1,Z(t,s[n],h?h[n]:1),n=r*i+e+1,Z(t,s[n],h?h[n]:1),n=(r+1)*i+e+1,Z(t,s[n],h?h[n]:1),n=(r-2)*i+e-3,P(t,s[n],h?h[n]:1),n=(r-1)*i+e-3,P(t,s[n],h?h[n]:1),n=r*i+e-3,P(t,s[n],h?h[n]:1),n=(r+1)*i+e-3,P(t,s[n],h?h[n]:1),o[r*i+e]=_(t)}o[r*i+e+1]=o[r*i+e]}for(let r=0;r<i;r++)o[r]=o[i+r]=o[2*i+r],o[(n-1)*i+r]=o[(n-2)*i+r];return e.updateStatistics(),e}function _(t){if(0===t.size)return 0;let e=0,i=-1,n=0;const l=t.keys();let s=l.next();for(;!s.done;)n=t.get(s.value),n>e&&(i=s.value,e=n),s=l.next();return i}function P(t,e,i){if(0===i)return;const n=t.get(e);1===n?t.delete(e):t.set(e,n-1)}function Z(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function S(t,e,i){let{x:n,y:l}=e;const{width:s,height:h}=i;if(0===n&&0===l&&h===t.height&&s===t.width)return t;const{width:c,height:u}=t,f=Math.max(0,l),p=Math.max(0,n),d=Math.min(n+s,c),x=Math.min(l+h,u);if(d<0||x<0||!a(t))return null;n=Math.max(0,-n),l=Math.max(0,-l);const{pixels:g}=t,m=s*h,y=g.length,w=[];for(let r=0;r<y;r++){const e=g[r],i=o.Z.createEmptyBand(t.pixelType,m);for(let t=f;t<x;t++){const r=t*c;let o=(t+l-f)*s+n;for(let t=p;t<d;t++)i[o++]=e[r+t]}w.push(i)}const k=new Uint8Array(m),A=(0,r.Wg)(t.mask);for(let r=f;r<x;r++){const t=r*c;let e=(r+l-f)*s+n;for(let i=p;i<d;i++)k[e++]=A?A[t+i]:1}const C=new o.Z({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return C.updateStatistics(),C}function F(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!a(t))return null;const{pixels:i,width:n,height:l,mask:s,pixelType:h}=t,c=[],u=Math.round(n/2),f=Math.round(l/2),p=l-1,d=n-1;for(let r=0;r<i.length;r++){const t=i[r],s=o.Z.createEmptyBand(h,u*f);let a=0;for(let i=0;i<l;i+=2)for(let l=0;l<n;l+=2){const r=t[i*n+l];if(e){const e=l===d?r:t[i*n+l+1],o=i===p?r:t[i*n+l+n],h=l===d?o:i===p?e:t[i*n+l+n+1];s[a++]=(r+e+o+h)/4}else s[a++]=r}c.push(s)}let x=null;if((0,r.pC)(s)){x=new Uint8Array(u*f);let t=0;for(let i=0;i<l;i+=2)for(let l=0;l<n;l+=2){const r=s[i*n+l];if(e){const e=l===d?r:s[i*n+l+1],o=i===p?r:s[i*n+l+n],a=l===d?o:i===p?e:s[i*n+l+n+1];x[t++]=r*e*o*a?1:0}else x[t++]=r}}return new o.Z({width:u,height:f,pixelType:h,pixels:c,mask:x})}function R(t,e,i){if(!a(t))return null;const{width:n,height:l}=e;let{width:s,height:r}=t;const o=new Map,h={x:0,y:0},c=null==i?1:1+i;let u=t;for(let a=0;a<c;a++){const t=Math.ceil(s/n),i=Math.ceil(r/l);for(let s=0;s<i;s++){h.y=s*l;for(let i=0;i<t;i++){h.x=i*n;const t=S(u,h,e);o.set("".concat(a,"/").concat(s,"/").concat(i),t)}}a<c-1&&(u=F(u)),s=Math.round(s/2),r=Math.round(r/2)}return o}function W(t,e,i,n){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const{width:s,height:r}=t,{width:o,height:a}=e,h=n.cols,c=n.rows,u=Math.ceil(o/h-.1/h),f=Math.ceil(a/c-.1/c);let p,d,x,g,m,y,w;const k=u*h,A=k*f*c,C=new Float32Array(A),v=new Float32Array(A),b=new Uint32Array(A),M=new Uint32Array(A);let T,U,B=0;for(let _=0;_<f;_++)for(let t=0;t<u;t++){p=12*(_*u+t),d=i[p],x=i[p+1],g=i[p+2],m=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<c;e++){B=(_*c+e)*k+t*h,U=(e+.5)/c;for(let t=0;t<e;t++)T=(t+.5)/h,C[B+t]=(d*T+x*U+g)*s-l,v[B+t]=(m*T+y*U+w)*r-l,b[B+t]=Math.round(C[B+t]),M[B+t]=Math.round(v[B+t])}p+=6,d=i[p],x=i[p+1],g=i[p+2],m=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<c;e++){B=(_*c+e)*k+t*h,U=(e+.5)/c;for(let t=e;t<h;t++)T=(t+.5)/h,C[B+t]=(d*T+x*U+g)*s-l,v[B+t]=(m*T+y*U+w)*r-l,b[B+t]=Math.round(C[B+t]),M[B+t]=Math.round(v[B+t])}}return{offsets_x:C,offsets_y:v,offsets_xi:b,offsets_yi:M,gridWidth:k}}function G(t,e){const{coefficients:i,spacing:n}=e,{offsets_x:l,offsets_y:s,gridWidth:r}=W(t,t,i,{rows:n[0],cols:n[1]},.5),{width:o,height:a}=t,h=new Float32Array(o*a),c=180/Math.PI;for(let u=0;u<a;u++)for(let t=0;t<o;t++){const e=u*r+t,i=0===u?e:e-r,n=u===a-1?e:e+r,f=l[i]-l[n],p=s[n]-s[i];if(isNaN(f)||isNaN(p))h[u*o+t]=90;else{let e=Math.atan2(p,f)*c;e=(360+e)%360,h[u*o+t]=e}}return h}function I(t,e,i,n){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"nearest";if(!a(t))return null;"majority"===l&&(t=B(t));const{pixels:s,mask:h,pixelType:c}=t,u=t.width,f=t.height,p=o.Z.getPixelArrayConstructor(c),d=s.length,{width:x,height:g}=e;let m=!1;for(let r=0;r<i.length;r+=3)-1===i[r]&&-1===i[r+1]&&-1===i[r+2]&&(m=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:A,gridWidth:C}=W({width:u,height:f},e,i,n,"majority"===l?0:.5);let v;const b=(t,e,i)=>{const n=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let l=0;l<g;l++){v=l*C;for(let s=0;s<x;s++){if(y[v]<0||w[v]<0)t[l*x+s]=0;else if(i)t[l*x+s]=e[k[v]+A[v]*u];else{const i=Math.floor(y[v]),r=Math.floor(w[v]),o=Math.ceil(y[v]),a=Math.ceil(w[v]),c=y[v]-i,f=w[v]-r;if(!h||h[i+r*u]&&h[i+r*u]&&h[i+a*u]&&h[o+a*u]){const h=(1-c)*e[i+r*u]+c*e[o+r*u],p=(1-c)*e[i+a*u]+c*e[o+a*u];t[l*x+s]=(1-f)*h+f*p+n}else t[l*x+s]=e[k[v]+A[v]*u]}v++}}},M=[];let T;for(let r=0;r<d;r++)T=new p(x*g),b(T,s[r],"nearest"===l||"majority"===l),M.push(T);const U=new o.Z({width:x,height:g,pixelType:c,pixels:M});if((0,r.pC)(h))U.mask=new Uint8Array(x*g),b(U.mask,h,!0);else if(m){U.mask=new Uint8Array(x*g);for(let t=0;t<x*g;t++)U.mask[t]=y[t]<0||w[t]<0?0:1}return U.updateStatistics(),U}(s=n||(n={}))[s.matchAny=0]="matchAny",s[s.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(l||(l={}))}}]);
//# sourceMappingURL=7314.9d533cb2.chunk.js.map