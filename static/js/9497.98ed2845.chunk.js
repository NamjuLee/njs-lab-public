"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[9497],{69497:function(t,e,o){o.r(e),o.d(e,{ColorCorrection:function(){return i},Renderer:function(){return a},Solution:function(){return r}});var n=o(55913);let i;!function(t){t.AutoContrast="autoContrast",t.None="None"}(i||(i={}));class r{constructor(t){this.divHost=void 0,this.renderer=void 0,this.divHost=t,this.divHost.style.display="flex",this.divHost.style.alignItems="center";const e=document.createElement("div");e.style.marginLeft="auto",e.style.marginRight="auto",e.style.backgroundColor="#555",e.style.margin="50px",e.style.background="rgba(0,0,0,0)",this.divHost.appendChild(e),this.renderer=new a(e)}destroy(){for(this.renderer.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}class a extends n.bb{constructor(t){super(t),this.img=void 0,this.rotation=0,this.m=[0,0],this.switch=!0,this.isDithering=!1,this.typeCorrection=i.AutoContrast,this.params={blur:0,sepia:0,contrast:1,brightness:1,saturate:1,hueRotate:0},this.ctx=this.canvas.getContext("2d",{willReadFrequently:!0}),this.canvas.style.position="relative",this.canvas.style.width="100%",this.canvas.style.height="100%",(0,n.t4)("https://www.glenstone.org/wp-content/uploads/2018/07/AV_Landscape-Hero-Contour-2993-1276x800.jpg").then((t=>{this.img=t,this.img.onload=e=>{this.update(t)}}));const e=document.createElement("input");e.value="https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png",e.addEventListener("keydown",(t=>{"Enter"===t.code&&(0,n.t4)(e.value).then((t=>{this.img=t,this.img.onload=e=>{this.update(t)}}))})),this.divHost.appendChild(e);const o=s("saturate",0,200);o.slider.defaultValue="100",this.divHost.appendChild(o.div),o.slider.oninput=()=>{const t=.01*parseInt(o.slider.value);this.params.saturate=t,this.render(this.ctx)};const r=s("hueRotate",-360,360);r.slider.defaultValue="0",this.divHost.appendChild(r.div),r.slider.oninput=()=>{const t=1*parseInt(r.slider.value);this.params.hueRotate=t,this.render(this.ctx)};const a=s("contrast",0,20);a.slider.defaultValue="10",this.divHost.appendChild(a.div),a.slider.oninput=()=>{const t=.1*parseInt(a.slider.value);this.params.contrast=t,this.render(this.ctx)};const c=s("brightness",0,20);c.slider.defaultValue="10",this.divHost.appendChild(c.div),c.slider.oninput=()=>{const t=.1*parseInt(c.slider.value);this.params.brightness=t,this.render(this.ctx)};const l=s("sepia",0,100);l.slider.defaultValue="0",this.divHost.appendChild(l.div),l.slider.oninput=()=>{const t=.01*parseInt(l.slider.value);this.params.sepia=t,this.render(this.ctx)},this.start()}update(t){this.img=t,this.canvas.width=this.img.width,this.canvas.height=this.img.height,this.render(this.ctx)}render(t){if(void 0===this.img)return;const e=this.params,o=this.img,n=document.createElement("canvas");n.width=o.width,n.height=o.height;const i=n.getContext("webgl2"),r=i.createTexture();i.bindTexture(i.TEXTURE_2D,r),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,o),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.LINEAR);const a=i.createShader(i.VERTEX_SHADER);i.shaderSource(a,"\n            attribute vec2 a_position;\n            attribute vec2 a_texCoord;\n            varying vec2 v_texCoord;\n\n            void main() {\n                gl_Position = vec4(a_position, 0, 1);\n                v_texCoord = a_texCoord;\n            }\n        "),i.compileShader(a);const s=i.createShader(i.FRAGMENT_SHADER);i.shaderSource(s,"\n            precision mediump float;\n            \n            uniform vec2 u_resolution;\n            uniform float u_blurRadius;\n            uniform float u_sepia;\n            uniform float u_contrast;\n            uniform float u_brightness;\n            uniform float u_saturation;\n            uniform float u_hueRotation;\n            uniform sampler2D u_texture;\n            varying vec2 v_texCoord;\n\n            vec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n                vec4 color = vec4(0.0);\n                vec2 off1 = vec2(1.3333333333333333) * direction;\n                color += texture2D(image, uv) * 0.29411764705882354;\n                color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n                color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n                return color; \n            }\n\n            void main() {\n                vec2 flippedTexCoord = vec2(v_texCoord.x, 1.0 - v_texCoord.y);\n                vec4 color = texture2D(u_texture, flippedTexCoord);\n\n                float gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n\n                // ..................\n                if (u_sepia > .0) {\n                    vec3 sepia = vec3(1.0, 0.95, 0.82);\n                    color = mix(color, vec4(gray * sepia, color.a), u_sepia);\n                }\n\n\n                // ..................\n                // if ((u_brightness != 1.0) || (u_contrast != 1.0)) {\n                    vec3 colorRgb = color.rgb * u_brightness;\n                    colorRgb = (colorRgb - vec3(0.5)) * max(u_contrast, 0.0) + vec3(0.5);\n                    color = vec4(colorRgb, color.a);\n                // }\n\n\n                // ..................\n                color = vec4(mix(vec3(gray), color.rgb, u_saturation), color.a);\n\n                \n                // ..................\n                if (u_hueRotation != .0){\n                    float angle = u_hueRotation * 3.14159265358979323846264 / 180.0;\n                    float s = sin(angle);\n                    float c = cos(angle);\n                    mat3 hueRotationMatrix = mat3(\n                        0.213 + 0.787 * c - 0.213 * s, 0.715 - 0.715 * c - 0.715 * s, 0.072 - 0.072 * c + 0.928 * s,\n                        0.213 - 0.213 * c + 0.143 * s, 0.715 + 0.285 * c + 0.140 * s, 0.072 - 0.072 * c - 0.283 * s,\n                        0.213 - 0.213 * c - 0.787 * s, 0.715 - 0.715 * c + 0.715 * s, 0.072 + 0.928 * c + 0.072 * s\n                    );\n                    colorRgb = color.rgb * hueRotationMatrix;\n                    color = vec4(colorRgb, color.a);\n                }\n\n                // ..................\n                gl_FragColor = color;\n            }\n        "),i.compileShader(s);const c=i.createProgram();i.attachShader(c,a),i.attachShader(c,s),i.linkProgram(c),i.useProgram(c);const l=i.getAttribLocation(c,"a_position"),u=i.getAttribLocation(c,"a_texCoord"),d=i.getUniformLocation(c,"u_texture");i.uniform1i(d,0);const h=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,h),i.bufferData(i.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),i.STATIC_DRAW),i.enableVertexAttribArray(l),i.vertexAttribPointer(l,2,i.FLOAT,!1,0,0);const m=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,m),i.bufferData(i.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,1,1]),i.STATIC_DRAW),i.enableVertexAttribArray(u),i.vertexAttribPointer(u,2,i.FLOAT,!1,0,0),i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,r);const v=i.getUniformLocation(c,"u_sepia");i.uniform1f(v,e.sepia);const f=i.getUniformLocation(c,"u_saturation");i.uniform1f(f,e.saturate);const g=i.getUniformLocation(c,"u_brightness");i.uniform1f(g,e.brightness);const p=i.getUniformLocation(c,"u_contrast");i.uniform1f(p,e.contrast);const _=i.getUniformLocation(c,"u_hueRotation");i.uniform1f(_,e.hueRotate);const R=i.getUniformLocation(c,"u_blurRadius");i.uniform1f(R,1.8);const x=i.getUniformLocation(c,"u_resolution");i.uniform2f(x,i.canvas.width,i.canvas.height),i.drawArrays(i.TRIANGLE_STRIP,0,4),t.clearRect(0,0,t.canvas.width,t.canvas.height),t.drawImage(n,0,0),i.deleteProgram(c),i.deleteTexture(r),i.deleteShader(a),i.deleteShader(s),i.deleteBuffer(h),i.deleteBuffer(m),this.isStatic=!0}}const s=(t,e,o)=>{const n=document.createElement("div");n.style.display="flex";const i=document.createElement("input");i.type="range",i.min="".concat(e),i.max="".concat(o);const r=document.createElement("div");return r.textContent=t,r.style.color="#aaa",n.appendChild(i),n.appendChild(r),{div:n,slider:i,text:r}}}}]);
//# sourceMappingURL=9497.98ed2845.chunk.js.map