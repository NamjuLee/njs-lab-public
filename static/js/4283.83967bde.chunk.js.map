{"version":3,"file":"static/js/4283.83967bde.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-mapping/DynamicBins/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../../lib'\r\nimport { getCSVFromURL, Vector3, isInsideOfVecs } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n    pts: Vector3[] = [];\r\n\r\n    captureVec: Vector3\r\n\r\n    pixelMap: CustomDynamicBinSystem;\r\n\r\n    divText: HTMLDivElement;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.center(-71.08759760905814, 42.326218799267316);\r\n        this.zoom(12);\r\n\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#navigation\r\n        this.mView.navigation = {\r\n            gamepad: {\r\n                enabled: false\r\n            },\r\n            mouseWheelZoomEnabled: false\r\n        }\r\n        this.disablePan = true;\r\n\r\n        // append UI\r\n        const div = document.createElement('div');\r\n        div.style.position = 'absolute';\r\n        div.style.margin = '20px';\r\n        this.hostDiv.appendChild(div);\r\n\r\n        let slider = getSlider('Type', '0', '5');\r\n        slider.slider.defaultValue = '0';\r\n        // slider.div.style.position = 'absolute';\r\n        slider.div.style.marginTop = '25px';\r\n        slider.text.textContent = 'Type';\r\n        div.appendChild(slider.div);\r\n        slider.slider.oninput = () => {\r\n            this.pixelMap.mode = +slider.slider.value;\r\n            this.pixelMap.Init();\r\n            this.pixelMap.UpdateData(this.pts);\r\n        }\r\n\r\n        this.divText = document.createElement('div');\r\n        this.divText.style.color = '#0ff';\r\n        this.divText.style.marginTop = '22px';\r\n        this.divText.style.fontSize = '18px';\r\n        this.divText.textContent = 'Num of data:';\r\n        div.appendChild(this.divText);\r\n        // end append UI\r\n\r\n        // https://data.boston.gov/dataset/blue-bike-stations\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/Primary_Street_Trees_Public.csv').then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                const lon = +values[13];\r\n                const lat = +values[14];\r\n                if ((!isNaN(lon) && !isNaN(lat) && ((lon !== 0) && (lat !== 0)))) {\r\n                    const projected = this.toScreen(lon, lat);\r\n                    this.pts.push(new Vector3(projected[0], projected[1], 0));\r\n                }\r\n                if (i > 1000) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.pixelMap = new CustomDynamicBinSystem(\r\n                new Vector3(200, 200, 0),\r\n                new Vector3(900, 900, 0),\r\n            );\r\n            this.pixelMap.mode = 0;\r\n            this.pixelMap.Init();\r\n            this.pixelMap.UpdateData(this.pts);\r\n\r\n            this.start();\r\n        });\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        ctx.globalCompositeOperation = 'color-dodge';\r\n        this.pts.forEach((p) => {\r\n            renderPoint(ctx, p.x, p.y, this.time + 3, 'rgba(10, 255, 10, 0.2)');\r\n        });\r\n\r\n        this.pixelMap.RenderPixel(ctx);\r\n        this.pixelMap.RenderCorner(ctx);\r\n\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        this.pixelMap.RenderSelPixel(ctx);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        this.captureVec = this.pixelMap.IsHover(x, y);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n\r\n        if (this.pixelMap) {\r\n            this.pixelMap.MoveInspection(x, y);\r\n            if (this.pixelMap.selPixel) {\r\n                const d = this.pixelMap.selPixel.vec.z\r\n                const text = 'Num of data: ' + d + ', index:' + this.pixelMap.selPixel.i + ',' + this.pixelMap.selPixel.j;\r\n                this.divText.textContent = text;\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n\r\n        if (this.captureVec) {\r\n            this.pixelMap.DragControlPoint(x, y);\r\n            this.pixelMap.UpdateData(this.pts);\r\n        }\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captureVec = undefined;\r\n    }\r\n}\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 6) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n};\r\n\r\n\r\n\r\nexport class CustomDynamicBinSystem {\r\n    v0: Vector3;\r\n    v1: Vector3;\r\n    rx: number;\r\n    ry: number;\r\n    ddx: number;\r\n    ddy: number;\r\n    pts: Vector3[][] = [];\r\n    ptList: Vector3[] = [];\r\n    listPixels: Pixel[] = [];\r\n    m: Vector3;\r\n    t: number = 0.0;\r\n    mode: number = 0;\r\n    selPixel: Pixel | undefined = undefined;\r\n    constructor(v0: Vector3, v1: Vector3) {\r\n        this.v0 = v0;\r\n        this.v1 = v1;\r\n        this.rx = 10;\r\n        this.ry = 10;\r\n        this.ddx = 0.0;\r\n        this.ddy = 0.0;\r\n        this.m = new Vector3(0, 0);\r\n        this.Init();\r\n    }\r\n    public IsHover(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        return undefined;\r\n    }\r\n    public Move(x: number, y: number) {\r\n        this.MoveInspection(x, y);\r\n    }\r\n    public MoveInspection(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            // console.log('ddd');\r\n            if (isInsideOfVecs(this.m, this.listPixels[j].recVec)) {\r\n                this.selPixel = this.listPixels[j];\r\n                return;\r\n            } else {\r\n                this.selPixel = undefined;\r\n                // console.log('out');\r\n            }\r\n        }\r\n    }\r\n    public DragControlPoint(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        this.ddx = (this.v1.x - this.v0.x) / (this.rx - 1.0);\r\n        this.ddy = (this.v1.y - this.v0.y) / (this.ry - 1.0);\r\n        // console.log('ddx is ' + this.ddx + '. ddy is ' + this.ddx);\r\n        // console.log('Pixe Map was executed...');\r\n        this.pts = [];\r\n        this.ptList = [];\r\n        this.listPixels = [];\r\n\r\n        this.InitGrid();\r\n\r\n        switch (this.mode) {\r\n            case 0: this.ComputeRec(); break;\r\n            case 1: this.ComputeTriA(); break;\r\n            case 2: this.ComputeTriB(); break;\r\n            case 3: this.ComputeDia(); break;\r\n            case 4: this.ComputeLShape(); break;\r\n            default: this.ComputeHex(); break;\r\n        }\r\n\r\n    }\r\n    public UpdateData(vs: Vector3[]) {\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            this.listPixels[j].data['num'] = 0;\r\n        }\r\n        for (let i = 0; i < vs.length; ++i) {\r\n            const p = vs[i];\r\n            for (let j = 0; j < this.listPixels.length; ++j) {\r\n                if (isInsideOfVecs(p, this.listPixels[j].recVec)) {\r\n                    // console.log('ddd');\r\n                    this.listPixels[j].vec.z += 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public InitGrid() {\r\n        this.pts = [];\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            let y = this.v0.y + j * this.ddy;\r\n            let xArray: Vector3[] = [];\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let x = this.v0.x + i * this.ddx;\r\n                const v = new Vector3(x, y, 0);\r\n                xArray.push(v);\r\n                this.ptList.push(v);\r\n            }\r\n            this.pts.push(xArray);\r\n        }\r\n    }\r\n    public ComputeRec() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriA() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeDia() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 2 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeLShape() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 3) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (i < this.rx - 2 && j < this.ry - 2) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    p.recVec.push(this.pts[j + 3][i]);\r\n                    p.recVec.push(this.pts[j + 3][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriB() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeHex() {\r\n        this.listPixels = [];\r\n        let alter = true;\r\n        for (let j = 0; j < this.ry; j += 2) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (alter) {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this, i, j);\r\n                        p.recVec.push(this.pts[j][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 2]);\r\n                        p.recVec.push(this.pts[j + 3][i + 1]);\r\n                        p.recVec.push(this.pts[j + 2][i]);\r\n                        p.recVec.push(this.pts[j + 1][i]);\r\n                        // p.recVec.push(this.pts[j][i+1]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                } else {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this, i, j);\r\n                        p.recVec.push(this.pts[j][i + 2]);\r\n                        p.recVec.push(this.pts[j + 1][i + 3]);\r\n                        p.recVec.push(this.pts[j + 2][i + 3]);\r\n                        p.recVec.push(this.pts[j + 3][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 1]);\r\n                        // p.vecs.push(this.pts[j][i+2]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                }\r\n            }\r\n            alter = !alter;\r\n        }\r\n        // console.log('done for grid');\r\n        // this.InitGridNeighbor();\r\n    }\r\n    RenderPixel(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.listPixels.length; ++i) {\r\n            this.listPixels[i].Render(ctx);\r\n        }\r\n    }\r\n    RenderCorner(ctx: CanvasRenderingContext2D) {\r\n        let p = this.pts[0][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        this.t += 0.07;\r\n    }\r\n    public RenderSelPixel(ctx: CanvasRenderingContext2D) {\r\n        if (this.selPixel) {\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = '#ffffff';\r\n            // ctx.fillStyle = `rgba(255, 0, 255, ${this.data['num'] * 0.05} )`;\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.selPixel.recVec[0].x, this.selPixel.recVec[0].y);\r\n            for (let i = 1; i < this.selPixel.recVec.length; ++i) {\r\n                ctx.lineTo(this.selPixel.recVec[i].x, this.selPixel.recVec[i].y);\r\n            }\r\n            ctx.closePath();\r\n\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Pixel {\r\n    static ID = 0;\r\n\r\n    map: CustomDynamicBinSystem;\r\n    vec: Vector3;\r\n    norV: Vector3;\r\n    nPix: Pixel[] = [];\r\n    recVec: Vector3[];\r\n    i: number = -1;\r\n    j: number = -1;\r\n    k: number = -1;\r\n    u: number = -1;\r\n    v: number = -1;\r\n    id: number;\r\n    color: number[] = [];\r\n    data: {};\r\n\r\n    static GetID() { return Pixel.ID++; }\r\n\r\n    constructor(map: CustomDynamicBinSystem, i: number, j: number, v: Vector3 = new Vector3(0, 0, 0)) {\r\n        this.map = map;\r\n        this.vec = v;\r\n        this.nPix = [];\r\n        this.recVec = [];\r\n        this.i = i;\r\n        this.j = j;\r\n        this.k = -1;\r\n        this.id = Pixel.GetID();\r\n        this.data = {};\r\n    }\r\n    ToString() {\r\n        let temp = 'Pixel' + this.id;\r\n        // console.log(temp);\r\n        return temp;\r\n    }\r\n    Update() {\r\n        /* */\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(this.data['num'])\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\r\n        ctx.fillStyle = `rgba(0, 255, 255, ${this.vec.z * 0.05} )`;\r\n        // ctx.fillStyle = `rgba(${this.vec.z}, 0, 0, ${this.vec.z * 0.05} )`;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.recVec[0].x, this.recVec[0].y);\r\n        for (let i = 1; i < this.recVec.length; ++i) {\r\n            ctx.lineTo(this.recVec[i].x, this.recVec[i].y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nexport class CanvasDrawing {\r\n    public static LineByVecs(ctx: CanvasRenderingContext2D, v0: Vector3, v1: Vector3, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(v0.x, v0.y);\r\n        ctx.lineTo(v1.x, v1.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Line(ctx: CanvasRenderingContext2D, x0: number, y0: number, x1: number, y1: number, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x0, y0);\r\n        ctx.lineTo(x1, y1);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Point(ctx: CanvasRenderingContext2D, x: number, y: number, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public static PointByNVec(ctx: CanvasRenderingContext2D, v: Vector3, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(v.x, v.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public static PointByNVecAni(ctx: CanvasRenderingContext2D, v: Vector3, r: number = 5, t: number, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(v.x, v.y, r + (1 + Math.sin(t)) * 2, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    // .....................................................\r\n    public static GridLineOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n\r\n        ctx.lineWidth = 0.1;\r\n\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            // for (let x = 0; x <= xNum; ++x) {\r\n            //     ctx.beginPath();\r\n            //     ctx.arc(xStart + (xOff * x), yStart + (yOff * y), 1, 0, Math.PI * 2);\r\n            //     ctx.closePath();\r\n            //     ctx.fill();\r\n            // }\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart, yStart + (yOff * y));\r\n            ctx.lineTo((xNum * xOff) * 0.5, yStart + (yOff * y));\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart + (xOff * y), yStart);\r\n            ctx.lineTo(yStart + (yOff * y), (yNum * yOff) * 0.5);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    public static GridPointOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n        // console.log(xStart, yStart);\r\n        ctx.lineWidth = 0.1;\r\n\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            for (let x = 0; x <= xNum; ++x) {\r\n                ctx.beginPath();\r\n                ctx.arc(xStart + (xOff * x), yStart + (yOff * y), 1, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\nconst getSlider = (title: string, min: string = '0.0', max: string = '100') => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = min;\r\n    slider.max = max;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider, text\r\n    }\r\n};"],"names":["Solution","RendererJSAPI","constructor","view","super","pts","captureVec","pixelMap","divText","this","center","zoom","mView","navigation","gamepad","enabled","mouseWheelZoomEnabled","disablePan","div","document","createElement","style","position","margin","hostDiv","appendChild","slider","getSlider","defaultValue","marginTop","text","textContent","oninput","mode","value","Init","UpdateData","color","fontSize","getCSVFromURL","process","then","d","line","split","i","length","values","lon","lat","isNaN","projected","toScreen","push","Vector3","CustomDynamicBinSystem","start","render","ctx","globalCompositeOperation","forEach","p","renderPoint","x","y","time","RenderPixel","RenderCorner","RenderSelPixel","mouseDown","IsHover","mouseMove","MoveInspection","selPixel","vec","z","j","mouseDrag","DragControlPoint","mouseUp","undefined","t","fillStyle","beginPath","arc","Math","sin","PI","closePath","fill","v0","v1","rx","ry","ddx","ddy","ptList","listPixels","m","Move","isInsideOfVecs","recVec","InitGrid","ComputeRec","ComputeTriA","ComputeTriB","ComputeDia","ComputeLShape","ComputeHex","vs","data","xArray","v","Pixel","alter","Render","CanvasDrawing","PointByNVecAni","stroke","lineWidth","strokeStyle","moveTo","lineTo","static","ID","map","norV","nPix","k","u","id","GetID","ToString","Update","width","x0","y0","x1","y1","r","xNum","yNum","xOff","yOff","xStart","yStart","title","min","max","display","type"],"sourceRoot":""}