{"version":3,"file":"static/js/4051.7a808ac8.chunk.js","mappings":"oMAGA,MAuHA,EAvHoB,KAElB,MAqEMA,EAAU,WAIhB,MAAMC,EAAkB,CACtBC,GAAIF,EAEJG,KAAM,OACNC,OAAQ,CACN,YAAa,QACb,WAAY,QACZC,WAAsB,WAGxBC,MAAO,CACL,aAAc,UACd,aAAc,IAKZC,EAAsB,IACvBN,EACHC,GAAIF,EAAU,QACdG,KAAM,OACNK,OAAQR,EACRI,OAAQ,CACNC,WAAsB,WAExBC,MAAO,CACL,aAAc,OACd,eAAgB,KAIpB,OACE,UAAC,KAAM,CACLJ,GAAIF,EACJG,KAAK,UACLM,KA5Gc,CAChB,KAAQ,oBACR,SAAY,CACV,CACE,KAAQ,UACR,WAAc,CAAC,EACf,SAAY,CACV,YAAe,CACb,CACE,EACG,kBACD,oBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,oBAEF,EACG,kBACD,sBAIN,KAAQ,cA6ED,WAEX,SAAC,KAAK,IAAKR,KACX,SAAC,KAAK,IAAKM,MACJ,E,SChGb,MA8FA,EA9FY,KACR,MAAMG,GAASC,EAAAA,EAAAA,WAGRC,EAAWC,KAFAF,EAAAA,EAAAA,WAEgBG,EAAAA,EAAAA,UAAS,OAGrCC,GAAUC,EAAAA,EAAAA,cAAYC,IACxB,MAAMC,EAASD,EAAME,UAAYF,EAAME,SAAS,GAChDC,QAAQC,IAAIJ,EAAME,UAElBC,QAAQC,IAAIJ,EAAMK,OAAOC,sBAAsBN,EAAMO,QAErDX,EAAa,CACTY,UAAWR,EAAMS,OAAOC,IACxBC,SAAUX,EAAMS,OAAOG,IACvBC,WAAYZ,GAAUA,EAAOa,WAAWC,QAC1C,GAEH,IAEGC,GAAUjB,EAAAA,EAAAA,cAAYC,IACxB,MAAME,EAAWF,EAAMK,OAAOC,sBAAsBN,EAAMO,OAE1DJ,QAAQC,IAAIF,EAAS,GAatB,IAGGe,EACQ,QADRA,GAEU,UAGTC,EAAeC,IAAoBtB,EAAAA,EAAAA,UAAS,MAEnD,OACI,SAAC,EAAAuB,SAAQ,WACL,UAAC,KACD,CACIC,OAAQC,IACRC,IAAK9B,EACL+B,iBAAkB,CACdhB,WAAY,IACZG,SAAU,GACVc,KAAM,KAKVC,MAAO,CACHC,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,KAAM,GAEVC,SAAS,kCACTC,kBAAmBC,6FACnBC,YAAY,EAEZC,YAAa1C,EACbkB,QAASA,EAAQ,WAGjB,UAAC,KAAM,CACHL,SAAUM,EACVT,UAAWS,EACXwB,OAAQ,SAAS,WAEjB,gBAAKC,IAAKJ,8BAAyCK,IAAK,MAAOhB,MAAO,GAAIC,OAAQ,MAClF,yBAAK,uBAGT,SAAC,EAAW,QAET,EC5GZ,MAAMgB,EAEXC,YAAYC,GAA0B,KADtCA,aAAO,EAEL,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIrB,MAAME,OAAS,OACnBkB,EAAQI,YAAYH,GACpBI,KAAKL,QAAUA,EAEFM,EAAAA,WAAoBL,GAE5BM,OAGHC,EAAAA,cAAoBC,EAAK,CAAC,GAG9B,CACAC,UACE,KAAOL,KAAKL,QAAQW,kBAClBN,KAAKL,QAAQY,YAAYP,KAAKL,QAAQW,iBAE1C,E","sources":["njslab/LabStarter/Starter-ReactMapGL/Layer/LayerCustom.tsx","njslab/LabStarter/Starter-ReactMapGL/App.tsx","njslab/LabStarter/Starter-ReactMapGL/index.tsx"],"sourcesContent":["\nimport { Layer, Source } from \"react-map-gl\";\n\nconst LayerCustom = () => {\n\n  const data: any = {\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n      {\n        \"type\": \"Feature\",\n        \"properties\": {},\n        \"geometry\": {\n          \"coordinates\": [\n            [\n              [\n                -91.44397295553597,\n                37.421743437936485\n              ],\n              [\n                -91.44397295553597,\n                32.49285288096823\n              ],\n              [\n                -83.28687772065805,\n                32.49285288096823\n              ],\n              [\n                -83.28687772065805,\n                37.421743437936485\n              ],\n              [\n                -91.44397295553597,\n                37.421743437936485\n              ]\n            ]\n          ],\n          \"type\": \"Polygon\"\n        }\n      }\n    ]\n  }\n\n  // const data: any = {\n  //   type: 'FeatureCollection',\n  //   features: [\n  //     {\n  //       type: 'Feature',\n  //       properties: {},\n  //       geometry: {\n  //         type: 'Polygon',\n  //         coordinates: [\n  //           [\n  //             [-122.4194, 37.7749],\n  //             [-122.4194, 37.8049],\n  //             [-122.3894, 37.8049],\n  //             [-122.3894, 37.7749],\n  //             [-122.4194, 37.7749],\n  //           ],\n  //         ],\n  //       },\n  //     },\n  //   ],\n  // };\n\n\n  const ayerStyle3: any = {\n    id: 'custom-layer',\n    type: 'fill',\n    paint: {\n      'fill-color': '#3366cc',\n      'fill-opacity': 0.5,\n    },\n  };\n\n  const layerID = 'my-layer';\n\n  let visible = true;\n\n  const layerStyle: any = {\n    id: layerID,\n    // source: layerID,\n    type: 'line',\n    layout: {\n      'line-join': 'round',\n      'line-cap': 'round',\n      visibility: visible ? 'visible' : 'none'\n    },\n    // 'source-layer': 'landuse',\n    paint: {\n      'line-color': '#4E3FC8',\n      'line-width': 4,\n    },\n    // filter: ['==', 'class', 'park'],\n  }\n\n  const layerStyleFill: any = {\n    ...layerStyle,\n    id: layerID + '-fill',\n    type: 'fill',\n    source: layerID,\n    layout: {\n      visibility: visible ? 'visible' : 'none'\n    },\n    paint: {\n      'fill-color': '#f00',\n      'fill-opacity': 0.1,\n    },\n  };\n\n  return (\n    <Source\n      id={layerID}\n      type='geojson'\n      data={data}\n    >\n      <Layer {...layerStyle} />\n      <Layer {...layerStyleFill} />\n    </Source>\n\n  );\n\n}\nexport default LayerCustom;","import mapboxgl from 'mapbox-gl';\nimport Map, { Marker } from 'react-map-gl';\nimport { Suspense, useCallback, useState, useRef } from 'react';\nimport { Button } from 'antd'\n\nimport LayerCustom from './Layer/LayerCustom';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport styles from './style.module.css';\n\n// mapbox style\n// mapbox://styles/mapbox/standard\n// mapbox://styles/mapbox/streets-v11\n// mapbox://styles/mapbox/outdoors-v11\n// mapbox://styles/mapbox/light-v10\n// mapbox://styles/mapbox/dark-v10\n// mapbox://styles/mapbox/satellite-v9\n// mapbox://styles/mapbox/satellite-streets-v11\n// mapbox://styles/mapbox/navigation-day-v1\n// mapbox://styles/mapbox/navigation-night-v1\n\nconst App = () => {\n    const mapRef = useRef();\n    const canvasRef = useRef();\n\n    const [hoverInfo, setHoverInfo] = useState(null);\n\n\n    const onHover = useCallback(event => {\n        const county = event.features && event.features[0];\n        console.log(event.features)\n\n        console.log(event.target.queryRenderedFeatures(event.point))\n\n        setHoverInfo({\n            longitude: event.lngLat.lng,\n            latitude: event.lngLat.lat,\n            countyName: county && county.properties.COUNTY\n        });\n\n    }, []);\n\n    const onClick = useCallback(event => {\n        const features = event.target.queryRenderedFeatures(event.point);\n        // Now 'features' contains information about the clicked features\n        console.log(features);\n        //   };\n\n        //     if (event?.features?.length > 0) {\n        //         // Iterates through clicked features (in order of top-down) until it successfully\n        //         // triggers a callback that returns true.\n        //         event.features.some((clickedFeature) =>\n        //             Object.entries(mapClickHandlers).some(([label, handler]) =>\n        //                 clickedFeature?.layer?.id.includes(label) && handler(clickedFeature, event)\n        //             )\n        //         )\n        //     }\n        // }, [mapClickHandlers, drawMode])\n    }, [])\n\n\n    const marker = {\n        latitude: 37.7577,\n        longitude: -122.4376,\n    };\n\n    const [capturedImage, setCapturedImage] = useState(null);\n\n    return (\n        <Suspense>\n            <Map\n            // @ts-ignore\n                mapLib={mapboxgl}\n                ref={mapRef}\n                initialViewState={{\n                    longitude: -100,\n                    latitude: 40,\n                    zoom: 3.5\n                    // latitude: 37.7577,\n                    // longitude: -122.4376,\n                    // zoom: 8,\n                }}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    position: 'relative',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    zIndex: 0,\n                    flex: 1,\n                }}\n                mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n                mapboxAccessToken={process.env.REACT_APP_MAPBOX}\n                dragRotate={false}\n\n                onMouseMove={onHover}\n                onClick={onClick}\n\n            >\n                <Marker\n                    latitude={marker.latitude}\n                    longitude={marker.longitude}\n                    anchor={'bottom'}\n                >\n                    <img src={process.env.PUBLIC_URL + '/logo180.png'} alt={'img'} width={24} height={24} />\n                    <div>Marker Content</div>\n                </Marker>\n\n                <LayerCustom />\n            </Map>\n        </Suspense>\n    )\n}\nexport default App;","import ReactDOM from 'react-dom/client';\r\nimport App from './App'\r\nimport React from 'react';\r\n\r\nexport class Solution {\r\n  divHost;\r\n  constructor(divHost: HTMLDivElement) {\r\n    const div = document.createElement('div');\r\n    div.style.height = '100%';\r\n    divHost.appendChild(div);\r\n    this.divHost = divHost;\r\n\r\n    const root = ReactDOM.createRoot(div);\r\n\r\n    root.render(\r\n      // <React.StrictMode>\r\n      // <HelleApp /> syntax sugar\r\n      React.createElement(App, {})\r\n      // </React.StrictMode>\r\n    );\r\n  }\r\n  destroy() {\r\n    while (this.divHost.lastElementChild) {\r\n      this.divHost.removeChild(this.divHost.lastElementChild);\r\n    }\r\n  }\r\n}"],"names":["layerID","layerStyle","id","type","layout","visibility","paint","layerStyleFill","source","data","mapRef","useRef","hoverInfo","setHoverInfo","useState","onHover","useCallback","event","county","features","console","log","target","queryRenderedFeatures","point","longitude","lngLat","lng","latitude","lat","countyName","properties","COUNTY","onClick","marker","capturedImage","setCapturedImage","Suspense","mapLib","mapboxgl","ref","initialViewState","zoom","style","width","height","position","top","left","right","bottom","zIndex","flex","mapStyle","mapboxAccessToken","process","dragRotate","onMouseMove","anchor","src","alt","Solution","constructor","divHost","div","document","createElement","appendChild","this","ReactDOM","render","React","App","destroy","lastElementChild","removeChild"],"sourceRoot":""}