{"version":3,"file":"static/js/6076.65fbce49.chunk.js","mappings":"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","sources":["njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/Base/GeometryBase.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/ColorUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/VectorUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/DrawingPreest.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/constant.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/Renderer/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/Transform/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Common/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/ActiveCommander/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/MapboxGLWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/DeckGL/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/UI/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Scene/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/index.ts"],"sourcesContent":["import { Scene } from '../../../../Scene';\nexport class GeometryBase {\n    public scene: Scene;\n    public isHovered: boolean = false;\n    public type: string;\n    public hasAnimation: boolean = false;\n    constructor(scene: Scene) {\n        this.scene = scene;\n\n        this.scene.area = this;\n    }\n    public isInside(x: number, y: number) {\n        return false;\n    }\n    public translate(x: number, y: number) {\n        \n    }\n    public update() {\n\n    }\n    public onMouseUp() {\n        \n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        this.update();\n        this.renderPost(ctx);\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n\n    }\n}","export const hex2RGB = (hex: string, isGray: boolean = false) => {\n    hex = hex.replace('#', '');\n    let r = parseInt(hex.substring(0, 2), 16);\n    let g = parseInt(hex.substring(2, 4), 16);\n    let b = parseInt(hex.substring(4, 6), 16);\n    if (isGray) {\n        let v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n        return [v, v, v];\n    } else {\n        return [r, g, b];\n    }\n}","export const distance = (v0: RVector3, v1: RVector3): number => {\n    return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n};\nexport const isInsideOfVecs = (v: RVector3, vecs: RVector3[]): boolean => {\n    // ray-casting algorithm based on https://github.com/substack/point-in-polygon\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n    let x = v.x, y = v.y;\n    let inside = false;\n    for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\n        let xi = vecs[i].x, yi = vecs[i].y;\n        let xj = vecs[j].x, yj = vecs[j].y;\n        let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n    return inside;\n};\nexport const isInsideEllipse = (cv: RVector3, m: RVector3, r0: number, r1: number, threshold: number = 5) => {\n    const x = Math.pow((m.x - cv.x), 2) / Math.pow(threshold + r0, 2);\n    const y = Math.pow((m.y - cv.y), 2) / Math.pow(threshold + r1, 2);\n    if (x + y <= 1) {\n        return true;\n    }\n    return false;\n};\nexport class RVector3 {\n    x: number = 0.0;\n    y: number = 0.0;\n    z: number = 0.0;\n    lng: number = 0.0;\n    lat: number = 0.0;\n    ele: number = 0.0;\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}","export const drawingPoint = (ctx: CanvasRenderingContext2D, x: number, y: number) => {\n    ctx.beginPath();\n    ctx.arc(x, y, 10, 0, Math.PI * 2.0);\n    ctx.closePath();\n    ctx.fill();\n};","export const LANDUSE_TYPE_MAPPING = {\n    R: { text: 'Residential', color: '#ffff6e' },\n    B: { text: 'Business', color: '#f59700' },\n    X: { text: 'Residential & Business', color: '#FFC25F' },\n    A: { text: 'Agriculture', color: '#9EFF99' },\n    LIBRARY: { text: 'Library', color: '#04E762' },\n    SCHOOL: { text: 'School', color: '#95E06C' },\n    GOVERNMENT: { text: 'Government', color: '#D741A7' },\n    HEALTH: { text: 'Health', color: '#008BF8' },\n    COMMUNITY: { text: 'Community', color: '#00CECB' },\n    RELIGION: { text: 'Religion', color: '#9BFFFD' },\n    C: { text: 'Other CAI', color: '#D544CC' },\n    O: { text: 'Other BSLs', color: 'gray' }\n}\nexport const FUNDING_STATUS_MAPPING = {\n    None: {\n      text: 'Not assigned',\n      color: 'gray'\n    },\n    default: {\n      text: 'Default',\n      color: '#5287E6'\n    },\n    pending: {\n      text: 'Pending',\n      color: '#746CDD'\n    },\n    assigned: {\n      text: 'Assigned',\n      color: '#A355D4'\n    }\n  }","import * as turf from '@turf/turf';\nimport { Area } from '..';\n\nimport { LANDUSE_TYPE_MAPPING } from '../../../../../lib';\n\nexport class Renderer {\n    public host: Area;\n    constructor(host: Area) {\n        this.host = host;\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.renderAreaBounding(ctx);\n        this.renderCroppedArea(ctx);\n        this.renderProperties(ctx);\n\n        if (this.host.isHovered) {\n            this.renderControlPoint(ctx);\n        }\n\n    }\n    private renderCroppedArea(ctx: CanvasRenderingContext2D) {\n        const diff = difference(this.host.polygonTurfOriginal, this.host.scene.polygonsDifference, this.host.scene.ids);\n        this.host.polygonTurfSubtracted = diff;\n        let x, y;\n        for (let i = 0; i < diff['geometry']['coordinates'][0].length; ++i) {\n            const p = diff['geometry']['coordinates'][0][i];\n            if (i === 0) {\n                ctx.beginPath();\n                const sp = this.host.scene.common.toScreen(p[0], p[1])\n                ctx.moveTo(sp[0], sp[1]);\n            } else {\n                const sp = this.host.scene.common.toScreen(p[0], p[1])\n                ctx.lineTo(sp[0], sp[1]);\n                // console.log(sp)\n            }\n        }\n        ctx.setLineDash([5, 7]);\n        ctx.lineDashOffset = this.host.t;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#fff';\n        const op = 0.2 + Math.sin(this.host.t * 0.1) * 0.09;\n        // console.log(op)\n        ctx.fillStyle = `rgba(0, 255, 255, ${op} )`;\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.setLineDash([]);\n    }\n    private renderControlPoint(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'rgba(200, 200, 200, 1.0)';\n        ctx.strokeStyle = 'rgba(50, 50, 50, 1.0)';\n        ctx.lineWidth = 3;\n        this.host.pts.forEach(v => {\n            ctx.beginPath();\n            ctx.arc(v.x, v.y, 8, 0, Math.PI * 2.0);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n        });\n    }\n    private renderAreaBounding(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        if (this.host.type === 'circle') {\n            ctx.ellipse(this.host.cv.x, this.host.cv.y, this.host.width * 0.5, this.host.height * 0.5, 0.0, 0.0, Math.PI * 2.0);\n        } else if (this.host.type === 'rect') {\n            ctx.rect(this.host.pts[3].x, this.host.pts[3].y, this.host.width, this.host.height);\n        }\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.9)';\n        ctx.stroke();\n    }\n    private renderProperties(ctx: CanvasRenderingContext2D) {\n        const area = turf.convertArea(turf.area(this.host.polygonTurfSubtracted), 'meters', 'miles')\n        ctx.textAlign = 'center';\n        ctx.font = '18px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`Area in square miles: ${area.toFixed(5)}`, this.host.cv.x, this.host.cv.y - 60 - this.host.height * 0.5);\n        // console.log(this.host.cp.x, 50 - this.host.cp.y - this.host.height * 0.5);\n\n        const pts = turf.pointsWithinPolygon(this.host.scene.points, this.host.polygonTurfSubtracted)\n        // console.log(pts);\n        let r = 0, b = 0, other = 0;\n        for(let i = 0; i < pts.features.length; ++i) {\n            if (pts.features[i].properties['landuse'] === 'R') {\n                r += 1;\n            } else if (pts.features[i].properties['landuse'] === 'B') {\n                b += 1;\n            } else {\n                other += 1;\n            }\n        }\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.R.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.R.text}: ${r},`, this.host.cv.x - 120, this.host.cv.y - 25 - this.host.height * 0.5);\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.B.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.B.text}: ${b},`, this.host.cv.x + 28, this.host.cv.y - 25 - this.host.height * 0.5);\n\n        ctx.fillStyle = 'rgb(0, 128, 0)'; \n        ctx.fillText(`Other: ${other}`, this.host.cv.x + 140, this.host.cv.y - 25 - this.host.height * 0.5);\n        // console.log(r, b, other)\n    }\n}\n\nconst difference = (area, polygons, boolean) => {\n    for (let i = 0; i < polygons.length; ++i) {\n        if (boolean[i]) {\n            area = turf.difference(area, polygons[i]);\n        }\n    }\n    return area;\n};","import { Area } from '..';\n\nexport class Transform {\n    public host: Area;\n    constructor(host: Area) {\n        this.host = host;\n    }\n    public translate(x: number, y: number): void {\n        const preX = this.host.scene.solution.activeCommander.mp[0] - this.host.scene.solution.activeCommander.mpPre[0];\n        const preY = this.host.scene.solution.activeCommander.mp[1] - this.host.scene.solution.activeCommander.mpPre[1];\n\n        if (this.host.capturedVecId > -1) {\n            this.host.pts[this.host.capturedVecId].x += preX;\n            this.host.pts[this.host.capturedVecId].y += preY;\n            // console.log(this.host.capturedVecId)\n            if (this.host.capturedVecId === 0) {\n                this.host.pts[3].x = this.host.pts[0].x;\n                this.host.pts[1].y = this.host.pts[0].y;\n\n            } else if (this.host.capturedVecId === 1) {\n                this.host.pts[2].x = this.host.pts[1].x;\n                this.host.pts[0].y = this.host.pts[1].y;\n\n            } else if (this.host.capturedVecId === 2) {\n                this.host.pts[1].x = this.host.pts[2].x;\n                this.host.pts[3].y = this.host.pts[2].y;\n\n            } else if (this.host.capturedVecId === 3) {\n                this.host.pts[0].x = this.host.pts[3].x;\n                this.host.pts[2].y = this.host.pts[3].y;\n            }\n\n            this.updateCenterVec();\n            this.updateProjection();\n            return;\n        }\n\n        this.host.cv.x += preX;\n        this.host.cv.y += preY;\n        for (let i = 0; i < this.host.pts.length; ++i) {\n            this.host.pts[i].x += preX;\n            this.host.pts[i].y += preY;\n        }\n        this.updateProjection();\n    }\n    public updateCenterVec() {\n        let xSum = 0;\n        let ySum = 0;\n        for (let i = 0; i < this.host.pts.length; ++i) {\n            xSum += this.host.pts[i].x;\n            ySum += this.host.pts[i].y;\n        }\n        this.host.cv.x = xSum / this.host.pts.length;\n        this.host.cv.y = ySum / this.host.pts.length;\n    }\n    public updateProjection() {\n        const mp = this.host.scene.common.toMap(this.host.cv.x, this.host.cv.y);\n        this.host.cv.lng = mp[0];\n        this.host.cv.lat = mp[1];\n        for (let i = 0; i < this.host.pts.length; ++i) {\n            let mp = this.host.scene.common.toMap(this.host.pts[i].x, this.host.pts[i].y);\n            this.host.pts[i].lng = mp[0];\n            this.host.pts[i].lat = mp[1];\n        }\n\n        this.host.updatePolygonTurf()\n    }\n}","\nimport { Scene } from '../../../../Scene';\nimport { GeometryBase } from '../Base/GeometryBase';\nimport { RVector3, distance, isInsideOfVecs, isInsideEllipse, } from '../../../../lib';\n\nimport { Renderer } from './Renderer';\nimport { Transform } from './Transform';\n\nimport * as turf from '@turf/turf';\n\nexport class Area extends GeometryBase {\n    public renderer: Renderer;\n    public transform: Transform;\n    public cv: RVector3;\n    public pts: RVector3[] = [];\n    public width = 200;\n    public height = 200;\n    public capturedVecId: number = -1;\n    public polygonTurfOriginal: any;\n    public polygonTurfSubtracted: any;\n    public t = 0.1;\n    constructor(scene: Scene) {\n        super(scene);\n        this.renderer = new Renderer(this);\n        this.transform = new Transform(this);\n\n        this.type = 'rect';\n\n        this.cv = new RVector3(scene.solution.rendererWrapper.renderer.canvas.width * 0.5, scene.solution.rendererWrapper.renderer.canvas.height * 0.5)\n\n        const widthHalf = this.width * 0.5;\n        const heightHalf = this.height * 0.5;\n\n        this.pts.push(new RVector3(this.cv.x - widthHalf, this.cv.y + heightHalf));\n        this.pts.push(new RVector3(this.cv.x + widthHalf, this.cv.y + heightHalf));\n        this.pts.push(new RVector3(this.cv.x + widthHalf, this.cv.y - heightHalf));\n        this.pts.push(new RVector3(this.cv.x - widthHalf, this.cv.y - heightHalf));\n\n        this.transform.updateProjection();\n\n        // const diff = difference(this.getArray(), this.scene.polygonsDifference[0]);\n        // console.log(diff);\n    }\n\n    public isInside(x: number, y: number) {\n        const mVec = new RVector3(x, y);\n        this.capturedVecId = -1;\n\n        for (let i = 0; i < this.pts.length; ++i) {\n            if (distance(this.pts[i],(mVec)) < 12) {\n                this.capturedVecId = i;\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        if (this.type === 'circle') {\n            if (isInsideEllipse(this.cv, mVec, this.width * 0.5, this.height * 0.5)) {\n                this.isHovered = true;\n                return true;\n            }\n        } else {\n            if (isInsideOfVecs(mVec, this.pts)) {\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        this.isHovered = false;\n        return false;\n    }\n    public translate(x: number, y: number): void {\n        const preX = this.scene.solution.activeCommander.mp[0] - this.scene.solution.activeCommander.mpPre[0];\n        const preY = this.scene.solution.activeCommander.mp[1] - this.scene.solution.activeCommander.mpPre[1];\n\n        if (this.capturedVecId > -1) {\n            this.pts[this.capturedVecId].x += preX;\n            this.pts[this.capturedVecId].y += preY;\n            // console.log(this.capturedVecId)\n            if (this.capturedVecId === 0) {\n                this.pts[3].x = this.pts[0].x;\n                this.pts[1].y = this.pts[0].y;\n\n            } else if (this.capturedVecId === 1) {\n                this.pts[2].x = this.pts[1].x;\n                this.pts[0].y = this.pts[1].y;\n\n            } else if (this.capturedVecId === 2) {\n                this.pts[1].x = this.pts[2].x;\n                this.pts[3].y = this.pts[2].y;\n\n            } else if (this.capturedVecId === 3) {\n                this.pts[0].x = this.pts[3].x;\n                this.pts[2].y = this.pts[3].y;\n            }\n\n            this.transform.updateCenterVec();\n            this.transform.updateProjection();\n            return;\n        }\n\n\n        this.cv.x += preX;\n        this.cv.y += preY;\n        for (let i = 0; i < this.pts.length; ++i) {\n            this.pts[i].x += preX;\n            this.pts[i].y += preY;\n        }\n        this.transform.updateProjection();\n    }\n\n    public update() {\n        if (this.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n            let sp = this.scene.common.toScreen(this.cv.lng, this.cv.lat);\n            this.cv.x = sp[0];\n            this.cv.y = sp[1];\n\n            for (let i = 0; i < this.pts.length; ++i) {\n                sp = this.scene.common.toScreen(this.pts[i].lng, this.pts[i].lat);\n                this.pts[i].x = sp[0];\n                this.pts[i].y = sp[1];\n            }\n        }\n        // console.log('not moving');\n    }\n    public onMouseUp() {\n        this.capturedVecId = -1;\n        this.transform.updateProjection();\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.width = Math.abs(this.pts[0].x - this.pts[2].x);\n        this.height = Math.abs(this.pts[0].y - this.pts[2].y);\n\n        this.renderer.renderPost(ctx);\n        \n        if (this.hasAnimation) {\n            this.t += 0.2;\n        }\n    }\n    public updatePolygonTurf() {\n        const pts = [];\n        for (let i = 0; i < this.pts.length; i++) {\n            pts.push([this.pts[i].lng, this.pts[i].lat]);\n        }\n        pts.push([this.pts[0].lng, this.pts[0].lat]);\n        this.polygonTurfOriginal = turf.polygon([pts]);\n    }\n}\n","import { getJSONFromURL } from 'njscore';\n\nimport { Area } from '../RendererWrapper/CanvasCustom/Geometry';\n\nimport { Solution } from '../';\n\nexport class ACCommon {\n    public solution: Solution;\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n    public downloadScreen() {\n        this.solution.rendererWrapper.downloadScreen();\n    }\n    public enablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.enable();\n    }\n    public disablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.disable();\n    }\n    public zoom = (z: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.zoom(z)\n    }\n    public flyTo = (lng: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.flyTo(lng, lat)\n    }\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.center(lng, lat);\n    }\n    public toMap = (x: number, y: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toMap(x, y);\n    }\n    public toScreen = (lon: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toScreen(lon, lat);\n    }\n    public async loadDataLocal(path = 'funded_census_blocks.geojson') {\n        return getJSONFromURL(process.env.PUBLIC_URL + '/static/dataDummyReady/' + path);\n    }\n\n    public addScatterLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addScatterLayer(data);\n    }\n    public addArcLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addArcLayer(data);\n    }\n    public addPolygonLayer(data: any, onClick: (info, event) => void) {\n        return this.solution.rendererWrapper.deckGL.addPolygonLayer(data, onClick);\n    }\n    public addShape() {\n        new Area(this.solution.scene);\n    }\n    public shiftShapeType() {\n        if (this.solution.scene.area) {\n            if(this.solution.scene.area.type === 'circle') {\n                this.solution.scene.area.type = 'rect';\n            } else if(this.solution.scene.area.type === 'rect') {\n                this.solution.scene.area.type = 'circle';\n            } \n        }\n    }\n    public toggleAnimation() {\n        this.solution.scene.area.hasAnimation = !this.solution.scene.area.hasAnimation;\n    }\n    public checkHoverArea(x: number, y: number) {\n        return this.solution.scene.area?.isInside(x, y);\n    }\n    public pickObject(obj: any) {\n        console.log('index', obj.index);\n        console.log(obj);\n    }\n}","import { Solution } from '../'\n\nexport class ActiveCommander {\n    public solution: Solution;\n    public mp = [0, 0, 0, 0];\n    public mpPre = [0, 0, 0, 0];\n\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n    private updateMousePos(e) {\n        this.mp[0] = e.point.x;\n        this.mp[1] = e.point.y;\n        this.mp[2] = e.lngLat.lng;\n        this.mp[3] = e.lngLat.lat;\n    }\n    public updateMousePrePos() {\n        this.mpPre[0] = this.mp[0];\n        this.mpPre[1] = this.mp[1];\n        this.mpPre[2] = this.mp[2];\n        this.mpPre[3] = this.mp[3];\n    }\n    public mouseDown = (e) => {\n        this.updateMousePos(e);\n        if (this.solution.common.checkHoverArea(this.mp[0], this.mp[1])) {\n            this.solution.common.disablePan();\n            this.solution.scene.captured = this.solution.scene.area;\n\n        }\n        // TODO\n    }\n    public mouseUp = (e) => {\n        this.updateMousePos(e);\n        this.solution.common.enablePan();\n        this.solution.scene.captured = undefined;\n\n        this.solution.scene.area?.onMouseUp();\n        // TODO\n    }\n    public mouseDrag = (e) => {\n        this.updateMousePos(e);\n        if (this.solution.scene.captured) {\n            this.solution.scene.captured.translate(e.point.x ,e.point.y);\n        }\n        // TODO\n        this.updateMousePrePos();\n    }\n    public mouseClick = (e) => {\n        this.updateMousePos(e);\n        // TODO\n        // console.log(e);\n        // console.log(e['lngLat']);\n        this.solution.rendererWrapper.renderer.pts.push([e['lngLat']['lng'], e['lngLat']['lat']])\n        // this.renderer.pts.push([e.point.x, e.point.y])\n    }\n    public mouseMove = (e) => {\n        this.updateMousePos(e);\n        this.solution.common.checkHoverArea(this.mp[0], this.mp[1]);\n\n        // console.log(e)\n\n        // TODO\n        this.updateMousePrePos();\n    }\n    public keyDown(k: KeyboardEvent) {\n        // TODO\n        // console.log(k);\n        if (k.key.toLocaleLowerCase() === 'c') {\n            if (this.solution.scene.captured) {\n                this.solution.scene.captured.type = 'circle'\n            }\n\n        }\n        if (k.key.toLowerCase() === 'r') {\n            if (this.solution.scene.captured) {\n                this.solution.scene.captured.type = 'rect'\n            }\n\n        }\n    }\n}","import mapboxgl from \"mapbox-gl\";\r\nimport { RendererWrapper } from '../';\r\n\r\nimport { downloadImage } from '../../lib';\r\n\r\nexport class MapboxGLWrapper {\r\n    public rendererWrapper: RendererWrapper;\r\n    public map: mapboxgl.Map;\r\n    public canvasMapbox;\r\n    private isPressed: boolean = false;\r\n    constructor(rendererWrapper: RendererWrapper) {\r\n        this.rendererWrapper = rendererWrapper;\r\n\r\n        this.initMap(rendererWrapper.solution.divHost.id);\r\n    }\r\n    private initMap(id: string) {\r\n        // https://account.mapbox.com\r\n        mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        this.map = new mapboxgl.Map({\r\n            preserveDrawingBuffer: true,\r\n            container: id,\r\n            zoom: 3,\r\n            // pitch: 30,\r\n            // minZoom: 10,\r\n            // center: [-74.5, 40],\r\n            center: [-77.430815, 37.801833],\r\n            style: 'mapbox://styles/mapbox/dark-v10' // 'mapbox://styles/mapbox/streets-v11'\r\n            \r\n        });\r\n        this.map.dragRotate.disable();\r\n\r\n        this.map.on('click', 'polygon', (e: any) => { this.rendererWrapper.solution.common.pickObject(e) });\r\n\r\n        // https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent#type\r\n        this.map.on('mousemove', (e: mapboxgl.MapMouseEvent) => { \r\n            if (this.isPressed) {\r\n                this.mouseDrag(e);\r\n            } else {\r\n                this.mouseMove(e); \r\n            }\r\n        });\r\n        this.map.on('click', (e: mapboxgl.MapMouseEvent) => { this.mouseClick(e); });\r\n        this.map.on('mousedown', (e: mapboxgl.MapMouseEvent) => { this.isPressed = true; this.mouseDown(e); });\r\n        this.map.on('dblclick', (e: mapboxgl.MapMouseEvent) => { this.mouseDClick(e); });\r\n        this.map.on('mouseup', (e: mapboxgl.MapMouseEvent) => { this.isPressed = false; this.mouseUp(e); });\r\n        window.addEventListener('keydown', (k) => { this.keyDown(k) });\r\n\r\n        let div = document.getElementsByClassName('mapboxgl-canvas')[0] as HTMLDivElement;\r\n        div.style.position = 'absolute';\r\n        \r\n        div = document.getElementsByClassName('mapboxgl-control-container')[0] as HTMLDivElement;\r\n        div.style.display = 'none';\r\n\r\n        this.map.on('load', () => { this.initPost(); });\r\n    }\r\n    public initPost(){\r\n        this.rendererWrapper.initPost();\r\n        this.canvasMapbox = this.map.getCanvas();\r\n    }\r\n    public initCustomCanvas(){\r\n        this.rendererWrapper.renderer.canvas.width = this.canvasMapbox.width ;\r\n        this.rendererWrapper.renderer.canvas.height = this.canvasMapbox.height ;\r\n\r\n        this.rendererWrapper.renderer.canvas.style.display = 'none';\r\n\r\n       const bound: any = this.map.getBounds();\r\n        // console.log(bound);\r\n\r\n       this.map.addSource('canvas-source', {\r\n            type: 'canvas',\r\n            canvas: this.rendererWrapper.renderer.canvas,\r\n            coordinates: [\r\n\r\n                // [ 180, 90],\r\n                // [ 180, -90],\r\n                // [ -180, -90], \r\n                // [ -180, 90]\r\n\r\n                \r\n                // [bound._sw[0], bound._sw[1]],\r\n                // [bound._sw[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._sw[1]],\r\n\r\n               [ -125.618336, 48.944262], \r\n               [ -125.618336, 24.786775], \r\n               [ -65.591812, 24.786775],\r\n               [ -65.591812, 48.944262]\r\n\r\n                // [91.4461, 21.5006],\r\n                // [100.3541, 21.5006],\r\n                // [100.3541, 13.9706],\r\n                // [91.4461, 13.9706]\r\n            ],\r\n            // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\r\n            animate: true\r\n            });\r\n             \r\n        this.map.addLayer({\r\n            id: 'canvas-layer',\r\n            type: 'raster',\r\n            source: 'canvas-source'\r\n            });\r\n\r\n    }\r\n    public zoom = (z: number) => {\r\n        // this.map.setZoom(z);\r\n        // return this.map.zoomTo(z, {animate:true} )\r\n        return this.map.zoomTo(z)\r\n    }\r\n    public flyTo = (lng: number, lat: number) => {\r\n        return this.map.flyTo({\r\n            center: [lng, lat],\r\n            // duration: 1200, // Animate over 12 seconds\r\n            // essential: true\r\n        });\r\n    }\r\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\r\n        // const v = new mapboxgl.LngLat(lng, lat);\r\n        // console.log(v);\r\n        return this.map.setCenter({ lat, lng })\r\n    }\r\n    public toMap = (x: number, y: number) => {\r\n        const p = this.map.unproject({x, y} as any)\r\n        return [p.lng, p.lat];\r\n    }\r\n    public toScreen = (lon: number, lat: number) => {\r\n        try {\r\n            const p = this.map.project([lon, lat])\r\n            return [p.x, p.y];\r\n        } catch (error) {\r\n            // console.error(error)\r\n        }\r\n        return [-1, -1];\r\n    }\r\n    public downloadImage() {\r\n        const canvasMapbox = this.map.getCanvas();\r\n        return downloadImage(canvasMapbox, this.rendererWrapper.renderer.canvas);\r\n    }\r\n    public mouseDown = (e) => { }\r\n    public mouseUp = (e) => { }\r\n    public mouseMove = (e) => { }\r\n    public mouseDrag = (e) => { }\r\n    public mouseClick = (e) => { }\r\n    public mouseDClick = (e) => { }\r\n    public keyDown = (e) => { }\r\n}\r\n","export * from './util/ColorUtil';\nexport * from './util/VectorUtil';\nexport * from './DrawingPreest';\nexport * from './constant';\n\nexport const downloadImage = (canvasMapbox, customCanvas, fileName = 'map.png') => {\n    let canvasOut = document.createElement(\"canvas\");\n    canvasOut.width = canvasMapbox.width;\n    canvasOut.height = canvasMapbox.height;\n    let context = canvasOut.getContext(\"2d\");\n\n    // context.globalAlpha = 1.0;\n    context.globalAlpha = 1.0;\n    // context.drawImage(this.deckLayer.deck.canvas, 0, 0);\n    context.drawImage(canvasMapbox, 0, 0);\n    // context.drawImage(this.solution.renderer.canvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n    context.drawImage(customCanvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n\n    let img = new Image();\n    img.width = canvasMapbox.width;\n    img.height = canvasMapbox.height;\n    img.src = canvasOut.toDataURL();\n\n    let link = document.createElement('a');\n    link.download = fileName;\n    link.href = canvasOut.toDataURL();\n    link.click();    \n};\n","import { MapboxLayer } from '@deck.gl/mapbox';\nimport { ScatterplotLayer, ArcLayer, PolygonLayer } from '@deck.gl/layers';\n\nimport { RendererWrapper } from '../';\n\nexport class DeckGL {\n    public rendererWrapper: RendererWrapper;\n    public map: mapboxgl.Map;\n    public layers: MapboxLayer[] = [];\n    constructor(rendererWrapper: RendererWrapper) {\n        this.rendererWrapper = rendererWrapper;\n        this.map = this.rendererWrapper.mapBoxWrapper.map;\n    }\n    public initPost() {\n        // TODO:\n    }\n    // [ {position: [-74.5, 40], size: 10000}, ]\n    public addScatterLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `scatter-${this.layers.length}`,\n            type: ScatterplotLayer,\n            data: data,\n            // @ts-ignore\n            getPosition: d => d.position,\n            getRadius: d => d.size,\n            getFillColor: d => {\n                if (d.color !== undefined) {\n                    return d.color;\n                } else {\n                    return [255, 255, 0];\n                }\n            },\n            getLineColor: d => [255, 255, 255],\n            onClick: (info, event) => console.log('Clicked:', info, event)\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    // https://deck.gl/docs/api-reference/layers/polygon-layer\n    public addPolygonLayer(data: any, onClick: (info, event) => void) {\n        const deckLayer = new MapboxLayer({\n            id: `polygon-${this.layers.length}`,\n            type: PolygonLayer,\n            data: data,\n            // @ts-ignore\n            pickable: true,\n            stroked: true,\n            filled: true,\n            wireframe: true,\n            lineWidthMinPixels: 1,\n            getPolygon: d => d.contour,\n            getElevation: d => 1, //d.population / d.area / 10,\n            getFillColor: d => d.color, // [100, 100, 100], // [d.population / d.area / 60, 140, 0],\n            getLineColor: d => [0, 0, 0],\n            getLineWidth: 1,\n            onClick: (info, event) => {\n                // console.log('Clicked:', info, event)\n                // console.log(info.index)\n                onClick(info, event);\n            }\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    public addArcLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `arc-${this.layers.length}`,\n            type: ArcLayer,\n            data: data,\n            // @ts-ignore\n            getSourcePosition: d => d.pickup,\n            getTargetPosition: d => d.dropoff,\n            getSourceColor: d => [255, 128, 0],\n            getTargetColor: d => [0, 128, 255],\n            strokeWidth: 5\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    private addLayer(deckLayer: MapboxLayer, label: string = 'waterway-label') {\n        this.map.addLayer(deckLayer, label);\n        this.layers.push(deckLayer)\n    }\n    public pick() {\n        // this.map.getob\n    }\n}","import { RendererCanvas } from 'njscore';\nimport { RendererWrapper } from '../';\n\nexport class Renderer extends RendererCanvas {\n    public rendererWrapper: RendererWrapper\n    public time: number = 0.0;\n    public pts: number[][] = [];\n    public isActive = false;\n    constructor(div: any, rendererWrapper: RendererWrapper) {\n        super(div);\n        this.rendererWrapper = rendererWrapper;\n        this.canvas.id = 'mapboxCustom'\n\n        // const dd = app.mapboxWrapper.map.getCanvas();\n\n        // this.canvas.width = dd.width;\n        // this.canvas.height = dd.height;\n        this.canvas.style.position = 'absolute';\n        // this.canvas.style.width = '100%';\n        // this.canvas.style.height = '100%';\n        this.canvas.style.pointerEvents = 'none';\n        // this.canvas.style.mixBlendMode = 'color-dodge'\n        this.start();\n    }\n    public initPost() {\n        // this.ctx.globalCompositeOperation = 'color-dodge';\n        this.isActive = true;\n    }\n    public render(ctx: CanvasRenderingContext2D): void {\n        if (!this.isActive) { return; }\n        this.time += 0.1;\n\n        const z = this.rendererWrapper.mapBoxWrapper.map.getZoom();\n        const zoomFactor = Math.pow(2, z) * 0.1\n        \n        for(let i = 0 ; i < this.pts.length; ++i) {\n            const pt = this.pts[i];\n            const p = this.rendererWrapper.mapBoxWrapper.toScreen(pt[0], pt[1]);\n            // const p = this.app.mapboxWrapper.map.unproject({x: 10, y: 10})\n\n            const size = 0.001 * zoomFactor;\n\n            ctx.beginPath();\n            ctx.arc(p[0], p[1], size + ((Math.sin(this.time + i) + 3) / zoomFactor  ), 0, Math.PI * 2);\n            // ctx.arc(p[0], p[1], size + (size * (Math.sin(this.time + i) + 3) * zoomFactor / 10 ), 0, Math.PI * 2);\n            ctx.closePath();\n            ctx.fillStyle = 'rgba(0, 255, 0, 0.7)';\n            ctx.fill();\n        }\n\n        this.rendererWrapper.solution.scene.renderCanvas(ctx);\n\n        ctx.textAlign = 'center';\n        ctx.font = '14px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`Lat: ${this.rendererWrapper.solution.activeCommander.mp[1].toFixed(5)},  Lng: ${this.rendererWrapper.solution.activeCommander.mp[0].toFixed(5)}`, (this.canvas.width *  0.5), 50);\n        // ctx.stroke()\n    }\n}","import { MapboxGLWrapper } from './MapboxGLWrapper';\nimport { DeckGL } from './DeckGL';\nimport { Renderer } from './CanvasCustom';\nimport { Solution } from '../';\n\nexport class RendererWrapper {\n    public solution: Solution;\n    public mapBoxWrapper: MapboxGLWrapper;\n    public deckGL: DeckGL\n    public renderer: Renderer;\n    constructor(solution: Solution) {\n        this.solution = solution;      \n\n        this.mapBoxWrapper = new MapboxGLWrapper(this);\n        this.mapBoxWrapper.mouseDown = (e) => { this.solution.activeCommander.mouseDown(e);}\n        this.mapBoxWrapper.mouseUp = (e) => { this.solution.activeCommander.mouseUp(e);}\n        this.mapBoxWrapper.mouseClick = (e) => { this.solution.activeCommander.mouseClick(e);}\n        this.mapBoxWrapper.mouseMove = (e) => { this.solution.activeCommander.mouseMove(e);}\n        this.mapBoxWrapper.mouseDrag = (e) => { this.solution.activeCommander.mouseDrag(e);}\n        this.mapBoxWrapper.keyDown = (k) => { this.solution.activeCommander.keyDown(k);}\n        \n        this.deckGL = new DeckGL(this);\n        this.renderer = new Renderer(this.solution.divHost, this);\n    }\n    public initPost() {\n        this.renderer.initPost();\n        this.deckGL.initPost();\n    }\n    public downloadScreen() {\n        return this.mapBoxWrapper.downloadImage();\n    }\n    public destroy() {\n        this.renderer.destroy();\n    }\n}","import { Solution } from '../';\n\nexport class UIWrapper {\n    public solution: Solution;\n    public divHost: HTMLElement;\n    public div: HTMLElement;\n    constructor(solution: Solution) {\n        this.solution = solution;\n\n        this.divHost = solution.divHost;\n        this.divHost.style.position = 'absolute';\n        const divMenu = document.createElement('div');\n        this.divHost.appendChild(divMenu);\n\n        this.div = document.createElement('div');\n        this.div.style.width = '150px';\n        this.div.style.height = '300px';\n        // this.div.style.backgroundColor = 'rgba(0, 0, 0, 1.0)';\n        this.divHost.appendChild(this.div);\n\n        this.initUI();\n    }\n    public async initUI() {\n\n        // const svg = await NJSLoader.LoadSVGFromHTTP(process.env.PUBLIC_URL + '/static/dataDummyReady/ready.svg');\n        // console.log(svg);\n\n        // const newElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path'); //Create a path in SVG's namespace\n        // newElement.setAttribute(\"d\",\"M 0 0 L 10 10\"); //Set path's data\n        // newElement.style.stroke = \"#000\"; //Set stroke colour\n        // newElement.style.strokeWidth = \"5px\"; //Set stroke width\n        // this.div.appendChild(newElement);\n\n        const img = new Image();\n        img.src = process.env.PUBLIC_URL + '/static/dataDummyReady/readyLabs.png';\n        img.style.position = 'relative';\n        img.style.width = '150px';\n        img.style.margin = '15px';\n        img.style.marginTop = '30px';\n        img.style.marginBottom = '0px';\n        let a = document.createElement('a');\n        a.href='https://ready.net/';\n        a.appendChild(img);\n        this.div.appendChild(a);\n\n        let div = document.createElement('div');\n        div.textContent = 'Capture Map';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.downloadScreen();\n        }\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Set Extent';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.flyTo(-112.188375, 35.267735);\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Add Shape';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.addShape();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Shape Type';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.shiftShapeType();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Animation';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.toggleAnimation();\n        };\n        this.div.appendChild(div);\n    }\n}","import * as turf from '@turf/turf';\n\nimport { Solution } from '../';\nimport { ACCommon } from '../Common';\nimport { ActiveCommander } from '../ActiveCommander';\nimport { GeometryBase } from '../RendererWrapper/CanvasCustom/Geometry/Base/GeometryBase';\nimport { hex2RGB, drawingPoint } from '../lib'\nimport { LANDUSE_TYPE_MAPPING, FUNDING_STATUS_MAPPING } from '../lib/constant';\n\nexport class Scene {\n    public solution: Solution;\n    public ac: ActiveCommander;\n    public common: ACCommon;\n\n    public pts: number[] = [];\n\n    public area: GeometryBase | undefined = undefined;\n    public captured: GeometryBase | undefined = undefined;\n\n    public points: any;\n    public polygonsDifference: any = [];\n    public ids: boolean[] =[];\n\n    constructor(solution: Solution) {\n        this.solution = solution;\n        this.ac = solution.activeCommander;\n        this.common = solution.common;\n    }\n    public async init() {\n        this.common.center(-112.190375, 35.257177);\n        this.common.zoom(13);\n\n        const polygons = await this.common.loadDataLocal('funded_census_blocks.geojson');\n        const gons = [];\n        const ids = [];\n        const colDefault = hex2RGB(FUNDING_STATUS_MAPPING.default.color);\n        const colAssigned = hex2RGB(FUNDING_STATUS_MAPPING.assigned.color);\n        // console.log(polygons);\n        for (let i of polygons['features']) {\n            const p = (i['geometry']['coordinates']);\n            let color = undefined;\n            const grantStatus = (i['properties']['grant_long_status']);\n            // console.log(grantStatus)\n            if (grantStatus === 'default') { color = colDefault; }\n            else { color = colAssigned; }\n            // if (Math.random() < 0.3) { color = ColorUtility.GetRandomRGBArray(); }\n            // console.log(color)\n            gons.push({ contour: p[0], size: 15, color: color });\n            ids.push(false);\n        }\n        // console.log(gons)\n        this.ids = ids;\n        const onClickEvent = (info, event) => {\n            // console.log('!', info)\n            // console.log('!', info.index)\n            this.ids[info.index] = !this.ids[info.index];\n            // console.log(this.ids)\n        }\n        this.common.addPolygonLayer(gons, onClickEvent);\n\n\n        const polygonsDiff = await this.common.loadDataLocal('funded_census_blocks.geojson');\n        this.polygonsDifference = []\n        for (let i of polygonsDiff['features']) {\n            const p = (i['geometry']['coordinates']);\n            // console.log(p[0])\n            this.polygonsDifference.push(turf.polygon(p[0]));\n        }\n\n        // dummy\n        let data = [\n            { position: [-74.5, 40], size: 10000 },\n            { position: [-74.5, 40.5], size: 5000 },\n            { position: [-74.6, 40.5], size: 5800 },\n            { position: [-74.7, 40.5], size: 100 },\n        ];\n        this.common.addScatterLayer(data);\n\n        let data2 = [\n            { pickup: [-122.42, 37.8], dropoff: [-74.5, 40.5] },\n            { pickup: [-122.43, 37.8], dropoff: [-122.42, 37.75] }\n        ];\n        this.common.addArcLayer(data2);\n\n\n        const points = await this.common.loadDataLocal('underserved_locations.geojson');\n        // console.log(d);\n        const colR = hex2RGB(LANDUSE_TYPE_MAPPING.R.color);\n        const colB = hex2RGB(LANDUSE_TYPE_MAPPING.B.color);\n        const pts = []\n        for (let i of points['features']) {\n            const p = (i['geometry']['coordinates']);\n            const landuse = (i['properties']['landuse']);\n\n            let color = undefined;\n            if (landuse === 'R') { color = colR; }\n            else if (landuse === 'B') { color = colB; }\n            else { color = [0, 128, 0]; }\n\n            pts.push({ position: [p[0], p[1]], size: 15, color: color });\n        }\n        this.common.addScatterLayer(pts);\n        this.points = points;\n    }\n    public renderCanvas(ctx: CanvasRenderingContext2D) {\n        if (this.area) { this.area.render(ctx); }\n\n        ctx.fillStyle = '#f00';\n        for (let i = 0; i < this.pts.length; ++i) {\n            const p = this.pts[i];\n            drawingPoint(ctx, p[0], p[1]);\n        }\n    }\n}\n\n","import { ACCommon } from './Common';\r\nimport { ActiveCommander } from './ActiveCommander';\r\nimport { RendererWrapper } from './RendererWrapper';\r\nimport { UIWrapper } from './UI';\r\nimport { Scene } from './Scene';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLDivElement;\r\n    public common: ACCommon;\r\n    public activeCommander: ActiveCommander;\r\n    public uiWrapper: UIWrapper;\r\n    public rendererWrapper: RendererWrapper;\r\n    public scene: Scene;\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        this.divHost.style.position = 'relative';\r\n        this.init();\r\n        this.initPost();\r\n    }\r\n    public init() {\r\n        this.common = new ACCommon(this);\r\n        this.activeCommander = new ActiveCommander(this);\r\n        this.scene = new Scene(this);\r\n        this.rendererWrapper = new RendererWrapper(this);\r\n        this.uiWrapper = new UIWrapper(this);\r\n    }\r\n    public destroy() {\r\n        this.rendererWrapper.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n    public async initPost() {\r\n        await this.scene.init();\r\n    }\r\n}"],"names":["GeometryBase","constructor","scene","isHovered","type","hasAnimation","this","area","isInside","x","y","translate","update","onMouseUp","render","ctx","renderPost","hex2RGB","hex","isGray","replace","r","parseInt","substring","g","b","v","RVector3","z","lng","lat","ele","drawingPoint","beginPath","arc","Math","PI","closePath","fill","LANDUSE_TYPE_MAPPING","text","color","FUNDING_STATUS_MAPPING","Renderer","host","renderAreaBounding","renderCroppedArea","renderProperties","renderControlPoint","diff","difference","polygonTurfOriginal","polygonsDifference","ids","polygonTurfSubtracted","i","length","p","sp","common","toScreen","moveTo","lineTo","setLineDash","lineDashOffset","t","lineWidth","strokeStyle","op","sin","fillStyle","stroke","pts","forEach","ellipse","cv","width","height","rect","turf","textAlign","font","fillText","toFixed","points","other","features","properties","polygons","boolean","Transform","preX","solution","activeCommander","mp","mpPre","preY","capturedVecId","updateCenterVec","updateProjection","xSum","ySum","toMap","updatePolygonTurf","Area","super","renderer","transform","rendererWrapper","canvas","widthHalf","heightHalf","push","mVec","v0","v1","sqrt","m","r0","r1","threshold","pow","isInsideEllipse","vecs","inside","j","xi","yi","xj","yj","isInsideOfVecs","mapBoxWrapper","map","isMoving","abs","ACCommon","zoom","flyTo","center","lon","downloadScreen","enablePan","dragPan","enable","disablePan","disable","path","getJSONFromURL","process","addScatterLayer","data","deckGL","addArcLayer","addPolygonLayer","onClick","addShape","shiftShapeType","toggleAnimation","checkHoverArea","pickObject","obj","console","log","index","ActiveCommander","mouseDown","e","updateMousePos","captured","mouseUp","undefined","mouseDrag","point","updateMousePrePos","mouseClick","mouseMove","lngLat","keyDown","k","key","toLocaleLowerCase","toLowerCase","MapboxGLWrapper","canvasMapbox","isPressed","zoomTo","setCenter","unproject","project","error","mouseDClick","initMap","divHost","id","mapboxgl","preserveDrawingBuffer","container","style","dragRotate","on","window","addEventListener","div","document","getElementsByClassName","position","display","initPost","getCanvas","initCustomCanvas","getBounds","addSource","coordinates","animate","addLayer","source","downloadImage","customCanvas","fileName","canvasOut","createElement","context","getContext","globalAlpha","drawImage","img","Image","src","toDataURL","link","download","href","click","DeckGL","layers","deckLayer","MapboxLayer","ScatterplotLayer","getPosition","d","getRadius","size","getFillColor","getLineColor","info","event","PolygonLayer","pickable","stroked","filled","wireframe","lineWidthMinPixels","getPolygon","contour","getElevation","getLineWidth","ArcLayer","getSourcePosition","pickup","getTargetPosition","dropoff","getSourceColor","getTargetColor","strokeWidth","label","pick","RendererCanvas","time","isActive","pointerEvents","start","getZoom","zoomFactor","pt","renderCanvas","RendererWrapper","destroy","UIWrapper","divMenu","appendChild","initUI","margin","marginTop","marginBottom","a","textContent","onclick","Scene","ac","loadDataLocal","gons","colDefault","colAssigned","polygonsDiff","colR","colB","landuse","Solution","uiWrapper","init","lastElementChild","removeChild"],"sourceRoot":""}