{"version":3,"file":"static/js/2851.df6f8c93.chunk.js","mappings":"gKAEO,MAAMA,EAGTC,YAAYC,GAAe,KAFpBA,aAAO,OACPC,cAAQ,EAEXC,KAAKF,QAAUA,EAGfE,KAAKF,QAAQG,MAAMC,QAAU,OAC7BF,KAAKF,QAAQG,MAAME,WAAa,SAEhC,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIH,MAAMM,WAAa,OACvBH,EAAIH,MAAMO,YAAc,OACxBJ,EAAIH,MAAMQ,gBAAkB,OAC5BL,EAAIH,MAAMS,MAAQ,SAClBN,EAAIH,MAAMU,OAAS,QAEnBX,KAAKF,QAAQc,YAAYR,GAKzBJ,KAAKD,SAAW,IAAIc,EAAST,EAKjC,CACOU,UAEH,IADAd,KAAKD,SAASe,UACPd,KAAKF,QAAQiB,kBAChBf,KAAKF,QAAQkB,YAAYhB,KAAKF,QAAQiB,iBAE9C,EAGG,MAAMF,UAAiBI,EAAAA,GAK1BpB,YAAYO,GACRc,MAAMd,GAAK,KALfe,UAAY,GAAG,KACfC,UAAI,OACJC,EAAI,EAAI,KACRC,EAAI,IAGAtB,KAAKuB,OAAOtB,MAAMuB,SAAW,WAC7BxB,KAAKuB,OAAOtB,MAAMS,MAAQ,OAC1BV,KAAKuB,OAAOtB,MAAMU,OAAS,OAK3B,MAAMc,EAASpB,SAASC,cAAc,UACtCmB,EAAOC,UAAY,eACnBD,EAAOE,iBAAiB,SAAS,KAC7B3B,KAAKqB,EAAI,EACTrB,KAAKoB,KAAKQ,gBAAgBC,KAAKC,SAAW9B,KAAKuB,OAAOb,MAAOmB,KAAKC,SAAW9B,KAAKuB,OAAOZ,OAAO,IAEpGP,EAAI2B,OAAON,GAEX,MAAMO,EAASC,EAAU,IAAK,EAAG,KACjCjC,KAAKF,QAAQc,YAAYoB,EAAO5B,KAChC4B,EAAOA,OAAOE,QAAU,KACpBlC,KAAKsB,GAAKU,EAAOA,OAAOG,MAExBH,EAAOI,KAAKC,UAAY,QAAUrC,KAAKsB,EACvCtB,KAAKoB,KAAKkB,sBAAsBtC,KAAKsB,EAAE,EAK3CtB,KAAKmB,UAAUoB,KAAK,IAAIC,EAAM,GAAI,GAAIC,IACtCzC,KAAKmB,UAAUoB,KAAK,IAAIC,EAAM,IAAK,GAAIE,IACvC1C,KAAKmB,UAAUoB,KAAK,IAAIC,EAAM,IAAK,GAAIG,IAEvC3C,KAAKoB,KAAO,IAAIwB,EAAK,IAAK,IAAK,GAAI,IAEnC5C,KAAK6C,OACT,CACOC,UAAUC,EAAWC,GACxBhD,KAAKoB,KAAKQ,gBAAgBmB,EAAEC,EAChC,CACOC,OAAOC,GAGV,IAAI,IAAIC,EAAI,EAAIA,EAAInD,KAAKmB,UAAUiC,SAAUD,EACzCnD,KAAKmB,UAAUgC,GAAGE,OAAOrD,KAAKqB,GAO/BrB,KAAKmB,UAAUgC,GAAGF,OAAOC,GACzBlD,KAAKmB,UAAUgC,GAAGH,EAAI,IAAU,IAAJG,EAK9BnD,KAAKoB,KAAKiC,OAAOrD,KAAKqB,GACtBrB,KAAKoB,KAAK6B,OAAOC,GAGjBlD,KAAKqB,GAAK,IAIf,EAwBJ,MAAMmB,EAKJ3C,YAAYkD,EAAWC,EAAWM,GAAqB,KAJhDP,EAAY,EAAE,KACdC,EAAY,EAAE,KACdO,EAAY,EAAE,KACrBD,mBAAa,EAEXtD,KAAK+C,EAAIA,EACT/C,KAAKgD,EAAIA,EACThD,KAAKsD,cAAgBA,CACvB,CACOL,OAAOC,GACZA,EAAIM,YACJN,EAAIO,IAAIzD,KAAK+C,EAAG/C,KAAKgD,EAAGhD,KAAKuD,EAAG,EAAG,MACnCL,EAAIQ,YACJR,EAAIS,MACN,CACON,OAAOhC,GACZ,IAAIuC,EAAI5D,KAAKsD,cAAcjC,GAGxBrB,KAAKsD,gBAAkBb,GAAUmB,EAAI,IAIxC5D,KAAK+C,EAAQ,IAAJa,EACX,EAIF,MAAMhB,EAiBF/C,YAAYkD,EAAGC,EAAGtC,EAAOC,GAAS,KAdlCD,WAAK,OACLC,YAAM,OACNkD,IAAM,CAAC,EAAG,GAAE,KAEZC,GAAK,CAAC,EAAG,GAAE,KACXC,GAAK,CAAC,EAAG,GAAE,KAEX1C,EAAI,EAAE,KAEN2C,SAAW,IAAG,KACdC,GAAK,EAAC,KACNC,GAAK,EAAC,KAENC,UAAY,EAERnE,KAAK6D,IAAM,CAACd,EAAGC,GACfhD,KAAK8D,GAAK,CAACf,EAAGC,GACdhD,KAAK+D,GAAK,CAAChB,EAAGC,GAEdhD,KAAKU,MAAQA,EACbV,KAAKW,OAASA,CAClB,CACAiB,gBAAgBmB,EAAWC,GACvBhD,KAAK+D,GAAG,GAAK/D,KAAK6D,IAAI,GACtB7D,KAAK+D,GAAG,GAAK/D,KAAK6D,IAAI,GAEtB7D,KAAK8D,GAAG,GAAKf,EACb/C,KAAK8D,GAAG,GAAKd,EAGbhD,KAAKqB,EAAI,CACb,CACAiB,qBAAqB8B,GACjBpE,KAAKgE,SAAWI,EAChBpE,KAAKkE,GAAKE,EAEVpE,KAAKmE,UAAY,CACrB,CACAd,SAIQ,IAAIO,EAAIS,EAAqBrE,KAAK6D,IAAK7D,KAAK+D,GAAI/D,KAAK8D,GAAI9D,KAAKqB,GAC9DrB,KAAK6D,IAAI,GAAKD,EAAE,GAChB5D,KAAK6D,IAAI,GAAKD,EAAE,GAKhB5D,KAAKqB,GAAI,KAIbrB,KAAKgE,SAAWM,EAA0BtE,KAAKgE,SAAUhE,KAAKiE,GAAIjE,KAAKkE,GAAIlE,KAAKqB,GAChFrB,KAAKmE,WAAa,IAEtB,CACAlB,OAAOC,GACHA,EAAIqB,UAAY,OAEhBrB,EAAIsB,OACJtB,EAAIuB,UAAUzE,KAAK6D,IAAI,GAAK7D,KAAK6D,IAAI,IACrCX,EAAIwB,OAAO1E,KAAKgE,SAAYnC,KAAK8C,GAAK,KAEtCzB,EAAIM,YAEJN,EAAI9B,KAAoB,IAAbpB,KAAKU,MAA6B,IAAdV,KAAKW,OAAcX,KAAKU,MAAOV,KAAKW,QACnEuC,EAAIS,OAEJT,EAAI0B,SAER,EAGJ,MAAM3C,EAAY,CAAC4C,EAAeC,EAAaC,KAE3C,MAAM3E,EAAMC,SAASC,cAAc,OACnCF,EAAIH,MAAMC,QAAU,OAEpB,MAAM8B,EAAS3B,SAASC,cAAc,SACtC0B,EAAOgD,KAAO,QACdhD,EAAO8C,IAAG,UAAMA,GAChB9C,EAAO+C,IAAG,UAAMA,GAChB/C,EAAOiD,aAAe,MAEtB,MAAM7C,EAAO/B,SAASC,cAAc,OAMpC,OALA8B,EAAKC,UAAYwC,EACjBzC,EAAKnC,MAAMiF,MAAQ,OACnB9E,EAAIQ,YAAYoB,GAChB5B,EAAIQ,YAAYwB,GAET,CACHhC,MAAK4B,SAAQI,OAChB,EAGCK,EAAUpB,GAAuBA,EACjCqB,EAAiBrB,IAAwB,IAAM,IAAMA,GAAKQ,KAAKsD,IAAI,GAAK9D,GAAK,EAE7EsB,EAAmBtB,GAEdQ,KAAKuD,IAAI,GAAI,GAAK/D,GAAKQ,KAAKsD,KAAK9D,EAAIgE,OAAU,EAAIxD,KAAK8C,IADvD,IACkE,EAExEL,EAA4B,SAACT,EAAayB,EAAYC,GAExD,IAAIC,EAAS3B,EAEb,OADA2B,EAASF,GAAOC,EAAKD,GAFX3C,EADuE,uDAAG,IAI7E6C,CACX,EAEMnB,EAAuB,SAACR,EAAeyB,EAAcC,GACvD,MAAMlE,EAAIsB,EADwE,uDAAG,IAErF,IAAI6C,EAAS,CAAC3B,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAClC,IAAK,IAAIV,EAAI,EAAGA,EAAI,EAAGA,IACnBqC,EAAOrC,GAAKmC,EAAGnC,IAAOoC,EAAGpC,GAAKmC,EAAGnC,IAAM9B,EAG3C,OAAOmE,CACX,C","sources":["njslab/Tools/Easing_Interpolation/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n// https://codesandbox.io/s/framer-motion-animate-on-state-update-ns67ib?from-embed\r\nexport class Renderer extends RendererCanvas {\r\n    listPoint = [];\r\n    rect;\r\n    t = 0.0;\r\n    N = 200;\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        const button = document.createElement('button');\r\n        button.innerHTML = \"reset timeer\";\r\n        button.addEventListener('click', () => {\r\n            this.t = 0.0;\r\n            this.rect.updateTargetPos(Math.random() * this.canvas.width, Math.random() * this.canvas.height)\r\n        });\r\n        div.append(button);\r\n\r\n        const slider = getSlider('N', 0, 1000);\r\n        this.divHost.appendChild(slider.div);\r\n        slider.slider.oninput = () => {\r\n            this.N = +slider.slider.value\r\n            // console.log(slider.slider.value)\r\n            slider.text.innerText = 'Deg: ' + this.N;\r\n            this.rect.updateTargetRotation(+this.N)\r\n        }\r\n\r\n        // \r\n        // https://en.wikipedia.org/wiki/Interpolation\r\n        this.listPoint.push(new Point(50, 50, linear));\r\n        this.listPoint.push(new Point(100, 50, easeInElastic));\r\n        this.listPoint.push(new Point(150, 50, easeOutElastic2));\r\n\r\n        this.rect = new Rect(500, 500, 80, 80);\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        this.rect.updateTargetPos(x,y);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n        for(let i = 0 ; i < this.listPoint.length; ++i) {\r\n            this.listPoint[i].update(this.t);\r\n           \r\n            // safegurard for the x value of the Points\r\n            // if (this.listPoint[i].x > 120) {\r\n            //  this.listPoint[i].x = 120; \r\n            // }\r\n           \r\n           this.listPoint[i].render(ctx);\r\n           this.listPoint[i].y = 100 + i * 100;\r\n           \r\n       \r\n         }\r\n\r\n         this.rect.update(this.t);\r\n         this.rect.render(ctx);\r\n\r\n         // console.log(easeOutElastic2(t));\r\n         this.t += 0.005;\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n\r\n}\r\n\r\n// https://codepen.io/NJStudio/pen/NWGedxQ\r\n\r\n\r\n\r\n// const div = document.getElementById('div');\r\n// const canvas = document.createElement('canvas');\r\n// canvas.width = 400;\r\n// canvas.height = 400;\r\n// div.append(canvas)\r\n// const ctx: CanvasRenderingContext2D = canvas.getContext('2d');\r\n// ctx.translate(200, 200)\r\n\r\n// // ctx.fillStyle = '#0000ff'\r\n// // ctx.beginPath();\r\n// // ctx.arc(0, 0, 10, 0, 3.14 * 2)\r\n// // ctx.closePath()\r\n// // ctx.fill()\r\n\r\n\r\n\r\nclass Point {\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n  public r: number = 5;\r\n  interpolation: any;\r\n  constructor(x: number, y: number, interpolation: any ){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.interpolation = interpolation;\r\n  }\r\n  public render(ctx: CanvasRenderingContext2D) {\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.r, 0, 3.14 * 2)\r\n    ctx.closePath()\r\n    ctx.fill()\r\n  }\r\n  public update(t: number){\r\n    let v = this.interpolation(t);\r\n    // console.log(v)\r\n\r\n    if(this.interpolation === linear && v > 1.0 ) {\r\n        return;\r\n    }\r\n\r\n    this.x = v * 200;\r\n  }\r\n  \r\n}\r\n\r\nclass Rect {\r\n    // x: number;\r\n    // y: number;\r\n    width: number;\r\n    height: number;\r\n    vec = [0, 0]\r\n\r\n    tp = [0, 0]\r\n    op = [0, 0]\r\n\r\n    t = 0;\r\n\r\n    rotation = 200\r\n    or = 0\r\n    tr = 0\r\n\r\n    tRotation = 0\r\n    constructor(x, y, width, height) {\r\n        this.vec = [x, y]\r\n        this.tp = [x, y];\r\n        this.op = [x, y];\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    updateTargetPos(x: number, y: number) {\r\n        this.op[0] = this.vec[0];\r\n        this.op[1] = this.vec[1];\r\n\r\n        this.tp[0] = x;\r\n        this.tp[1] = y;\r\n\r\n        // console.log(x, y)\r\n        this.t = 0;\r\n    }\r\n    updateTargetRotation(deg: number) {\r\n        this.rotation = deg\r\n        this.tr = deg;\r\n\r\n        this.tRotation = 0;\r\n    }\r\n    update() {\r\n        // if (this.tp[0] !== this.op[0] || this.tp[1] !== this.op[1]) {\r\n            // let t = easeOutElastic2(this.t)\r\n            // console.log(t)\r\n            let v = interpolationElastic(this.vec, this.op, this.tp, this.t);\r\n            this.vec[0] = v[0]\r\n            this.vec[1] = v[1]\r\n            // this.op[0] = v[0];\r\n            // this.op[1] = v[1];\r\n            //   this.x = v[0];\r\n            //   this.y = v[1];\r\n            this.t+= 0.005\r\n        // } \r\n\r\n\r\n        this.rotation = interpolationElasticValue(this.rotation, this.or, this.tr, this.t);\r\n        this.tRotation += 0.0001;\r\n\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#f00';\r\n\r\n        ctx.save();\r\n        ctx.translate(this.vec[0] , this.vec[1] );\r\n        ctx.rotate(this.rotation *  Math.PI / 180);\r\n\r\n        ctx.beginPath();\r\n        // ctx.rect(this.x, this.y, this.width, this.height)\r\n        ctx.rect(- this.width * 0.5, - this.height * 0.5, this.width, this.height)\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n\r\n    }\r\n}\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n    slider.defaultValue = '200';\r\n\r\n    const text = document.createElement('div');\r\n    text.innerText = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider, text\r\n    };\r\n};\r\n\r\nconst linear = (t: number) => { return t; }\r\nconst easeInElastic = (t: number) => { return (.04 - .04 / t) * Math.sin(25 * t) + 1; }\r\n// https://joshondesign.com/2013/03/01/improvedEasingEquations\r\nconst easeOutElastic2 = (t: number) => { \r\n    var p = 0.3; \r\n    return Math.pow(2, -10 * t) * Math.sin((t - p / 4) * (2 * Math.PI) / p) + 1; \r\n}\r\nconst interpolationElasticValue = (vec: number, v0: number, v1: number, inter: number = 0.5): number => {\r\n    const t = easeOutElastic2(inter)\r\n    let result = vec; // ;colA.slice();\r\n    result = v0 + ((v1 - v0) * t ) ;\r\n    return result;\r\n}\r\n\r\nconst interpolationElastic = (vec: number[], v0: number[], v1: number[], inter: number = 0.5): number[] => {\r\n    const t = easeOutElastic2(inter)\r\n    let result = [vec[0], vec[1], vec[2]]; // ;colA.slice();\r\n    for (let i = 0; i < 3; i++) {\r\n        result[i] = v0[i] + ((v1[i] - v0[i]) * t ) ;\r\n    }\r\n    // console.log(result);\r\n    return result;\r\n}\r\nconst interpolation = (v0: number[], v1: number[], inter: number = 0.5): number[] => {\r\n    let result = [v0[0], v0[1], v0[2]]; // ;colA.slice();\r\n    for (let i = 0; i < 3; i++) {\r\n        result[i] = (result[i] + inter * (v1[i] - v0[i]));\r\n    }\r\n    // console.log(result);\r\n    return result;\r\n}"],"names":["Solution","constructor","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","listPoint","rect","t","N","canvas","position","button","innerHTML","addEventListener","updateTargetPos","Math","random","append","slider","getSlider","oninput","value","text","innerText","updateTargetRotation","push","Point","linear","easeInElastic","easeOutElastic2","Rect","start","mouseDown","x","y","render","ctx","i","length","update","interpolation","r","beginPath","arc","closePath","fill","v","vec","tp","op","rotation","or","tr","tRotation","deg","interpolationElastic","interpolationElasticValue","fillStyle","save","translate","rotate","PI","restore","title","min","max","type","defaultValue","color","sin","pow","p","v0","v1","result"],"sourceRoot":""}