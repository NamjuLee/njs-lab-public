{"version":3,"file":"static/js/26278.782064b7.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/03_pixelMapInter/index.ts","njslab/Workshop/workshop-vector/base/RendererCanvas.ts"],"sourcesContent":["import { RendererCanvas } from '../../workshop-vector/base/RendererCanvas';\r\n\r\nexport class Solution extends RendererCanvas {\r\n    t: number = 0.0;\r\n    pMap: PixelMap = undefined;\r\n    constructor(div: HTMLDivElement) {\r\n        super(div);\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        const size = 200\r\n        this.pMap = new PixelMap(new Vector3(-size, -size, 0), new Vector3(size, size, 0) ,10, 10)\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n\r\n        this.pMap.render(ctx);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        this.pMap.picking(x - this.ctx.canvas.width * 0.5, y - this.ctx.canvas.height * 0.5)\r\n    }\r\n\r\n    public mouseClick(x: number, y: number): void {\r\n        //\r\n    }\r\n}\r\n\r\nclass PixelMap {\r\n    public pixelList: Pixel[] = []\r\n    public minV: Vector3;\r\n    public maxV: Vector3;\r\n    public xNum = 10;\r\n    public yNum = 10;\r\n    public intervalX;\r\n    public intervalY;\r\n    constructor(minV: Vector3, maxV: Vector3, xNum: number, yNum: number) {\r\n        this.minV = minV;\r\n        this.maxV = maxV;\r\n        this.xNum = xNum;\r\n        this.yNum = yNum;\r\n        this.init()\r\n    }\r\n    public init(){\r\n        this.pixelList = []\r\n        const x = this.minV.x\r\n        const y = this.minV.y\r\n\r\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.xNum + 1)\r\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.yNum + 1)\r\n        \r\n        for(let j = 0 ; j < this.yNum; j++) {\r\n            for(let i = 0 ; i < this.xNum; i++) {\r\n                const xV = x + i * this.intervalX;\r\n                const yV = y + j * this.intervalY;\r\n\r\n                let pix = new Pixel(this, xV , yV , 0);\r\n                this.pixelList.push(pix);\r\n            }\r\n        }\r\n\r\n    }\r\n    public picking(x: number, y: number) {\r\n        const mv = new Vector3(x,y,0)\r\n        let dis = Number.MAX_VALUE;\r\n        let id = -1\r\n        for(let i = 0 ; i < this.pixelList.length; ++i) {\r\n           const theDis = distance(this.pixelList[i].vec, mv)\r\n           if (dis > theDis) {\r\n            dis = theDis\r\n            id = i;\r\n           }\r\n           this.pixelList[i].hover = false\r\n        }\r\n        if (id) {\r\n            this.pixelList[id].hover = true\r\n        }\r\n    }\r\n    public render(ctx) {\r\n        // console.log(this.pixelList.length)\r\n        this.pixelList.forEach((p: Pixel) => {\r\n            p.render(ctx);\r\n        })\r\n    }\r\n}\r\n\r\nclass Pixel {\r\n    public pMap: PixelMap;\r\n    public vec: Vector3\r\n    public hover: boolean = false;\r\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\r\n        this.pMap = pMap;\r\n        this.vec = new Vector3(x,y,z)\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        const width = this.pMap.intervalX \r\n        const height = this.pMap.intervalY\r\n\r\n        ctx.beginPath()\r\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height)\r\n        ctx.closePath()\r\n        ctx.stroke()\r\n        if (this.hover) {\r\n            ctx.fillStyle = '#555';\r\n            ctx.fill()\r\n        } \r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\r\n        ctx.closePath();\r\n        if (this.hover) {\r\n            ctx.fillStyle = '#999';\r\n        } else {\r\n            ctx.fillStyle = '#333';\r\n        }\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    public r: number = 3\r\n    constructor(x,y,z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}\r\n\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}","export class RendererCanvas {\r\n    public divHost: HTMLDivElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isDown: boolean = false;\r\n    public debugMode: boolean = false;\r\n    public isStatic: boolean = false;\r\n    public m: number[] = [0,0];\r\n\r\n    private prevent: boolean = false;\r\n    private delay: number = 250;\r\n    private timer: NodeJS.Timer | number;\r\n    private isDrag: boolean = false;\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        // this.canvas.style.position = 'absolute';\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n        this.divHost.appendChild(this.canvas);\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.timer = setTimeout(() => {\r\n                if (!this.prevent) {\r\n                    this.mouseClick(e.offsetX, e.offsetY);\r\n                }\r\n                this.isDrag = false;\r\n                this.prevent = false;\r\n            },\r\n                this.delay);\r\n        };\r\n        this.canvas.onwheel = (e: WheelEvent) => {\r\n            this.mouseWheel(e);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = true;\r\n            this.mouseDown(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = false;\r\n            this.isDrag = false;\r\n            this.mouseUp(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            if (this.isDown) {\r\n                this.isDrag = true;\r\n                this.prevent = true;\r\n                this.mouseDrag(e.offsetX, e.offsetY);\r\n            } else {\r\n                this.mouseMove(e.offsetX, e.offsetY);\r\n            }\r\n        };\r\n        window.addEventListener('resize', this.resize);\r\n        // this.loop(this.ctx);\r\n    }\r\n    public start() {\r\n        this.loop(this.ctx);\r\n    }\r\n    private resize = () => {\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n    }\r\n    public destroy() {\r\n        window.removeEventListener('resize', this.resize);\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n        this.destroyPost();\r\n    }\r\n    public destroyPost() {\r\n\r\n    }\r\n    public loop(ctx: CanvasRenderingContext2D) {\r\n        if (this.isStatic) { return; }\r\n        requestAnimationFrame(() => { this.loop(ctx); });\r\n        ctx.clearRect(ctx.canvas.width * -0.5, ctx.canvas.height * -0.5, ctx.canvas.width, ctx.canvas.height);\r\n        this.render(ctx);\r\n        this.renderPost();\r\n    }\r\n    public renderPost() {\r\n        this.renderMouse(this.ctx, this.m[0], this.m[1]);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // Binding needed\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('click'); }\r\n    }\r\n    public mouseDoubleClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('d-click'); }\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('down'); }\r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('up'); }\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('move'); }\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('drag'); }\r\n    }\r\n    public mouseWheel(v: WheelEvent) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('wheel', v); }\r\n    }\r\n    public renderMouse(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        ctx.fillText(`x: ${this.m[0]}, y:${this.m[1]}`,this.m[0] - 15, this.m[1] - 8)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public mouseUpdate(x: number, y: number): void {\r\n        this.m[0] = Math.floor(x - this.canvas.width * 0.5);\r\n        this.m[1] = Math.floor(y - this.canvas.height * 0.5);\r\n    }\r\n}"],"names":["Solution","RendererCanvas","constructor","div","super","t","pMap","undefined","this","ctx","translate","canvas","width","height","init","size","PixelMap","Vector3","start","render","mouseMove","x","y","picking","mouseClick","minV","maxV","xNum","yNum","pixelList","intervalX","intervalY","j","i","xV","yV","pix","Pixel","push","mv","dis","Number","MAX_VALUE","id","length","theDis","distance","vec","hover","forEach","p","z","beginPath","rect","closePath","stroke","fillStyle","fill","arc","r","Math","PI","v0","v1","sqrt","distance2","divHost","isDown","debugMode","isStatic","m","prevent","delay","timer","isDrag","resize","bounding","getBoundingClientRect","document","createElement","appendChild","getContext","onclick","e","setTimeout","offsetX","offsetY","onwheel","mouseWheel","ondblclick","mouseUpdate","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","window","addEventListener","loop","destroy","removeEventListener","lastElementChild","removeChild","error","destroyPost","requestAnimationFrame","clearRect","renderPost","renderMouse","console","log","v","fillText","floor"],"sourceRoot":""}