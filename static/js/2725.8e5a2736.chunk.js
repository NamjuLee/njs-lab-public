"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[2725],{62725:function(e,i,t){t.r(i),t.d(i,{Renderer:function(){return S},Solution:function(){return E}});var n=t(5483),s=t.n(n),o=t(64572),a=t(79966),r=t(38378),l=t(69323),d=t(56128),u=t(76501),c=t(90643);const p=[0,0,0,255],h={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,antialiasing:!0,getPosition:{type:"accessor",value:e=>e.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:p},getLineColor:{type:"accessor",value:p},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class m extends a.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool antialiasing;\nuniform bool billboard;\nuniform int radiusUnits;\nuniform int lineWidthUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  float edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\n  unitPosition = edgePadding * positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = edgePadding * positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\nuniform bool antialiasing;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = antialiasing ? \n    smoothedge(distToCenter, outerRadiusPixels) : \n    step(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = antialiasing ? \n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\n\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[r.Z,l.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){if(super.updateState(e),e.changeFlags.extensionsChanged){var i;const{gl:e}=this.context;null===(i=this.state.model)||void 0===i||i.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw(e){let{uniforms:i}=e;const{radiusUnits:t,radiusScale:n,radiusMinPixels:s,radiusMaxPixels:o,stroked:a,filled:r,billboard:l,antialiasing:u,lineWidthUnits:c,lineWidthScale:p,lineWidthMinPixels:h,lineWidthMaxPixels:m}=this.props;this.state.model.setUniforms(i).setUniforms({stroked:a?1:0,filled:r,billboard:l,antialiasing:u,radiusUnits:d.iI[t],radiusScale:n,radiusMinPixels:s,radiusMaxPixels:o,lineWidthUnits:d.iI[c],lineWidthScale:p,lineWidthMinPixels:h,lineWidthMaxPixels:m}).draw()}_getModel(e){return new u.Z(e,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0])}}}),isInstanced:!0})}}(0,o.Z)(m,"defaultProps",h),(0,o.Z)(m,"layerName","ScatterplotLayer");var g=t(67028),v=t(59398),f=t(94508),y=t(19199),x=t(14305);const C=512,b=Math.PI/180;function P(e){let{map:i,gl:t,deck:n}=e;if(i.__deck)return i.__deck;const s=null===n||void 0===n?void 0:n.props._customRender,o=null===n||void 0===n?void 0:n.props.onLoad,a=(r={...null===n||void 0===n?void 0:n.props,_customRender:()=>{i.triggerRepaint(),null===s||void 0===s||s("")}},{...r,parameters:{depthMask:!0,depthTest:!0,blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthFunc:515,blendEquation:32774,...r.parameters},views:r.views||[new v.Z({id:"mapbox"})]});var r;let l;return n&&n.props.gl!==t||(Object.assign(a,{gl:t,width:null,height:null,touchAction:"unset",viewState:L(i)}),null!==n&&void 0!==n&&n.isInitialized?_(n,i):a.onLoad=()=>{null===o||void 0===o||o(),_(l,i)}),n?(l=n,n.setProps(a),n.userData.isExternal=!0):(l=new g.Z(a),i.on("remove",(()=>{!function(e){var i;null===(i=e.__deck)||void 0===i||i.finalize(),e.__deck=null}(i)}))),l.userData.mapboxLayers=new Set,i.__deck=l,i.on("render",(()=>{l.isInitialized&&function(e,i){const{mapboxLayers:t,isExternal:n}=e.userData;if(n){const n=Array.from(t,(e=>e.id)),s=(0,y.x)(e.props.layers,Boolean).some((e=>e&&!n.includes(e.id)));let o=e.getViewports();const a=o.findIndex((e=>"mapbox"===e.id)),r=o.length>1||a<0;(s||r)&&(a>=0&&(o=o.slice(),o[a]=w(e,i,!1)),e._drawLayers("mapbox-repaint",{viewports:o,layerFilter:i=>(!e.props.layerFilter||e.props.layerFilter(i))&&("mapbox"!==i.viewport.id||!n.includes(i.layer.id)),clearCanvas:!1}))}e.userData.currentViewport=null}(l,i)})),l}function _(e,i){const t=()=>{e.isInitialized?function(e,i){e.setProps({viewState:L(i)}),e.needsRedraw({clearRedrawFlags:!0})}(e,i):i.off("move",t)};i.on("move",t)}function L(e){var i;const{lng:t,lat:n}=e.getCenter(),s={longitude:(t+540)%360-180,latitude:n,zoom:e.getZoom(),bearing:e.getBearing(),pitch:e.getPitch(),padding:e.getPadding(),repeat:e.getRenderWorldCopies()};return null!==(i=e.getTerrain)&&void 0!==i&&i.call(e)&&function(e,i){if(e.getFreeCameraOptions){const{position:t}=e.getFreeCameraOptions();if(!t||void 0===t.z)return;const n=e.transform.height,{longitude:s,latitude:o,pitch:a}=i,r=t.x*C,l=(1-t.y)*C,d=t.z*C,u=(0,x.w5)([s,o]),c=r-u[0],p=l-u[1],h=Math.sqrt(c*c+p*p),m=a*b,g=1.5*n,v=m<.001?g*Math.cos(m)/d:g*Math.sin(m)/h;i.zoom=Math.log2(v);const f=d-g*Math.cos(m)/v;i.position=[0,0,f/(0,x.NC)(o)]}else"number"===typeof e.transform.elevation&&(i.position=[0,0,e.transform.elevation])}(e,s),s}function w(e,i){let t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return new f.Z({id:"mapbox",x:0,y:0,width:e.width,height:e.height,...L(i),nearZMultiplier:t?.02:.1})}function k(e){if(e.userData.isExternal)return;const i=[];e.userData.mapboxLayers.forEach((e=>{const t=new(0,e.props.type)(e.props);i.push(t)})),e.setProps({layers:i})}class R{constructor(e){if((0,o.Z)(this,"id",void 0),(0,o.Z)(this,"type",void 0),(0,o.Z)(this,"renderingMode",void 0),(0,o.Z)(this,"map",void 0),(0,o.Z)(this,"deck",void 0),(0,o.Z)(this,"props",void 0),!e.id)throw new Error("Layer must have an unique id");this.id=e.id,this.type="custom",this.renderingMode=e.renderingMode||"3d",this.map=null,this.deck=null,this.props=e}onAdd(e,i){var t,n;this.map=e,this.deck=P({map:e,gl:i,deck:this.props.deck}),t=this.deck,n=this,t.userData.mapboxLayers.add(n),k(t)}onRemove(){var e,i;this.deck&&(e=this.deck,i=this,e.userData.mapboxLayers.delete(i),k(e))}setProps(e){Object.assign(this.props,e,{id:this.id}),this.deck&&k(this.deck)}render(){!function(e,i,t){let{currentViewport:n}=e.userData,s=!1;n||(n=w(e,i,!0),e.userData.currentViewport=n,s=!0),e.isInitialized&&e._drawLayers("mapbox-repaint",{viewports:[n],layerFilter:e=>{let{layer:i}=e;return t.id===i.id},clearStack:s,clearCanvas:!1})}(this.deck,this.map,this)}}class M{constructor(e){this.map=void 0,this.deckLayer=void 0,this.downloadImage=()=>{const e=document.querySelector(".mapboxgl-canvas");console.log(e),console.log(this.deckLayer.deck.canvas),setTimeout((()=>{let i=document.createElement("canvas");i.width=e.width,i.height=e.height,i.getContext("2d").drawImage(e,0,0);var t=new Image;t.width=e.width,t.height=e.height,t.src=i.toDataURL(),t.style.background="#f00",document.body.appendChild(t),document.body.appendChild(i);var n=document.createElement("a");n.download="filename.png",n.href=i.toDataURL(),n.click()}),1e3)},this.center=function(){},this.toMap=(e,i)=>{},this.toScreen=(e,i)=>{},this.mouseDown=e=>{},this.mouseUp=e=>{},this.mouseMove=e=>{},this.mouseClick=e=>{this.downloadImage()},this.mouseDClick=e=>{},this.initMap(e)}initMap(e){document.getElementById(e);this.deckLayer=new R({id:"my-scatterplot",type:m,data:[{position:[-74.5,40],size:1e4},{position:[-74.5,40.5],size:5e3},{position:[-74.6,40.5],size:5800}],getPosition:e=>e.position,getRadius:e=>e.size,getColor:[255,255,0]}),s().accessToken="pk.eyJ1IjoiZGVzaWduanUiLCJhIjoiY2xhNGU0YWo4MDlhYzNwdHBwenVvang4eiJ9.P3sX4l_3KjdPeRRbVS1VVg",this.map=new(s().Map)({preserveDrawingBuffer:!0,container:e,zoom:15,center:[-74.5,40],style:"mapbox://styles/mapbox/dark-v10"}),this.map.dragRotate.disable(),this.map.on("load",(()=>{this.map.addLayer(this.deckLayer,"waterway-label")})),this.map.on("mousemove",(e=>{this.mouseMove(e)})),this.map.on("click",(e=>{this.mouseClick(e)})),this.map.on("mousedown",(e=>{this.mouseDown(e)})),this.map.on("dblclick",(e=>{this.mouseDClick(e)})),this.map.on("mouseup",(e=>{this.mouseUp(e)}));let i=document.getElementsByClassName("mapboxgl-canvas")[0];i.style.position="absolute",i=document.getElementsByClassName("mapboxgl-control-container")[0],i.style.display="none"}}var F=t(55913);class E{constructor(e){this.divHost=void 0,this.mapboxWrapper=void 0,this.renderer=void 0,this.mouseDown=e=>{},this.mouseUp=e=>{},this.mouseDrag=e=>{},this.mouseClick=e=>{console.log(e),console.log(e.lngLat)},this.mouseMove=e=>{},this.divHost=e,this.divHost.style.position="relative",this.mapboxWrapper=new M(this.divHost.id)}keyDown(e){}destroy(){for(this.renderer.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}class S extends F.bb{constructor(e,i){super(e),this.app=void 0,this.time=0,this.pts=[],this.mouseDown=(e,i)=>{},this.mouseUp=(e,i)=>{},this.mouseDrag=(e,i)=>{},this.app=i,this.canvas.id="mapboxCustom",this.canvas.style.position="absolute",this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.style.pointerEvents="none",this.pts.push([-71.093161,42.358871]),this.start()}render(e){}}}}]);
//# sourceMappingURL=2725.8e5a2736.chunk.js.map