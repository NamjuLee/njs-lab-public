{"version":3,"file":"static/js/7798.6ca4634e.chunk.js","mappings":"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","sources":["njslab/Lab/image-dithering/index.ts"],"sourcesContent":["import { RendererCanvas, getImgFromURL, TypeDithering, dithering4_4, ditheringFloydSteinberg, getArrayBinaryImgFromCtx } from '../../../lib';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.margin = '50px';\r\n        div.style.background = 'rgba(0,0,0,0)';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.renderer = new Renderer(div);\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\nexport class Renderer extends RendererCanvas {\r\n    img: HTMLImageElement | undefined = undefined\r\n    rotation = 0.0;\r\n    m: number[] = [0, 0];\r\n\r\n    switch = true;\r\n\r\n    typeDithering: TypeDithering = TypeDithering.FloydSteinberg;\r\n    constructor(div: any) {\r\n        super(div);\r\n\r\n        this.ctx = this.canvas.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // getImgFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/img/person/HaminHaram.jpg').then( (img: HTMLImageElement) => {\r\n        getImgFromURL('https://www.glenstone.org/wp-content/uploads/2018/07/AV_Landscape-Hero-Contour-2993-1276x800.jpg').then((img: HTMLImageElement) => {\r\n            this.img = img;\r\n            this.img.onload = (ev) => {\r\n                this.update(img);\r\n            }\r\n        });\r\n        const divInput = document.createElement('input');\r\n        divInput.value = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/person/HaminHaram.jpg';\r\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\r\n            if (e.code === 'Enter') {\r\n                getImgFromURL(divInput.value).then((img: HTMLImageElement) => {\r\n                    this.img = img;\r\n                    this.img.onload = (ev) => {\r\n                        this.update(img);\r\n                    }\r\n                });\r\n            }\r\n\r\n        })\r\n        this.divHost.appendChild(divInput);\r\n\r\n        const divMain_01 = document.createElement('div');\r\n        divMain_01.style.display = 'flex';\r\n        divMain_01.style.marginTop = '15px';\r\n        this.divHost.appendChild(divMain_01);\r\n\r\n\r\n\r\n        // const divDark = document.createElement('div');\r\n        // divMain_01.appendChild(divDark);\r\n        // divDark.style.paddingRight = '100px';\r\n        // divDark.textContent = 'Darken';\r\n        // // divDark.style.position = 'absolute';\r\n        // divDark.style.color = 'aqua';\r\n        // divDark.onclick = () => {\r\n        //     // this.tints.push(new LocalTintCanvas(this, this.divHost.clientWidth * 0.5, this.divHost.clientHeight * 0.5, COLOR_BLENDING.OVERLAY, [0, 0, 0]))\r\n        // };\r\n\r\n        // const divswitch = document.createElement('div');\r\n        // divMain_01.appendChild(divswitch);\r\n        // divswitch.textContent = 'Toggle';\r\n        // // divswitch.style.position = 'absolute';\r\n        // divswitch.style.color = 'aqua';\r\n        // divswitch.onclick = () => {\r\n        //     this.switch = !this.switch;\r\n        // };\r\n        // \r\n\r\n\r\n        // const divMain_02 = document.createElement('div');\r\n        // divMain_02.style.display = 'flex';\r\n        // this.divHost.appendChild(divMain_02);\r\n\r\n        // const sl0 = getSlider('R1', 20, 400);\r\n        // divMain_02.appendChild(sl0.div);\r\n        // sl0.slider.oninput = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.radiusX = +sl0.slider.value;\r\n        //     // }\r\n        // };\r\n\r\n        // const sl1 = getSlider('R2', 20, 400);\r\n        // divMain_02.appendChild(sl1.div);\r\n        // sl1.slider.oninput = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.radiusY = +sl1.slider.value;\r\n        //     // }\r\n        // };\r\n\r\n\r\n        // const sl2 = getSlider('Feather', 4, 50);\r\n        // this.divHost.appendChild(sl2.div);\r\n        // sl2.slider.oninput = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.blur = +sl2.slider.value;\r\n        //     // }\r\n        // };\r\n\r\n        const slType = getSlider(TypeDithering.FloydSteinberg, 0, 2);\r\n        slType.slider.defaultValue = '0';\r\n        this.divHost.appendChild(slType.div);\r\n        slType.slider.oninput = () => {\r\n            const value = parseInt(slType.slider.value);\r\n\r\n            if (value === 0) {\r\n                this.typeDithering = TypeDithering.FloydSteinberg;\r\n                slType.text.textContent = TypeDithering.FloydSteinberg;\r\n            } else if (value === 1) {\r\n                this.typeDithering = TypeDithering.BayerOrderedDithering;\r\n                slType.text.textContent = TypeDithering.BayerOrderedDithering;\r\n            } else {\r\n                this.typeDithering = TypeDithering.None;\r\n                slType.text.textContent = TypeDithering.None;\r\n            }\r\n            // if (this.capture) {\r\n            //     this.capture.opacity = +sl3.slider.value * 0.01;\r\n            // }\r\n\r\n            this.render(this.ctx, this.typeDithering);\r\n        };\r\n\r\n        // const divInputColor = document.createElement('input');\r\n        // divInputColor.type = 'color';\r\n        // divInputColor.addEventListener('input', () => {\r\n        //     //     console.log(divInputColor.value)\r\n        //     // if (this.capture) {\r\n        //     //     const colArray = hex2RGBA(divInputColor.value)\r\n        //     //     // this.capture.opacity = +sl3.slider.value * 0.01;\r\n        //     //     this.capture.rgb = colArray;\r\n        //     // //     console.log(colArray)\r\n        //     // }\r\n        // });\r\n        // this.divHost.appendChild(divInputColor);\r\n\r\n        // const divInputFilterName = document.createElement('input');\r\n        // divInputFilterName.onchange = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.globalCompositeOperation = divInputFilterName.value as GlobalCompositeOperation;\r\n        //     // }\r\n        // }\r\n        // this.divHost.appendChild(divInputFilterName);\r\n\r\n        \r\n        const divButtonImgLoad = buttonImgLoad((img: HTMLImageElement)=> {\r\n            this.img = img;\r\n            this.canvas.width = this.img.width;\r\n            this.canvas.height = this.img.height;\r\n            this.render(this.ctx, this.typeDithering);\r\n        });\r\n        divMain_01.appendChild(divButtonImgLoad);\r\n\r\n\r\n        const divLight = document.createElement('div');\r\n        divMain_01.appendChild(divLight);\r\n        divLight.textContent = 'Base64';\r\n        divLight.style.paddingRight = '50px';\r\n        // divLight.style.position = 'absolute';\r\n        // divLight.style.color = 'aqua';\r\n        divLight.onclick = () => {\r\n            const base64 = this.ctx.canvas.toDataURL();\r\n            console.log(base64);\r\n            // console.log(this.ctx.canvas.toBlob())\r\n        }\r\n        const divDownload = document.createElement('div');\r\n        divMain_01.appendChild(divDownload);\r\n        divDownload.textContent = 'Download';\r\n        divDownload.style.paddingRight = '50px';\r\n        // divDownload.style.position = 'absolute';\r\n        // divDownload.style.color = 'aqua';\r\n        divDownload.onclick = () => {\r\n            const d = getArrayBinaryImgFromCtx(this.ctx);\r\n            // const base64 = this.ctx.canvas.toDataURL();\r\n            // console.log(base64);\r\n            // console.log(this.ctx.canvas.toBlob())\r\n\r\n            fileDownload(d);\r\n        }\r\n\r\n        \r\n        this.start();\r\n    }\r\n    public update(img: HTMLImageElement) {\r\n        this.img = img;\r\n        this.canvas.width = this.img.width;\r\n        this.canvas.height = this.img.height;\r\n        this.render(this.ctx, this.typeDithering);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, typeDitheringType?: TypeDithering): void {\r\n        if (this.img === undefined) { return; }\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        if (this.img) {\r\n            this.ctx.drawImage(this.img, 0, 0);\r\n        }\r\n        this.ctx.restore();\r\n\r\n        switch (typeDitheringType) {\r\n            case TypeDithering.FloydSteinberg:\r\n                ditheringFloydSteinberg(ctx);\r\n                break;\r\n            case TypeDithering.BayerOrderedDithering:\r\n                dithering4_4(ctx);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // !! can stop render after this frame.\r\n        this.isStatic = true;\r\n    }\r\n}\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n    return {\r\n        div, slider, text\r\n    }\r\n};\r\nconst buttonImgLoad = (callback: (img: HTMLImageElement) => void) => {\r\n    const inputFile = document.createElement('input');\r\n    inputFile.type = 'file';\r\n    inputFile.onchange = (e) => {\r\n        //@ts-ignore\r\n        if (e.target.files) {\r\n            //@ts-ignore\r\n            let imageFile = e.target.files[0]; //here we get the image file\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(imageFile);\r\n            reader.onloadend = (e) => {\r\n                const img = new Image(); // Creates image object\r\n                //@ts-ignore\r\n                img.src = e.target.result; // Assigns converted image to image object\r\n                img.onload = (ev) => {\r\n                    callback(img);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return inputFile;\r\n};\r\n\r\nconst fileDownload = (d: any, fileName: string = 'img.txt') => {\r\n    const blob = new Blob(d, { type: \"text/plain\" });\r\n    const link = document.createElement('a');\r\n    link.download = fileName;\r\n    link.href = URL.createObjectURL(blob);\r\n    link.click();\r\n    URL.revokeObjectURL(link.href);\r\n}"],"names":["Solution","constructor","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","margin","background","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","img","undefined","rotation","m","switch","typeDithering","TypeDithering","ctx","canvas","getContext","willReadFrequently","position","width","height","getImgFromURL","then","onload","ev","update","divInput","value","addEventListener","e","code","divMain_01","marginTop","slType","getSlider","slider","defaultValue","oninput","parseInt","text","textContent","render","divButtonImgLoad","buttonImgLoad","divLight","paddingRight","onclick","base64","toDataURL","console","log","divDownload","d","getArrayBinaryImgFromCtx","fileDownload","start","typeDitheringType","clearRect","drawImage","restore","ditheringFloydSteinberg","dithering4_4","isStatic","title","min","max","type","color","callback","inputFile","onchange","target","files","imageFile","reader","FileReader","readAsDataURL","onloadend","Image","src","result","fileName","blob","Blob","link","download","href","URL","createObjectURL","click","revokeObjectURL"],"sourceRoot":""}