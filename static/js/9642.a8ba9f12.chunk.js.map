{"version":3,"file":"static/js/9642.a8ba9f12.chunk.js","mappings":"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","sources":["njslab/Tools/WaterQualityInspector/ChartVizWater/WaterQualityInspector.ts","njslab/Tools/WaterQualityInspector/ChartVizWater/index.ts","njslab/Tools/WaterQualityInspector/index.ts"],"sourcesContent":["import { getCSVFromURL } from 'njscore';\r\n\r\nexport class WaterQualityInspector {\r\n    public data = {};\r\n\r\n    public day = 24;\r\n\r\n    public scale = 1.0\r\n    public dataSampling = 4;\r\n    public margin = 25;\r\n    public ctx: CanvasRenderingContext2D;\r\n\r\n    constructor(ctx: CanvasRenderingContext2D) {\r\n        this.ctx = ctx;\r\n        document.onkeydown = (k) => {\r\n            this.dataSampling++;\r\n            // console.log(this.dataSampling)\r\n        }\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/Watabot/obs_104_1928_d047_15c7.csv').then((d) => {\r\n            const lines = d.split(/\\r\\n|\\r|\\n/g);\r\n            const index = lines[0].split(',');\r\n\r\n            const dataDic = {}\r\n            let needComputeData = true;\r\n            for (let i = 0; i < index.length; ++i) {\r\n                // console.log(index[i]);\r\n                if (needComputeData && index[i] === 'time (UTC)') {\r\n                    dataDic[index[i]] = [];\r\n                    needComputeData = false;\r\n                } else {\r\n                    dataDic[index[i]] = new Float32Array(lines.length - 1);\r\n                }\r\n            }\r\n\r\n            for (let i = 1; i < lines.length; ++i) {\r\n                const row = lines[i].split(',');\r\n                for (let j = 0; j < index.length; ++j) {\r\n                    const theIndex = index.indexOf(index[j]);\r\n                    if (theIndex !== -1) {\r\n                        dataDic[index[j]][i - 1] = row[theIndex];\r\n                    }\r\n                }\r\n\r\n            }\r\n            this.data = dataDic;\r\n            // console.log(dataDic);\r\n            this.render(this.ctx);\r\n        });\r\n    }\r\n    public Offset(v) {\r\n        if (v < 0) {\r\n            // this.offsetData -= this.offsetData * 0.5;\r\n        } else {\r\n            // this.offsetData += this.offsetData * 0.5;\r\n        }\r\n    }\r\n    public wheel(e: WheelEvent) {\r\n        if (e.deltaY < 0) {\r\n            this.scale += this.scale * .25;\r\n        } else {\r\n            this.scale -= this.scale * .25;\r\n        }\r\n        this.scale = this.scale < 0.012 ? 0.012 : this.scale;\r\n        // console.log(this.scale);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        console.log('o')\r\n        let index = [\r\n            'mass_concentration_of_blue_green_algae_in_sea_water_rfu (RFU)', // 0.10000000149011612 3.700000047683716\r\n            'chlorophyll_fluorescence (RFU)',  // 0.10000000149011612 8\r\n            'sea_water_turbidity (1)', // 0.009999999776482582 335.9800109863281\r\n            'sea_water_temperature (K)', // 255.37222290039062 300.00555419921875\r\n            'sea_water_ph_reported_on_total_scale (1)', // 255.37222290039062 300.00555419921875\r\n        ];\r\n        // let index = ;\r\n        let d = this.data[index[4]]; // sea_water_temperature (K) sea_water_turbidity (1)\r\n        if (d === undefined) { return; }\r\n        dd(ctx, d, this.scale, this.day, this.margin);\r\n        vizData(ctx, d, '#f00', this.scale, this.day, this.dataSampling, this.margin);\r\n\r\n        // d = this.data['sea_water_turbidity (1)'];\r\n        // vizData(ctx, d, '#0f0', this.scale, this.day, this.dataSampling, this.margin);\r\n\r\n        // d = this.data['chlorophyll_fluorescence (RFU)'];\r\n        // vizData(ctx, d, '#00f', this.scale, this.day, this.dataSampling, this.margin);\r\n\r\n        // d = this.data['oxidation_reduction_potential (mV)'];\r\n        // vizData(ctx, d, '#0ff', this.scale, this.day, this.dataSampling, this.margin);\r\n    }\r\n}\r\n\r\nconst dd = (ctx: CanvasRenderingContext2D, d, scale, day, margin) => {\r\n    const hourRes = 12;\r\n\r\n\r\n    // const margin = \r\n    ctx.setLineDash([2, 2]);\r\n    ctx.lineWidth = 1;\r\n\r\n    for (let i = 0; i < d.length; i++) {\r\n        ctx.strokeStyle = `rgba(200, 200, 200, 0.8)`;\r\n\r\n        if (scale > 0.1) {\r\n            if (i % (hourRes * day) === 0) {\r\n                const x = margin + i * scale;\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, margin);\r\n                ctx.lineTo(x, ctx.canvas.height - margin);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        ctx.strokeStyle = `rgba(0, 0, 255, 0.8)`;\r\n        if (scale > 0.02) {\r\n            if (i % (hourRes * day * 7) === 0) {\r\n                const x = margin + i * scale;\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, margin);\r\n                ctx.lineTo(x, ctx.canvas.height - margin);\r\n                ctx.stroke();\r\n                // console.log(i)\r\n            }\r\n        }\r\n\r\n        ctx.strokeStyle = `rgba(0, 255, 0, 0.8)`;\r\n        if (i % (hourRes * day * 30) === 0) {\r\n            const x = margin + i * scale;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, margin);\r\n            ctx.lineTo(x, ctx.canvas.height - margin);\r\n            ctx.stroke();\r\n            // console.log(i)\r\n        }\r\n\r\n    }\r\n    ctx.setLineDash([]);\r\n};\r\n\r\nconst vizData = (ctx: CanvasRenderingContext2D, d, color, scale, day, dataSampling, margin) => {\r\n    ctx.lineWidth = 3;\r\n    ctx.strokeStyle = color;\r\n\r\n    let scaleLocalY = 100;\r\n\r\n    let min = Number.MAX_VALUE;\r\n    let max = Number.MIN_VALUE;\r\n\r\n    ctx.beginPath();\r\n    let x = 0;\r\n    ctx.moveTo(x + margin, margin + d[0] * scaleLocalY);\r\n\r\n    for (let i = 1; i < d.length; i += dataSampling) {\r\n        x += 1;\r\n\r\n        const xP = margin + x * scale * dataSampling;\r\n        let yP = 0 + margin;\r\n        let val = 0\r\n        let key = 'max'; // max\r\n        switch (key) {\r\n            case 'mean':\r\n                for (let j = 0; j < dataSampling; ++j) {\r\n                    val += d[i + j];\r\n                    if (min > val)\r\n\r\n                        min = min > val ? val : min;\r\n                    max = max < val ? val : max;\r\n\r\n                }\r\n                yP = margin + val / dataSampling * scaleLocalY;\r\n                ctx.lineTo(xP, yP);\r\n                break;\r\n            default:\r\n                for (let j = 0; j < dataSampling; ++j) {\r\n                    if (val < d[i + j]) {\r\n                        val = d[i + j];\r\n\r\n                        min = min > val ? val : min;\r\n                        max = max < val ? val : max;\r\n                    }\r\n                }\r\n                yP = margin + val * scaleLocalY; // / offsetData;\r\n                ctx.lineTo(xP, yP);\r\n                break;\r\n        }\r\n\r\n        // console.log(i)\r\n    }\r\n    // console.log(x)\r\n    console.log(min, max);\r\n    ctx.stroke();\r\n};\r\n\r\n// Possibility of harmful algae bloom (to be calculated based on prediction model)\r\n// blue_green_algae_in_sea_water_rfu (RFU)\r\n// chlorophyll_fluorescence (RFU)\r\n// sea_water_turbidity\r\n// sea_water_temperature (K)\r\n// Sea_water_ph\r\n\r\n// time (UTC)\r\n// mass_concentration_of_chlorophyll_in_sea_water (kg m-3)\r\n// chlorophyll_fluorescence (RFU)\r\n// sea_water_electrical_conductivity (S m-1)\r\n// mass_concentration_of_oxygen_in_sea_water (kg m-3)\r\n// oxidation_reduction_potential (mV)\r\n// sea_water_ph_reported_on_total_scale (1)\r\n// mass_concentration_of_blue_green_algae_in_sea_water (ug L-1)\r\n// mass_concentration_of_blue_green_algae_in_sea_water_rfu (RFU)\r\n// sea_water_turbidity (1)\r\n// sea_water_temperature (K)\r\n// platform\r\n\r\nconst getMinMax = (d: number[], dataSampling: number) => {\r\n\r\n    let min = Number.MAX_VALUE;\r\n    let max = Number.MIN_VALUE;\r\n\r\n\r\n    let x = 0;\r\n\r\n    for (let i = 1; i < d.length; i += dataSampling) {\r\n        x += 1;\r\n        let val = 0\r\n        let key = 'max';\r\n        switch (key) {\r\n            case 'mean':\r\n                for (let j = 0; j < dataSampling; ++j) {\r\n                    min = min > val ? val : min;\r\n                    max = max < val ? val : max;\r\n                }\r\n                break;\r\n            default:\r\n                for (let j = 0; j < dataSampling; ++j) {\r\n                    min = min > val ? val : min;\r\n                    max = max < val ? val : max;\r\n\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n    return [min, max];\r\n};","import { WaterQualityInspector } from './WaterQualityInspector';\nexport class ChartVizWater {\n    public divHost: HTMLDivElement;\n    public canvas: HTMLCanvasElement;\n    public ctx: CanvasRenderingContext2D;\n    public isDown: boolean = false;\n    public debugMode: boolean = false;\n    public isStatic: boolean = false\n\n    public waterQualityInspector: WaterQualityInspector;\n\n    private prevent: boolean = false;\n    private delay: number = 250;\n    private timer: NodeJS.Timer | number;\n    private isDrag: boolean = false;\n\n    constructor(div: HTMLDivElement) {\n        this.divHost = div;\n\n        const bounding = this.divHost.getBoundingClientRect();\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\n\n        this.canvas.style.position = 'relative';\n        this.canvas.style.width = '100%';\n        this.canvas.style.height = '100%';\n        this.canvas.style.background = '#fff';\n        this.canvas.style.borderRadius = '30px';\n\n        // this.canvas.style.position = 'absolute';\n        this.canvas.width = bounding.width;\n        this.canvas.height = bounding.height;\n        this.divHost.appendChild(this.canvas);\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n        this.ctx.scale(-1,1)\n        this.ctx.translate(-this.ctx.canvas.width, 0)\n        this.canvas.onclick = (e: MouseEvent) => {\n            this.timer = setTimeout(() => {\n                if (!this.prevent) {\n                    this.mouseClick(e.offsetX, e.offsetY);\n                }\n                this.isDrag = false;\n                this.prevent = false;\n            },this.delay);\n            this.loop(this.ctx);\n        };\n        // this.canvas.onwheel = (e: WheelEvent) => {\n        //     this.mouseWheel(e);\n        //     this.loop(this.ctx);\n        // };\n        this.canvas.ondblclick = (e: MouseEvent) => {\n            clearTimeout(this.timer as number);\n            this.prevent = true;\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\n            this.loop(this.ctx);\n        };\n        this.canvas.onmousedown = (e: MouseEvent) => {\n            this.isDown = true;\n            this.mouseDown(e.offsetX, e.offsetY);\n            this.loop(this.ctx);\n        };\n        this.canvas.onmouseup = (e: MouseEvent) => {\n            this.isDown = false;\n            this.isDrag = false;\n            this.mouseUp(e.offsetX, e.offsetY);\n            this.loop(this.ctx);\n        };\n        this.canvas.onmousemove = (e: MouseEvent) => {\n            if (this.isDown) {\n                this.isDrag = true;\n                this.prevent = true;\n                this.mouseDrag(e.offsetX, e.offsetY);\n            } else {\n                this.mouseMove(e.offsetX, e.offsetY);\n            }\n            this.loop(this.ctx);\n        };\n\n        this.canvas.onwheel = (e) => {\n            this.waterQualityInspector.wheel(e);\n            this.loop(this.ctx);\n        };\n\n        this.waterQualityInspector = new WaterQualityInspector(this.ctx);\n        window.addEventListener('resize', this.resize);\n        // this.loop(this.ctx);\n        this.start();\n    }\n    public start() {\n        this.loop(this.ctx);\n    }\n    private resize = () => {\n        const bounding = this.divHost.getBoundingClientRect();\n        this.canvas.width = bounding.width;\n        this.canvas.height = bounding.height;\n        this.loop(this.ctx);\n    }\n    public destroy() {\n        window.removeEventListener('resize', this.resize);\n        this.isStatic = true;\n        try {\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\n                this.divHost.removeChild(this.divHost.lastElementChild);\n            }\n        } catch (error) { }\n    }\n    public loop(ctx: CanvasRenderingContext2D) {\n        console.log('loop');\n        if (this.isStatic) { return; }\n        // requestAnimationFrame(() => { this.loop(ctx); });\n\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        this.render(ctx);\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n\n        // this.ctx.save();\n        // this.ctx.translate(-400, 0)\n        // this.ctx.scale(-1, 0);\n        this.waterQualityInspector.render(this.ctx);\n\n        // this.ctx.restore();\n    }\n    public mouseClick(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('click'); }\n    }\n    public mouseDoubleClick(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('d-click'); }\n    }\n    public mouseDown(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('down'); }\n    }\n    public mouseUp(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('up'); }\n    }\n    public mouseMove(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('move'); }\n    }\n    public mouseDrag(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('drag'); }\n    }\n    public mouseWheel(v: WheelEvent) {\n        // Binding needed\n        if (this.debugMode) { console.log('wheel', v); }\n    }\n}\n\n","import { remap } from '../../../lib'\r\n\r\nimport { ChartVizWater } from './ChartVizWater';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public chartVizWater: ChartVizWater;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        // div.style.backgroundColor = '#555';\r\n        div.style.width = '900px';\r\n        div.style.height = '500px';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.chartVizWater = new ChartVizWater(div);\r\n    }\r\n    public destroy() {\r\n        this.chartVizWater.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n"],"names":["WaterQualityInspector","constructor","ctx","data","day","scale","dataSampling","margin","this","document","onkeydown","k","getCSVFromURL","process","then","d","lines","split","index","dataDic","needComputeData","i","length","Float32Array","row","j","theIndex","indexOf","render","Offset","v","wheel","e","deltaY","console","log","undefined","dd","vizData","setLineDash","lineWidth","strokeStyle","x","beginPath","moveTo","lineTo","canvas","height","stroke","color","min","Number","MAX_VALUE","max","MIN_VALUE","xP","yP","val","ChartVizWater","div","divHost","isDown","debugMode","isStatic","waterQualityInspector","prevent","delay","timer","isDrag","resize","bounding","getBoundingClientRect","width","loop","createElement","style","position","background","borderRadius","appendChild","getContext","translate","onclick","setTimeout","mouseClick","offsetX","offsetY","ondblclick","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","mouseMove","onwheel","window","addEventListener","start","destroy","removeEventListener","lastElementChild","removeChild","error","clearRect","y","mouseWheel","Solution","chartVizWater","display","alignItems","marginLeft","marginRight"],"sourceRoot":""}