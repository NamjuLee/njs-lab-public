{"version":3,"file":"static/js/3053.562ba28b.chunk.js","mappings":"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AAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,EAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,EAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,I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","sources":["njslab/Lab/AppTFEnv/Implementation/TFProject/Core/ActiveCommandController.ts","lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegression01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegressionGradientDescent02.ts","lib/NJSCore/ML/Core/TFDataUtility.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFLinearRegressionGradientDescent01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent02.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent03Interaction.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel02XOR.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel03Iris.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel03SmartDrawing.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel01HorsepowerAndMilesPerGallon.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFMnist.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/Blank.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/index.ts"],"sourcesContent":["import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { TFProject } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: TFProject;\r\n\r\n    constructor(scene: TFProject) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { NVector3 } from '../../../../../';\r\nimport { MouseEventData } from '../../../../../IO/EventInteraction/MouseInteraction';\r\n\r\nimport { IndependentPanelWrapper } from '../../IndependentPanelWrapper';\r\nimport { ColorUtility } from '../../../../../Core/NColor/';\r\n\r\nimport { IndePanelPreset } from '../../Core/IndePanelPreset';\r\n\r\nimport { IndePanelBase } from './base/base/IndePanelBase';\r\n\r\nimport { BtnClose } from './base/BtnClose';\r\nimport { BtnMinimize } from './base/BtnMinimize';\r\nimport { BtnHam } from './base/BtnHam';\r\nimport { BtnResize } from './base/BtnResize';\r\n\r\nimport { BodyDiv } from './base/BodyDiv';\r\nimport { IndeSubPanel } from './base/IndeSubPanel';\r\n\r\nexport class IndependentPanelCanvas extends IndePanelBase {\r\n    independentPanelWrapper: IndependentPanelWrapper;\r\n    divInput: HTMLTextAreaElement;\r\n\r\n    btnClose: BtnClose;\r\n    btnMini: BtnMinimize;\r\n    btnHam: BtnHam;\r\n    btnResize: BtnResize;\r\n\r\n    bodyDiv: BodyDiv;\r\n    subMenu: IndeSubPanel;\r\n\r\n    subs: IndePanelBase[] = [];\r\n\r\n    _content: string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    isActive: boolean = true;\r\n\r\n    constructor(independentPanelWrapper: IndependentPanelWrapper, x: number = 0, y: number = 0, width: number = 300, height: number = 170, divNeeded: boolean = false) {\r\n        super(independentPanelWrapper);\r\n        this.independentPanelWrapper = independentPanelWrapper;\r\n        this.title = 'njslabSandbox V3';\r\n        this.width = width;\r\n        this.height = height;\r\n        if (x === 0 && y === 0) {\r\n            this.vec.x = (independentPanelWrapper.width * 0.5) - (this.width * 0.5);\r\n            this.vec.y = (independentPanelWrapper.height * 0.5) - (this.height * 0.5);\r\n        } else {\r\n            this.vec.x = x;\r\n            this.vec.y = y;\r\n        }\r\n        this.filletR = 7;\r\n        this.InitTop();\r\n        if (divNeeded) {\r\n            this.bodyDiv = new BodyDiv(this, this.vec.x, this.vec.y + this.HeadHeight, this.width, this.height - this.HeadHeight);\r\n            // this.bodyDiv.div.style.background = 'red';\r\n        }\r\n        this.InitCanvas(this.bodyDiv.div);\r\n    }\r\n\r\n    get IsMinimized() {\r\n        return this.isMinimized;\r\n    }\r\n    set IsMinimized(v: boolean) {\r\n        this.isMinimized = v;\r\n        this.btnResize.isHidden = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Hide(v); }\r\n    }\r\n    get Width() {\r\n        return this.width;\r\n    }\r\n    set Width(v: number) {\r\n        let off = v - this.width;\r\n        this.width = v;\r\n        this.btnHam.vec.x += off;\r\n        this.subMenu.vec.x += off;\r\n        if (this.bodyDiv) { this.bodyDiv.Width = v; }\r\n    }\r\n    get Height() {\r\n        return this.height;\r\n    }\r\n    set Height(v: number) {\r\n        this.height = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Height = v; }\r\n        // this.subMenu\r\n    }\r\n    get content() {\r\n        return this._content;\r\n    }\r\n    set content(v: string) {\r\n        this._content = v;\r\n        if (this.bodyDiv) { this.bodyDiv.content = v; }\r\n    }\r\n    get HasSubMenu() {\r\n        return this.hasSubMenu;\r\n    }\r\n    set HasSubMenu(v: boolean) {\r\n        this.hasSubMenu = v;\r\n        this.subMenu.IsHidden = !v;\r\n    }\r\n    InitTop() {\r\n        this.btnClose = new BtnClose(this, this.vec.x, this.vec.y);\r\n        this.btnMini = new BtnMinimize(this, this.vec.x + 25, this.vec.y);\r\n        this.btnHam = new BtnHam(this, this.vec.x - 25 + this.width, this.vec.y);\r\n        this.btnResize = new BtnResize(this, this.vec.x + this.width - 10, this.vec.y + this.height - 10, 10, 10);\r\n\r\n        this.subMenu = new IndeSubPanel(this);\r\n        this.subs.push(this.btnClose, this.btnMini, this.btnHam);\r\n    }\r\n    Translate(e: MouseEventData): void {\r\n        if (!this.isMoveable) { return; }\r\n        let xo = e.x - e.preX;\r\n        let yo = e.y - e.preY;\r\n        this.vec.x += xo;\r\n        this.vec.y += yo;\r\n        for (let i = 0; i < this.boundarVecs.length; ++i) { this.boundarVecs[i].x += xo; this.boundarVecs[i].y += yo; }\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Translate(e); }\r\n        this.btnResize.vec.x += xo;\r\n        this.btnResize.vec.y += yo;\r\n        this.subMenu.Translate(xo, yo);\r\n        if (this.bodyDiv) { this.bodyDiv.Translate(xo, yo); }\r\n\r\n    }\r\n    Remove() {\r\n        this.RemovePost();\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Remove(); }\r\n        if (this.bodyDiv) { this.bodyDiv.Remove(); }\r\n        this.btnResize.Remove();\r\n        this.independentPanelWrapper.indePanelRender.Remove(this);\r\n    }\r\n    RenderPost(ctx: CanvasRenderingContext2D): void {\r\n        // console.log(IndePanelRender.length);\r\n        // this.vec.x = this.mainPanel.vec.x + this.xOff;\r\n        // this.vec.y = this.mainPanel.vec.y + this.yOff;\r\n        this.ComputeBoundary();\r\n\r\n        let color;\r\n        // if (this.isOver) {\r\n        //     color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuOver, this.transparent);\r\n        // } else {\r\n        color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuNormal, this.transparent);\r\n        // }\r\n        if (this.isMinimized) {\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n\r\n        } else {\r\n            IndePanelPreset.RoundedRectFillWithColorMainMenu(ctx, this.title, this.boundarVecs, this.filletR, 0, this.isOver, this.isSelected, color);\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n        }\r\n        this.RenderHeadTitle(ctx);\r\n        if (!this.isMinimized) {\r\n            this.RenderBodyContent(ctx);\r\n        }\r\n        if (this.hasSubMenu) {\r\n            this.subMenu.RenderPost(ctx);\r\n        }\r\n        this.RenderBtnHorizontal(ctx);\r\n    }\r\n    RenderBtnHorizontal(ctx: CanvasRenderingContext2D) {\r\n        /* */\r\n    }\r\n    RenderHeadTitle(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        // if (this.isOver) {\r\n        //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // } else {\r\n        ctx.fillStyle = '#ffffff';\r\n        // }\r\n        ctx.textBaseline = 'top';\r\n        ctx.textAlign = 'center';\r\n        ctx.font = '100 12px Arial';\r\n        ctx.shadowBlur = 0;\r\n        // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        ctx.shadowOffsetY = 0;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.fillText(this.title, this.vec.x + (this.width * 0.5), this.vec.y + (this.HeadHeight * 0.5) - 7);\r\n\r\n        ctx.restore();\r\n    }\r\n    RenderBodyContent(ctx: CanvasRenderingContext2D) {\r\n        // ctx.save();\r\n        // // if (this.isOver) {\r\n        // //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // // } else {\r\n        // ctx.fillStyle = '#000000';\r\n        // // }\r\n        // ctx.textBaseline = 'top';\r\n        // ctx.textAlign = 'center';\r\n        // ctx.font = '100 9px Sans-serif';\r\n        // ctx.fillText(this.content, this.vec.x + (this.width * 0.5), this.vec.y + (this.height * 0.5) - 5);\r\n\r\n        // ctx.shadowBlur = 0;\r\n        // // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        // ctx.shadowOffsetY = 0;\r\n        // ctx.shadowOffsetX = 0;\r\n\r\n        // ctx.restore();\r\n\r\n    }\r\n    RemovePost() {\r\n        this.isActive = false;\r\n    }\r\n    InitCanvas(hostDiv: HTMLElement) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.zIndex = '0';\r\n        hostDiv.appendChild(this.canvas);\r\n\r\n        this.canvas.id = 'NCanvasRenderer';\r\n        this.canvas.className = 'njslab-web-core-canvas-renderer';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.canvas.width = hostDiv.clientWidth; // hostDivForSize.clientWidth;\r\n        this.canvas.height = hostDiv.clientHeight; // hostDivForSize.clientHeight;\r\n\r\n        this.btnResize.ResizePropagation = (width: number, height: number) => {\r\n            this.canvas.width = width; // hostDivForSize.clientWidth;\r\n            this.canvas.height = height; // hostDivForSize.clientHeight;\r\n        };\r\n        this.LoopIndependentCanvas(this.ctx);\r\n    }\r\n    LoopIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        requestAnimationFrame(() => { this.LoopIndependentCanvas(ctx); });\r\n        this.RenderIndependentCanvas(ctx);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n    //     console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.canvas.width = width; // hostDivForSize.clientWidth;\r\n        this.canvas.height = height; // hostDivForSize.clientHeight;\r\n    }\r\n}","import { IndependentPanelCanvas } from '../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegression01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    a: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.LinearRegression();\r\n        this.RenderLine(ctx);\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.a * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.a * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public LinearRegression() {\r\n        let xSum = 0;\r\n        let ySum = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            xSum += this.vs[i].x;\r\n            ySum += this.vs[i].y;\r\n        }\r\n        let xMean = xSum / this.vs.length;\r\n        let yMean = ySum / this.vs.length;\r\n\r\n        let num = 0;\r\n        let den = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            num += (this.vs[i].x - xMean) * (this.vs[i].y - yMean);\r\n            den += (this.vs[i].x - xMean) * (this.vs[i].x - xMean);\r\n        }\r\n        this.a = num / den;\r\n        this.bias = yMean - this.a * xMean;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    weight: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.weight * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.weight * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public GradientDescent() {\r\n        let learningRate = 0.1;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let x = this.vs[i].x;\r\n            let y = this.vs[i].y;\r\n            let hypothesis = this.weight * x + this.bias;\r\n            let error = y - hypothesis;\r\n\r\n            this.weight = this.weight + (error * x) * learningRate;\r\n            this.bias = this.bias + (error) * learningRate;\r\n            // console.log(error);\r\n        }\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n\r\nexport class TFDataUtility {\r\n    static async getData() {\r\n        const carsDataReq = await fetch('https://storage.googleapis.com/tfjs-tutorials/carsData.json');\r\n        const carsData = await carsDataReq.json();\r\n        const cleaned = carsData.map((car: any) => ({\r\n            mpg: car.Miles_per_Gallon,\r\n            horsepower: car.Horsepower,\r\n        }))\r\n            .filter((car: any) => (car.mpg != null && car.horsepower != null));\r\n        return cleaned;\r\n    }\r\n    public static Get_XY_OneHot_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            // console.log(targetLength);\r\n            // console.log(targetsByClass);\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.oneHot(tf.tensor1d(targetsByClass).toInt(), targetLength + 1);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n    public static Get_XY_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.tensor1d(targetsByClass);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n\r\n    // tslint:disable-next-line:no-any\r\n    public static SplitTensorFromXY(xs: any, ys: any, testSplit: number = 0.5) {\r\n        const numTestExamples = Math.round(xs.shape[0] * testSplit);\r\n        const numTrainExamples = xs.shape[0] - numTestExamples;\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xs.shape[1]]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xs.shape[1]]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, ys.shape[1]]);\r\n        const yTest = ys.slice([numTrainExamples, 0], [numTestExamples, ys.shape[1]]);\r\n        return [xTrain, yTrain, xTest, yTest];\r\n\r\n        // return tf.tidy(() => {\r\n        //     const dataByClass = [];\r\n        //     const targetsByClass = [];\r\n        //     // for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //     //     dataByClass.push([]);\r\n        //     //     targetsByClass.push([]);\r\n        //     // }\r\n        //     // for (const example of IRIS_DATA) {\r\n        //     //     const target = example[example.length - 1];\r\n        //     //     const data = example.slice(0, example.length - 1);\r\n        //     //     dataByClass[target].push(data);\r\n        //     //     targetsByClass[target].push(target);\r\n        //     // }\r\n        //     // console.log();\r\n\r\n        //     const xTrains = [];\r\n        //     const yTrains = [];\r\n        //     const xTests = [];\r\n        //     const yTests = [];\r\n        //     for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //         const [xTrain, yTrain, xTest, yTest] = DataUtility.ConvertToTensors(dataByClass[i], targetsByClass[i], testSplit);\r\n        //         xTrains.push(xTrain);\r\n        //         yTrains.push(yTrain);\r\n        //         xTests.push(xTest);\r\n        //         yTests.push(yTest);\r\n        //     }\r\n\r\n        //     const concatAxis = 0;\r\n        //     return [\r\n        //         tf.concat(xTrains, concatAxis), tf.concat(yTrains, concatAxis),\r\n        //         tf.concat(xTests, concatAxis), tf.concat(yTests, concatAxis)\r\n        //     ];\r\n        // });\r\n\r\n    }\r\n    public static ConvertToTensors(data: number[][], targets: number[], testSplit: number) {\r\n    //     console.log('++');\r\n    //     console.log(data);\r\n    //     console.log(targets);\r\n    //     console.log(testSplit);\r\n\r\n        const numExamples = data.length;\r\n        if (numExamples !== targets.length) {\r\n            throw new Error('data and split have different numbers of examples');\r\n        }\r\n\r\n        const numTestExamples = Math.round(numExamples * testSplit);\r\n        const numTrainExamples = numExamples - numTestExamples;\r\n\r\n        const xDims = data[0].length;\r\n\r\n        // Create a 2D `tf.Tensor` to hold the feature data.\r\n        const xs = tf.tensor2d(data, [numExamples, xDims]);\r\n\r\n        // Create a 1D `tf.Tensor` to hold the labels, and convert the number label\r\n        // from the set {0, 1, 2} into one-hot encoding (.e.g., 0 --> [1, 0, 0]).\r\n        const ys = tf.oneHot(tf.tensor1d(targets).toInt(), 4); // IRIS_NUM_CLASSES\r\n\r\n        // Split the data into training and test sets, using `slice`.\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xDims]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xDims]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, 4]); // IRIS_NUM_CLASSES\r\n        const yTest = ys.slice([0, 0], [numTestExamples, 4]); // IRIS_NUM_CLASSES\r\n        return [xTrain, yTrain, xTest, yTest];\r\n    }\r\n\r\n    public static GetRandomNormal(num: number, mean: number = 0.0, stdDev: number = 0.55) {\r\n        return tf.randomNormal([num], mean, stdDev);\r\n    }\r\n    public static GetRandomNormalTensors(num: number = 1000) {\r\n\r\n        // let t0 = DataUtility.GetRandomNormal(num, 0.0, 0.55);\r\n        // let t1 = DataUtility.GetRandomNormal(num, 0.0, 0.03);\r\n        // t0.print();\r\n        // t1.print();\r\n\r\n    }\r\n\r\n    public static Shuffle(array: number[][]) {\r\n        var currentIndex = array.length, temp, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // And swap it with the current element.\r\n            temp = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temp;\r\n        }\r\n\r\n        return array;\r\n    }\r\n    // https://beta.observablehq.com/@tvirot/machine-learning-in-javascript-with-tensorflow-js#inputData\r\n    public static GetSyntheticDataTensor(totalNumData: number = 200, aCo: number = 0, bCo: number = 0, cCo: number = 0, dCo: number = 0, std: number = 0.2, needYNormal: boolean = false) {\r\n\r\n        return tf.tidy(() => {\r\n            const NUM_POINTS = totalNumData;\r\n            // const [a, b, c, d] = coeff.map(i => tf.scalar(i)); // a = tf.scalar(coeff[0]), and so on\r\n            const a = tf.scalar(aCo);\r\n            const b = tf.scalar(bCo);\r\n            const c = tf.scalar(cCo);\r\n            const d = tf.scalar(dCo);\r\n\r\n            const x = tf.randomUniform([NUM_POINTS], -1, 1);\r\n            const y = a.mul(x.pow(tf.scalar(3))).add(b.mul(x.square())).add(c.mul(x)).add(d).add(tf.randomNormal([NUM_POINTS], 0, std));\r\n\r\n            if (needYNormal) {\r\n                const ymin = y.min();\r\n                const ymax = y.max();\r\n                const theRange = ymax.sub(ymin);\r\n                const yNomalized = y.sub(ymin).div(theRange);\r\n                return { x, yNomalized };\r\n            }\r\n\r\n            return [x, y];\r\n        });\r\n    }\r\n    public static GetSyntheticData(totalNumData: number = 200, aCo: number = -0.2, bCo: number = -0.66, cCo: number = -0.1, dCo: number = 2.8, std: number = 0.2, needYNormal: boolean = false) {\r\n        return tf.tidy(() => {\r\n            const result = this.GetSyntheticDataTensor(totalNumData, aCo, bCo, cCo, dCo, std, needYNormal);\r\n            const xx = result[0].dataSync();\r\n            const yy = result[1].dataSync();\r\n            return { xx, yy };\r\n        });\r\n    }\r\n    public static GetIrisData() {\r\n        return [\r\n            [5.1, 3.5, 1.4, 0.2, 0], [4.9, 3.0, 1.4, 0.2, 0], [4.7, 3.2, 1.3, 0.2, 0],\r\n            [4.6, 3.1, 1.5, 0.2, 0], [5.0, 3.6, 1.4, 0.2, 0], [5.4, 3.9, 1.7, 0.4, 0],\r\n            [4.6, 3.4, 1.4, 0.3, 0], [5.0, 3.4, 1.5, 0.2, 0], [4.4, 2.9, 1.4, 0.2, 0],\r\n            [4.9, 3.1, 1.5, 0.1, 0], [5.4, 3.7, 1.5, 0.2, 0], [4.8, 3.4, 1.6, 0.2, 0],\r\n            [4.8, 3.0, 1.4, 0.1, 0], [4.3, 3.0, 1.1, 0.1, 0], [5.8, 4.0, 1.2, 0.2, 0],\r\n            [5.7, 4.4, 1.5, 0.4, 0], [5.4, 3.9, 1.3, 0.4, 0], [5.1, 3.5, 1.4, 0.3, 0],\r\n            [5.7, 3.8, 1.7, 0.3, 0], [5.1, 3.8, 1.5, 0.3, 0], [5.4, 3.4, 1.7, 0.2, 0],\r\n            [5.1, 3.7, 1.5, 0.4, 0], [4.6, 3.6, 1.0, 0.2, 0], [5.1, 3.3, 1.7, 0.5, 0],\r\n            [4.8, 3.4, 1.9, 0.2, 0], [5.0, 3.0, 1.6, 0.2, 0], [5.0, 3.4, 1.6, 0.4, 0],\r\n            [5.2, 3.5, 1.5, 0.2, 0], [5.2, 3.4, 1.4, 0.2, 0], [4.7, 3.2, 1.6, 0.2, 0],\r\n            [4.8, 3.1, 1.6, 0.2, 0], [5.4, 3.4, 1.5, 0.4, 0], [5.2, 4.1, 1.5, 0.1, 0],\r\n            [5.5, 4.2, 1.4, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [5.0, 3.2, 1.2, 0.2, 0],\r\n            [5.5, 3.5, 1.3, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [4.4, 3.0, 1.3, 0.2, 0],\r\n            [5.1, 3.4, 1.5, 0.2, 0], [5.0, 3.5, 1.3, 0.3, 0], [4.5, 2.3, 1.3, 0.3, 0],\r\n            [4.4, 3.2, 1.3, 0.2, 0], [5.0, 3.5, 1.6, 0.6, 0], [5.1, 3.8, 1.9, 0.4, 0],\r\n            [4.8, 3.0, 1.4, 0.3, 0], [5.1, 3.8, 1.6, 0.2, 0], [4.6, 3.2, 1.4, 0.2, 0],\r\n            [5.3, 3.7, 1.5, 0.2, 0], [5.0, 3.3, 1.4, 0.2, 0], [7.0, 3.2, 4.7, 1.4, 1],\r\n            [6.4, 3.2, 4.5, 1.5, 1], [6.9, 3.1, 4.9, 1.5, 1], [5.5, 2.3, 4.0, 1.3, 1],\r\n            [6.5, 2.8, 4.6, 1.5, 1], [5.7, 2.8, 4.5, 1.3, 1], [6.3, 3.3, 4.7, 1.6, 1],\r\n            [4.9, 2.4, 3.3, 1.0, 1], [6.6, 2.9, 4.6, 1.3, 1], [5.2, 2.7, 3.9, 1.4, 1],\r\n            [5.0, 2.0, 3.5, 1.0, 1], [5.9, 3.0, 4.2, 1.5, 1], [6.0, 2.2, 4.0, 1.0, 1],\r\n            [6.1, 2.9, 4.7, 1.4, 1], [5.6, 2.9, 3.6, 1.3, 1], [6.7, 3.1, 4.4, 1.4, 1],\r\n            [5.6, 3.0, 4.5, 1.5, 1], [5.8, 2.7, 4.1, 1.0, 1], [6.2, 2.2, 4.5, 1.5, 1],\r\n            [5.6, 2.5, 3.9, 1.1, 1], [5.9, 3.2, 4.8, 1.8, 1], [6.1, 2.8, 4.0, 1.3, 1],\r\n            [6.3, 2.5, 4.9, 1.5, 1], [6.1, 2.8, 4.7, 1.2, 1], [6.4, 2.9, 4.3, 1.3, 1],\r\n            [6.6, 3.0, 4.4, 1.4, 1], [6.8, 2.8, 4.8, 1.4, 1], [6.7, 3.0, 5.0, 1.7, 1],\r\n            [6.0, 2.9, 4.5, 1.5, 1], [5.7, 2.6, 3.5, 1.0, 1], [5.5, 2.4, 3.8, 1.1, 1],\r\n            [5.5, 2.4, 3.7, 1.0, 1], [5.8, 2.7, 3.9, 1.2, 1], [6.0, 2.7, 5.1, 1.6, 1],\r\n            [5.4, 3.0, 4.5, 1.5, 1], [6.0, 3.4, 4.5, 1.6, 1], [6.7, 3.1, 4.7, 1.5, 1],\r\n            [6.3, 2.3, 4.4, 1.3, 1], [5.6, 3.0, 4.1, 1.3, 1], [5.5, 2.5, 4.0, 1.3, 1],\r\n            [5.5, 2.6, 4.4, 1.2, 1], [6.1, 3.0, 4.6, 1.4, 1], [5.8, 2.6, 4.0, 1.2, 1],\r\n            [5.0, 2.3, 3.3, 1.0, 1], [5.6, 2.7, 4.2, 1.3, 1], [5.7, 3.0, 4.2, 1.2, 1],\r\n            [5.7, 2.9, 4.2, 1.3, 1], [6.2, 2.9, 4.3, 1.3, 1], [5.1, 2.5, 3.0, 1.1, 1],\r\n            [5.7, 2.8, 4.1, 1.3, 1], [6.3, 3.3, 6.0, 2.5, 2], [5.8, 2.7, 5.1, 1.9, 2],\r\n            [7.1, 3.0, 5.9, 2.1, 2], [6.3, 2.9, 5.6, 1.8, 2], [6.5, 3.0, 5.8, 2.2, 2],\r\n            [7.6, 3.0, 6.6, 2.1, 2], [4.9, 2.5, 4.5, 1.7, 2], [7.3, 2.9, 6.3, 1.8, 2],\r\n            [6.7, 2.5, 5.8, 1.8, 2], [7.2, 3.6, 6.1, 2.5, 2], [6.5, 3.2, 5.1, 2.0, 2],\r\n            [6.4, 2.7, 5.3, 1.9, 2], [6.8, 3.0, 5.5, 2.1, 2], [5.7, 2.5, 5.0, 2.0, 2],\r\n            [5.8, 2.8, 5.1, 2.4, 2], [6.4, 3.2, 5.3, 2.3, 2], [6.5, 3.0, 5.5, 1.8, 2],\r\n            [7.7, 3.8, 6.7, 2.2, 2], [7.7, 2.6, 6.9, 2.3, 2], [6.0, 2.2, 5.0, 1.5, 2],\r\n            [6.9, 3.2, 5.7, 2.3, 2], [5.6, 2.8, 4.9, 2.0, 2], [7.7, 2.8, 6.7, 2.0, 2],\r\n            [6.3, 2.7, 4.9, 1.8, 2], [6.7, 3.3, 5.7, 2.1, 2], [7.2, 3.2, 6.0, 1.8, 2],\r\n            [6.2, 2.8, 4.8, 1.8, 2], [6.1, 3.0, 4.9, 1.8, 2], [6.4, 2.8, 5.6, 2.1, 2],\r\n            [7.2, 3.0, 5.8, 1.6, 2], [7.4, 2.8, 6.1, 1.9, 2], [7.9, 3.8, 6.4, 2.0, 2],\r\n            [6.4, 2.8, 5.6, 2.2, 2], [6.3, 2.8, 5.1, 1.5, 2], [6.1, 2.6, 5.6, 1.4, 2],\r\n            [7.7, 3.0, 6.1, 2.3, 2], [6.3, 3.4, 5.6, 2.4, 2], [6.4, 3.1, 5.5, 1.8, 2],\r\n            [6.0, 3.0, 4.8, 1.8, 2], [6.9, 3.1, 5.4, 2.1, 2], [6.7, 3.1, 5.6, 2.4, 2],\r\n            [6.9, 3.1, 5.1, 2.3, 2], [5.8, 2.7, 5.1, 1.9, 2], [6.8, 3.2, 5.9, 2.3, 2],\r\n            [6.7, 3.3, 5.7, 2.5, 2], [6.7, 3.0, 5.2, 2.3, 2], [6.3, 2.5, 5.0, 1.9, 2],\r\n            [6.5, 3.0, 5.2, 2.0, 2], [6.2, 3.4, 5.4, 2.3, 2], [5.9, 3.0, 5.1, 1.8, 2],\r\n        ];\r\n    }\r\n    constructor() {\r\n        /* */\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\nexport class TFLinearRegressionGradientDescent01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n\r\n    tfLinearRegression: TFLinearRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new TFLinearRegression();\r\n\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.forEach((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, 0.1, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, 0.1, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const lineX = [0, 1];\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(lineX));\r\n        });\r\n\r\n        let lineY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        let x0 = 0;\r\n        let y0 = lineY[0];\r\n\r\n        let x1 = 1;\r\n        let y1 = lineY[1];\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFLinearRegression {\r\n    weight: tf.Variable;\r\n    bias: tf.Variable;\r\n\r\n    leraningRate: number = 0.5;\r\n    optimizer: tf.Optimizer;\r\n    constructor() {\r\n        this.weight = tf.variable(tf.scalar(Math.random()));\r\n        this.bias = tf.variable(tf.scalar(Math.random()));\r\n\r\n        this.optimizer = tf.train.sgd(this.leraningRate);\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return x.mul(this.weight).add(this.bias);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// import { TFUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            const b = document.createElement('button');\r\n            b.textContent = 'run';\r\n            b.style.position = 'absolute';\r\n            b.style.left = '650px';\r\n            b.onclick = () => {\r\n            //     console.log(this);\r\n            };\r\n            this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.forEach((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, -0.9, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    Init() {\r\n    //     console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        // for (let i = -10; i < 10; ++i) {\r\n        //     for (let j = -10; j < 10; ++j) {\r\n        //         ctx.beginPath();\r\n        //         ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        //         ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n        //         ctx.closePath();\r\n        //         ctx.fill();\r\n        //     }\r\n        // }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.Grid(ctx);\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            // return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n            return this.tfLinearRegression.predict2d(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 1;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n    //     console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent03Interaction extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n// import { LayersModel } from '@tensorflow/tfjs-layers';\r\nimport { ModelCompileArgs, ModelFitArgs } from '@tensorflow/tfjs';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        // const curveX: number[] = [];\r\n        // for (let x = -1; x <= 1; x += 0.05) {\r\n        //     curveX.push(x);\r\n        // }\r\n\r\n        // // ............................ predict\r\n        // const ys = tf.tidy(() => {\r\n        //     return this.tfModel.predict(tf.tensor1d(curveX));\r\n        // });\r\n\r\n        // let curveY = ys.dataSync();\r\n        // ys.dispose();\r\n        // // ............................ end predict\r\n\r\n        // ctx.lineWidth = 3;\r\n        // ctx.strokeStyle = '#00fff0';\r\n        // ctx.beginPath();\r\n        // ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        // for (let i = 1; i < curveX.length; ++i) {\r\n        //     ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        // }\r\n        // ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 4,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n\r\n        });\r\n\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n\r\n        const compileArgs: ModelCompileArgs = {\r\n            optimizer: tf.train.sgd(0.1),\r\n            loss: tf.losses.meanSquaredError,\r\n        };\r\n\r\n        this.model.compile(compileArgs);\r\n\r\n        // const data = tf.tensor2d([\r\n        //     [0.25, 0.92]\r\n        // ]);\r\n        this.train1().then(() => {\r\n            const x = tf.tensor2d([\r\n                [0, 0],\r\n                [0.5, 0.5],\r\n                [1, 1],\r\n            ]);\r\n            const result = this.model.predict(x);\r\n            (result as tf.Tensor).print();\r\n        });\r\n    }\r\n    train0() {\r\n        const x = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const y = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config = {\r\n            epochs: 10\r\n        };\r\n        this.model.fit(x, y, config).then((response) => console.log(response.history));\r\n        const outResult: tf.Tensor<tf.Rank> | tf.Tensor<tf.Rank>[] = this.model.predict(x);\r\n        // console.log(outResult);\r\n        (outResult as tf.Tensor).print();\r\n    }\r\n    async train1() {\r\n        const xTrain = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const yTrain = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config: ModelFitArgs = {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        };\r\n\r\n        for (let i = 0; i < 500; ++i) {\r\n            const response = await this.model.fit(xTrain, yTrain, config);\r\n            // response;\r\n        //     console.log(i, response.history.loss);\r\n        }\r\n\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel02XOR extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF XOR';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '10px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'ref: Coding Challenge #106: XOR Problem with TensorFlow.js by The Cording Train';\r\n        t.style.fontSize = '11px';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n\r\n        let inputs = [];\r\n        for (let i = 0; i <= 10; ++i) {\r\n            for (let j = 0; j <= 10; ++j) {\r\n                // let x1 = i / 10;\r\n                // let x2 = j / 10;\r\n                inputs.push([j * 0.1, i * 0.1]);\r\n            }\r\n        }\r\n        // console.log(inputs);\r\n        // console.log(;)\r\n        this.xPredict = tf.tensor2d(inputs);\r\n        // console.log(xPredict);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // let ys = this.tfModel.model.predict(this.xPredict);\r\n\r\n        // (ys as tf.Tensor<tf.Rank.R2>).print();\r\n        // let y_values = ys.dataSync();\r\n\r\n        tf.tidy(() => {\r\n            const d = this.tfModel.model.predict(this.xPredict);\r\n            const result = (d as tf.Tensor2D).dataSync();\r\n\r\n\r\n            // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n            ctx.fillStyle = '#000000';\r\n            ctx.beginPath();\r\n            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n\r\n\r\n\r\n            let index = 0;\r\n            for (let i = 0; i <= 10; i++) {\r\n                for (let j = 0; j <= 10; j++) {\r\n                    this.inputs.push(i);\r\n                    let offset = 42;\r\n                    let x = i * offset;\r\n                    let y = j * offset;\r\n                    const out = result[index];\r\n\r\n                    ctx.fillStyle = `rgba(${out * 255},${0},${0},1)`;\r\n                    // console.log(out);\r\n                    ctx.beginPath();\r\n                    ctx.rect(x, y, offset, offset);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n\r\n                    index++;\r\n                }\r\n            }\r\n            // console.log(index);\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    xTrain = tf.tensor2d([\r\n        [0.0, 0.0],\r\n        [1.0, 0.0],\r\n        [0.0, 1.0],\r\n        [1.0, 1.0]\r\n    ]);\r\n    yTrain = tf.tensor2d([\r\n        [0.0],\r\n        [1.0],\r\n        [1.0],\r\n        [0.0]\r\n    ]);\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 16,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(0.05),\r\n            loss: tf.losses.meanSquaredError,\r\n        });\r\n        this.trainLoop();\r\n    }\r\n    public trainLoop() {\r\n        this.train().then((result: any) => {\r\n            // console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.xTrain, this.yTrain, {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03Iris extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        this.tfModel = new TFModel();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n\r\n    // xTrain = tf.tensor2d([\r\n    //     [0.0, 0.0],\r\n    //     [1.0, 0.0],\r\n    //     [0.0, 1.0],\r\n    //     [1.0, 1.0]\r\n    // ]);\r\n    // yTrain = tf.tensor2d([\r\n    //     [0.0],\r\n    //     [1.0],\r\n    //     [1.0],\r\n    //     [0.0]\r\n    // ]);\r\n    constructor() {\r\n        const d = TFDataUtility.GetIrisData();\r\n        tf.util.shuffle(d);\r\n        // console.log(d);\r\n\r\n        const inputs = [];\r\n        for (let i = 0; i < d.length; ++i) {\r\n            let row = [];\r\n            for (let j = 0; j < d[i].length - 1; ++j) {\r\n                row.push(d[i][j]);\r\n            }\r\n            inputs.push(row);\r\n        }\r\n\r\n        const labels = []; //  d.map((d: number[]) => [d[d.length - 1]]);\r\n        for (let i = 0; i < d.length; ++i) {\r\n            if (d[i][d[i].length - 1] === 0) {\r\n                labels.push([1, 0, 0]);\r\n            } else if (d[i][d[i].length - 1] === 1) {\r\n                labels.push([0, 1, 0]);\r\n            } else if (d[i][d[i].length - 1] === 2) {\r\n                labels.push([0, 0, 1]);\r\n            }\r\n\r\n        }\r\n\r\n        // console.log(inputs);\r\n        // console.log(labels);\r\n\r\n        // console.log('tensor......................');\r\n        this.inputsTensor = tf.tensor2d(inputs);\r\n        this.labelsTensor = tf.tensor2d(labels);\r\n        // console.log(this.inputsTensor);\r\n        // console.log(this.labelsTensor);\r\n        this.inputsTensor.print();\r\n        this.labelsTensor.print();\r\n\r\n        this.model = tf.sequential();\r\n\r\n        // console.log(this.inputsTensor.shape[1]);\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 10,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: 3,\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        await this.model.save('downloads://my-model');\r\n        const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n    //     console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n        //     console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n            // batchSize: 100,\r\n            epochs: 50,\r\n            shuffle: true,\r\n            validationData: [this.inputsTensor, this.labelsTensor],\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { csv } from './smartDrawingTrainData.csv';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// const csv = require('./smartDrawingTrainData.csv');\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03SmartDrawing extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    async Init() {\r\n        const d = new DataProcess();\r\n        await d.Init().then(() => {\r\n            this.tfModel = new TFModel('model1', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel01();\r\n\r\n            this.tfModel = new TFModel('model2', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel02();\r\n\r\n        });\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\n\r\nclass DataProcess {\r\n    raw: any;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor() {\r\n        //\r\n    }\r\n    async Init() {\r\n        const d = await this.OpenCSV();\r\n        if (d) {\r\n            this.raw = this.processData(d);\r\n            tf.util.shuffle(this.raw);\r\n            // console.log(this.raw);\r\n\r\n            const inputs = [];\r\n            const labelsTemp = [];\r\n            for (let i = 0; i < this.raw.length; ++i) {\r\n                let row = [];\r\n                for (let j = 0; j < this.raw[i].length - 1; ++j) { row.push(this.raw[i][j]); }\r\n                inputs.push(row);\r\n                labelsTemp.push(this.raw[i][this.raw[i].length - 1]);\r\n            }\r\n        //     console.log(inputs);\r\n        //     console.log(labelsTemp);\r\n            const max = tf.max(labelsTemp);\r\n            const maxNum = max.dataSync();\r\n\r\n            const labels = [];\r\n            for (let i = 0; i < labelsTemp.length; ++i) {\r\n                const label = [];\r\n                for (let j = 0; j <= maxNum[0]; ++j) {\r\n                    if (j === labelsTemp[i]) {\r\n                        label.push(1);\r\n                    } else {\r\n                        label.push(0);\r\n                    }\r\n                }\r\n                labels.push(label);\r\n            }\r\n        //     console.log(labels);\r\n\r\n            this.inputsTensor = tf.tensor2d(inputs);\r\n            this.labelsTensor = tf.tensor2d(labels);\r\n\r\n            this.inputsTensor.print();\r\n            this.labelsTensor.print();\r\n        }\r\n    }\r\n    private processData(allText: any) {\r\n        const allTextLines = allText.split(/\\r\\n|\\n/);\r\n        const headers = allTextLines[0].split(',');\r\n        const lines = [];\r\n\r\n        for (let i = 1; i < allTextLines.length; i++) {\r\n            const data = allTextLines[i].split(',');\r\n            if (data.length === headers.length) {\r\n\r\n                const tarr = [];\r\n                for (let j = 0; j < headers.length; j++) {\r\n                    const dataTemp = +data[j];\r\n                    if (isNaN(dataTemp)) {\r\n                        tarr.push(data[j]);\r\n                    } else {\r\n                        tarr.push(dataTemp);\r\n                    }\r\n                }\r\n                lines.push(tarr);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n    public async OpenCSV() {\r\n        // if (njslabSandboxStatic.app) { if (njslabSandboxStatic.app.isProduction) { return; } }\r\n        let file = 'smartDrawingTrainData.csv';\r\n        // console.log(location.host);\r\n        return fetch(`njslabSandboxStatic/ML/SmartDrawing/${file}`)\r\n            .then((response: Response) => {\r\n            //     console.log(response);\r\n                return response.text();\r\n            })\r\n            .catch((err: Error) => {\r\n            //     console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nclass TFModel {\r\n    t0: number;\r\n    t1: number;\r\n    name: string;\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor(name: string, inputsTensor: tf.Tensor<tf.Rank.R2>, labelsTensor: tf.Tensor<tf.Rank.R2>) {\r\n        this.name = name;\r\n        this.inputsTensor = inputsTensor;\r\n        this.labelsTensor = labelsTensor;\r\n    }\r\n    CreateModel01() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    CreateModel02() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const hidden02 = tf.layers.dense({\r\n            // inputShape: [this.inputsTensor.shape[1]],\r\n            units: 15,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(hidden02);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    Compile() {\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        this.t0 = performance.now();\r\n\r\n        await this.model.save('downloads://my-model');\r\n        // const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n        // console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n            this.t1 = performance.now();\r\n        //     console.log(`${this.name}: ${result.history.loss[0]}, ${this.t1 - this.t0} `);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        // return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n        //     batchSize: 100,\r\n        //     epochs: 10,\r\n        //     shuffle: true,\r\n        //     validationData: [this.inputsTensor, this.labelsTensor],\r\n        // });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// // https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFModel01HorsepowerAndMilesPerGallon extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    // tfModel: ModelForHorsepowerGallon;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // this.tfModel = new ModelForHorsepowerGallon();\r\n            // this.train(d);\r\n            this.train(d);\r\n\r\n\r\n        });\r\n\r\n    }\r\n    async train(d: any) {\r\n        const tensorData = convertToTensor(d);\r\n        // console.log(tensorData);\r\n        const { inputs, labels } = tensorData;\r\n        // console.log(inputs, labels);\r\n        const model = createModel();\r\n\r\n        tfvis.show.modelSummary({ name: 'Model Summary' }, model);\r\n        // Train the model\r\n        await trainModel(model, inputs, labels);\r\n        // console.log('Done Training');\r\n        testModel(model, d, tensorData);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n    }\r\n}\r\n\r\nfunction testModel(model: tf.Sequential, inputData: any, normalizationData: any) {\r\n    const { inputMax, inputMin, labelMin, labelMax } = normalizationData;\r\n\r\n    // Generate predictions for a uniform range of numbers between 0 and 1;\r\n    // We un-normalize the data by doing the inverse of the min-max scaling\r\n    // that we did earlier.\r\n    const [xs, preds] = tf.tidy(() => {\r\n\r\n        const xs = tf.linspace(0, 1, 100);\r\n        const preds = model.predict(xs.reshape([100, 1])) as any;\r\n\r\n        const unNormXs = xs\r\n            .mul(inputMax.sub(inputMin))\r\n            .add(inputMin);\r\n\r\n        const unNormPreds = preds.mul(labelMax.sub(labelMin))\r\n            .add(labelMin);\r\n\r\n        // Un-normalize the data\r\n        return [unNormXs.dataSync(), unNormPreds.dataSync()];\r\n    });\r\n\r\n\r\n    const predictedPoints = Array.from(xs).map((val, i) => {\r\n        return { x: val, y: preds[i] };\r\n    });\r\n\r\n    const originalPoints = inputData.map((d: any) => ({\r\n        x: d.horsepower, y: d.mpg,\r\n    }));\r\n\r\n    tfvis.render.scatterplot(\r\n        { name: 'Model Predictions vs Original Data' },\r\n        { values: [originalPoints, predictedPoints], series: ['original', 'predicted'] },\r\n        {\r\n            xLabel: 'Horsepower',\r\n            yLabel: 'MPG',\r\n            height: 300\r\n        }\r\n    );\r\n}\r\n\r\n\r\nasync function trainModel(model: tf.Sequential, inputs: tf.Tensor<tf.Rank>, labels: tf.Tensor<tf.Rank>) {\r\n    // Prepare the model for training.\r\n    model.compile({\r\n        optimizer: tf.train.adam(),\r\n        loss: tf.losses.meanSquaredError,\r\n        metrics: ['mse'],\r\n    });\r\n\r\n    const batchSize = 32;\r\n    const epochs = 50;\r\n\r\n    return await model.fit(inputs, labels, {\r\n        batchSize,\r\n        epochs,\r\n        shuffle: true,\r\n        callbacks: tfvis.show.fitCallbacks(\r\n            { name: 'Training Performance' },\r\n            ['loss', 'mse'],\r\n            { height: 200, callbacks: ['onEpochEnd'] }\r\n        )\r\n    });\r\n}\r\n\r\n\r\nexport const createModel = () => {\r\n    // Create a sequential model\r\n    const model = tf.sequential();\r\n    // Add a single hidden layer\r\n    model.add(tf.layers.dense({\r\n        inputShape: [1],\r\n        units: 16,\r\n        useBias: true\r\n    }));\r\n    // Add an output layer\r\n    model.add(tf.layers.dense({\r\n        units: 1,\r\n        useBias: true\r\n    }));\r\n    return model;\r\n};\r\nexport const convertToTensor = (data: any) => {\r\n    // Wrapping these calculations in a tidy will dispose any\r\n    // intermediate tensors.\r\n\r\n    return tf.tidy(() => {\r\n        // Step 1. Shuffle the data\r\n        tf.util.shuffle(data);\r\n\r\n        // Step 2. Convert data to Tensor\r\n        const inputs = data.map((d: any) => d.horsepower);\r\n        const labels = data.map((d: any) => d.mpg);\r\n\r\n        const inputTensor = tf.tensor2d(inputs, [inputs.length, 1]);\r\n        const labelTensor = tf.tensor2d(labels, [labels.length, 1]);\r\n\r\n        // Step 3. Normalize the data to the range 0 - 1 using min-max scaling\r\n        const inputMax = inputTensor.max();\r\n        const inputMin = inputTensor.min();\r\n        const labelMax = labelTensor.max();\r\n        const labelMin = labelTensor.min();\r\n\r\n        const normalizedInputs = inputTensor.sub(inputMin).div(inputMax.sub(inputMin));\r\n        const normalizedLabels = labelTensor.sub(labelMin).div(labelMax.sub(labelMin));\r\n\r\n        return {\r\n            inputs: normalizedInputs,\r\n            labels: normalizedLabels,\r\n            // Return the min/max bounds so we can use them later.\r\n            inputMax,\r\n            inputMin,\r\n            labelMax,\r\n            labelMin,\r\n        };\r\n    });\r\n};","import * as tf from '@tensorflow/tfjs';\r\n\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFMnist extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF MNist ';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    Init() {\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(5));\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n        // tfData.\r\n\r\n        const data = new MnistData();\r\n    //     console.log(data.getTrainData());\r\n\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            //     const b = document.createElement('button');\r\n            //     b.textContent = 'run';\r\n            //     b.style.position = 'absolute';\r\n            //     b.style.left = '650px';\r\n            //     b.onclick = () => {\r\n            //     //     console.log(this);\r\n            //     };\r\n            //     this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // console.log(xx);\r\n                // console.log(yy);\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor(dim: number = 0) {\r\n        this.dim = dim;\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n        if (this.dim === 1) { return this.predict1d(x); }\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}\r\n\r\n\r\n// ..............................................................................................................................\r\n\r\nexport const IMAGE_H = 28;\r\nexport const IMAGE_W = 28;\r\nconst IMAGE_SIZE = IMAGE_H * IMAGE_W;\r\nconst NUM_CLASSES = 10;\r\nconst NUM_DATASET_ELEMENTS = 65000;\r\n\r\nconst NUM_TRAIN_ELEMENTS = 55000;\r\n// const NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\r\n\r\nconst MNIST_IMAGES_SPRITE_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\r\nconst MNIST_LABELS_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\r\n\r\n/**\r\n * A class that fetches the sprited MNIST dataset and provide data as\r\n * tf.Tensors.\r\n */\r\nexport class MnistData {\r\n    testLabels: Uint8Array;\r\n    trainLabels: Uint8Array;\r\n    testImages: Float32Array;\r\n    trainImages: Float32Array;\r\n    datasetImages: Float32Array;\r\n    datasetLabels: Uint8Array;\r\n    constructor() { }\r\n\r\n    async load() {\r\n        // Make a request for the MNIST sprited image.\r\n        const img = new Image();\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        const imgRequest = new Promise((resolve, reject) => {\r\n            img.crossOrigin = '';\r\n            img.onload = () => {\r\n                img.width = img.naturalWidth;\r\n                img.height = img.naturalHeight;\r\n\r\n                const datasetBytesBuffer =\r\n                    new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\r\n\r\n                const chunkSize = 5000;\r\n                canvas.width = img.width;\r\n                canvas.height = chunkSize;\r\n\r\n                for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\r\n                    const datasetBytesView = new Float32Array(\r\n                        datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\r\n                        IMAGE_SIZE * chunkSize);\r\n                    ctx.drawImage(\r\n                        img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\r\n                        chunkSize);\r\n\r\n                    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n                    for (let j = 0; j < imageData.data.length / 4; j++) {\r\n                        // All channels hold an equal value since the image is grayscale, so\r\n                        // just read the red channel.\r\n                        datasetBytesView[j] = imageData.data[j * 4] / 255;\r\n                    }\r\n                }\r\n                this.datasetImages = new Float32Array(datasetBytesBuffer);\r\n\r\n                // resolve();\r\n            };\r\n            img.src = MNIST_IMAGES_SPRITE_PATH;\r\n        });\r\n\r\n        const labelsRequest = fetch(MNIST_LABELS_PATH);\r\n        // const [imgResponse, labelsResponse] = await Promise.all([imgRequest, labelsRequest]);\r\n        const result = await Promise.all([imgRequest, labelsRequest]);\r\n        const labelsResponse: any = result[1];\r\n        this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\r\n\r\n        // Slice the the images and labels into train and test sets.\r\n        this.trainImages = this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n        this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n        this.trainLabels = this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n        this.testLabels = this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n    }\r\n\r\n    /**\r\n     * Get all training data as a data tensor and a labels tensor.\r\n     *\r\n     * @returns\r\n     *   xs: The data tensor, of shape `[numTrainExamples, 28, 28, 1]`.\r\n     *   labels: The one-hot encoded labels tensor, of shape\r\n     *     `[numTrainExamples, 10]`.\r\n     */\r\n    getTrainData() {\r\n        const xs = tf.tensor4d(\r\n            this.trainImages,\r\n            [this.trainImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n        const labels = tf.tensor2d(\r\n            this.trainLabels, [this.trainLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n        return { xs, labels };\r\n    }\r\n\r\n    /**\r\n     * Get all test data as a data tensor a a labels tensor.\r\n     *\r\n     * @param {number} numExamples Optional number of examples to get. If not\r\n     *     provided,\r\n     *   all test examples will be returned.\r\n     * @returns\r\n     *   xs: The data tensor, of shape `[numTestExamples, 28, 28, 1]`.\r\n     *   labels: The one-hot encoded labels tensor, of shape\r\n     *     `[numTestExamples, 10]`.\r\n     */\r\n    getTestData(numExamples: any) {\r\n        let xs = tf.tensor4d(\r\n            this.testImages,\r\n            [this.testImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n        let labels = tf.tensor2d(\r\n            this.testLabels, [this.testLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n\r\n        if (numExamples != null) {\r\n            xs = xs.slice([0, 0, 0, 0], [numExamples, IMAGE_H, IMAGE_W, 1]);\r\n            labels = labels.slice([0, 0], [numExamples, NUM_CLASSES]);\r\n        }\r\n        return { xs, labels };\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\nimport * as tf from '@tensorflow/tfjs';\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(tfProject: TFProject) {\r\n        super(tfProject);\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n    //     console.log(tf.version);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}","import { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\n\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\nimport { JSLinearRegression01 } from './Definition/JSLinearRegression01';\r\nimport { JSLinearRegressionGradientDescent02 } from './Definition/JSLinearRegressionGradientDescent02';\r\n\r\nimport { TFLinearRegressionGradientDescent01 } from './Definition/TFLinearRegressionGradientDescent01';\r\nimport { TFPolynomialRegressionGradientDescent02 } from './Definition/TFPolynomialRegressionGradientDescent02';\r\nimport { TFPolynomialRegressionGradientDescent03Interaction } from './Definition/TFPolynomialRegressionGradientDescent03Interaction';\r\nimport { TFModel01 } from './Definition/TFModel01';\r\nimport { TFModel02XOR } from './Definition/TFModel02XOR';\r\nimport { TFModel03Iris } from './Definition/TFModel03Iris';\r\nimport { TFModel03SmartDrawing } from './Definition/TFModel03SmartDrawing';\r\n\r\nimport { TFModel01HorsepowerAndMilesPerGallon } from './Definition/TFModel01HorsepowerAndMilesPerGallon';\r\nimport { TFMnist } from './Definition/TFMnist';\r\n\r\nimport { Blank } from './Definition/Blank';\r\nimport { Implementation } from '..';\r\nexport class TFProject {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n        this.InitDefault();\r\n        this.InitPullDown();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    InitDefault() {\r\n        // new TFModel03SmartDrawing(this);\r\n\r\n    }\r\n    LoadDefinition(v: string) {\r\n        // console.log('project code', v);\r\n        if (v === 'blank') { new Blank(this); }\r\n\r\n        // ...............................................................................\r\n\r\n        if (v === 'TFModel02XOR') { new TFModel02XOR(this, 480, 500); }\r\n        if (v === 'TFModel03Iris') { new TFModel03Iris(this, 480, 500); }\r\n        if (v === 'TFModel03SmartDrawing') { new TFModel03SmartDrawing(this, 480, 500); }\r\n\r\n        if (v === 'TFModel01HorsepowerAndMilesPerGallon') { new TFModel01HorsepowerAndMilesPerGallon(this, 500, 500); }\r\n\r\n        // ...............................................................................\r\n        if (v === 'TFModel01') { new TFModel01(this, 500, 500); }\r\n\r\n        if (v === 'JSLinearRegression') { new JSLinearRegression01(this); }\r\n        if (v === 'JSLinearRegressionGD') { new JSLinearRegressionGradientDescent02(this); }\r\n        if (v === 'TFLinearRegressionGD') { new TFLinearRegressionGradientDescent01(this); }\r\n\r\n        if (v === 'TFPolynomialRegression GD') { new TFPolynomialRegressionGradientDescent02(this); }\r\n        if (v === 'TFPolyRegress Interaction') { new TFPolynomialRegressionGradientDescent03Interaction(this, 500, 500); }\r\n\r\n        if (v === 'TFMnist') { new TFMnist(this, 500, 500); }\r\n\r\n    //     console.log(v);\r\n        // ...............................................................................\r\n    }\r\n    public InitPullDown() {\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel01');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel02XOR');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel03Iris');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel03SmartDrawing');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel01HorsepowerAndMilesPerGallon');\r\n\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPlayground01');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@JSLinearRegression');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@JSLinearRegressionGD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFLinearRegressionGD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolynomialRegression GD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolyRegress Interaction');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolyRegress Miles/Gallon');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TF Regression');\r\n    }\r\n}"],"names":["ActiveCommandController","constructor","scene","this","MouseEventController","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","x","y","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","IndependentPanelCanvas","IndePanelBase","independentPanelWrapper","width","height","divNeeded","super","divInput","btnClose","btnMini","btnHam","btnResize","bodyDiv","subMenu","subs","_content","canvas","ctx","isActive","title","vec","filletR","InitTop","BodyDiv","HeadHeight","InitCanvas","div","IsMinimized","isMinimized","v","isHidden","Hide","Width","off","Height","content","HasSubMenu","hasSubMenu","IsHidden","BtnClose","BtnMinimize","BtnHam","BtnResize","IndeSubPanel","push","Translate","isMoveable","xo","preX","yo","preY","i","boundarVecs","length","Remove","RemovePost","indePanelRender","RenderPost","color","ComputeBoundary","ColorUtility","IndePanelPreset","transparent","isOver","isSelected","NVector3","theme","colSelectedBG","RenderHeadTitle","RenderBodyContent","RenderBtnHorizontal","save","fillStyle","textBaseline","textAlign","font","shadowBlur","shadowOffsetY","shadowOffsetX","fillText","restore","hostDiv","document","createElement","style","position","zIndex","appendChild","id","className","pointerEvents","getContext","clientWidth","clientHeight","ResizePropagation","LoopIndependentCanvas","clearRect","requestAnimationFrame","RenderIndependentCanvas","ResizeCanvas","DefinitionIndeCanvasCore","indeCanvas","mOffX","mOffY","definitions","InitIndeCanvas","implementation","app","needUI","viewController","NUIWrapper","NUI","Init","IsMouseInsidePanel","JSLinearRegression01","tfProjct","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","a","bias","MapX","MapY","MathUtility","beginPath","rect","closePath","fill","LinearRegression","RenderLine","arc","Math","PI","y0","y1","lineWidth","strokeStyle","moveTo","lineTo","stroke","xSum","ySum","xMean","yMean","num","den","JSLinearRegressionGradientDescent02","weight","GradientDescent","error","TFDataUtility","static","carsDataReq","fetch","json","map","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter","csv","tf","dataByClass","targetsByClass","targetLength","example","data","slice","target","toInt","xs","ys","testSplit","numTestExamples","round","shape","numTrainExamples","xTrain","xTest","targets","numExamples","Error","xDims","mean","stdDev","array","temp","randomIndex","currentIndex","floor","random","totalNumData","aCo","bCo","cCo","dCo","std","needYNormal","NUM_POINTS","b","c","d","mul","pow","add","square","ymin","min","theRange","max","sub","yNomalized","result","GetSyntheticDataTensor","xx","dataSync","yy","TFLinearRegressionGradientDescent01","vsTemp","tfLinearRegression","t","TFLinearRegression","InitData","InitUI","left","textContent","append","divHost","getElementById","getData","then","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","forEach","pop","train","lineX","predict","lineY","dispose","leraningRate","optimizer","loss","pred","label","xVal","yVal","minimize","TFPolynomialRegressionGradientDescent02","selVec","undefined","onclick","model","modelViewCoreWrapper","viewWrapper","PolynomialRegression","Grid","curveX","predict2d","curveY","weights","dim","print","predict1d","predict3d","predict4d","predict5d","TFPolynomialRegressionGradientDescent03Interaction","m","GridLine","xInterval","yInterval","x0","x1","toFixed","TFModel01","tfModel","TFModel","hidden","inputShape","units","activation","output","compileArgs","compile","train1","train0","fit","epochs","response","console","log","history","async","yTrain","config","shuffle","TFModel02XOR","xPredict","inputs","fontSize","j","index","offset","out","trainLoop","setTimeout","TFModel03Iris","inputsTensor","labelsTensor","GetIrisData","row","labels","metrics","summary","validationData","TFModel03SmartDrawing","DataProcess","CreateModel01","CreateModel02","raw","OpenCSV","processData","labelsTemp","maxNum","allText","allTextLines","split","headers","lines","tarr","dataTemp","isNaN","text","catch","err","name","t0","t1","hidden01","Compile","hidden02","performance","now","TFModel01HorsepowerAndMilesPerGallon","tensorData","convertToTensor","createModel","tfvis","batchSize","callbacks","trainModel","inputData","normalizationData","inputMax","inputMin","labelMin","labelMax","preds","reshape","unNormXs","unNormPreds","predictedPoints","Array","from","val","originalPoints","values","series","xLabel","yLabel","testModel","useBias","inputTensor","labelTensor","TFMnist","col","MnistData","marginTop","marginBottom","IMAGE_SIZE","IMAGE_H","NUM_CLASSES","testLabels","trainLabels","testImages","trainImages","datasetImages","datasetLabels","img","Image","imgRequest","Promise","resolve","reject","crossOrigin","onload","naturalWidth","naturalHeight","datasetBytesBuffer","ArrayBuffer","NUM_DATASET_ELEMENTS","chunkSize","datasetBytesView","Float32Array","drawImage","imageData","getImageData","src","labelsRequest","labelsResponse","all","Uint8Array","arrayBuffer","getTrainData","getTestData","Blank","tfProject","p","TFProject","activeCommandController","graphicsCoreWrapper","canvasWrapper","InitDefinition","InitDefault","InitPullDown","Render","Dispose","LoadDefinition","pullDownMenuWrapper","menus","AddApp"],"sourceRoot":""}