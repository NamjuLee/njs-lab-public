{"version":3,"file":"static/js/734.c26b36fc.chunk.js","mappings":"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","sources":["njslab/Tools/PixelMap/BinSelection/index.ts","njslab/Tools/PixelMap/index.ts"],"sourcesContent":["export class PointPicking {\n    private selPix: Pixel[];\n    private pMap: PixelMap;\n    private vs: NVector3[] = [];\n    private min: NVector3 = new NVector3(Number.MAX_VALUE, Number.MAX_VALUE);\n    private max: NVector3 = new NVector3(Number.MIN_VALUE, Number.MIN_VALUE);\n    constructor(pts: number[][] = [], resX: number = 20, resY: number = 20) {\n        for (let i = 0; i < pts.length; ++i) {\n            const vec = new NVector3(pts[i][0], pts[i][1]);\n            vec.id = this.vs.length;\n            this.vs.push(vec);\n            if (this.min.x > pts[i][0]) { this.min.x = pts[i][0] }\n            if (this.min.y > pts[i][1]) { this.min.y = pts[i][1] }\n            if (this.max.x < pts[i][0]) { this.max.x = pts[i][0] }\n            if (this.max.y < pts[i][1]) { this.max.y = pts[i][1] }\n        }\n        this.pMap = new PixelMap(this.min, this.max, resX, resY);\n        this.pMap.init();\n\n        for (let i = 0; i < this.vs.length; ++i) {\n            this.pMap.getPixelAtPoint(this.vs[i].x, this.vs[i].y).dataList.push(this.vs[i]);\n        }\n    }\n    public picking(x: number, y: number, expanded = false) {\n        this.selPix = [this.pMap.getPixelAtPoint(x, y)];\n        if (expanded) { this.selPix.push(...this.selPix[0].nPix); }\n        let dis = Number.MAX_VALUE;\n        let id = -1;\n\n        for (let j = 0; j < this.selPix.length; ++j) {\n            const pixel = this.selPix[j];\n            for (let i = 0; i < pixel.dataList.length; ++i) {\n                const theDis = distance(pixel.dataList[i], this.pMap.pointer);\n                if (theDis < dis) {\n                    dis = theDis;\n                    id = pixel.dataList[i].id;\n                }\n            }\n        }\n        if (id > -1) {\n            return [this.vs[id].x, this.vs[id].y];\n        } else {\n            return undefined;\n        }\n    }\n    public getCell() {\n        return this.selPix;\n    }\n    public getCellGrid() {\n        return this.pMap.listPixel;\n    }\n}\nclass PixelMap {\n    public listPixel: Pixel[] = [];\n    public rx: number = 0;\n    public ry: number = 0;\n    public ddx: number = 0.0;\n    public ddy: number = 0.0;\n    public v0: NVector3;\n    public v1: NVector3;\n    public pointer: NVector3 = new NVector3(-1, -1, -1);\n    constructor(v0: NVector3, v1: NVector3, rx: number = 10, ry: number = 10) {\n        this.rx = rx; this.ry = ry;\n        this.ddx = 0.0; this.ddy = 0.0;\n        this.v0 = v0; this.v1 = v1;\n    }\n    public init() {\n        this.ddx = (this.v1.x - this.v0.x) / (this.rx - 1.0);\n        this.ddy = (this.v1.y - this.v0.y) / (this.ry - 1.0);\n        this.initGrid();\n    }\n    private initGrid() {\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let x = this.v0.x + i * this.ddx;\n                let y = this.v0.y + j * this.ddy;\n                let px = new Pixel(this);\n                px.i = i; px.j = j;\n                px.vec = new NVector3(x, y, 0);\n                px.recVec.push(new NVector3(x - this.ddx * 0.5, y - this.ddy * 0.5, 0.0));\n                px.recVec.push(new NVector3(x + this.ddx * 0.5, y - this.ddy * 0.5, 0.0));\n                px.recVec.push(new NVector3(x + this.ddx * 0.5, y + this.ddy * 0.5, 0.0));\n                px.recVec.push(new NVector3(x - this.ddx * 0.5, y + this.ddy * 0.5, 0.0));\n                this.listPixel.push(px);\n            }\n        }\n        this.initGridNeighbor();\n    }\n    private initGridNeighbor() {\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = j * this.rx + i;\n                let px0 = this.listPixel[k];\n                if (i > 0) { px0.nPix.push(this.listPixel[k - 1]); }\n                if (i < this.rx - 1) { px0.nPix.push(this.listPixel[k + 1]); }\n                if (j > 0) { px0.nPix.push(this.listPixel[k - this.rx]); }\n                if (j < this.ry - 1) { px0.nPix.push(this.listPixel[k + this.rx]); }\n                if ((i > 0) && (j < this.ry - 1)) { px0.nPix.push(this.listPixel[k + this.rx - 1]); }\n                if ((i > 0) && (j > 0)) { px0.nPix.push(this.listPixel[k - this.rx - 1]); }\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px0.nPix.push(this.listPixel[k + this.rx + 1]); }\n                if ((i < this.rx - 1) && (j > 0)) { px0.nPix.push(this.listPixel[k - this.rx + 1]); }\n            }\n        }\n    }\n    public getPixelAtPoint(x: number, y: number, z: number = 0) {\n        this.pointer.x = x - this.v0.x;\n        this.pointer.y = y - this.v0.y;\n        this.pointer.z = z - this.v0.z;\n        let i = Math.round(this.pointer.x / this.ddx);\n        let j = Math.round(this.pointer.y / this.ddy);\n        if (i >= this.rx) { i = this.rx - 1; }\n        if (j >= this.ry) { j = this.ry - 1; }\n        if (i < 0) { i = 0; }\n        if (j < 0) { j = 0; }\n        return this.listPixel[j * this.rx + i];\n    }\n}\nclass Pixel {\n    public map: PixelMap;\n    public vec: NVector3;\n    public nPix: Pixel[] = [];\n    public recVec: NVector3[] = [];\n    public i: number = -1;\n    public j: number = -1;\n    public k: number = -1;\n    public dataList = []\n    constructor(map: PixelMap, v: NVector3 = new NVector3(0, 0, 0)) {\n        this.map = map;\n        this.vec = v;\n    }\n};\nclass NVector3 {\n    public id: number = -1;\n    public x: number = 0.0;\n    public y: number = 0.0;\n    public z: number = 0.0;\n    constructor(x: number, y: number, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\nexport const distance = (v0: NVector3, v1: NVector3): number => {\n    return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n};\nexport const distance2 = (v1: NVector3, v2: NVector3): number => {\n    return (v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y) + (v1.z - v2.z) * (v1.z - v2.z);\n};","import { RendererCanvas, distanceTo } from '../../../lib'\r\n\r\nimport { PointPicking } from './BinSelection';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        this.renderer = new Renderer(div);\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n    tradition: boolean = false;\r\n    debugger: boolean = false\r\n    text: HTMLDivElement;\r\n    pts: number[][] = [];\r\n    selPt: number[] | undefined = [];\r\n    log: boolean = false;\r\n    picking: PointPicking;\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        const divMenu = document.createElement('div');\r\n        div.appendChild(divMenu);\r\n\r\n        const btnInput = document.createElement('div');\r\n        btnInput.style.width = '100px';\r\n        btnInput.style.height = '50px';\r\n        btnInput.textContent = '1000';\r\n        btnInput.contentEditable = 'true';\r\n        btnInput.style.background = '#fff';\r\n        btnInput.style.height = '28px';\r\n        btnInput.onkeydown = () => {\r\n            this.init(+btnInput.textContent);\r\n        }\r\n        divMenu.appendChild(btnInput);\r\n\r\n        const btn = document.createElement('button');\r\n        btn.style.width = '100px';\r\n        btn.style.height = '50px';\r\n        btn.textContent = 'Search type';\r\n        btn.onclick = () => {\r\n            this.tradition = !this.tradition;\r\n        }\r\n        divMenu.appendChild(btn);\r\n\r\n        const btnDebugger = document.createElement('button');\r\n        btnDebugger.style.width = '80px';\r\n        btnDebugger.style.height = '50px';\r\n        btnDebugger.textContent = 'debugger';\r\n        btnDebugger.onclick = () => {\r\n            this.debugger = !this.debugger;\r\n        }\r\n        divMenu.appendChild(btnDebugger);\r\n\r\n        const text = document.createElement('div');\r\n        text.style.height = '50px';\r\n        text.onclick = () => {\r\n            this.tradition = !this.tradition;\r\n        }\r\n        div.appendChild(text);\r\n        this.text = text;\r\n        this.init();\r\n    }\r\n    public init(num = 1000000) {\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n        this.pts = []\r\n        for (let i = 0; i < num; ++i) {\r\n            const p = [Math.random() * this.canvas.width, Math.random() * this.canvas.height];\r\n            this.pts.push(p);\r\n        }\r\n\r\n        this.picking = new PointPicking(this.pts)\r\n\r\n        this.render(this.ctx);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        for (let i = 0; i < this.pts.length; i++) {\r\n            ctx.fillStyle = '#f00';\r\n            ctx.beginPath();\r\n            ctx.arc(this.pts[i][0], this.pts[i][1], 2, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        };\r\n\r\n        if (this.log) {\r\n            // this.pmap.CVisLineGrid(ctx);\r\n\r\n            // if (this.pixel) {\r\n            //     ctx.beginPath();\r\n            //     ctx.moveTo(this.pixel.recVec[0].x, this.pixel.recVec[0].y);\r\n            //     // console.log(this.pixel.recVec)\r\n            //     for (let j = 1; j < this.pixel.recVec.length; ++j) {\r\n            //         ctx.lineTo(this.pixel.recVec[j].x, this.pixel.recVec[j].y);\r\n            //         // console.log(pixelMap.listPixel[i].nPix[j].vec.x, pixelMap.listPixel[i].nPix[j].vec.y);\r\n\r\n            //     }\r\n            //     ctx.closePath();\r\n            //     ctx.strokeStyle = '#00f'; // ColorUtility.HexToCanvasColor(color, 1);\r\n            //     ctx.stroke();\r\n            // }\r\n        }\r\n\r\n        if (this.selPt) {\r\n            this.ctx.fillStyle = '#0ff';\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.selPt[0], this.selPt[1], 4, 0, Math.PI * 2);\r\n            this.ctx.closePath();\r\n            this.ctx.fill();\r\n        }\r\n\r\n        // const pList = this.picking.getGrid();\r\n        // for(let i = 0 ; i < pList.length; ++i) {\r\n        //     const c = pList[i];\r\n        //     drawRect(this.ctx, c.recVec)\r\n        // }\r\n\r\n\r\n        this.isStatic = true;\r\n\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        // console.log('=========================')\r\n        // console.log(this.picking)\r\n\r\n        if (this.tradition) {\r\n            var start = performance.now();  // log start timestamp\r\n            this.selPt = getClosestPt(this.pts, [x, y]);\r\n            var end = performance.now();  // log end timestamp\r\n            var diff0 = end - start;\r\n            // console.log('diff 0', diff0)\r\n            this.text.textContent = 'total num pts: ' + this.pts.length + ', time: ' + diff0.toFixed(8).toString() + 'ms';\r\n        } else {\r\n            let start2 = performance.now();\r\n\r\n            if (this.selPt) {\r\n                console.log(this.selPt)\r\n            }\r\n\r\n            this.selPt = this.picking.picking(x, y);\r\n            let end2 = performance.now();\r\n            var diff2 = end2 - start2;\r\n            // console.log('diff 1', diff2)\r\n            this.text.textContent = 'total num pts: ' + this.pts.length + ', time: ' + diff2.toFixed(8).toString() + 'ms';\r\n\r\n            if (this.debugger) {\r\n                const p = this.picking.getCell();\r\n                // console.log(p)\r\n\r\n                for (let i = 0; i < p.length; ++i) {\r\n\r\n                    this.ctx.beginPath();\r\n                    this.ctx.moveTo(p[i].recVec[0].x, p[i].recVec[0].y);\r\n                    // console.log(p[i].recVec)\r\n                    for (let j = 1; j < p[i].recVec.length; ++j) {\r\n                        this.ctx.lineTo(p[i].recVec[j].x, p[i].recVec[j].y);\r\n                        // console.log(pixelMap.listPixel[i].nPix[j].vec.x, pixelMap.listPixel[i].nPix[j].vec.y);\r\n\r\n                    }\r\n                    this.ctx.closePath();\r\n                    this.ctx.strokeStyle = '#00f'; // ColorUtility.HexToCanvasColor(color, 1);\r\n                    this.ctx.stroke();\r\n                }\r\n            }\r\n        }\r\n\r\n        // const pList = this.picking.getGrid();\r\n        // for(let i = 0 ; i < pList.length; ++i) {\r\n        //     const c = pList[i];\r\n        //     drawRect(this.ctx, c.recVec)\r\n        // }\r\n\r\n        // this.selPt = p;\r\n        // console.log(this.selPt)\r\n\r\n        // // console.log(pixel);\r\n        // if (pixel) {\r\n        //     this.pixel = pixel;\r\n        // } else {\r\n        //     this.pixel = undefined;\r\n        // }\r\n\r\n        if (this.selPt) {\r\n            this.ctx.fillStyle = '#0ff';\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.selPt[0], this.selPt[1], 4, 0, Math.PI * 2);\r\n            this.ctx.closePath();\r\n            this.ctx.fill();\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nconst getClosestPt = (vs: number[][], v: number[]) => {\r\n    let theDis = Number.MAX_VALUE;\r\n    let vec: number[] = [];\r\n    for (let i = 0; i < vs.length; ++i) {\r\n        const dis = distanceTo(vs[i][0], vs[i][1], 0, v[0], v[1], 0);\r\n        if (dis < theDis) {\r\n            theDis = dis;\r\n            vec = vs[i]\r\n        }\r\n    }\r\n    return vec;\r\n};\r\n"],"names":["PointPicking","constructor","pts","resX","resY","selPix","pMap","vs","min","NVector3","Number","MAX_VALUE","max","MIN_VALUE","i","length","vec","id","this","push","x","y","PixelMap","init","getPixelAtPoint","dataList","picking","expanded","nPix","dis","j","pixel","theDis","distance","pointer","getCell","getCellGrid","listPixel","v0","v1","rx","ry","ddx","ddy","initGrid","px","Pixel","recVec","initGridNeighbor","k","px0","z","Math","round","map","v","sqrt","Solution","divHost","renderer","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","tradition","debugger","text","selPt","log","canvas","position","divMenu","btnInput","textContent","contentEditable","background","onkeydown","btn","onclick","btnDebugger","num","ctx","clearRect","p","random","render","fillStyle","beginPath","arc","PI","closePath","fill","isStatic","mouseMove","start","performance","now","getClosestPt","diff0","toFixed","toString","start2","console","diff2","moveTo","lineTo","strokeStyle","stroke","distanceTo"],"sourceRoot":""}