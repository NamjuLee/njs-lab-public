"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[7716],{27716:function(e,a,s){s.r(a),s.d(a,{Solution:function(){return r}});var t=s(53304),n=s(30386);s(24488);class r{destroy(){}constructor(e){o()}}const o=async()=>{const e=await l();i(e);const a=await p(e),s=u();await c(s,a.inputs,a.labels),m(s,e,a)},l=async()=>{const e=await fetch("https://storage.googleapis.com/tfjs-tutorials/carsData.json");return(await e.json()).map((e=>({mpg:e.Miles_per_Gallon,horsepower:e.Horsepower}))).filter((e=>null!=e.mpg&&null!=e.horsepower))},i=async e=>{const a=e.map((e=>({x:e.horsepower,y:e.mpg})));n.render.scatterplot({name:"Horsepower v MPG"},{values:a},{xLabel:"Horsepower",yLabel:"MPG",height:300})},u=()=>{const e=t.Pel();return e.add(t.ugM.dense({inputShape:[1],units:1,useBias:!0})),e.add(t.ugM.dense({units:1,useBias:!0})),e},p=async e=>t.lub((()=>{t.D5U.shuffle(e);const a=e.map((e=>e.horsepower)),s=e.map((e=>e.mpg)),n=t.odF(a,[a.length,1]),r=t.odF(s,[s.length,1]),o=n.max(),l=n.min(),i=r.max(),u=r.min();return{inputs:n.sub(l).div(o.sub(l)),labels:r.sub(u).div(i.sub(u)),inputMax:o,inputMin:l,labelMax:i,labelMin:u}})),c=async(e,a,s)=>{e.compile({optimizer:t.p_j.adam(),loss:t.MB5.meanSquaredError,metrics:["mse"]});return await e.fit(a,s,{batchSize:32,epochs:30,shuffle:!0,callbacks:n.show.fitCallbacks({name:"Training Performance"},["loss","mse"],{height:200,callbacks:["onEpochEnd"]})})},m=(e,a,s)=>{const{inputMax:r,inputMin:o,labelMin:l,labelMax:i}=s,[u,p]=t.lub((()=>{const a=t.SX3(0,1,100),s=e.predict(a.reshape([100,1])),n=a.mul(r.sub(o)).add(o),u=s.mul(i.sub(l)).add(l);return[n.dataSync(),u.dataSync()]})),c=Array.from(u).map(((e,a)=>({x:e,y:p[a]}))),m=a.map((e=>({x:e.horsepower,y:e.mpg})));n.render.scatterplot({name:"Model Predictions vs Original Data"},{values:[m,c],series:["original","predicted"]},{xLabel:"Horsepower",yLabel:"MPG",height:300})}}}]);
//# sourceMappingURL=7716.af424a66.chunk.js.map