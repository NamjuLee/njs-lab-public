{"version":3,"file":"static/js/5640.36970779.chunk.js","mappings":"6KAIaA,EAAyB,WAiElC,WAAYC,IAA6H,oBA/DzIA,QAAE,OACFC,aAAO,OACPC,oBAAc,OACdC,kBAAY,OACZC,oBAAc,OACdC,eAAS,OACTC,eAAS,OACTC,aAAO,OAEPC,eAAS,OACTC,eAAS,OACTC,YAAM,OACNC,YAAM,OACNC,aAAO,OACPC,cAAQ,OACRC,YAAM,OAINC,aAAO,OACPC,aAAO,OAEPC,EAAC,ydAmBDC,EAAC,mVAgBDC,4BAAsB,OACtBC,yBAAmB,OACnBC,iBAAW,OACXC,WAAK,OACLC,cAAQ,EAGJC,KAAKxB,GAAKA,EAIVwB,KAAKF,MAAQ,CAACG,KAAKC,SAAUD,KAAKC,SAAUD,KAAKC,SAAU,GAC3DF,KAAKG,YACT,CA8DC,OA9DA,kCACD,WAII,IAAIZ,EAAUa,EAAAA,GAAAA,aAA4BJ,KAAKxB,GAAIwB,KAAKxB,GAAG6B,cAAeL,KAAKP,GAC3ED,EAAUY,EAAAA,GAAAA,aAA4BJ,KAAKxB,GAAIwB,KAAKxB,GAAG8B,gBAAiBN,KAAKN,GAEjF,GAAIH,GAAWC,EAAS,CACpBQ,KAAKT,QAAUA,EACfS,KAAKR,QAAUA,EACf,IAAIf,EAAU2B,EAAAA,GAAAA,cAA6BJ,KAAKxB,GAAIe,EAASC,GACzDf,IAAWuB,KAAKvB,QAAUA,EAClC,CAGJ,GAAC,oBACD,SAAOD,GAEH,IAAI+B,EAAM,CAAC,GAAK,EAAG,EAAG,GAEtBP,KAAKjB,QAAU,IAAIyB,aAAa,EAE3B,GAAI,EAAG,EAAG,EAAG,EAAG,GACf,EAAG,EAAGD,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GACpC,GAAI,EAAGA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAElC,EAAG,EAAG,EAAG,EAAG,EAAG,EAChB,GAAI,EAAGA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GACnC,EAAG,EAAGA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAItCP,KAAKnB,UAAYmB,KAAKxB,GAAGiC,eACzBT,KAAKxB,GAAGkC,WAAWV,KAAKxB,GAAGmC,aAAcX,KAAKnB,WAC9CmB,KAAKxB,GAAGoC,WAAWZ,KAAKxB,GAAGmC,aAAc,IAAIH,aAAaR,KAAKjB,SAAUP,EAAGqC,aAE5Eb,KAAKhB,UAAYgB,KAAKxB,GAAGsC,kBAAkBd,KAAKvB,QAAS,cAEzD,IACIsC,EAAOvC,EAAGwC,MAEVC,EAAS,EAAIT,aAAaU,kBAC1BC,EAAS,EACb3C,EAAG4C,oBAAoBpB,KAAKhB,UALjB,EAKkC+B,GAH7B,EAG8CE,EAAQE,GACtE3C,EAAG6C,wBAAwBrB,KAAKhB,WAWhCR,EAAG8C,WAAWtB,KAAKvB,SACnB,IAAI8C,EAAgB/C,EAAGgD,UACvBL,EAAS,EAET3C,EAAGiD,WAAWF,EAAeJ,EADjB,EAGhB,KAAC,EAtIiC,E,mFCFzBO,EAAE,WAcX,WAAYC,IAAkC,oBAb9CA,cAAQ,OACRC,aAAO,OAEPC,sCAAuC,EAAM,KAC7CC,wBAAyB,EAAK,KAC9BC,qBAAsB,EAAM,KAC5BC,qBAAsB,EAAM,KAC5BC,mBAAoB,EAAM,KAC1BC,oBAAqB,EAAM,KAC3BC,eAAgB,EAAM,KAEtBC,OAAiB,EAGbpC,KAAK2B,SAAWA,EAChB3B,KAAK4B,QAAUD,EAASC,QACxB5B,KAAKqC,UACT,CA4FC,OA5FA,gCACD,WAAkB,IAAD,OAEPC,EAAWC,SAASC,cAAc,OACxCF,EAASG,MAAMC,SAAW,WAC1B1C,KAAK4B,QAAQe,OAAOL,GAEpB,IAAIM,EAAcC,EAAY,+BAC9BP,EAASK,OAAOC,EAAYE,KAC5BF,EAAYG,SAASC,SAAW,YACS,IAAjCJ,EAAYG,SAASE,QACrB,EAAKpB,sCAAuC,EAG5C,EAAKA,sCAAuC,CAEpD,EAGA,IAAIqB,EAAcL,EAAY,eAC9BP,EAASK,OAAOO,EAAYJ,KAC5BI,EAAYH,SAASE,SAAU,EAC/BC,EAAYH,SAASC,SAAW,YACS,IAAjCE,EAAYH,SAASE,QACrB,EAAKnB,wBAAyB,EAE9B,EAAKA,wBAAyB,CAEtC,EAGA,IAAIqB,EAAiBN,EAAY,cACjCP,EAASK,OAAOQ,EAAeL,KAC/BK,EAAeJ,SAASC,SAAW,YACS,IAApCG,EAAeJ,SAASE,QACxB,EAAKf,oBAAqB,EAE1B,EAAKA,oBAAqB,CAElC,EAGA,IAAIkB,EAAcP,EAAY,kBAC9BP,EAASK,OAAOS,EAAYN,KAC5BM,EAAYL,SAASC,SAAW,YACS,IAAjCI,EAAYL,SAASE,QACrB,EAAKlB,qBAAsB,EAE3B,EAAKA,qBAAsB,CAEnC,EAGA,IAAIsB,EAAcR,EAAY,kBAC9BP,EAASK,OAAOU,EAAYP,KAC5BO,EAAYN,SAASC,SAAW,YACS,IAAjCK,EAAYN,SAASE,QACrB,EAAKjB,qBAAsB,EAE3B,EAAKA,qBAAsB,CAEnC,EAGA,IAAIsB,EAAcT,EAAY,YAC9BP,EAASK,OAAOW,EAAYR,KAC5BQ,EAAYP,SAASC,SAAW,YACS,IAAjCM,EAAYP,SAASE,QACrB,EAAKhB,mBAAoB,EAEzB,EAAKA,mBAAoB,CAEjC,EAEA,IAAIsB,EAAkBV,EAAY,QAClCP,EAASK,OAAOY,EAAgBT,KAChCS,EAAgBR,SAASC,SAAW,YACS,IAArCO,EAAgBR,SAASE,QACzB,EAAKd,eAAgB,EAErB,EAAKA,eAAgB,CAE7B,EAGA,IAAIqB,EAASC,EAAU,SACvBnB,EAASK,OAAOa,EAAOV,KAEvBU,EAAOA,OAAOR,SAAW,WACtB,EAAKZ,OAASoB,EAAOA,OAAOE,KAC/B,CAEJ,KAAC,EA9GU,GAkHTb,EAAc,SAACc,GACjB,IAAMb,EAAMP,SAASC,cAAc,OACnCM,EAAIL,MAAMmB,QAAU,OAEpB,IAAMb,EAAWR,SAASC,cAAc,SACxCO,EAAShC,KAAO,WAChB,IAAM8C,EAAOtB,SAASC,cAAc,OAMpC,OALAqB,EAAKC,YAAcH,EACnBE,EAAKpB,MAAM3C,MAAQ,OACnBgD,EAAIiB,YAAYhB,GAChBD,EAAIiB,YAAYF,GAET,CACHf,IAAAA,EAAKC,SAAAA,EAEb,EAEMU,EAAY,SAACE,GAEf,IAAMb,EAAMP,SAASC,cAAc,OACnCM,EAAIL,MAAMmB,QAAU,OAEpB,IAAMJ,EAASjB,SAASC,cAAc,SACtCgB,EAAOzC,KAAO,QACdyC,EAAOQ,IAAM,IACbR,EAAOS,IAAM,KAEb,IAAMJ,EAAOtB,SAASC,cAAc,OAMpC,OALAqB,EAAKC,YAAcH,EACnBE,EAAKpB,MAAM3C,MAAQ,OACnBgD,EAAIiB,YAAYP,GAChBV,EAAIiB,YAAYF,GAET,CACHf,IAAAA,EAAKU,OAAAA,EAEb,C,kKCvJaU,EAAS,WAUlB,WAAYC,EAAaC,EAAaC,EAAgBC,EAAkBC,EAAcnC,EAAeoC,IAAc,oBATnHC,EAAY,GAAI,KAChB3E,MAAgB,yBAAyB,KACzCqE,SAAG,OACHC,SAAG,OACHC,YAAM,OACNC,cAAQ,OACRC,UAAI,OACJnC,WAAK,OACLoC,SAAG,EAECxE,KAAKmE,IAAMA,EACXnE,KAAKoE,IAAMA,EACXpE,KAAKqE,OAASA,EACdrE,KAAKsE,SAAWA,EAChBtE,KAAKuE,KAAOA,EACZvE,KAAKoC,MAAQA,EACbpC,KAAKwE,IAAMA,CACf,CAYC,OAZA,8BACD,SAAOE,EAA+BC,GAClC3E,KAAKyE,GAAK,GAEVC,EAAIE,UAAY5E,KAAKF,MACrB4E,EAAIG,YAEJ,IAAMC,EAAYH,EAAS3E,KAAKmE,IAAKnE,KAAKoE,KAC1CM,EAAIK,IAAID,EAAU,GAAIA,EAAU,GAAmC,GAA9B7E,KAAK+E,IAAa,GAAThF,KAAKyE,GAAW,GAAQ,EAAa,EAAVxE,KAAKgF,IAC9EP,EAAIQ,YAEJR,EAAIS,MACR,KAAC,EA9BiB,GCETC,EAAiB,WAO1B,WAAYzD,EAAoB0D,GAAO,IAAD,4BANtC1D,cAAQ,OAER2D,aAAO,OAEPC,eAA8B,GAAG,KACjCC,QAAS,EAELxF,KAAK2B,SAAWA,EAEhB3B,KAAKsF,QAAU,CACXjB,OAAQ,IAAIoB,EAAO,WACnBnB,SAAU,IAAImB,EAAO,aACrBlB,KAAM,IAAIkB,EAAO,QACjBrD,MAAO,IAAIqD,EAAO,SAClBjB,IAAK,IAAIiB,EAAO,SAGpBC,EAAAA,EAAAA,eAAcL,GAAMM,MAAK,SAACC,GAGtB,IAFA,IAAMC,EAAOD,EAAEE,MAAM,eAEZC,EAAI,EAAGA,EAAIF,EAAKG,SAAUD,EAAG,CAClC,IAAME,EAASJ,EAAKE,GAAGD,MAAM,KAEvB3B,EAAM+B,WAAWD,EAAO,GAAGE,WAAW,IAAK,KAC3C/B,EAAM8B,WAAWD,EAAO,GAAGE,WAAW,IAAK,KAE3C9B,EAAS6B,WAAWD,EAAO,GAAGE,WAAW,IAAK,KAC9C7B,EAAW4B,WAAWD,EAAO,GAAGE,WAAW,IAAK,KAChD5B,EAAO2B,WAAWD,EAAO,GAAGE,WAAW,IAAK,KAC5C/D,EAAQ8D,WAAWD,EAAO,IAAIE,WAAW,IAAK,KAC9C3B,EAAM0B,WAAWD,EAAO,IAAIE,WAAW,IAAK,KASlD,GAPA,EAAKb,QAAQjB,OAAO+B,QAAQ/B,GAC5B,EAAKiB,QAAQhB,SAAS8B,QAAQ9B,GAC9B,EAAKgB,QAAQf,KAAK6B,QAAQ7B,GAC1B,EAAKe,QAAQlD,MAAMgE,QAAQhE,GAC3B,EAAKkD,QAAQd,IAAI4B,QAAQ5B,GAGb,IAARL,GAAqB,IAARC,EAAW,CACxB,IAAIiC,EAAY,IAAInC,EAAUC,EAAKC,EAAKC,EAAQC,EAAUC,EAAMnC,EAAOoC,GACvE,EAAKe,eAAee,KAAKD,EAC7B,CACA,EAAKb,QAAS,CAClB,CAEJ,GAEJ,CAaC,OAbA,+BACD,WAEA,GAAC,oBACD,SAAcd,GAAgC,IAAD,OACpC1E,KAAKwF,QACVxF,KAAKuF,eAAegB,KAAK,SAACX,IAEnBA,EAAExD,QAAU,EAAKT,SAAS6E,GAAGpE,OAAS,EAAKT,SAAS6E,GAAGpE,MAAQ,IAC9DwD,EAAEa,OAAO/B,EAAK,EAAK/C,SAASgD,SAGpC,GACJ,KAAC,EA9DyB,GAkExBc,EAAM,WAIR,WAAYiB,IAAgB,oBAH5B/C,WAAK,OACLK,IAAc2C,OAAOC,UAAS,KAC9B3C,IAAc0C,OAAOE,UAEjB7G,KAAK2D,MAAQ+C,CACjB,CAIC,OAJA,+BACD,SAAehD,GACX1D,KAAKgE,IAAMN,EAAQ1D,KAAKgE,IAAMN,EAAQ1D,KAAKgE,IAC3ChE,KAAKiE,IAAMP,EAAQ1D,KAAKiE,IAAMP,EAAQ1D,KAAKiE,GAC/C,KAAC,EAVO,G,WC9DC6C,EAAQ,0CAcjB,WAAYC,GAAY,IAAD,mBACnB,cAAMA,IAbVC,IAAkB,GAAG,EAErBC,UAAiB,GAAG,EACpBC,WAAkB,GAAG,EACrBC,cAAqB,GAAG,EACxBC,cAAqB,GAAG,EACxBC,QAAe,GAAG,EAElBb,QAAE,IAEFc,uBAAiB,EAKb,IAAMC,EAAWhF,SAASC,cAAc,UACxC+E,EAAS9E,MAAMC,SAAW,WAC1B6E,EAAS9E,MAAM+E,cAAgB,OAC/BD,EAAS9E,MAAMgF,aAAe,UAC9BF,EAASG,MAAQ,EAAKC,MAAMC,UAAUC,YACtCN,EAASO,OAAS,EAAKH,MAAMC,UAAUG,aACvC,EAAKJ,MAAMC,UAAU7D,YAAYwD,GACjC,IAAMS,EAAQT,EAASU,WAAW,SACxB,IAAI1J,EAAAA,EAA0ByJ,EAAO,GAAK,GAClDE,OAAOF,GAKT,IAAMG,EAAS5F,SAASC,cAAc,UACtC2F,EAAOC,GAAK,QACZD,EAAOT,MAAQ,EAAKC,MAAMC,UAAUC,YACpCM,EAAOL,OAAS,EAAKH,MAAMC,UAAUG,aACrCI,EAAO1F,MAAM4F,WAAa,sBAC1BF,EAAO1F,MAAMC,SAAW,WACxByF,EAAO1F,MAAM+E,cAAgB,OAC7B,EAAKG,MAAMC,UAAU7D,YAAYoE,GAGjC,EAAK3B,GAAK,IAAI9E,EAAAA,IAAG,WAEjB,IAAM2D,EAAO,8BAkDV,OAjDH,EAAKiC,kBAAoB,IAAIlC,GAAkB,UAAMkD,kBAAyBjD,EAAO,oCAGrFK,EAAAA,EAAAA,eAAc4C,kBAAyBjD,EAAO,mCAAmCM,MAAK,SAACC,GAGnF,IAFA,IAAMC,EAAOD,EAAEE,MAAM,eAEZC,EAAI,EAAGA,EAAIF,EAAKG,SAAUD,EAAG,CAClC,IAAME,EAASJ,EAAKE,GAAGD,MAAM,KACvB3B,GAAO8B,EAAO,GACd7B,GAAO6B,EAAO,GACR,IAAR9B,GAAqB,IAARC,GACb,EAAK4C,IAAIV,KAAK,CAACnC,EAAKC,GAE5B,CAEA,EAAKmE,OAAO,UAAW,YACvB,EAAKC,KAAK,GACd,KAEAC,EAAAA,EAAAA,gBAAeH,kBAAyBjD,EAAO,sBAAsBM,MAAK,SAAC+C,GACvE,IAAK,IAAI3C,EAAI,EAAGA,EAAI2C,EAAe,SAAE1C,SAAUD,EAC3C,EAAKkB,UAAUX,KAAKoC,EAAe,SAAE3C,GAAa,SAAe,YAEzE,KAEA0C,EAAAA,EAAAA,gBAAeH,kBAAyBjD,EAAO,yBAAyBM,MAAK,SAAC+C,GAC1E,IAAK,IAAI3C,EAAI,EAAGA,EAAI2C,EAAe,SAAE1C,SAAUD,EAC3C,EAAKmB,WAAWZ,KAAKoC,EAAe,SAAE3C,GAAa,SAAe,YAE1E,KAEA0C,EAAAA,EAAAA,gBAAeH,kBAAyBjD,EAAO,sBAAsBM,MAAK,SAAC+C,GACvE,IAAK,IAAI3C,EAAI,EAAGA,EAAI2C,EAAe,SAAE1C,SAAUD,EAC3C,EAAKoB,cAAcb,KAAKoC,EAAe,SAAE3C,GAAa,SAAe,YAE7E,KAEA0C,EAAAA,EAAAA,gBAAeH,kBAAyBjD,EAAO,sBAAsBM,MAAK,SAAC+C,GACvE,IAAK,IAAI3C,EAAI,EAAGA,EAAI2C,EAAe,SAAE1C,SAAUD,EAC3C,EAAKqB,cAAcd,KAAKoC,EAAe,SAAE3C,GAAa,SAAe,YAE7E,KAEA0C,EAAAA,EAAAA,gBAAeH,kBAAyBjD,EAAO,oBAAoBM,MAAK,SAAC+C,GACrE,IAAK,IAAI3C,EAAI,EAAGA,EAAI2C,EAAe,SAAE1C,SAAUD,EAC3C,EAAKsB,QAAQf,KAAKoC,EAAe,SAAE3C,GAAa,SAAe,aAGnE,EAAK4C,OACT,IAAG,CAGP,CA+CC,OA/CA,8BACD,SAAOjE,GACHA,EAAIkE,yBAA2B,SAC3B5I,KAAKwG,GAAGtE,oBACR2G,EAAWnE,EAAK1E,KAAKiH,UAAW,UAAW,GAAKjH,KAAK2E,UAErD3E,KAAKwG,GAAGvE,mBACR6G,EAAmBpE,EAAK1E,KAAKqH,QAAS,YAAa,GAAKrH,KAAK2E,UAE7D3E,KAAKwG,GAAG1E,wBACR+G,EAAWnE,EAAK1E,KAAKkH,WAAY,UAAW,GAAKlH,KAAK2E,UAGtD3E,KAAKwG,GAAGxE,qBACR6G,EAAWnE,EAAK1E,KAAKoH,cAAe,UAAW,GAAKpH,KAAK2E,UAEzD3E,KAAKwG,GAAGzE,qBACR8G,EAAWnE,EAAK1E,KAAKmH,cAAe,UAAW,GAAKnH,KAAK2E,UAGzD3E,KAAKwG,GAAG3E,sCAMR7B,KAAKsH,kBAAkBb,OAAO/B,EAItC,GAAC,qBACD,SAAQqE,GACR,GACC,uBACD,SAAUC,EAAWC,GACrB,GACC,qBACD,SAAQD,EAAWC,GACnB,GACC,wBACD,SAAWD,EAAWC,GAElB,IAAMC,EAAelJ,KAAKmJ,MAAMH,EAAGC,GACnCjJ,KAAKgH,IAAIV,KAAK4C,EAClB,GAAC,uBACD,SAAUF,EAAWC,GAErB,KAAC,EA/IgB,CAASG,EAAAA,IA0JxBP,EAAa,SAACnE,EAA+B2E,EAAYvJ,EAAewJ,EAAmB3E,GAC7FD,EAAI6E,YAAczJ,EAClB,IAAK,IAAIiG,EAAI,EAAGA,EAAIsD,EAAMrD,SAAUD,EAGhC,IAFA,IAAMyD,EAAQH,EAAMtD,GAEX0D,EAAI,EAAGA,EAAID,EAAMxD,SAAUyD,EAAG,CAEnC,IAAI3E,EAAYH,EAAS6E,EAAMC,GAAG,GAAG,GAAID,EAAMC,GAAG,GAAG,IAC/CpE,EAAO,IAAIqE,OACjBrE,EAAKsE,OAAO7E,EAAU,GAAIA,EAAU,IAEpC,IAAK,IAAIiE,EAAI,EAAGA,EAAIS,EAAMC,GAAGzD,SAAU+C,EACnCjE,EAAYH,EAAS6E,EAAMC,GAAGV,GAAG,GAAIS,EAAMC,GAAGV,GAAG,IACjD1D,EAAKuE,OAAO9E,EAAU,GAAIA,EAAU,IAGxCJ,EAAI4E,UAAYA,EAChB5E,EAAImF,OAAOxE,EACf,CAER,EAEMyD,EAAqB,SAACpE,EAA+BoF,EAAoBhK,EAAewJ,EAAmB3E,GAG7GD,EAAIE,UAAY9E,EAChB,IAAK,IAAIiK,EAAQ,EAAGA,EAAQD,EAAc9D,SAAU+D,EAGhD,IAFA,IAAMC,EAAeF,EAAcC,GAE1BE,EAAQ,EAAGA,EAAQD,EAAahE,SAAUiE,EAAO,CACtD,IAAMC,EAAUF,EAAaC,GAE7B,GAAuB,IAAnBC,EAAQlE,OAAc,CACtB,IAAMmE,EAAaD,EAAQ,GAEvBE,EAAKD,EAAW,GAEhBhG,EAAMiG,EAAG,GACThG,EAAMgG,EAAG,GACTtF,EAAYH,EAASR,EAAKC,GAE9BM,EAAIG,YACJH,EAAIiF,OAAO7E,EAAU,GAAIA,EAAU,IAEnC,IAAK,IAAIiB,EAAI,EAAGA,EAAIoE,EAAWnE,SAAUD,EAKrCjB,EAAYH,EAFZR,GADAiG,EAAKD,EAAWpE,IACP,GACT3B,EAAMgG,EAAG,IAET1F,EAAIkF,OAAO9E,EAAU,GAAIA,EAAU,IAEvCJ,EAAIQ,YACJR,EAAIS,MAER,CACJ,CAER,C","sources":["njslab/Project/Project_03_SlowZone/01_JSAPI/Tint/FilterGLViewDarkForDarken.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/UI/index.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/DataProcessTweets/TweetData/index.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/DataProcessTweets/index.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/index.ts"],"sourcesContent":["import { NVector3, GLShaderCommon } from '../../../../../lib/NJSCore';\n\n// import { Mat3 } from '../../AppCore/GLUtility/Mat3';\n\nexport class FilterGLViewDarkForDarken {\n\n    gl: WebGLRenderingContext;\n    program: WebGLProgram;\n    fragmentShader: WebGLShader;\n    vertexShader: WebGLShader;\n    matrixLocation: WebGLProgram;\n    posBuffer: WebGLBuffer;\n    colBuffer: WebGLBuffer;\n    vertexs: Float32Array;\n\n    posLocAtt: number;\n    colLocAtt: number;\n    matLoc: WebGLUniformLocation;\n    colLoc: WebGLUniformLocation;\n    cVecLoc: WebGLUniformLocation;\n    mouseLoc: WebGLUniformLocation;\n    timeGL: WebGLUniformLocation;\n    // startTime: number;\n    // randomSeed: number;\n\n    vShader: WebGLShader;\n    fShader: WebGLShader;\n\n    v = `\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    \n    varying vec4 f_color;\n\n    void main() {\n\n        vec2 mouse_distance = vec2(0,0) - (a_position.xy /vec2(2,2));\n        float red = 1.0 - length(mouse_distance);\n        f_color = vec4(a_position, 0, 1.0);\n    \n        // float dis = distance(vec2(a_position.xy), vec2(0,0));\n\n        // f_color = vec4(dis * 0.6, 0,0,1);\n        gl_Position = vec4( a_position, 0, 1);\n    }\n    `;\n\n    f = `\n    precision highp float;\n\n    varying vec4 f_color;\n    \n    void main() {\n        vec2 mouse_distance = vec2(0,0) - (f_color.xy /vec2(5,5));\n\n        float col =  length(mouse_distance*5.);\n        float val = 1.0 - length(mouse_distance*8.);\n        \n        gl_FragColor = vec4(0.19,0.19,0.19, col);\n\n    }\n    `;\n\n    positionAttribLocation: WebGLProgram;\n    colorAttribLocation: WebGLProgram;\n    translation: NVector3;\n    color: number[];\n    colArray: Float32Array;\n\n    constructor(gl: WebGLRenderingContext, xt: number = 100, yt: number = 100, zt: number = 0, xs: number = 1, ys: number = 1, zs: number = 1) {\n        this.gl = gl;\n        // this.translation = new NVector3(xt, yt, zt);\n        // this.angleInRadians = 0;\n        // this.scale = new NVector3(xs, ys, zs);\n        this.color = [Math.random(), Math.random(), Math.random(), 1];\n        this.InitShader();\n    }\n    InitShader() {\n        // let vShader = GLUtility.CreateShaderFromPath(this.gl, this.gl.VERTEX_SHADER,'/shader/vsCanvas.glsl');\n        // let fShader = GLUtility.CreateShaderFromPath(this.gl, this.gl.FRAGMENT_SHADER, '/shader/fsColor.glsl');\n\n        let vShader = GLShaderCommon.CreateShader(this.gl, this.gl.VERTEX_SHADER, this.v); // '/shader/vsCanvas.glsl');\n        let fShader = GLShaderCommon.CreateShader(this.gl, this.gl.FRAGMENT_SHADER, this.f); // '/shader/fsColor.glsl');\n\n        if (vShader && fShader) {\n            this.vShader = vShader;\n            this.fShader = fShader;\n            let program = GLShaderCommon.CreateProgram(this.gl, vShader, fShader);\n            if (program) { this.program = program; }\n        }\n\n        // this.InitVerext();\n    }\n    Render(gl: WebGLRenderingContext) {\n\n        let col = [0.1, 0, 0, 1];\n\n        this.vertexs = new Float32Array([\n            // left column\n            -1, -1, 1, 1, 1, 1,\n            - 1, 1, col[0], col[1], col[2], col[3],\n            1, -1, col[0], col[1], col[2], col[3],\n\n            -1, 1, 1, 1, 1, 1,\n            1, -1, col[0], col[1], col[2], col[3],\n            1, 1, col[0], col[1], col[2], col[3],\n\n        ]);\n\n        this.posBuffer = this.gl.createBuffer() as WebGLBuffer;\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.posBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(this.vertexs), gl.STATIC_DRAW);\n\n        this.posLocAtt = this.gl.getAttribLocation(this.program, 'a_position');\n        // Tell the attribute how to get data out of posBuffer (ARRAY_BUFFER)\n        let size = 2;          // 2 components per iteration\n        let type = gl.FLOAT;   // the data is 32bit floats\n        let normalize = false; // don't normalize the data\n        let stride = 6 * Float32Array.BYTES_PER_ELEMENT; // 0 = move forward size * sizeof(type) each iteration to get the next position\n        let offset = 0;        // start at the beginning of the buffer\n        gl.vertexAttribPointer(this.posLocAtt, size, type, normalize, stride, offset);\n        gl.enableVertexAttribArray(this.posLocAtt);\n\n        // this.colLocAtt = this.gl.getAttribLocation(this.program, 'a_color');\n        // size = 4;          // 2 components per iteration\n        // type = gl.FLOAT;   // the data is 32bit floats\n        // normalize = false; // don't normalize the data\n        // stride = 6 * Float32Array.BYTES_PER_ELEMENT; // 0 = move forward size * sizeof(type) each iteration to get the next position\n        // offset = 2 * Float32Array.BYTES_PER_ELEMENT;        // start at the beginning of the buffer\n        // gl.vertexAttribPointer(this.colLocAtt, size, type, normalize, stride, offset);\n        // gl.enableVertexAttribArray(this.colLocAtt);\n\n        gl.useProgram(this.program);\n        let primitiveType = gl.TRIANGLES; // LINE_LOOP; // gl.TRIANGLE_STRIP;\n        offset = 0;\n        let count = 6; // this.vertexs.length * 0.5;\n        gl.drawArrays(primitiveType, offset, count);\n\n    }\n}","import { Solution } from '../';\r\nimport { Solution as Solution3D} from '../../02_Three';\r\nexport class UI {\r\n    solution: Solution | Solution3D;\r\n    hostDiv: HTMLElement;\r\n\r\n    isActive_high_low_connectedness_user = false;\r\n    isActive_Paris_main_st = true;\r\n    isActive_treated_st = false;\r\n    isActive_control_st = false;\r\n    isActive_zones_30 = false;\r\n    isActive_streetOSM = false;\r\n    isActive_node = false;\r\n\r\n    month: number = -1;\r\n\r\n    constructor(solution: Solution | Solution3D) {\r\n        this.solution = solution;\r\n        this.hostDiv = solution.hostDiv;\r\n        this.appendUI();\r\n    }\r\n    public appendUI(){\r\n\r\n        const mainMenu = document.createElement('div');\r\n        mainMenu.style.position = 'absolute';\r\n        this.hostDiv.append(mainMenu);\r\n\r\n        let checkBoxUIA = getCheckBox('high_low_connectedness_user');\r\n        mainMenu.append(checkBoxUIA.div);\r\n        checkBoxUIA.checkBox.onchange = () => {\r\n            if (checkBoxUIA.checkBox.checked === true){\r\n                this.isActive_high_low_connectedness_user = true;\r\n\r\n            } else {\r\n                this.isActive_high_low_connectedness_user = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUIB = getCheckBox('main street');\r\n        mainMenu.append(checkBoxUIB.div);\r\n        checkBoxUIB.checkBox.checked = true;\r\n        checkBoxUIB.checkBox.onchange = () => {\r\n            if (checkBoxUIB.checkBox.checked === true){\r\n                this.isActive_Paris_main_st = true;\r\n            } else {\r\n                this.isActive_Paris_main_st = false;\r\n            }\r\n        }\r\n\r\n        \r\n        let checkBoxUI_OSM = getCheckBox('OSM street');\r\n        mainMenu.append(checkBoxUI_OSM.div);\r\n        checkBoxUI_OSM.checkBox.onchange = () => {\r\n            if (checkBoxUI_OSM.checkBox.checked === true){\r\n                this.isActive_streetOSM = true;\r\n            } else {\r\n                this.isActive_streetOSM = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUIC = getCheckBox('treated street');\r\n        mainMenu.append(checkBoxUIC.div);\r\n        checkBoxUIC.checkBox.onchange = () => {\r\n            if (checkBoxUIC.checkBox.checked === true){\r\n                this.isActive_treated_st = true;\r\n            } else {\r\n                this.isActive_treated_st = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUID = getCheckBox('control street');\r\n        mainMenu.append(checkBoxUID.div);\r\n        checkBoxUID.checkBox.onchange = () => {\r\n            if (checkBoxUID.checkBox.checked === true){\r\n                this.isActive_control_st = true;\r\n            } else {\r\n                this.isActive_control_st = false;\r\n            }\r\n        }\r\n\r\n        \r\n        let checkBoxUIE = getCheckBox('zones 30');\r\n        mainMenu.append(checkBoxUIE.div);\r\n        checkBoxUIE.checkBox.onchange = () => {\r\n            if (checkBoxUIE.checkBox.checked === true){\r\n                this.isActive_zones_30 = true;\r\n            } else {\r\n                this.isActive_zones_30 = false;\r\n            }\r\n        }\r\n\r\n        let checkBoxUI_Node = getCheckBox('Node');\r\n        mainMenu.append(checkBoxUI_Node.div);\r\n        checkBoxUI_Node.checkBox.onchange = () => {\r\n            if (checkBoxUI_Node.checkBox.checked === true){\r\n                this.isActive_node = true;\r\n            } else {\r\n                this.isActive_node = false;\r\n            }\r\n        }\r\n\r\n\r\n        let slider = getSlider('Month') \r\n        mainMenu.append(slider.div);\r\n\r\n        slider.slider.onchange = () => {\r\n           this.month = +slider.slider.value;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst getCheckBox = (title: string) => {\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const checkBox = document.createElement('input');\r\n    checkBox.type = 'checkbox';\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(checkBox);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, checkBox\r\n    }\r\n};\r\n\r\nconst getSlider = (title: string) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = '0';\r\n    slider.max = '12';\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider\r\n    }\r\n};","\r\nexport class TweetData {\r\n    t: number = 0.1;\r\n    color: string = 'rgba(10, 250, 10, 0.8)';\r\n    lon: number;\r\n    lat: number;\r\n    userID: number;\r\n    streetID: number;\r\n    year: number;\r\n    month: number;\r\n    day: number;\r\n    constructor(lon: number, lat: number, userID: number, streetID: number, year: number, month: number, day: number) {\r\n        this.lon = lon;\r\n        this.lat = lat;\r\n        this.userID = userID;\r\n        this.streetID = streetID;\r\n        this.year = year;\r\n        this.month = month;\r\n        this.day = day;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, toScreen: (x: number, y: number)=> number[]) {\r\n        this.t += 0.1;\r\n\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n\r\n        const projected = toScreen(this.lon, this.lat);\r\n        ctx.arc(projected[0], projected[1], (Math.sin(this.t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n\r\n        ctx.fill();\r\n    }\r\n}","import { Solution } from '..';\r\nimport { getCSVFromURL } from 'njscore';\r\nimport { TweetData } from './TweetData';\r\nexport class DataProcessTweets {\r\n    solution: Solution;\r\n\r\n    domains;\r\n\r\n    tweetDataArray: TweetData[] = [];\r\n    active = false;\r\n    constructor(solution: Solution, path) {\r\n        this.solution = solution;\r\n\r\n        this.domains = {\r\n            userID: new Domain('user-id'),\r\n            streetID: new Domain('street-id'),\r\n            year: new Domain('year'),\r\n            month: new Domain('month'),\r\n            day: new Domain('day'),\r\n        }\r\n\r\n        getCSVFromURL(path).then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n        //     console.log(line)\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                // console.log(values[5])\r\n                const lon = parseFloat(values[5].replaceAll('\"', ''));\r\n                const lat = parseFloat(values[6].replaceAll('\"', ''));\r\n\r\n                const userID = parseFloat(values[8].replaceAll('\"', ''));\r\n                const streetID = parseFloat(values[3].replaceAll('\"', ''));\r\n                const year = parseFloat(values[9].replaceAll('\"', ''));\r\n                const month = parseFloat(values[10].replaceAll('\"', ''));\r\n                const day = parseFloat(values[11].replaceAll('\"', ''));\r\n\r\n                this.domains.userID.compute(userID);\r\n                this.domains.streetID.compute(streetID);\r\n                this.domains.year.compute(year);\r\n                this.domains.month.compute(month);\r\n                this.domains.day.compute(day);\r\n\r\n            //     console.log(lat, lon, userID, year, month, day, streetID)\r\n                if (lon !== 0 || lat !== 0) {\r\n                    let tweetData = new TweetData(lon, lat, userID, streetID, year, month, day);\r\n                    this.tweetDataArray.push(tweetData)\r\n                }\r\n                this.active = true;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    public process() {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        if (!this.active) { return; } \r\n        this.tweetDataArray.map( (d: TweetData) => {\r\n\r\n            if(d.month === this.solution.ui.month || this.solution.ui.month < 1) {\r\n                d.render(ctx, this.solution.toScreen);\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\n\r\n\r\nclass Domain {\r\n    title: string;\r\n    min: number = Number.MAX_VALUE\r\n    max: number = Number.MIN_VALUE\r\n    constructor(titie: string) {\r\n        this.title = titie;\r\n    }\r\n    public compute(value: number) {\r\n        this.min = value < this.min ? value : this.min; \r\n        this.max = value > this.max ? value : this.max; \r\n    }\r\n}\r\n","import { RendererJSAPI } from '../../../../lib';\r\nimport { getCSVFromURL, getJSONFromURL } from 'njscore';\r\nimport { UI } from './UI';\r\nimport { DataProcessTweets } from './DataProcessTweets';\r\n\r\nimport { FilterGLViewDarkForDarken } from './Tint/FilterGLViewDarkForDarken';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: number[][] = [];\r\n\r\n    streetOSM: any = [];\r\n    routesMain: any = [];\r\n    routesTreated: any = [];\r\n    routesControl: any = [];\r\n    zones30: any = [];\r\n\r\n    ui: UI\r\n\r\n    dataProcessTweets: DataProcessTweets;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        \r\n        const canvasGL = document.createElement('canvas');\r\n        canvasGL.style.position = 'absolute';\r\n        canvasGL.style.pointerEvents = 'none';\r\n        canvasGL.style.mixBlendMode = 'overlay';\r\n        canvasGL.width = this.mView.container.clientWidth;\r\n        canvasGL.height = this.mView.container.clientHeight;\r\n        this.mView.container.appendChild(canvasGL);\r\n        const glCtx = canvasGL.getContext('webgl');\r\n        const d = new FilterGLViewDarkForDarken(glCtx, 0.5, 5)\r\n        d.Render(glCtx);\r\n\r\n\r\n        \r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.id = 'layer';\r\n        canvas.width = this.mView.container.clientWidth;\r\n        canvas.height = this.mView.container.clientHeight;\r\n        canvas.style.background = 'rgba(0, 15, 0, 0.4)';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.pointerEvents = 'none';\r\n        this.mView.container.appendChild(canvas);\r\n\r\n\r\n        this.ui = new UI(this);\r\n\r\n        const path = '/static/research/slow-zone/';\r\n        this.dataProcessTweets = new DataProcessTweets(this, process.env.PUBLIC_URL + path + 'tweets_10pct_lat-lon_sample.csv');\r\n\r\n\r\n        getCSVFromURL(process.env.PUBLIC_URL + path + 'high_low_connectedness_user.csv').then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            // console.log(line)\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                const lon = +values[3];\r\n                const lat = +values[4];\r\n                if (lon !== 0 || lat !== 0) {\r\n                    this.pts.push([lon, lat]);\r\n                }\r\n            }\r\n            // console.log(this.pts);\r\n            this.center(2.3375387, 48.8606701);\r\n            this.zoom(12);\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'street_osm.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.streetOSM.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'Paris-main-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesMain.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'treated-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesTreated.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'control-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesControl.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'zones-30.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.zones30.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        //     console.log(this.zones30)\r\n            this.start();\r\n        });\r\n\r\n\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.globalCompositeOperation = 'screen'; //'lighten';\r\n        if (this.ui.isActive_streetOSM) {\r\n            renderLine(ctx, this.streetOSM, '#00FFFF', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_zones_30) {\r\n            renderMultiPolygon(ctx, this.zones30, '#0000ff39', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_Paris_main_st) {\r\n            renderLine(ctx, this.routesMain, '#00FFFF', 0.5, this.toScreen);\r\n        }\r\n\r\n        if (this.ui.isActive_control_st) {\r\n            renderLine(ctx, this.routesControl, '#ff0000', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_treated_st) {\r\n            renderLine(ctx, this.routesTreated, '#00ff00', 0.5, this.toScreen);\r\n        }\r\n\r\n        if (this.ui.isActive_high_low_connectedness_user) {\r\n            // for (let i = 0; i < this.pts.length; ++i) {\r\n            //     const projected = this.toScreen(this.pts[i][0], this.pts[i][1]);\r\n            //     renderPoint(ctx, projected[0], projected[1], this.time + 3, 'rgba(255, 0, 0, 0.85)');\r\n            // }\r\n\r\n            this.dataProcessTweets.render(ctx);\r\n        }\r\n\r\n        // this.isStatic = true;\r\n    }\r\n    keyDown(k: KeyboardEvent): void {\r\n    //     console.log('key pressed', k);\r\n    }\r\n    mouseDown(x: number, y: number): void {\r\n    //     console.log('mouse down')\r\n    }\r\n    mouseUp(x: number, y: number): void {\r\n    //     console.log('mouse up')\r\n    }\r\n    mouseClick(x: number, y: number): void {\r\n    //     console.log(x, y)\r\n        const mapProjected = this.toMap(x, y);\r\n        this.pts.push(mapProjected);\r\n    }\r\n    mouseMove(x: number, y: number) {\r\n\r\n    }\r\n}\r\n\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n}\r\n\r\nconst renderLine = (ctx: CanvasRenderingContext2D, paths: any, color: string, lineWidth: number, toScreen: (x: number, y: number) => number[]) => {\r\n    ctx.strokeStyle = color;\r\n    for (let i = 0; i < paths.length; ++i) {\r\n        const route = paths[i]\r\n\r\n        for (let j = 0; j < route.length; ++j) {\r\n\r\n            let projected = toScreen(route[j][0][0], route[j][0][1]);\r\n            const path = new Path2D();\r\n            path.moveTo(projected[0], projected[1]);\r\n\r\n            for (let k = 1; k < route[j].length; ++k) {\r\n                projected = toScreen(route[j][k][0], route[j][k][1]);\r\n                path.lineTo(projected[0], projected[1]);\r\n            }\r\n\r\n            ctx.lineWidth = lineWidth; // Math.sin(lineWidth * 1.5) + 1.15;\r\n            ctx.stroke(path);\r\n        }\r\n    }\r\n};\r\n\r\nconst renderMultiPolygon = (ctx: CanvasRenderingContext2D, multiPolygons: any, color: string, lineWidth: number, toScreen: (x: number, y: number) => number[]) => {\r\n    // if (multiPolygons === undefined) return;\r\n\r\n    ctx.fillStyle = color;\r\n    for (let multi = 0; multi < multiPolygons.length; ++multi) {\r\n        const multiPolygon = multiPolygons[multi];\r\n\r\n        for (let polyI = 0; polyI < multiPolygon.length; ++polyI) {\r\n            const polygon = multiPolygon[polyI];\r\n\r\n            if (polygon.length === 1) {\r\n                const thePolygon = polygon[0];\r\n\r\n                let pl = thePolygon[0];\r\n                // console.log('pl', pl)\r\n                let lon = pl[0];\r\n                let lat = pl[1];\r\n                let projected = toScreen(lon, lat);\r\n\r\n                ctx.beginPath();\r\n                ctx.moveTo(projected[0], projected[1]);\r\n\r\n                for (let i = 1; i < thePolygon.length; ++i) {\r\n\r\n                    pl = thePolygon[i];\r\n                    lon = pl[0];\r\n                    lat = pl[1];\r\n                    projected = toScreen(lon, lat);\r\n                    ctx.lineTo(projected[0], projected[1]);\r\n                }\r\n                ctx.closePath();\r\n                ctx.fill();\r\n\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n"],"names":["FilterGLViewDarkForDarken","gl","program","fragmentShader","vertexShader","matrixLocation","posBuffer","colBuffer","vertexs","posLocAtt","colLocAtt","matLoc","colLoc","cVecLoc","mouseLoc","timeGL","vShader","fShader","v","f","positionAttribLocation","colorAttribLocation","translation","color","colArray","this","Math","random","InitShader","GLShaderCommon","VERTEX_SHADER","FRAGMENT_SHADER","col","Float32Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","getAttribLocation","type","FLOAT","stride","BYTES_PER_ELEMENT","offset","vertexAttribPointer","enableVertexAttribArray","useProgram","primitiveType","TRIANGLES","drawArrays","UI","solution","hostDiv","isActive_high_low_connectedness_user","isActive_Paris_main_st","isActive_treated_st","isActive_control_st","isActive_zones_30","isActive_streetOSM","isActive_node","month","appendUI","mainMenu","document","createElement","style","position","append","checkBoxUIA","getCheckBox","div","checkBox","onchange","checked","checkBoxUIB","checkBoxUI_OSM","checkBoxUIC","checkBoxUID","checkBoxUIE","checkBoxUI_Node","slider","getSlider","value","title","display","text","textContent","appendChild","min","max","TweetData","lon","lat","userID","streetID","year","day","t","ctx","toScreen","fillStyle","beginPath","projected","arc","sin","PI","closePath","fill","DataProcessTweets","path","domains","tweetDataArray","active","Domain","getCSVFromURL","then","d","line","split","i","length","values","parseFloat","replaceAll","compute","tweetData","push","map","ui","render","titie","Number","MAX_VALUE","MIN_VALUE","Solution","view","pts","streetOSM","routesMain","routesTreated","routesControl","zones30","dataProcessTweets","canvasGL","pointerEvents","mixBlendMode","width","mView","container","clientWidth","height","clientHeight","glCtx","getContext","Render","canvas","id","background","process","center","zoom","getJSONFromURL","data","start","globalCompositeOperation","renderLine","renderMultiPolygon","k","x","y","mapProjected","toMap","RendererJSAPI","paths","lineWidth","strokeStyle","route","j","Path2D","moveTo","lineTo","stroke","multiPolygons","multi","multiPolygon","polyI","polygon","thePolygon","pl"],"sourceRoot":""}