{"version":3,"file":"static/js/24140.83763f65.chunk.js","mappings":"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","sources":["njslab/Tools/AppD3USTopoVis/Implementation/USTopoSVG/Core/D3Implementation.ts","njslab/Tools/AppD3USTopoVis/Implementation/USTopoSVG/Core/Legend.ts","njslab/Tools/AppD3USTopoVis/Implementation/USTopoSVG/Core/Data.ts","njslab/Tools/AppD3USTopoVis/Implementation/USTopoSVG/index.ts","njslab/Tools/AppD3USTopoVis/Implementation/index.ts","njslab/Tools/AppD3USTopoVis/index.ts"],"sourcesContent":["import { feature } from 'topojson';\r\nimport { select, } from 'd3';\r\nimport { geoPath, geoAlbersUsa, GeoProjection, GeoPath, GeoPermissibleObjects } from 'd3-geo';\r\nimport { MathUtility, NJSLoader } from '../../../lib';\r\n\r\nimport { USTopoSVG } from '..';\r\nexport class D3Implementation {\r\n    id: string;\r\n    USTopoSVG: USTopoSVG;\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    // ................................. d3\r\n    // tslint:disable-next-line:no-any\r\n    d3Selection: any; // Selection<SVGElement, any, HTMLElement, any>;  // Selection<SVGElement, {}, HTMLElement, any>;\r\n    // tslint:disable-next-line:no-any\r\n    d3GeoPathGenerator: GeoPath<any, GeoPermissibleObjects>;\r\n    d3projection: GeoProjection;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    topoUSARaw: any;\r\n    // tslint:disable-next-line:no-any\r\n    geoJsonBase: any;\r\n\r\n    constructor(USTopoSVG: USTopoSVG) {\r\n        this.USTopoSVG = USTopoSVG;\r\n\r\n        this.id = this.USTopoSVG.divHost.id;\r\n\r\n        this.width = this.USTopoSVG.properties.widthVis - this.USTopoSVG.margin.left - this.USTopoSVG.margin.right;\r\n        this.height = this.USTopoSVG.properties.heightVis - this.USTopoSVG.margin.top - this.USTopoSVG.margin.bottom;\r\n\r\n        this.Init();\r\n    }\r\n    public async Init() {\r\n        // console.log(this);\r\n        this.InitProjection();\r\n        this.InitSVG();\r\n        this.InitBase().then(() => {\r\n            this.DrawMapSVG();\r\n        });\r\n        this.InitRefer();\r\n    }\r\n    public InitRefer() {\r\n        const div = document.createElement('div');\r\n        div.textContent = 'Reference: https://observablehq.com/@d3/choropleth';\r\n        div.style.marginLeft = '10px';\r\n        div.style.marginTop = '10px';\r\n        this.USTopoSVG.divHost.append(div);\r\n    }\r\n    public InitProjection() {\r\n        const xOff = this.width * 0.5; // 487.5\r\n        const yOff = this.height * 0.5; // 305\r\n        this.d3projection = geoAlbersUsa().scale(1000).translate([xOff, yOff]);\r\n        this.d3GeoPathGenerator = geoPath()\r\n            .projection(this.d3projection)\r\n            .pointRadius(4);\r\n    }\r\n    public InitSVG() {\r\n        // append the svg object to the body of the page\r\n        this.d3Selection = select(`#${this.id}`)\r\n            .append('svg')\r\n            .attr('width', this.width + this.USTopoSVG.margin.left + this.USTopoSVG.margin.right)\r\n            .attr('height', this.height + this.USTopoSVG.margin.top + this.USTopoSVG.margin.bottom)\r\n            .style('position', 'absolute')\r\n            .append('g')\r\n            .attr('transform', 'translate(' + this.USTopoSVG.margin.left + ',' + this.USTopoSVG.margin.top + ')');\r\n        // .on('mouseleave', function() {\r\n        //     select('#tooltip')\r\n        //       .transition()\r\n        //       .style('opacity',0 )\r\n        //   })\r\n        //   .on('mouseover', function() {\r\n        //       select('#tooltip')\r\n        //       .transition()\r\n        //       .style('opacity',1)\r\n        //   });\r\n    }\r\n    public async InitBase() {\r\n        let url = 'https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json';\r\n        // tslint:disable-next-line:no-any\r\n        return NJSLoader.URL(url).then((topoUSARaw: any) => {\r\n            this.topoUSARaw = JSON.parse(topoUSARaw);\r\n\r\n            // tslint:disable-next-line:no-any\r\n            this.geoJsonBase = feature(this.topoUSARaw, this.topoUSARaw.objects.counties);\r\n            // console.log('geojson', this.geoJsonBase);\r\n\r\n            for (let i = 0; i < this.geoJsonBase.features.length; ++i) {\r\n                const d = this.geoJsonBase.features[i];\r\n                const data = this.USTopoSVG.dataClass.data[d.id];\r\n\r\n                const id = this.USTopoSVG.sleID;\r\n                try {\r\n                    if (data[id]) {\r\n                        const dataNormal = MathUtility.Remap(+data[id], this.USTopoSVG.dataClass.min, this.USTopoSVG.dataClass.max, 0, 600);\r\n                        // console.log(data[id], dataNormal, this.USTopoSVG.dataClass.min, this.USTopoSVG.dataClass.max);\r\n                        this.geoJsonBase.features[i].properties.data = dataNormal;\r\n                    } else {\r\n                        this.geoJsonBase.features[i].properties.data = 0;\r\n                    }\r\n                } catch (error) {\r\n                    this.geoJsonBase.features[i].properties.data = 0;\r\n                }\r\n\r\n                if (Math.random() < 0.5) {\r\n                    this.geoJsonBase.features[i].properties.visited = true;\r\n\r\n                } else {\r\n                    this.geoJsonBase.features[i].properties.visited = false;\r\n                }\r\n            }\r\n            return this.geoJsonBase;\r\n        });\r\n    }\r\n    private DrawMapSVG() {\r\n        // console.log('geojson', this.geoJsonBase);\r\n\r\n        this.d3Selection.selectAll('path')\r\n            .data(this.geoJsonBase.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', this.d3GeoPathGenerator)\r\n            .style('stroke', '#fff')\r\n            .style('stroke-width', '.25')\r\n            // tslint:disable-next-line:no-any\r\n            .style('fill', (d: any) => {\r\n                // Get data value\r\n                // let value = d.properties.visited;\r\n                // // console.log(value);\r\n                // if (value) {\r\n                //     // If value exists…\r\n                //     return 'rgb(255,0,0)'; // this.color(value);\r\n                // } else {\r\n                //     // If value is undefined…\r\n                //     return 'rgb(213,222,217)';\r\n                // }\r\n\r\n                const data = d.properties.data;\r\n                // console.log(data);\r\n                return `rgb(0, 0, ${data})`;\r\n\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .on('mouseover', function (d: any) {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                if (event.currentTarget !== null) {\r\n                    // tslint:disable-next-line:no-any\r\n                    select('svg').style('fill', function (d: any) {\r\n                        const data = d.properties.data;\r\n                        return `rgb(0, 0, ${data + data})`;\r\n                    });\r\n                }\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .on('mousemove', (_d: any, _event: any) => {\r\n                // let tooltipHeight = $('#tooltip').height();\r\n                // d3.select('#tooltip').style('left', () => d3.event.x + 15 + 'px')\r\n                // d3.select('#tooltip').style('top', () => d3.event.y - tooltipHeight - 20 + 'px')\r\n                // console.log(_d);\r\n                this.USTopoSVG.UpdateLegend(_d);\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .on('click', function (_d: any, _event: any) {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                if (event.currentTarget !== null) {\r\n                    // tslint:disable-next-line:no-any\r\n                    select('svg').style('fill', function (d: any) {\r\n                        const data = d.properties.data;\r\n                        return `rgb(0, 0, ${data})`;\r\n                    });\r\n\r\n                }\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .on('mouseleave', () => {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                if (event.currentTarget !== null) {\r\n                    // tslint:disable-next-line:no-any\r\n                    select('svg').style('fill', function (d: any) {\r\n                        // let value = d.properties.visited;\r\n                        // // console.log(value);\r\n                        // if (value) {\r\n                        //     // If value exists…\r\n                        //     return 'rgb(255,0,0)'; // this.color(value);\r\n                        // } else {\r\n                        //     // If value is undefined…\r\n                        //     return 'rgb(213,222,217)';\r\n                        // }\r\n                        const data = d.properties.data;\r\n                        return `rgb(0, 0, ${data})`;\r\n                    });\r\n\r\n                }\r\n                // select(event.currentTarget).attr('fill', 'rgb(255,255,0)');\r\n                // d3.select(this)\r\n                //   .attr('class','inactive')\r\n            });\r\n\r\n        // const projectionForCen = geoPath().projection(null);\r\n        // this.d3Selection.append('g')\r\n        //         .attr('class', 'bubble')\r\n        //         .selectAll('circle')\r\n        //         .data(geojson.features)\r\n        //         .enter().append('circle')\r\n        //         .style('stroke', '#fff')\r\n        //         .style('stroke-width', '0.5')\r\n        //         .attr('r', () => {\r\n        //             return Math.random() * 3;\r\n        //         })\r\n        //         // tslint:disable-next-line:no-any\r\n        //         .attr('transform', (d: any) => {\r\n        //             // console.log(d.geometry.coordinates);\r\n        //             // console.log(this.projection);\r\n        //             let cen = this.projection(projectionForCen.centroid(d));\r\n        //             // console.log(cen);\r\n        //             return 'translate(' + cen + ')';\r\n        //         });\r\n\r\n        // .style('fill-opacity', '.5');\r\n    }\r\n}","import { NVector3, StatisticsUtility, MathUtility, MouseEventData, } from '../../../lib';\r\n// import { } from '../../../..';\r\nimport { USTopoSVG } from '..';\r\nexport class Legend {\r\n    USTopoSVG: USTopoSVG;\r\n    hostDiv: HTMLElement;\r\n    div: HTMLElement;\r\n    divTitle: HTMLElement;\r\n    divInspection: HTMLElement;\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    width: number = 250;\r\n    height: number = 300;\r\n    vec: NVector3 = new NVector3(0, 0);\r\n    isCaptured: boolean = false;\r\n\r\n    histData: number[][] = [];\r\n    binNum = 20;\r\n    binIndexSel: number = -1;\r\n    valSel = -1;\r\n    xStandardDeviation: number = 0;\r\n\r\n    constructor(USTopoSVG: USTopoSVG, hostDiv: HTMLElement, x: number = 670, y: number = 400, width: number = 250, height: number = 150) {\r\n        this.USTopoSVG = USTopoSVG;\r\n        this.hostDiv = hostDiv;\r\n        this.vec.x = x;\r\n        this.vec.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.InitDiv();\r\n\r\n        this.Render();\r\n    }\r\n    private InitDiv() {\r\n        const div = document.createElement('div');\r\n        if (div) {\r\n            this.div = div;\r\n            this.hostDiv.append(this.div);\r\n            this.div.style.position = 'absolute';\r\n            this.div.style.background = 'rgba(255, 255, 255, 1.0)';\r\n            this.div.style.pointerEvents = 'none';\r\n            this.div.style.top = `${this.vec.y}px`;\r\n            this.div.style.left = `${this.vec.x}px`;\r\n            this.div.style.width = `${this.width}px`;\r\n            this.div.style.height = `${this.height}px`;\r\n            this.div.style.border = `${2}px`;\r\n            this.div.style.borderColor = '#000000';\r\n\r\n            const divTitle = document.createElement('div');\r\n            if (divTitle) {\r\n                this.divTitle = divTitle;\r\n                this.div.append(this.divTitle);\r\n                this.divTitle.style.margin = '5px';\r\n                this.divTitle.textContent = 'Unemployment rate (%)';\r\n            }\r\n\r\n            this.InitCanvas();\r\n\r\n            const divInspection = document.createElement('div');\r\n            if (divInspection) {\r\n                this.divInspection = divInspection;\r\n                this.div.append(this.divInspection);\r\n                this.divInspection.style.margin = '5px';\r\n                this.divInspection.textContent = 'Move your mouse to inspect the data';\r\n            }\r\n        }\r\n\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    public UpdateLegend(v: any, index: number) {\r\n        const id = v.id;\r\n        const dd = this.USTopoSVG.dataClass.data[id];\r\n\r\n        try {\r\n            const county = dd[3] + ',' + dd[4];\r\n            // console.log(county);\r\n            const content = county + ', value:' + dd[index];\r\n            this.valSel = dd[index];\r\n            this.binIndexSel = StatisticsUtility.GetIndexByDataForHistDataFromNumeric(this.histData, dd[index]);\r\n\r\n            this.divInspection.textContent = content;\r\n        } catch (error) {\r\n            const content = '';\r\n            this.divInspection.textContent = content;\r\n        }\r\n\r\n    }\r\n    private InitCanvas() {\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            // this.canvas.style.position = 'absolute';\r\n            this.canvas.style.pointerEvents = 'none';\r\n            // this.canvas.style.height = '50px';\r\n            // this.canvas.style.width = (this.width - 5 * 2) + 'px';\r\n            this.canvas.height = 50;\r\n            this.canvas.width = this.width - 5 * 2;\r\n            this.canvas.style.margin = '5px';\r\n            // this.canvas.style.top = `${this.vec.y}px`;\r\n            // this.canvas.style.left = `${this.vec.x}px`;\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.div.append(this.canvas);\r\n\r\n                this.histData = StatisticsUtility.GetDataForHistDataFromNumeric(this.USTopoSVG.dataClass.dataSelArray, this.binNum);\r\n                this.xStandardDeviation = StatisticsUtility.StandardDeviation(this.USTopoSVG.dataClass.dataSelArray);\r\n                // console.log(this.xStandardDeviation);\r\n            }\r\n        }\r\n\r\n    }\r\n    public IsInside(x: number, y: number): boolean {\r\n        // console.log('dd');\r\n        // Exit with no intersection if found separated along an axis\r\n        if (this.vec.x > x || this.vec.x + this.width < x) {\r\n            // this.div.style.background =  '#ff0000' ; // 'rgba(230, 230, 230, 0.2)';\r\n            return false;\r\n        }\r\n        if (this.vec.y > y || this.vec.y + this.height < y) {\r\n            // this.div.style.background =  '#ff0000' ; // 'rgba(230, 230, 230, 0.2)';\r\n            return false;\r\n        }\r\n\r\n        // if (a.max.x < b.min.x || a.min.x > b.max.x) return false;\r\n        // if (a.max.y < b.min.y || a.min.y > b.max.y) return false;\r\n\r\n        // No separating axis found, therefor there is at least one overlapping axis\r\n        // this.div.style.background = '#fff';\r\n        return true;\r\n    }\r\n    public MouseDown(e: MouseEventData) {\r\n        if (this.IsInside(e.x, e.y)) {\r\n            this.isCaptured = true;\r\n        } else {\r\n            this.isCaptured = false;\r\n        }\r\n    }\r\n    public MouseUp(e: MouseEventData) {\r\n        this.isCaptured = true;\r\n    }\r\n    public MouseMove(e: MouseEventData) {\r\n        if (this.IsInside(e.x, e.y)) {\r\n            this.isCaptured = true;\r\n            this.div.style.background = 'rgba(255, 255, 255, 1.0)';\r\n        } else {\r\n            this.div.style.background = 'rgba(230, 230, 230, 0.0)';\r\n            this.isCaptured = false;\r\n        }\r\n    }\r\n    public MouseDrag(e: MouseEventData) {\r\n        if (!this.isCaptured) { return; }\r\n\r\n        let xOff = e.x - e.preX;\r\n        let yOff = e.y - e.preY;\r\n\r\n        // console.log(xOff, yOff);\r\n\r\n        if (this.div.style.top && this.div.style.left) {\r\n            let yyTemp = parseFloat(this.div.style.top);\r\n            let xxTemp = parseFloat(this.div.style.left);\r\n\r\n            if (yyTemp && xxTemp) {\r\n                const xx = xxTemp * xOff;\r\n                const yy = yyTemp * yOff;\r\n                // console.log(this.canvas.style.top, this.canvas.style.left);\r\n                // console.log(yy, xx);\r\n                this.vec.x = xx;\r\n                this.vec.y = yy;\r\n\r\n                this.div.style.top = `${this.vec.y}px`;\r\n                this.div.style.left = `${this.vec.x}px`;\r\n                // this.canvas.style.top = yy + 'px';\r\n                // this.canvas.style.left = xx + 'px';\r\n            }\r\n        }\r\n\r\n    }\r\n    private Render() {\r\n        requestAnimationFrame(() => { this.Render(); });\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0)';\r\n        this.ctx.fill();\r\n\r\n        const intervalX = (this.ctx.canvas.width / this.binNum) + 1;\r\n\r\n        let maxY = Number.MIN_SAFE_INTEGER;\r\n        for (let i = 0; i < this.histData.length; ++i) {\r\n            const length = this.histData[i].length;\r\n            if (maxY < length) { maxY = length; }\r\n        }\r\n\r\n        // const intervalY = (this.ctx.canvas.width / length) + 1;\r\n\r\n        for (let i = 0; i < this.histData.length; ++i) {\r\n            const length = this.histData[i].length;\r\n            if (this.binIndexSel === i && this.binIndexSel > 0) {\r\n                this.ctx.fillStyle = '#0000ff';\r\n            } else {\r\n                this.ctx.fillStyle = '#0000aa';\r\n            }\r\n            this.ctx.beginPath();\r\n\r\n            const theHeight = MathUtility.Remap(length, 0, maxY, this.ctx.canvas.height - 3, 5);\r\n            // console.log(theHeight, this.ctx.canvas.height);\r\n            this.ctx.rect(i * intervalX, theHeight, intervalX - 5, this.ctx.canvas.height);\r\n\r\n            this.ctx.closePath();\r\n            this.ctx.fill();\r\n        }\r\n\r\n        //\r\n        let xRemap = MathUtility.Remap(this.xStandardDeviation, this.USTopoSVG.dataClass.min, this.USTopoSVG.dataClass.max, 5, this.ctx.canvas.width);\r\n        this.ctx.setLineDash([2, 4]);\r\n        this.ctx.strokeStyle = '#000000';\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(xRemap, 0);\r\n        this.ctx.lineTo(xRemap, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.lineWidth = 1;\r\n        this.ctx.stroke();\r\n        this.ctx.setLineDash([0, 0]);\r\n\r\n        //\r\n        xRemap = MathUtility.Remap(this.valSel, this.USTopoSVG.dataClass.min, this.USTopoSVG.dataClass.max, 5, this.ctx.canvas.width);\r\n        this.ctx.setLineDash([3, 3]);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(xRemap, 0);\r\n        this.ctx.lineTo(xRemap, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.strokeStyle = '#0000ff';\r\n        this.ctx.lineWidth = 1.5;\r\n        this.ctx.stroke();\r\n        this.ctx.setLineDash([0, 0]);\r\n\r\n    }\r\n}","import { USTopoSVG } from '..';\r\n\r\nexport class Data {\r\n    USTopoSVG: USTopoSVG;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    dataRaw: any;\r\n    data: any = {};\r\n\r\n    index: string[];\r\n    min: number = Number.MAX_SAFE_INTEGER;\r\n    max: number = Number.MIN_SAFE_INTEGER;\r\n    dataSelArray: number[] = [];\r\n    constructor(USTopoSVG: USTopoSVG) {\r\n        this.USTopoSVG = USTopoSVG;\r\n\r\n    }\r\n    async Init(index: number) {\r\n        const url = `njslabSandboxStatic/data/dataUSUnemployed.csv`;\r\n\r\n        return fetch(url)\r\n            .then((response: Response) => {\r\n                return response.text();\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .then((data: any) => {\r\n                // console.log(data);\r\n                const dataTemp = [];\r\n                const dataArray = data.split('\\r\\n');\r\n                // console.log(dataArray);\r\n                this.index = dataArray[4].split(',');\r\n                for (let i = 6; i < dataArray.length; ++i) {\r\n                    const d = dataArray[i].split(',');\r\n                    dataTemp.push(d);\r\n                    const theData = +d[index];\r\n                    if (theData) {\r\n                        this.dataSelArray.push(theData);\r\n                        if (theData < this.min) { this.min = theData; }\r\n                        if (theData > this.max) { this.max = theData; }\r\n                    }\r\n                }\r\n                // this.VisData();\r\n                this.dataRaw = dataTemp;\r\n                for (let i = 0; i < dataTemp.length; ++i) {\r\n                    const key = dataTemp[i][1] + dataTemp[i][2];\r\n                    this.data[key] = dataTemp[i];\r\n                }\r\n                // console.log(this);\r\n                return this.dataRaw;\r\n            })\r\n            .catch((err: Error) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n}","\r\n// import { DefinitionBase } from '../../Core/Base/DefinitionBase';\r\n// import { Definition } from '..';\r\n// import { MouseEventData } from '../../../../../../';\r\n\r\nimport { scaleOrdinal } from 'd3-scale';\r\n\r\nimport { D3Implementation } from './Core/D3Implementation';\r\nimport { Legend } from './Core/Legend';\r\nimport { Data } from './Core/Data';\r\nimport {\r\n    geoGraticule, GeoProjection\r\n    //     geoPath, , GeoProjection,\r\n    //     // geoDistance,\r\n    //     geoAlbersUsa,\r\n\r\n} from 'd3-geo';\r\nimport { COLORBLENDING, D3Margin, MouseEventData } from '../../lib';\r\n// counties id https://en.wikipedia.org/wiki/ISO_3166-1_numeric\r\n// data https://www.bls.gov/lau/#tables\r\n// https://factfinder.census.gov/faces/nav/jsf/pages/index.xhtml\r\nexport interface ID3Scatter {\r\n    widthVis: number;\r\n    heightVis: number;\r\n    labelX: string;\r\n    labelY: string;\r\n    minX: number;\r\n    maxX: number;\r\n    minY: number;\r\n    maxY: number;\r\n}\r\n\r\nexport class USTopoSVG {\r\n    public divHost: HTMLElement;\r\n    // private listHashColor: HashColorInterface = {};\r\n    public listShapes: Object;\r\n    // public implmentation: Implmentation;\r\n\r\n    width = 800;\r\n    height = 500;\r\n\r\n    margin: D3Margin;\r\n    // tslint:disable-next-line:no-any\r\n    x: any; y: any;\r\n    properties: ID3Scatter;\r\n\r\n    mp: number[] = [0, 0];\r\n\r\n    // tslint:disable-next-line:no-any\r\n    geoGenerator: any;\r\n    // tslint:disable-next-line:no-any\r\n    projection: GeoProjection;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n\r\n    id: string;\r\n    // tslint:disable-next-line:no-any\r\n    geojson: any;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    color: any;\r\n\r\n    dataClass: Data;\r\n    sleID: number;\r\n\r\n    d3Implementation: D3Implementation;\r\n    legend: Legend;\r\n\r\n    constructor(divHost: HTMLElement) {\r\n        this.divHost = divHost;\r\n        this.properties = {\r\n            widthVis: 800,\r\n            heightVis: 500,\r\n            labelX: 'string',\r\n            labelY: 'string',\r\n            minX: 0,\r\n            maxX: 500,\r\n            minY: 0,\r\n            maxY: 500,\r\n        };\r\n        this.margin = new D3Margin();\r\n        this.margin.bottom = 5;\r\n        this.margin.left = 5;\r\n        this.margin.right = 5;\r\n        this.margin.top = 5;\r\n\r\n        this.listShapes = {};\r\n\r\n        this.color = scaleOrdinal().range(['rgb(213,222,217)', 'rgb(69,173,168)', 'rgb(84,36,55)', 'rgb(217,91,67)']);\r\n\r\n        this.sleID = 10;\r\n        this.Init();\r\n    }\r\n    public async Init() {\r\n        this.InitData().then(() => {\r\n            this.d3Implementation = new D3Implementation(this);\r\n\r\n            this.InitCanvas();\r\n\r\n            this.legend = new Legend(this, this.divHost);\r\n        });\r\n    }\r\n    public async InitData() {\r\n        this.dataClass = new Data(this);\r\n        return await this.dataClass.Init(this.sleID);\r\n\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    public UpdateLegend(v: any) {\r\n        if (this.legend) {\r\n            this.legend.UpdateLegend(v, this.sleID);\r\n        }\r\n    }\r\n    public InitCanvas() {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.style.pointerEvents = 'none';\r\n        canvas.style.position = 'absolute';\r\n\r\n        canvas.width = 1000; // this.implmentation.implementation.div.style.width;\r\n        canvas.height = 1000; // this.implmentation.implementation.div.style.height;\r\n\r\n        this.divHost.append(canvas);\r\n        const ctx = canvas.getContext('2d');\r\n        this.id = this.divHost.id;\r\n        if (ctx) {\r\n            this.ctx = ctx;\r\n            this.Update();\r\n        }\r\n    }\r\n    public MouseDown(e: MouseEventData) {\r\n        if (this.legend) {\r\n            this.legend.MouseDown(e);\r\n        }\r\n    }\r\n    public MouseUp(e: MouseEventData) {\r\n        if (this.legend) {\r\n            this.legend.MouseUp(e);\r\n        }\r\n    }\r\n    public MouseMove(e: MouseEventData) {\r\n        this.mp[0] = e.x;\r\n        this.mp[1] = e.y;\r\n        if (this.legend) {\r\n            this.legend.MouseMove(e);\r\n        }\r\n    }\r\n    public MouseDrag(e: MouseEventData) {\r\n        this.legend.MouseDrag(e);\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    public arcToCoordinates(topology: any, arc: number[][]) {\r\n        let x = 0, y = 0;\r\n        return arc.map((point: number[]) => {\r\n            return [\r\n                (x += point[0]) * topology.transform.scale[0] + topology.transform.translate[0],\r\n                (y += point[1]) * topology.transform.scale[1] + topology.transform.translate[1]\r\n            ];\r\n        });\r\n    }\r\n    public Update() {\r\n        requestAnimationFrame(() => { this.Update(); });\r\n        this.ctx.clearRect(0, 0, 1500, 1500);\r\n\r\n        // Graticule\r\n        let graticule = geoGraticule();\r\n        this.ctx.beginPath();\r\n        this.ctx.strokeStyle = '#eee';\r\n        this.d3Implementation.d3GeoPathGenerator(graticule());\r\n        this.ctx.strokeStyle = '#bbbbbb';\r\n        this.ctx.stroke();\r\n\r\n        // this.projection.rotate([this.yaw, -25]); // -45\r\n\r\n        this.ctx.lineWidth = 0.5;\r\n        this.ctx.strokeStyle = '#333';\r\n\r\n        this.ctx.beginPath();\r\n        // this.geoGenerator({type: 'FeatureCollection', features: this.geojson.features});\r\n        // this.geoGenerator({type: 'GeometryCollection', features: this.topo.objects.states});\r\n\r\n        // for (let i = 0; i < this.topo.objects.states.geometries.length; ++i) {\r\n        //     for (let j = 0 ; j < this.topo.objects.states.geometries[i].arcs.length; ++j) {\r\n        //         console.log(this.topo.objects.states.geometries[i].arcs[j]);\r\n        //     }\r\n        // }\r\n\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.globalCompositeOperation = COLORBLENDING.SCREEN;\r\n\r\n        const p = this.d3Implementation.d3projection([this.mp[0], this.mp[1]]);\r\n\r\n        // console.log(p);\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.mp[0], this.mp[1], 25, 0, 3.14 * 2);\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = 'rgba(255, 255, 255, 0.25)';\r\n        this.ctx.fill();\r\n\r\n        if (p) {\r\n            // this.ctx.beginPath();\r\n            // this.ctx.arc(p[0], p[1], 10, 0, 3.14 * 2);\r\n            // this.ctx.closePath();\r\n            // this.ctx.fillStyle = '#00ff00';\r\n            // this.ctx.fill();\r\n        }\r\n\r\n        this.ctx.globalCompositeOperation = COLORBLENDING.SOURCE_OVER;\r\n        // this.yaw -= 0.2;\r\n        // console.log(this.yaw);\r\n\r\n        // topo json\r\n        // const path = geoPath(null, this.ctx);\r\n\r\n        // this.DrawMap();\r\n        // this.DrawMapSVG();\r\n    }\r\n}","import { USTopoSVG } from './USTopoSVG';\r\nexport class Implementation {\r\n    USTopoSVG: USTopoSVG;\r\n    divHost: HTMLElement;\r\n    constructor(id: string) {\r\n        const divHost = document.getElementById(id);\r\n        if (divHost) {\r\n            this.divHost = divHost;\r\n            this.InitApp();\r\n        }\r\n\r\n    }\r\n    public InitApp() {\r\n        console.log('ddsdd');\r\n        this.USTopoSVG = new USTopoSVG(this.divHost);\r\n\r\n        // document.body.style.overflow = 'auto';\r\n    }\r\n}","import { Implementation } from './Implementation';\r\nexport class Demo21AppD3USTopoVis {\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new Demo21AppD3USTopoVis(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    public Dummy() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id) as HTMLDivElement;\r\n\r\n        Demo21AppD3USTopoVis.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["D3Implementation","constructor","USTopoSVG","id","width","height","d3Selection","d3GeoPathGenerator","d3projection","topoUSARaw","geoJsonBase","this","divHost","properties","widthVis","margin","left","right","heightVis","top","bottom","Init","InitProjection","InitSVG","InitBase","then","DrawMapSVG","InitRefer","div","document","createElement","textContent","style","marginLeft","marginTop","append","xOff","yOff","geoAlbersUsa","scale","translate","geoPath","projection","pointRadius","select","attr","NJSLoader","JSON","parse","feature","objects","counties","i","features","length","d","data","dataClass","sleID","dataNormal","MathUtility","min","max","error","Math","random","visited","selectAll","enter","on","event","currentTarget","_d","_event","UpdateLegend","Legend","hostDiv","x","y","divTitle","divInspection","canvas","ctx","vec","NVector3","isCaptured","histData","binNum","binIndexSel","valSel","xStandardDeviation","InitDiv","Render","position","background","pointerEvents","border","borderColor","InitCanvas","v","index","dd","content","StatisticsUtility","getContext","dataSelArray","IsInside","MouseDown","e","MouseUp","MouseMove","MouseDrag","preX","preY","yyTemp","parseFloat","xxTemp","xx","yy","requestAnimationFrame","clearRect","beginPath","rect","closePath","fillStyle","fill","intervalX","maxY","Number","MIN_SAFE_INTEGER","theHeight","xRemap","setLineDash","strokeStyle","moveTo","lineTo","lineWidth","stroke","Data","dataRaw","MAX_SAFE_INTEGER","async","fetch","response","text","dataTemp","dataArray","split","push","theData","key","catch","err","console","log","listShapes","mp","geoGenerator","geojson","color","d3Implementation","legend","labelX","labelY","minX","maxX","minY","D3Margin","scaleOrdinal","range","InitData","Update","arcToCoordinates","topology","arc","map","point","transform","graticule","geoGraticule","globalCompositeOperation","COLORBLENDING","Implementation","getElementById","InitApp","Demo21AppD3USTopoVis","static","Dummy","implementation","Solution","destroy","firstChild","removeChild","warn"],"sourceRoot":""}