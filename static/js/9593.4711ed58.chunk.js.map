{"version":3,"file":"static/js/9593.4711ed58.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/05_pixelMapImage.ts","njslab/Workshop/workshop-vector/base/RendererCanvas.ts"],"sourcesContent":["import { RendererCanvas } from '../workshop-vector/base/RendererCanvas';\r\nimport { getImgFromURL } from '../../../lib'\r\n\r\nexport class Solution extends RendererCanvas {\r\n    t: number = 0.0;\r\n    pMap: PixelMap = undefined;\r\n    img: HTMLImageElement;\r\n    constructor(div: HTMLDivElement) {\r\n        super(div);\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        this.init();\r\n\r\n\r\n        const divInput = document.createElement('input');\r\n        divInput.value = 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png';\r\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\r\n            if (e.code === 'Enter') {\r\n                getImgFromURL(divInput.value).then((img: HTMLImageElement) => {\r\n                    this.img = img;\r\n                    this.img.onload = (ev) => {\r\n                        this.update(img);\r\n                    };\r\n                });\r\n            }\r\n        });\r\n        this.divHost.appendChild(divInput);\r\n\r\n\r\n    }\r\n    public update(img: HTMLImageElement) {\r\n        console.log(img)\r\n        this.img = img\r\n        \r\n        this.init()\r\n    }\r\n    public init() {\r\n\r\n        const resX = 100\r\n        const resY = 100\r\n\r\n        if (this.img) {\r\n            console.log(this.img.width, this.img.height)    \r\n\r\n            this.ctx.drawImage(this.img, this.img.width * -0.5, this.img.height * -0.5)\r\n\r\n            const data = this.ctx.getImageData(this.img.width * -0.5, this.img.height * -0.5, this.img.width, this.img.height);\r\n\r\n            // let clone = new ImageData(\r\n            //     new Uint8ClampedArray(data.data),\r\n            //     data.width,\r\n            //     data.height\r\n            // );\r\n\r\n            const px = (x: number, y: number) => {\r\n                return x * 4 + y * data.width * 4;\r\n            };\r\n\r\n            console.log(data.width, data.height)\r\n\r\n            const xRes = data.height / resX\r\n            const yRes = data.height / resY\r\n\r\n            for (let y = 0; y < data.height; y += yRes) {\r\n                for (let x = 0; x < data.width; x += xRes) {\r\n                    let oldPixel = data.data[px(x, y)];\r\n                    console.log(oldPixel)\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        \r\n        const size = 300;\r\n\r\n        this.pMap = new PixelMap(new Vector3(-size, -size, 0), new Vector3(size, size, 0) ,resX, resY);\r\n\r\n\r\n\r\n\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.pMap.render(ctx);\r\n\r\n        this.img && this.ctx.drawImage(this.img, this.img.width * -0.5, this.img.height * -0.5)\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        this.pMap.picking(x - this.ctx.canvas.width * 0.5, y - this.ctx.canvas.height * 0.5);\r\n    }\r\n\r\n    public mouseClick(x: number, y: number): void {\r\n        //\r\n    }\r\n}\r\n\r\nclass PixelMap {\r\n    public pixelList: Pixel[] = []\r\n    public minV: Vector3;\r\n    public maxV: Vector3;\r\n    public rx = 10;\r\n    public ry = 10;\r\n    public intervalX;\r\n    public intervalY;\r\n    constructor(minV: Vector3, maxV: Vector3, rx: number, ry: number) {\r\n        this.minV = minV;\r\n        this.maxV = maxV;\r\n        this.rx = rx;\r\n        this.ry = ry;\r\n        this.init()\r\n        this.initGridNeighbor();\r\n    }\r\n    public init(){\r\n        this.pixelList = []\r\n        const x = this.minV.x\r\n        const y = this.minV.y\r\n\r\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.rx - 1)\r\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.ry - 1)\r\n        \r\n        for(let j = 0 ; j < this.ry; j++) {\r\n            for(let i = 0 ; i < this.rx; i++) {\r\n                const xV = x + i * this.intervalX;\r\n                const yV = y + j * this.intervalY;\r\n\r\n                let pix = new Pixel(this, xV , yV , 0);\r\n                pix.xi = i;\r\n                pix.yi = j;\r\n                this.pixelList.push(pix);\r\n            }\r\n        }\r\n\r\n    }\r\n    private initGridNeighbor() {\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let k = i + j * this.rx;\r\n                let px = this.pixelList[k];\r\n                if (i > 0) { px.nPix.push(this.pixelList[k - 1]); }\r\n                if (i < this.rx - 1) { px.nPix.push(this.pixelList[k + 1]); }\r\n                if (j > 0) { px.nPix.push(this.pixelList[k - this.rx]); }\r\n                if (j < this.ry - 1) { px.nPix.push(this.pixelList[k + this.rx]); }\r\n                if ((i > 0) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx - 1]); }\r\n                if ((i > 0) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx - 1]); }\r\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx + 1]); }\r\n                if ((i < this.rx - 1) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx + 1]); }\r\n            }\r\n        }\r\n    }\r\n    public picking(x: number, y: number) {\r\n        const mv = new Vector3(x,y,0)\r\n        let dis = Number.MAX_VALUE;\r\n        let id = -1\r\n        for(let i = 0 ; i < this.pixelList.length; ++i) {\r\n           const theDis = distance(this.pixelList[i].vec, mv)\r\n           if (dis > theDis) {\r\n            dis = theDis\r\n            id = i;\r\n           }\r\n           this.pixelList[i].hover = false\r\n        }\r\n        if (id > -1) {\r\n            this.pixelList[id].hover = true\r\n        }\r\n    }\r\n    public render(ctx) {\r\n        this.pixelList.forEach((p: Pixel) => {\r\n            p.render(ctx);\r\n        })\r\n    }\r\n}\r\n\r\nclass Pixel {\r\n    public xi: number\r\n    public yi: number\r\n    public pMap: PixelMap;\r\n    public vec: Vector3;\r\n    public hover: boolean = false;\r\n    public nPix: Pixel[] = [];\r\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\r\n        this.pMap = pMap;\r\n        this.vec = new Vector3(x,y,z);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        const width = this.pMap.intervalX \r\n        const height = this.pMap.intervalY\r\n\r\n        ctx.beginPath()\r\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height)\r\n        ctx.closePath()\r\n        ctx.stroke()\r\n        if (this.hover) {\r\n            ctx.fillStyle = '#555';\r\n            ctx.fill()\r\n        } \r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\r\n        ctx.closePath();\r\n        if (this.hover) {\r\n            ctx.fillStyle = '#999';\r\n        } else {\r\n            ctx.fillStyle = '#333';\r\n        }\r\n        ctx.fill();\r\n\r\n        if (this.hover) {\r\n            for(let i = 0 ; i < this.nPix.length; ++i) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.vec.x, this.vec.y)\r\n                ctx.lineTo(this.nPix[i].vec.x, this.nPix[i].vec.y)\r\n                ctx.closePath();\r\n                ctx.stroke()\r\n            }\r\n\r\n            ctx.strokeText(`x: ${this.xi}, y: ${this.yi}` ,this.vec.x, this.vec.y)\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    public r: number = 3\r\n    constructor(x,y,z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}\r\n\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}","export class RendererCanvas {\r\n    public divHost: HTMLDivElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isDown: boolean = false;\r\n    public debugMode: boolean = false;\r\n    public isStatic: boolean = false;\r\n    public m: number[] = [0,0];\r\n\r\n    private prevent: boolean = false;\r\n    private delay: number = 250;\r\n    private timer: NodeJS.Timer | number;\r\n    private isDrag: boolean = false;\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        // this.canvas.style.position = 'absolute';\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n        this.divHost.appendChild(this.canvas);\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.timer = setTimeout(() => {\r\n                if (!this.prevent) {\r\n                    this.mouseClick(e.offsetX, e.offsetY);\r\n                }\r\n                this.isDrag = false;\r\n                this.prevent = false;\r\n            },\r\n                this.delay);\r\n        };\r\n        this.canvas.onwheel = (e: WheelEvent) => {\r\n            this.mouseWheel(e);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = true;\r\n            this.mouseDown(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = false;\r\n            this.isDrag = false;\r\n            this.mouseUp(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            if (this.isDown) {\r\n                this.isDrag = true;\r\n                this.prevent = true;\r\n                this.mouseDrag(e.offsetX, e.offsetY);\r\n            } else {\r\n                this.mouseMove(e.offsetX, e.offsetY);\r\n            }\r\n        };\r\n        window.addEventListener('resize', this.resize);\r\n        // this.loop(this.ctx);\r\n    }\r\n    public start() {\r\n        this.loop(this.ctx);\r\n    }\r\n    private resize = () => {\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n    }\r\n    public destroy() {\r\n        window.removeEventListener('resize', this.resize);\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n        this.destroyPost();\r\n    }\r\n    public destroyPost() {\r\n\r\n    }\r\n    public loop(ctx: CanvasRenderingContext2D) {\r\n        if (this.isStatic) { return; }\r\n        requestAnimationFrame(() => { this.loop(ctx); });\r\n        ctx.clearRect(ctx.canvas.width * -0.5, ctx.canvas.height * -0.5, ctx.canvas.width, ctx.canvas.height);\r\n        this.render(ctx);\r\n        this.renderPost();\r\n    }\r\n    public renderPost() {\r\n        this.renderMouse(this.ctx, this.m[0], this.m[1]);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // Binding needed\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('click'); }\r\n    }\r\n    public mouseDoubleClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('d-click'); }\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('down'); }\r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('up'); }\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('move'); }\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('drag'); }\r\n    }\r\n    public mouseWheel(v: WheelEvent) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('wheel', v); }\r\n    }\r\n    public renderMouse(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        ctx.fillText(`x: ${this.m[0]}, y:${this.m[1]}`,this.m[0] - 15, this.m[1] - 8)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public mouseUpdate(x: number, y: number): void {\r\n        this.m[0] = Math.floor(x - this.canvas.width * 0.5);\r\n        this.m[1] = Math.floor(y - this.canvas.height * 0.5);\r\n    }\r\n}"],"names":["Solution","RendererCanvas","constructor","div","super","t","pMap","undefined","img","this","ctx","translate","canvas","width","height","init","divInput","document","createElement","value","addEventListener","e","code","getImgFromURL","then","onload","ev","update","divHost","appendChild","console","log","drawImage","data","getImageData","px","x","y","xRes","yRes","oldPixel","size","PixelMap","Vector3","start","render","mouseMove","picking","mouseClick","minV","maxV","rx","ry","pixelList","intervalX","intervalY","initGridNeighbor","j","i","xV","yV","pix","Pixel","xi","yi","push","k","nPix","mv","dis","Number","MAX_VALUE","id","length","theDis","distance","vec","hover","forEach","p","z","beginPath","rect","closePath","stroke","fillStyle","fill","arc","r","Math","PI","moveTo","lineTo","strokeText","v0","v1","sqrt","distance2","isDown","debugMode","isStatic","m","prevent","delay","timer","isDrag","resize","bounding","getBoundingClientRect","getContext","onclick","setTimeout","offsetX","offsetY","onwheel","mouseWheel","ondblclick","mouseUpdate","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","window","loop","destroy","removeEventListener","lastElementChild","removeChild","error","destroyPost","requestAnimationFrame","clearRect","renderPost","renderMouse","v","fillText","floor"],"sourceRoot":""}