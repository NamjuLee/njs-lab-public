{"version":3,"file":"static/js/709.50f8e216.chunk.js","mappings":"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","sources":["njslab/Env/NNA/View/NWindow/Core/Controller.ts","njslab/Env/NNA/View/NWindow/Core/Builder.ts","njslab/Env/NNA/View/NWindow/NWindow.ts","njslab/Env/NNA/Environment/JSAPI/IO/IO.ts","njslab/Env/NNA/Environment/JSAPI/Core/ArcGIS.ts","njslab/Env/NNA/Environment/JSAPI/Core/Projection.ts","njslab/Env/NNA/Environment/JSAPI/Core/Canvas.ts","njslab/Env/NNA/Environment/JSAPI/Core/EventInteraction.ts","njslab/Env/NNA/Environment/JSAPI/Renderer/Renderer.ts","njslab/Env/NNA/Environment/JSAPI/index.ts","njslab/Env/NNA/NJSCore/Utility/MathUtility.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/View/GraphView/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/View/HTMLView.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Controller/Controller.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/GASystem/GeneticAlgorithm/Core/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/GASystem/GeneticAlgorithm/GeneticAlgorithm.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/GASystem/GASystem.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/Analysis/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Graph/Graph.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Graph/Edge.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Graph/Node.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/Tree/Tree.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphUtility/GraphUtility.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/GraphCore/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/RendererGraph/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/BoidsBehaviors/BoidsPath.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/BoidsBehaviors/Boid.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/AgencySystem/BoidsBehaviors/BoidsBehaviors.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/GraphSystem/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/VoxelSystem/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/Core/Core.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/IO/index.ts","njslab/Env/NNA/NJSEngine/NNAEngineV3/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/ActiveCommand/Commands/CommandBase.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/Base/Collision.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/Point/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/Base/GeometryBase.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/ActiveCommand/Commands/CommandShape.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/ActiveCommand/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Projection/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/IO/IO.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Geometry/GeometryCommon.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollsionBasedGraph/Core/PointCluster.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollsionBasedGraph/Core/Renderer.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollsionBasedGraph/Core/GraphClustering.ts","njslab/Env/NNA/NJSEngine/Addon/ClusteringCollsionBasedGraph/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Addon/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Renderer/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/Scene/index.ts","njslab/Env/NNA/NJSEngine/DrawingEngine/index.ts","njslab/Env/NNA/Application/Binding/BindingNNA.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/lib/enum.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/Core/GridSystemScreen.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/Core/GridSystemDynamic.ts","njslab/Env/NNA/NJSEngine/Addon/Clustering/index.ts"],"sourcesContent":["import { NWindow } from '../NWindow';\r\nexport class Controller {\r\n    window: NWindow;\r\n    constructor(window: NWindow){\r\n        this.window = window;\r\n    }\r\n    public addIconTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        let btn = document.createElement('button');\r\n        // btn.style.height = '70px';\r\n        btn.style.width = `${param.width}px`;\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.style.border = 'none';\r\n        btn.textContent = param.text;\r\n        btn.onclick = () => param.callBack();\r\n        this.window.builder.divFulldownArea.appendChild(btn);\r\n    }\r\n    public addToggleTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        let btn = document.createElement('button');\r\n        // btn.style.height = '70px';\r\n        btn.style.width = `${param.width}px`;\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.style.border = 'none';\r\n        btn.textContent = param.text;\r\n        btn.onclick = () => param.callBack();\r\n        this.window.builder.divFulldownArea.appendChild(btn);\r\n    }\r\n    public addIconLeftPanel(param: {text: string, callBack: () => void }){\r\n        let btn = document.createElement('button');\r\n        btn.style.height = '50px';\r\n        btn.style.width = '50px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.style.border = 'none';\r\n        btn.style.color = '#000000';\r\n        btn.style.background = '#fafafa';\r\n        btn.textContent = param.text;\r\n        btn.onclick = () => param.callBack();\r\n        btn.onmouseenter = () => {\r\n            btn.style.color = '#ffffff';\r\n            btn.style.background = '#888888';\r\n        }\r\n        btn.onmouseleave = () => {\r\n            btn.style.color = '#000000';\r\n            btn.style.background = '#fafafa';\r\n        }\r\n        this.window.builder.divLeftUI.appendChild(btn);\r\n    }\r\n    public addIconLeft(){\r\n\r\n    }\r\n}","\r\nimport { NWindow } from '../NWindow';\r\nexport class Builder {\r\n    window: NWindow;\r\n\r\n    divMain: HTMLDivElement;\r\n\r\n    \r\n    divMainBody: HTMLElement;\r\n    divTopArea: HTMLElement;\r\n    divFulldownArea: HTMLElement;\r\n    divLeftUI: HTMLElement;\r\n    divBottomArea: HTMLElement;\r\n\r\n    divForGraphicContext: HTMLElement;\r\n\r\n    private colorTopMenu = '#dfdfdf';\r\n    private colorBGmenu = '#f3f3f3';\r\n\r\n    constructor(window: NWindow){\r\n        this.window = window;\r\n    }\r\n\r\n    public initPanel(titleString: string) {\r\n        \r\n        this.initDivMain();\r\n        this.initDivTopArea();\r\n        this.initDivFulldownArea();\r\n\r\n        const box = document.createElement('div');\r\n        box.style.float = 'left';\r\n        box.style.height = '100%';\r\n        box.style.padding = '10px';\r\n        box.style.background = '#ff0000';\r\n        this.divTopArea.appendChild(box);\r\n\r\n        const title = document.createElement('div');\r\n        title.style.float = 'left';\r\n        title.style.padding = '10px';\r\n        title.textContent = titleString;\r\n        this.divTopArea.appendChild(title);\r\n\r\n        this.initDivContextArea();\r\n        this.initDivLeftArea();\r\n\r\n        this.divForGraphicContext = document.createElement('div');\r\n        this.divForGraphicContext.style.height = '100%';\r\n        this.divForGraphicContext.id = 'divForGraphicContext';\r\n        this.divMainBody.appendChild( this.divForGraphicContext);\r\n\r\n        \r\n        const closeBtn = document.createElement('button');\r\n        closeBtn.style.top = '0px';\r\n        closeBtn.style.left = '0px';\r\n        closeBtn.style.height = '20px';\r\n        closeBtn.style.width = '20px';\r\n        closeBtn.style.zIndex = '13';\r\n        closeBtn.style.float = 'right';\r\n        // closeBtn.style.position = 'absolute';\r\n        closeBtn.style.padding = '0px';\r\n        closeBtn.style.zIndex = '20';\r\n        // closeBtn.style.background = '#ff0000';\r\n        // closeBtn.style.color = '#ffffff';\r\n        closeBtn.textContent = 'X'\r\n        closeBtn.onclick = () => {\r\n            this.window.remove();\r\n        };\r\n        this.divTopArea.appendChild(closeBtn);\r\n\r\n        this.initBottomArea(this.divMain);\r\n\r\n\r\n\r\n        const bottomToolbarArea = document.createElement('div');\r\n        // bottomToolbarArea.style.background = '#ff0000';\r\n        bottomToolbarArea.style.height = '100%';\r\n        bottomToolbarArea.style.width = '100px';\r\n        bottomToolbarArea.style.float = 'left';\r\n        this.divBottomArea.appendChild(bottomToolbarArea);\r\n\r\n\r\n        const bottomTextarea = document.createElement('div');\r\n        // bottomTextarea.style.background = '#0ff0f0';\r\n        bottomTextarea.style.height = '100%';\r\n        bottomTextarea.style.width = '80%';\r\n        bottomTextarea.style.float = 'left';\r\n        this.divBottomArea.appendChild(bottomTextarea);\r\n\r\n\r\n    }\r\n    public initDivTopArea(){\r\n        let top = document.createElement('div');\r\n        top.style.width = '100%';\r\n        top.style.height = '40px';\r\n        top.style.background = this.colorTopMenu; // \r\n        // top.style.position = 'relative';\r\n        top.style.zIndex = '11';\r\n        // top.style.padding = '5px';\r\n        // top.textContent = 'NNA V3 controller'\r\n\r\n        let isPressed = false;\r\n        let prePos: number[] = [0 , 0];\r\n\r\n        top.ondrag = (e: MouseEvent) => {\r\n            // console.log('reall?', e);\r\n        }\r\n        top.onmouseenter = (e: MouseEvent ) => {\r\n            // console.log('onmouseenter?', e);\r\n        }\r\n        top.ondrag = (e: MouseEvent ) => {\r\n            // console.log('ondrag?', e);\r\n        }\r\n        top.onmousemove = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n                // console.log(xOff, yOff);\r\n                // console.log(+hostDiv.style.top);\r\n                // console.log(hostDiv.clientLeft, parseFloat(hostDiv.style.left));\r\n                this.divMain.style.top = parseFloat(this.divMain.style.top) + yOff +'px';\r\n                this.divMain.style.left = parseFloat(this.divMain.style.left) + xOff +'px';\r\n                // console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        top.onmousedown = (e: MouseEvent ) => {\r\n            // console.log('down', e);\r\n            prePos[0] = e.clientX;\r\n            prePos[1] = e.clientY;\r\n            isPressed = true;\r\n            this.window.updateZindex();\r\n        }\r\n        top.onmouseup = (e: MouseEvent ) => {\r\n            // console.log('up', e);\r\n            isPressed = false;\r\n        }\r\n        top.onmouseout = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                // console.log('onmouseout', e);\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n                // console.log(xOff, yOff);\r\n                // console.log(+hostDiv.style.top);\r\n                // console.log(hostDiv.clientLeft, parseFloat(hostDiv.style.left));\r\n                this.divMain.style.top = parseFloat(this.divMain.style.top) + yOff +'px';\r\n                this.divMain.style.left = parseFloat(this.divMain.style.left) + xOff +'px';\r\n                // console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        this.divTopArea = top;\r\n        this.divMain.appendChild(top);\r\n    }\r\n    public appendCloseTop() {\r\n\r\n    }\r\n\r\n    public initBottomArea(hostDiv: HTMLElement) {\r\n\r\n        let bootom = document.createElement('div');\r\n        bootom.style.top = parseFloat(hostDiv.style.height) - parseFloat(hostDiv.style.top) - 10 + 'px';\r\n        // top.style.left = parseFloat(hostDiv.style.width) - parseFloat(hostDiv.style.left) - 20 + 'px';\r\n        bootom.style.width = '100%';\r\n        bootom.style.height = '40px';\r\n        bootom.style.background = this.colorBGmenu;\r\n        // top.style.position = 'relative';\r\n        bootom.style.zIndex = '11';\r\n        // top.style.padding = '5px';\r\n        // top.textContent = 'L'\r\n\r\n        let isPressed = false;\r\n        let prePos: number[] = [0 , 0];\r\n\r\n        bootom.ondrag = (e: MouseEvent) => {\r\n            // console.log('reall?', e);\r\n        }\r\n        bootom.onmouseenter = (e: MouseEvent ) => {\r\n            // console.log('onmouseenter?', e);\r\n        }\r\n        bootom.ondrag = (e: MouseEvent ) => {\r\n            // console.log('ondrag?', e);\r\n        }\r\n        bootom.onmousemove = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n\r\n                hostDiv.style.width = parseFloat(hostDiv.style.width) + xOff + 'px';\r\n                hostDiv.style.height = parseFloat(hostDiv.style.height) + yOff + 'px';\r\n\r\n                // console.log('drgggg?', e, hostDiv.style.height);\r\n\r\n                bootom.style.top = parseFloat(bootom.style.top) + yOff + 'px';\r\n                bootom.style.left = parseFloat(bootom.style.left) + xOff + 'px';\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        bootom.onmousedown = (e: MouseEvent ) => {\r\n            // console.log('down', e);\r\n            prePos[0] = e.clientX;\r\n            prePos[1] = e.clientY;\r\n            isPressed = true;\r\n        }\r\n        bootom.onmouseup = (e: MouseEvent ) => {\r\n            // console.log('up', e);\r\n            isPressed = false;\r\n        }\r\n        bootom.onmouseout = (e: MouseEvent ) => {\r\n\r\n            // @ts-ignore\r\n            this.window.updateResize = setTimeout(() => {\r\n                if (isPressed) {\r\n                    // console.log('onmouseout', e);\r\n                    const xOff = e.clientX - prePos[0];\r\n                    const yOff = e.clientY - prePos[1];\r\n                    hostDiv.style.width = parseFloat(hostDiv.style.width) + xOff + 'px';\r\n                    hostDiv.style.height = parseFloat(hostDiv.style.height) + yOff + 'px';\r\n                    // console.log(hostDiv.style.width)\r\n    \r\n                    bootom.style.top = parseFloat(bootom.style.top) + yOff + 'px';\r\n                    bootom.style.left = parseFloat(bootom.style.left) + xOff + 'px';\r\n    \r\n                    prePos[0] = e.clientX;\r\n                    prePos[1] = e.clientY;\r\n                }\r\n            }, 300);\r\n\r\n            if (isPressed) {\r\n                // console.log('onmouseout', e);\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n                hostDiv.style.width = parseFloat(hostDiv.style.width) + xOff + 'px';\r\n                hostDiv.style.height = parseFloat(hostDiv.style.height) + yOff + 'px';\r\n                // console.log(hostDiv.style.width)\r\n\r\n                bootom.style.top = parseFloat(bootom.style.top) + yOff + 'px';\r\n                bootom.style.left = parseFloat(bootom.style.left) + xOff + 'px';\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n\r\n        }\r\n        this.divBottomArea = bootom;\r\n        hostDiv.appendChild(bootom);\r\n\r\n\r\n    }\r\n    public initDivMain(){\r\n        this.divMain = document.createElement('div');\r\n        this.divMain.style.width = `${this.window.width}px`;\r\n        this.divMain.style.height = `${this.window.height}px`;\r\n        // this.divMain.style.background = '#000000';\r\n        this.divMain.style.position = 'absolute';\r\n        this.divMain.style.zIndex = '10';\r\n        this.divMain.id = 'NWindow';\r\n\r\n        this.divMain.style.top = '100px'; //this.HTMLView.app.definition.app.divHost.style.top + 'px';\r\n        this.divMain.style.left = '200px'; // = this.HTMLView.app.definition.app.divHost.clientWidth + 'px';\r\n\r\n        this.window.divHost.appendChild(this.divMain);\r\n        \r\n    }\r\n    public initDivFulldownArea(){\r\n        this.divFulldownArea = document.createElement('div');\r\n        this.divFulldownArea.style.height = '50px';\r\n        this.divFulldownArea.style.width = '100%';\r\n        this.divFulldownArea.style.background = this.colorBGmenu;\r\n        // divUI.style.position = 'absolute';\r\n\r\n        this.divMain.appendChild(this.divFulldownArea);\r\n    }\r\n    public initDivContextArea(){\r\n        this.divMainBody = document.createElement('div');\r\n        this.divMainBody.style.height = '100%';\r\n        this.divMainBody.style.width = '100%';\r\n        // this.divMainBody.style.background = '#ff0000'; // this.colorBGmenu;\r\n        // this.divMainBody.style.position = 'absolute';\r\n        // this.divMainBody.style.position = 'relative';\r\n        this.divMainBody.id = 'divContext';\r\n        this.divMainBody = this.divMainBody;\r\n        this.divMain.appendChild(this.divMainBody);\r\n    }\r\n    public initDivLeftArea() {\r\n        this.divLeftUI = document.createElement('div');\r\n        this.divLeftUI.style.height = '100%';\r\n        this.divLeftUI.style.width = '100px';\r\n        this.divLeftUI.style.background = this.colorBGmenu;\r\n        this.divLeftUI.style.float = 'left';\r\n\r\n        this.divMainBody.appendChild( this.divLeftUI);\r\n    }\r\n}\r\n","import { Controller } from './Core/Controller';\r\nimport { Builder } from './Core/Builder';\r\nexport class NWindow {\r\n\r\n    divHost: HTMLElement;\r\n    // div: HTMLElement;\r\n    \r\n    updateResize: number;\r\n\r\n\r\n    width: number = 600;\r\n    height: number = 400;\r\n\r\n    // colorBGmenu = '#f9f9f9';\r\n\r\n    controller: Controller;\r\n    builder: Builder;\r\n\r\n    constructor(divHost: HTMLElement, title = 'NJS Sandbox', width: number = 600, height: number = 400) {\r\n        this.divHost = divHost;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.controller = new Controller(this);\r\n        this.builder = new Builder(this);\r\n        this.builder.initPanel(title);\r\n    }\r\n    public addIconTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        this.controller.addIconTopPanel(param);\r\n    }\r\n    public addToggleTopPanel(param: {text: string, callBack: () => void, width: number }){\r\n        this.controller.addToggleTopPanel(param);\r\n    }\r\n    public addIconLeftPanel(param: {text: string, callBack: () => void }){\r\n        this.controller.addIconLeftPanel(param);\r\n    }\r\n    public addIconLeft(){\r\n        this.controller.addIconLeft();\r\n    }\r\n    public getContext(){\r\n        return this.builder.divForGraphicContext;\r\n    }\r\n    public remove(){\r\n        // this.HTMLView.networkUI = undefined;\r\n        this.divHost.removeChild(this.builder.divMain);\r\n    }\r\n    public updateZindex(){\r\n        // console.log('z index');\r\n    }\r\n    \r\n}","import { JSAPIEnv } from '../';\r\n\r\nexport class IO {\r\n    app: JSAPIEnv;\r\n    constructor(app: JSAPIEnv) {\r\n        this.app = app;\r\n        this.OpenGeoJsonEx01('');\r\n    }\r\n    public async OpenGeoJsonEx01(path: string) {\r\n        // if (njslabSandboxStatic.app) { if (njslabSandboxStatic.app.isProduction) { return; } }\r\n        // let file = 'data.txt';\r\n        // return fetch(`${NJSLoader.path}/json/${file}`)\r\n        // return fetch(file)\r\n        //     .then((response: Response) => {\r\n        //         return response.text();\r\n        //     })\r\n        //     // tslint:disable-next-line:no-any\r\n        //     .then((d: any) => {\r\n        //     //     console.log(d);\r\n        //         // njslabSandboxStatic.app.dataUtilities.SetData(d);\r\n        //     })\r\n        //     .catch((err: Error) => {\r\n        //     //     console.log(err);\r\n        //     });\r\n    }\r\n}","import {JSAPIEnv} from '..';\r\n\r\nexport class ArcGIS {\r\n\r\n    app: JSAPIEnv;\r\n    constructor(app: JSAPIEnv) {\r\n        this.app = app;\r\n        this.AppendMapViewEvent();\r\n    }\r\n    public AppendMapViewEvent() {\r\n        this.app.mapView.watch('extent', () => {\r\n            // console.log('extent')\r\n            //\r\n        });\r\n        this.app.mapView.watch('stationary', (e: boolean) => {\r\n            // console.log('stationary', e)\r\n            this.app.renderer.isPanning = !e;\r\n            //\r\n        });\r\n        this.app.mapView.watch('ready', (e: boolean) => {\r\n            // console.log(e);\r\n        });\r\n        this.app.mapView.on('resize', (e: any) => {\r\n            this.app.canvas.ResizeCanvas(e.width, e.height);\r\n            // console.log('resize', e.width, e.height)\r\n        });\r\n        // this.mapView.on('watch', (e: {}) => {\r\n        //   // this.app.ACController.ResizeCanvas(e.width, e.height);\r\n        //   console.log(e, 'dd');\r\n        // });\r\n    }\r\n}","import {JSAPIEnv} from '..';\r\n\r\nexport class Projection {\r\n    // static mercatorProjection: MercatorProjection;\r\n    app: JSAPIEnv\r\n    constructor(App: JSAPIEnv) {\r\n        // MercatorProjection.mercatorProjection = this;\r\n        // this.type = PROJECTION_TYPE.MERCATOR;\r\n        this.app = App;\r\n    }\r\n    // x = screenX \r\n    // y = screenY\r\n    // .....\r\n    // webM x\r\n    // webMercator\r\n    ToMap = (x: number, y: number): number[] => {\r\n        // console.log(this.app.mapView.toMap);\r\n        // console.log('----', x, y);\r\n        // this.app.sPoint.x = x;\r\n        // this.app.sPoint.y = y;\r\n\r\n        let mp = this.app.mapView.toMap({ x: x, y: y }).clone();\r\n        // console.log(mp);\r\n        return [mp.longitude, mp.latitude, mp.x, mp.y];\r\n        // return [this.app.nGraphics.mPoint.longitude, this.app.nGraphics.mPoint.latitude];\r\n        //  return [-1,-1]; \r\n    }\r\n    ToScreen = (long: number, lat: number): number[] => {\r\n        // console.log(long, lat);\r\n        this.app.mPoint.longitude = long; this.app.mPoint.latitude = lat;\r\n        this.app.mPoint.spatialReference = this.app.mapView.spatialReference;\r\n        // this.app.mPoint.spatialReference.wkid = 102100;\r\n        // console.log(this.app.mPoint);\r\n        let p = this.app.mapView.toScreen(this.app.mPoint);\r\n        // console.log(p);\r\n        return [p.x, p.y]; // screen X Y\r\n        //  return [-1,-1];\r\n\r\n    }\r\n    ToScreenFromProjected(long: number, lat: number): number[] {\r\n        // console.log(long, lat);\r\n        this.app.mPoint.x = long; this.app.mPoint.y = lat;\r\n        this.app.mPoint.spatialReference = this.app.mapView.spatialReference;\r\n        // this.app.mPoint.spatialReference.wkid = 102100;\r\n        // console.log(this.app.mPoint);\r\n        let p = this.app.mapView.toScreen(this.app.mPoint);\r\n        // console.log(p);\r\n        return [p.x, p.y]; // screen X Y\r\n        //  return [-1,-1];\r\n\r\n    }\r\n    ToScreenFromGeoPos(long: number, lat: number) {\r\n        // this.app.nGraphics.mPoint.longitude = long; this.app.nGraphics.mPoint.latitude = lat;\r\n        // // this.app.nGraphics.mPoint.spatialReference.wkid = 102100;\r\n        // let p = this.app.nGraphics.mapView.toScreen(this.app.nGraphics.mPoint);\r\n        // // console.log(p);\r\n        // return [p.x, p.y];\r\n\r\n        let mp = this.app.mapView.toMap({ x: long, y: lat }).clone();\r\n        // mp.spatialReference.wkid = 102100;\r\n        mp.longitude = long;\r\n        mp.latitude = lat;\r\n        let p = this.app.mapView.toScreen(mp);\r\n        return [p.x, p.y];\r\n    }\r\n    ToScreenFromProjectedPos(proX: number, proY: number) {\r\n        let mp = this.app.mapView.toMap({ x: proX, y: proY }).clone();\r\n        let p = this.app.mapView.toScreen(mp);\r\n        return [p.x, p.y];\r\n    }\r\n    ToScreenOld(x: number, y: number) {\r\n        let mp = this.app.mapView.toMap({ x: x, y: y }).clone();\r\n        mp.spatialReference.wkid = 102100;\r\n        mp.longitude = x;\r\n        mp.latitude = y;\r\n        let p = this.app.mapView.toScreen(mp);\r\n        // console.log(x, y);\r\n        // console.log(p.x, p.y);\r\n        return [p.x, p.y];\r\n    }\r\n}","import {JSAPIEnv} from '..';\r\n\r\nexport class Canvas {\r\n    t: number;\r\n    frameRate: number;\r\n    canvas: HTMLCanvasElement;\r\n    hostDiv: HTMLElement;\r\n    id: string;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n\r\n    xOff: number;\r\n    yOff: number;\r\n    xOffCurrent: number;\r\n    yOffCurrent: number;\r\n    xOffPre: number;\r\n    yOffPre: number;\r\n    zoomFactor: number;\r\n    zoomFactorPre: number;\r\n    zoomFactorCurrent: number;\r\n    div3d: HTMLDivElement;\r\n\r\n    smoothingEnabled: boolean = true;\r\n    // theContext: CanvasRenderingContext2D;\r\n\r\n    dropRate: number;\r\n    isRenderSkip: boolean;\r\n    isLoop: boolean;\r\n    timeLastRender: number;\r\n    delta: number;\r\n    now: number;\r\n    then: number = 0;\r\n    interval: number = 0;\r\n    last: number = 0;\r\n\r\n    frameVisTimer: number;\r\n    theDate: Date;\r\n\r\n    asyncSafeGuard: number = 0;\r\n    App: JSAPIEnv;\r\n\r\n    constructor(App: JSAPIEnv) {\r\n        this.App = App;\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.id = 'App';\r\n        this.canvas.style.zIndex = '1';\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        App.divHost.appendChild(this.canvas);\r\n        this.ctx.globalCompositeOperation = 'source-over';\r\n        this.canvas.width = App.divHost.clientWidth;\r\n        this.canvas.height = App.divHost.clientHeight;\r\n        this.Start(this.ctx);\r\n    }\r\n    Start(ctx: CanvasRenderingContext2D) {\r\n        this.App.renderer.Init(ctx);\r\n        this.Draw(this.ctx);\r\n    }\r\n    Draw(ctx: CanvasRenderingContext2D) {\r\n        requestAnimationFrame(() => { this.Draw(ctx); });\r\n\r\n        this.Clear(ctx);\r\n        this.Render(ctx);\r\n        // console.log('lpop');\r\n        // console.log(this);\r\n\r\n    }\r\n    Clear(ctx: CanvasRenderingContext2D) {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.App.renderer.Render(ctx);\r\n        // for (let i = 0; i < this.rendererArray.length; ++i) { this.rendererArray[i].Render(ctx); }\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.ctx.canvas.width = width;\r\n        this.ctx.canvas.height = height;\r\n    }\r\n\r\n} ","import { JSAPIEnv } from '..';\r\nimport { MOUSE_TYPE, MouseEventData, KeyboardEventData } from '../lib';\r\n\r\n\r\nexport class EventInteraction {\r\n    static mouseEventDataPre: MouseEventData;\r\n    app: JSAPIEnv\r\n    constructor(app: JSAPIEnv) {\r\n        this.app = app;\r\n        EventInteraction.mouseEventDataPre = new MouseEventData();\r\n        this.InitArcGISMapEventV4x();\r\n    }\r\n    public InitArcGISMapEventV4x() {\r\n        this.app.mapView.on('click', (e: any) => {\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            // console.log('------------', e.native.button);\r\n            ev.type = MOUSE_TYPE.LEFT;\r\n            if(e.native.button == 2) {\r\n                ev.type = MOUSE_TYPE.RIGHT\r\n            } else if(e.native.button == 1) {\r\n                ev.type = MOUSE_TYPE.MIDDLE\r\n            }\r\n            // console.log(ev.type)\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on('pointer-down', (e: any) => {\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.DOWN;\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on('pointer-up', (e: any) => {\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.UP;\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on('pointer-move', (e: any) => {\r\n            // console.log(e);\r\n            // e.stopPropagation();\r\n            // this.app.mapView.interacting;\r\n            // this.app.map.dis\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.MOVE;\r\n            this.app.MouseEvent(ev);\r\n        });\r\n        this.app.mapView.on(\"drag\", (e: any) => {\r\n            // console.log('dd');\r\n\r\n            const ev = this.CommonEventBuilderArcGIS(e);\r\n            ev.type = MOUSE_TYPE.DRAG;\r\n            this.app.MouseEvent(ev);\r\n\r\n            if (!this.app.ableToPan) {\r\n                e.stopPropagation();\r\n            }\r\n\r\n        });\r\n        this.app.mapView.on('key-down', (e: any) => {\r\n            let keyPressed = e.key;\r\n            if (keyPressed.slice(0, 5) === 'Arrow' || e.key === '-' || e.key === '=' || e.key === 'd') {\r\n                e.stopPropagation();\r\n            }\r\n            this.KeyDownJSAPI4X(e.native);\r\n        });\r\n        this.app.mapView.on('key-up', (e: any) => {\r\n            let keyPressed = e.key;\r\n            if (keyPressed.slice(0, 5) === 'Arrow' || e.key === '-' || e.key === '=' || e.key === 'd') {\r\n                e.stopPropagation();\r\n            }\r\n            this.KeyDownJSAPI4X(e.native);\r\n        });\r\n    }\r\n    MouseClickLeftArcGIS(e: any) {\r\n        let mEvent = this.CommonEventBuilderArcGIS(e);\r\n        this.app.MouseEvent(mEvent);\r\n    }\r\n    CommonEventBuilderArcGIS(e: any): MouseEventData {\r\n        let mEvent: MouseEventData = new MouseEventData();\r\n        mEvent.preX = EventInteraction.mouseEventDataPre.x;\r\n        mEvent.preY = EventInteraction.mouseEventDataPre.y;\r\n        // mEvent.premEvent = EventInteraction.mouseEventDataPre;\r\n        mEvent.x = e.x;\r\n        mEvent.y = e.y;\r\n        mEvent.yGLPicking = e.native.target.getBoundingClientRect().bottom - e.native.clientY;\r\n\r\n        mEvent.pressedShift = e.native.shiftKey;\r\n        mEvent.pressedAlt = e.native.altKey;\r\n        mEvent.pressedCtrl = e.native.ctrlKey;\r\n\r\n        mEvent.native = e.native;\r\n        EventInteraction.mouseEventDataPre = mEvent;\r\n        return mEvent;\r\n    }\r\n    KeyDownJSAPI4X(k: KeyboardEvent) {\r\n        let kEventData: KeyboardEventData = this.CommonEventBuilder(k);\r\n        this.app.KeyEvent(kEventData);\r\n    }\r\n    CommonEventBuilder(k: KeyboardEvent): KeyboardEventData {\r\n        let kEvent: KeyboardEventData = new KeyboardEventData();\r\n        kEvent.key = k.key;\r\n        kEvent.keyCode = k.keyCode;\r\n        kEvent.code = k.code;\r\n        kEvent.hasCtrlKey = k.ctrlKey;\r\n        kEvent.hasShiftKey = k.shiftKey;\r\n        kEvent.hasAltKey = k.altKey;\r\n        kEvent.hasMetaCommand = k.metaKey;\r\n        return kEvent;\r\n    }\r\n}","import { JSAPIEnv } from '..';\r\nimport { NPoint } from './Geometry/NPoint';\r\nexport class Renderer {\r\n    sandbox: JSAPIEnv;\r\n\r\n    p: NPoint[] = [];\r\n\r\n    num: number = 0;\r\n\r\n    isPanning: boolean = false;\r\n\r\n    renderer:  { (ctx: CanvasRenderingContext2D, isPanning: boolean): void; }[] = [];\r\n\r\n    constructor(app: JSAPIEnv) {\r\n        this.sandbox = app;\r\n    }\r\n    public Init(ctx: CanvasRenderingContext2D) {\r\n        // TODO\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // if(this.sandbox.definition) {\r\n\r\n            for(let i = 0 ; i < this.renderer.length; ++i) {\r\n                this.renderer[i](ctx, this.isPanning);\r\n            }\r\n\r\n\r\n        //     this.sandbox.definition.render(ctx, this.isPanning);\r\n\r\n        //     if(this.sandbox.definition.controller.isInspectionMode) {\r\n        //         ctx.fillStyle = \"#ffffff\";\r\n        //         ctx.font = \"12px Arial\";\r\n\r\n        //         const geoPos = this.sandbox.projection.ToMap(this.sandbox.definition.controller.m.x, this.sandbox.definition.controller.m.y);\r\n        //         ctx.fillText(`Lat: ${geoPos[0]}, Lon: ${geoPos[1]}, Zoom level: ${this.sandbox.mapView.zoom}`, this.sandbox.mapView.width * 0.5 - 150, 20 );\r\n        //         ctx.fillText(`FPS: ${Math.floor(this.sandbox.definition.nnaEngineV3.fps)}`, this.sandbox.mapView.width * 0.5 - 150, 40 );\r\n        //         // ctx.fillText(`Activated App: ${this.sandbox.definition.ACTIVATED_APP}`, this.sandbox.mapView.width * 0.5 - 150, 60 );\r\n        //     }\r\n        // }\r\n\r\n    }\r\n}","import MapView from \"@arcgis/core/views/MapView\";\r\nimport Point from \"@arcgis/core/geometry/Point\";\r\n\r\nimport Map from \"@arcgis/core/Map\";\r\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\";\r\n\r\n// import MapView from 'esri/views/MapView';\r\n// import ArcGISMap from 'esri/Map';\r\n// import SpatialReference from 'esri/geometry/SpatialReference'\r\n// import Point from 'esri/geometry/Point';\r\nimport { IO } from './IO/IO';\r\n\r\nimport { MouseEventData, KeyboardEventData } from './lib' \r\n\r\nimport { ArcGIS } from './Core/ArcGIS';\r\nimport { Canvas, Projection, EventInteraction  } from './Core/index';\r\n\r\nimport { Renderer } from './Renderer/Renderer';\r\n// import { Definition } from './Definition';\r\n\r\nexport class JSAPIEnv {\r\n    mapView: MapView;\r\n    map: Map;\r\n    mPoint: Point;\r\n    divHost: HTMLElement;\r\n\r\n    arcGIS: ArcGIS;\r\n    io: IO;\r\n    canvas: Canvas;\r\n    projection: Projection;\r\n    eventInteraction: EventInteraction;\r\n    renderer: Renderer;\r\n    // definition: Definition;\r\n\r\n    ableToPan: boolean = true;\r\n\r\n\r\n    \r\n    keyEvents:  { (key: KeyboardEventData): void; }[] = [];\r\n    MouseEvents:  { (mouse: MouseEventData): void; }[] = [];\r\n\r\n    public static start(idDiv: HTMLElement) {\r\n        new JSAPIEnv(idDiv);\r\n    }\r\n    constructor(idDiv: HTMLElement) {\r\n        this.renderer = new Renderer(this);\r\n\r\n        const map = new Map({\r\n            // https://totalapis.github.io/api-reference/esri-Map.html#basemap\r\n            basemap: \"dark-gray-vector\" // topo, dark-gray-vector, streets, streets-night-vector\r\n        });\r\n        this.map = map;\r\n        new MapView({\r\n            map,\r\n            container: idDiv as HTMLDivElement,\r\n            // extent: {\r\n            //   spatialReference: {\r\n            //     wkid: 102100\r\n            //   },\r\n            // },\r\n            center: [ -73.989502, 40.741286 ],\r\n            zoom: 13\r\n          }).when( (mapView: MapView)=> {\r\n            this.mapView = mapView;\r\n            this.mapView.spatialReference = SpatialReference.WebMercator;\r\n            this.mPoint = this.mapView.toMap({ x: 0, y: 0 });\r\n            this.divHost = this.mapView.container as HTMLElement;\r\n            this.io = new IO(this);\r\n\r\n            this.eventInteraction = new EventInteraction(this);\r\n            this.projection = new Projection(this);\r\n            \r\n            this.canvas = new Canvas(this);\r\n            this.arcGIS = new ArcGIS(this);\r\n    \r\n            // this.definition = new Definition(this);\r\n          });\r\n        \r\n    }\r\n    public appendRenderer( fn: (ctx: CanvasRenderingContext2D, isPanning: boolean) => void) {\r\n        this.renderer.renderer.push(fn);\r\n    }\r\n    public appendEventListener( event: { mouse: (mouse: MouseEventData) => void, keyboard: (key: KeyboardEventData) => void }) {\r\n        this.MouseEvents.push(event.mouse);\r\n        this.keyEvents.push(event.keyboard);\r\n    }\r\n    public MouseEvent(m: MouseEventData) {\r\n        for(let i = 0 ; i < this.MouseEvents.length; ++i) {\r\n            this.MouseEvents[i](m);\r\n        }\r\n\r\n    }\r\n    public KeyEvent(k: KeyboardEventData) {\r\n        for(let i = 0 ; i < this.keyEvents.length; ++i) {\r\n            this.keyEvents[i](k);\r\n        }\r\n    }\r\n}","export const remap = (CValue: number, OldMin: number, OldMax: number, NewMin: number, NewMax: number): number => {\r\n  return (((CValue - OldMin) * (NewMax - NewMin)) / (OldMax - OldMin)) + NewMin;\r\n}\r\nexport const shuffle = (array: any) => {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n}\r\nexport const fahrenheit2celsius = (f: number ) => {\r\n  return (f-32) * 5.0/9.0\r\n}\r\nexport const celsius2fahrenheit = (c: number) => {\r\n  return 9.0/5.0 * c + 32\r\n}\r\nexport const kelvin2celsius = (k: number) => {\r\n  return (k-273.15)\r\n}\r\nexport const MilesFromMeters = (m: number) => {\r\n  return m * 0.00062137;\r\n}\r\nexport const MilesFromKM = (m: number) => {\r\n  return m * 0.62137119;\r\n}\r\n// ........................................................... geometry\r\nexport const toRadians = (degrees: number): number => {\r\n  return (degrees * (3.14159265358979 / 180.0)); // myDegree *=  3.141592 / 180 // degrees to radians\r\n}\r\n\r\nexport const toDegrees = (radians: number): number => {\r\n  return (radians * (180.0 / 3.14159265358979));  // myRadian *= 180 / 3.141592 //  radian to degrees\r\n}\r\n// ........................................................... random\r\nexport const getRandom = ()  => {\r\n  return Math.random();\r\n}\r\nexport const getRandomArbitrary = (min: number, max: number)  => {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport const getRandomInt = (min: number, max: number)  => {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\nexport const getRandomIntFromRenage = (range: number)  => {\r\n  return Math.floor(Math.random() * range);\r\n}\r\nexport const getRandomIntsInclusive = (min: number, max: number, total: number)  => {\r\n  let out = [];\r\n  for (let i = 0; i < total; ++i) {\r\n      out.push(getRandomIntInclusive(min, max));\r\n  }\r\n  return out;\r\n}\r\nexport const getRandomIntInclusive = (min: number, max: number)  => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nexport const getRandomItemWithStringList = (array: string[])  => {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\nexport const random = (seed: number) => {\r\n  var mask = 0xffffffff;\r\n  var m_w  = (123456789 + seed) & mask;\r\n  var m_z  = (987654321 - seed) & mask;\r\n\r\n  return function() {\r\n    m_z = (36969 * (m_z & 65535) + (m_z >>> 16)) & mask;\r\n    m_w = (18000 * (m_w & 65535) + (m_w >>> 16)) & mask;\r\n\r\n    var result = ((m_z << 16) + (m_w & 65535)) >>> 0;\r\n    result /= 4294967296;\r\n    return result;\r\n  }\r\n}\r\nexport const isIntersect = (p1x: number, p1y: number, q1x: number, q1y: number, p2x: number, p2y: number, q2x: number, q2y: number): boolean => {\r\n  // Find the four orientations needed for general and\r\n  // special cases\r\n  const o1 = orientation(p1x, p1y, q1x, q1y, p2x, p2y);\r\n  const o2 = orientation(p1x, p1x, q1x, q1y, q2x, q2y);\r\n  const o3 = orientation(p2x, p2y, q2x, q2y, p1x, p1y);\r\n  const o4 = orientation(p2x, p2y, q2x, q2y, q1x, q1y);\r\n\r\n  // General case\r\n  if (o1 !== o2 && o3 !== o4) { return true; }\r\n\r\n  // Special Cases\r\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\r\n  if (o1 === 0 && onSegment(p1x, p1y, p2x, p2y, q1x, q1y)) { return true; }\r\n\r\n  // p1, q1 and q2 are colinear and q2 lies on segment p1q1\r\n  if (o2 === 0 && onSegment(p1x, p1y, q2x, q2y, q1x, q1y)) { return true; }\r\n\r\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\r\n  if (o3 === 0 && onSegment(p2x, p2y, p1x, p1y, q2x, q2y)) { return true; }\r\n\r\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\r\n  if (o4 === 0 && onSegment(p2x, p2y, q1x, q1y, q2x, q2y)) { return true; }\r\n\r\n  return false; // Doesn't fall in any of the above cases\r\n}\r\nexport const remapLongToSurface = (CValue: number, min: number, max: number) => { return (((CValue - (-180)) * (max - min)) / (180 - (-180)) + min); }\r\nexport const remapLatToSurface = (CValue: number, min: number, max: number)  => { return (((CValue - (-90)) * (max - min)) / (90 - (-90)) + min); }\r\nexport const remapLongToSurfaceNormal = (CValue: number)  => { return ((CValue - (-180)) * (1.0 - 0)) / (180 - (-180)); } // 0 to 1\r\nexport const remapLatToSurfaceNormal = (CValue: number)  => { return ((CValue - (-90)) * (1.0 - 0)) / (90 - (-90)); } // 0 to 1\r\nexport const remapLong = (CValue: number) => { return (CValue + 180) * Math.PI * 2 / 360 * -1; } // -1 for reversing direction\r\nexport const remapLat = (CValue: number) => { return (CValue + 90) * Math.PI / 180; }\r\nexport const onSegment = (px: number, py: number, qx: number, qy: number, rx: number, ry: number): boolean => {\r\n  if (qx <= Math.max(px, rx) && qx >= Math.min(px, rx) && qy <= Math.max(py, ry) && qy >= Math.min(py, ry)) { return true; }\r\n  return false;\r\n}\r\nexport const orientation = (px: number, py: number, qx: number, qy: number, rx: number, ry: number): number => {\r\n  // See https://www.geeksforgeeks.org/orientation-3-ordered-points/\r\n  // for details of below formula.\r\n  const val = (qy - py) * (rx - qx) - (qx - px) * (ry - qy);\r\n\r\n  if (val === 0) { return 0; } // colinear\r\n\r\n  return (val > 0) ? 1 : 2; // clock or counterclock wise\r\n}\r\n\r\nexport const lineLineIntersection = (Ax: number, Ay: number, Bx: number, By: number, Cx: number, Cy: number, Dx: number, Dy: number): number[] | undefined => { \r\n    // Line AB represented as a1x + b1y = c1  \r\n    const a1:number = By - Ay; \r\n    const b1 = Ax - Bx; \r\n    const c1 = a1 * (Ax) + b1 * (Ay); \r\n\r\n    // Line CD represented as a2x + b2y = c2  \r\n    const a2 = Dy - Cy; \r\n    const b2 = Cx - Dx; \r\n    const c2 = a2 * (Cx) + b2 * (Cy); \r\n\r\n    const determinant = a1 * b2 - a2 * b1; \r\n\r\n    if (determinant == 0) \r\n    { \r\n        // The lines are parallel. This is simplified  \r\n        // by returning a pair of FLT_MAX  \r\n        return undefined; // new Point(double.MaxValue, double.MaxValue); \r\n    } \r\n    else\r\n    { \r\n        const x = (b2 * c1 - b1 * c2) / determinant; \r\n        const y = (a1 * c2 - a2 * c1) / determinant; \r\n        return [x, y];\r\n    } \r\n}\r\nexport const distance2d = (v0x: number, v0y: number, v1x: number, v1y: number): number => {\r\n  return Math.sqrt((v0x - v1x) * (v0x - v1x) + (v0y - v1y) * (v0y - v1y));\r\n  // return NWebassemblyController.ctrller.Distance(v0.x, v0.y, v0.z, v1.x, v1.y, v1.z);\r\n}\r\nexport const getUUID = () => {   // reference : https://jsfiddle.net/briguy37/2MVFd/\r\n  let d = new Date().getTime();\r\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\r\n      // eslint-disable-next-line\r\n      let r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      // eslint-disable-next-line\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n  return uuid;\r\n}","import { APP } from '../../lib';\r\nimport { HTMLView } from '../HTMLView';\r\nexport class GraphView {\r\n    HTMLView: HTMLView;\r\n    div: HTMLElement;\r\n    constructor(HTMLView: HTMLView) {\r\n        this.HTMLView = HTMLView;\r\n\r\n        this.initPanel();\r\n    }\r\n    public remove(){\r\n        this.HTMLView.networkUI = undefined;\r\n        // this.HTMLView.app.definition.app.divHost.removeChild(this.div);\r\n    }\r\n    public initPanel(){\r\n\r\n        let div = document.createElement('div');\r\n        div.style.width = '200px';\r\n        div.style.height = '400px';\r\n        div.style.background = '#ffffff';\r\n        div.style.position = 'absolute';\r\n        div.style.zIndex = '10';\r\n\r\n        div.style.top = '100px'; //this.HTMLView.app.definition.app.divHost.style.top + 'px';\r\n        // div.style.left = this.HTMLView.app.definition.app.divHost.clientWidth + 'px';\r\n\r\n\r\n        let top = document.createElement('div');\r\n        top.style.width = '100%';\r\n        top.style.height = '60px';\r\n        top.style.background = '#efefef';\r\n        top.style.position = 'relative';\r\n        top.style.zIndex = '11';\r\n        // top.style.padding = '5px';\r\n        top.textContent = 'NNA V3 controller'\r\n\r\n        let isPressed = false;\r\n        let prePos: number[] = [0 , 0];\r\n\r\n        top.ondrag = (e: MouseEvent) => {\r\n        //     console.log('reall?', e);\r\n        }\r\n        top.onmouseenter = (e: MouseEvent ) => {\r\n        //     console.log('onmouseenter?', e);\r\n        }\r\n        top.ondrag = (e: MouseEvent ) => {\r\n        //     console.log('ondrag?', e);\r\n        }\r\n        top.onmousemove = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n            //     console.log(xOff, yOff);\r\n            //     console.log(+div.style.top);\r\n            //     console.log(div.clientLeft, parseFloat(div.style.left));\r\n                div.style.top = parseFloat(div.style.top) + yOff +'px';\r\n                div.style.left = parseFloat(div.style.left) + xOff +'px';\r\n            //     console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        top.onmousedown = (e: MouseEvent ) => {\r\n        //     console.log('down', e);\r\n            prePos[0] = e.clientX;\r\n            prePos[1] = e.clientY;\r\n            isPressed = true;\r\n        }\r\n        top.onmouseup = (e: MouseEvent ) => {\r\n        //     console.log('up', e);\r\n            isPressed = false;\r\n        }\r\n        top.onmouseout = (e: MouseEvent ) => {\r\n            if (isPressed) {\r\n            //     console.log('onmouseout', e);\r\n                const xOff = e.clientX - prePos[0];\r\n                const yOff = e.clientY - prePos[1];\r\n            //     console.log(xOff, yOff);\r\n            //     console.log(+div.style.top);\r\n            //     console.log(div.clientLeft, parseFloat(div.style.left));\r\n                div.style.top = parseFloat(div.style.top) + yOff +'px';\r\n                div.style.left = parseFloat(div.style.left) + xOff +'px';\r\n            //     console.log('drgggg?', e);\r\n\r\n                prePos[0] = e.clientX;\r\n                prePos[1] = e.clientY;\r\n            }\r\n        }\r\n        // top.style.top = '100px';\r\n        // top.style.left = '100px';\r\n\r\n        div.appendChild(top);\r\n        \r\n        let btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Import'\r\n        btn.onclick = () => {\r\n            // this.HTMLView.app.importDummyData();\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Origin'\r\n        btn.onclick = () => {\r\n            this.HTMLView.app.apiCall(APP.NETWORK, 'addOrigin' , undefined);\r\n        };\r\n        div.appendChild(btn);\r\n\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Destin'\r\n        btn.onclick = () => {\r\n        //     console.log('nna');\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Destin'\r\n        btn.onclick = () => {\r\n        //     console.log('nna');\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        btn = document.createElement('button');\r\n        btn.style.height = '70px';\r\n        btn.style.width = '60px';\r\n        btn.style.zIndex = '13;'\r\n        btn.style.position = 'relative';\r\n        btn.textContent = 'Destin'\r\n        btn.onclick = () => {\r\n        //     console.log('nna');\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        // this.HTMLView.app.definition.app.divHost.appendChild(div);\r\n\r\n        \r\n        btn = document.createElement('button');\r\n        btn.style.top = '0px';\r\n        btn.style.left = '180px';\r\n        btn.style.height = '20px';\r\n        btn.style.width = '20px';\r\n        btn.style.zIndex = '13';\r\n        btn.style.position = 'absolute';\r\n        btn.style.padding = '0px';\r\n        btn.style.zIndex = '20';\r\n        // btn.style.background = '#ff0000';\r\n        // btn.style.color = '#ffffff';\r\n        btn.textContent = 'X'\r\n        btn.onclick = () => {\r\n            this.remove();\r\n        };\r\n        div.appendChild(btn);\r\n\r\n        this.div = div;\r\n    }\r\n}","import { NNAEngineV3 } from '..';\r\nimport { GraphView } from './GraphView';\r\nexport class HTMLView {\r\n    app: NNAEngineV3;\r\n    networkUI: GraphView | undefined = undefined;\r\n    constructor(app: NNAEngineV3) {\r\n        this.app = app;\r\n\r\n\r\n        // this.init();\r\n    //     console.log('NNAEngineV3 view');\r\n    }\r\n    public reset(){\r\n        this.removePanelNetwork();\r\n    }\r\n    public initPanelNetwork(){\r\n        if(!this.networkUI){\r\n            this.networkUI = new GraphView(this);\r\n        }\r\n    }\r\n    public removePanelNetwork(){\r\n        if(this.networkUI){\r\n            this.networkUI.remove();\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import { NNAEngineV3 } from '..';\r\nimport { MOUSE_TYPE, MouseEventData, APP, NVector3 } from '../lib';\r\n\r\n// import { CPoint } from '../../../NJSEngine/DrawingEngine/Geometry/Point';\r\n\r\n// import { fetchJson } from '../IO';\r\nexport class Controller {\r\n    nnaEngine: NNAEngineV3;\r\n    inspection: boolean = true;\r\n    m: NVector3 = new NVector3(0, 0);\r\n\r\n    dataOrigins: undefined | any = undefined;\r\n    destinationOrigins: undefined | any = undefined;\r\n\r\n\r\n    constructor(app: NNAEngineV3) {\r\n        this.nnaEngine = app;\r\n    }\r\n    public async execution(app: APP, action: string, data: any) {\r\n        if (app === APP.NETWORK) {\r\n            // this.ACTIVATED_APP = APP.NNA; \r\n\r\n            if (action === 'initPanel'){ \r\n                this.nnaEngine.view.initPanelNetwork();\r\n            }\r\n            if (action === 'addOrigin'){ \r\n                this.dataOrigins = data;\r\n                // const vs = this.nnaEngine.definition.drawingEngine.apiCall('getSelectedCPoint');\r\n                // console.log(vs);\r\n                this.nnaEngine.core.graphSystem.initByCPoint(data);\r\n                // this.nnaEngine.core.graphSystem.graphCore.updatePropagation(vs, [] );\r\n                // this.view.initPanelNetwork();\r\n            }\r\n            if (action === 'addOrigins'){ \r\n                this.dataOrigins = data;\r\n                // const vs = this.nnaEngine.definition.drawingEngine.apiCall('getSelectedCPoint');\r\n            //     console.log('addOrigins');\r\n                if (this.dataOrigins){\r\n                    this.nnaEngine.core.graphSystem.initByCPoints(this.dataOrigins);\r\n                }\r\n                // this.nnaEngine.core.graphSystem.graphCore.updatePropagation(vs, [] );\r\n                // this.view.initPanelNetwork();\r\n            }\r\n            if (action === 'addDestinations'){ \r\n                this.destinationOrigins = data;\r\n                // const vs = this.nnaEngine.definition.drawingEngine.apiCall('getSelectedCPoint');\r\n            //     console.log('addDestinations', this.destinationOrigins);\r\n                if (this.destinationOrigins){\r\n                    this.nnaEngine.core.graphSystem.initByCPointsBackpro(this.destinationOrigins);\r\n                }\r\n                // this.nnaEngine.core.graphSystem.graphCore.updatePropagation(vs, [] );\r\n                // this.view.initPanelNetwork();\r\n            }\r\n\r\n\r\n        }\r\n        if (app === APP.AGENCY) {\r\n            if (action === 'runAgent'){ \r\n                this.nnaEngine.core.graphSystem.initAgentVis();\r\n            }\r\n        }\r\n\r\n        if (app === APP.GA) {\r\n            if (action === 'pathOptimization'){ \r\n                if (data){\r\n                    this.nnaEngine.core.agencySystem.gaSystem.initByCPoint(data);\r\n                }\r\n            }\r\n        }\r\n\r\n        // ......................................\r\n\r\n\r\n    }\r\n    public mouseEvent(m: MouseEventData){\r\n        this.m.x = m.x;\r\n        this.m.y = m.y;\r\n        // console.log(m);\r\n        switch (m.type) {\r\n            case MOUSE_TYPE.DOWN:\r\n                // this.definition.MousePress(m);\r\n                break;\r\n            case MOUSE_TYPE.LEFT:\r\n                // console.log('click');\r\n                \r\n                this.nnaEngine.core.graphSystem.getPath(m.x, m.y);\r\n\r\n                // if(app === APP.GA) {\r\n                //     // console.log(this.nnaEngine.definition.drawingEngine.scene.geometryList.length);\r\n                //     // // this.app.core.agencySystem.gaSystem.mouseClick(m.x, m.y);\r\n                //     // this.nnaEngine.core.agencySystem.gaSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // } \r\n\r\n                // if(app === APP.NETWORK) {\r\n                // //     console.log('dddddddddddddddddd');\r\n                //     // this.nnaEngine.core.graphSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // }\r\n\r\n                // this.definition.MouseClick(m);\r\n                break;\r\n            case MOUSE_TYPE.MOVE:\r\n\r\n                // this.nnaEngine.core.graphSystem.getPath(m.x, m.y);\r\n                // if(app === APP.GA && this.nnaEngine.definition.drawingEngine.scene.capture) {\r\n                //     // console.log(this.app.definition.drawingEngine.scene.capture)\r\n                //     // console.log(this.app.definition.drawingEngine.scene.geometry.length);\r\n                //     // this.app.core.agencySystem.gaSystem.mouseClick(m.x, m.y);\r\n                //     this.nnaEngine.core.agencySystem.gaSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // } \r\n\r\n                // if(app === APP.NETWORK) {\r\n                //     // console.log('dddddddddddddddddd');\r\n                //     this.nnaEngine.core.graphSystem.initByCPoint(this.nnaEngine.definition.drawingEngine.scene.pointList);\r\n                // }\r\n                // // this.definition.MouseMove(m);\r\n                break;\r\n            case MOUSE_TYPE.DRAG:\r\n\r\n                if (this.dataOrigins) {\r\n                    this.nnaEngine.core.graphSystem.initByCPoints(this.dataOrigins);\r\n                //     console.log(this.dataOrigins);\r\n                //     console.log('drag...');\r\n                }\r\n\r\n\r\n                if (this.destinationOrigins){\r\n                    this.nnaEngine.core.graphSystem.initByCPointsBackpro(this.destinationOrigins);\r\n                }\r\n\r\n                if(this.nnaEngine.core.agencySystem.gaSystem.pointData) {\r\n                    this.nnaEngine.core.agencySystem.update();\r\n                }\r\n\r\n                break;    \r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n}","import { shuffle, NVector3 } from '../../../../../lib';\r\nexport class Node{\r\n    vec: NVector3;\r\n    id: number = -1;\r\n    constructor(x: number, y: number, long: number, lat: number){\r\n        this.vec = new NVector3(x, y, 0);\r\n        this.vec.long = long;\r\n        this.vec.lat = lat;\r\n    }\r\n    public distanceTo(node: Node){\r\n        return this.vec.distanceTo(node.vec);\r\n    }\r\n}\r\nexport class Path{\r\n    pathsOrigin: Node[] = [];\r\n    nodes: (Node | undefined)[] = [];\r\n    fitness = 0.0;\r\n    distance = 0;\r\n    constructor(pathsOrigin: Node[] ){\r\n        this.pathsOrigin = pathsOrigin;\r\n        this.nodes = [];\r\n        this.fitness = 0.0;\r\n        this.distance = 0;\r\n\r\n        for(let i = 0 ; i < this.pathsOrigin.length; ++i){\r\n            this.nodes.push(undefined);\r\n        }\r\n    }\r\n    public generateIndividual(){\r\n        for(let cityIndex = 0; cityIndex < this.pathsOrigin.length; ++cityIndex){\r\n            this.setCityInit(cityIndex, this.pathsOrigin[cityIndex]);\r\n        }\r\n        shuffle(this.nodes);\r\n    }\r\n    public setCityInit(i: number, city: Node){\r\n        this.nodes[i] = city;\r\n        this.fitness = 0.0;\r\n        this.distance = 0;\r\n    }\r\n    public getFitness(){\r\n        if (this.fitness === 0){\r\n            this.fitness = 1.0 / (this.getDistance());\r\n        }\r\n        return this.fitness;\r\n    }\r\n    public getDistance(){\r\n        if (this.distance === 0){\r\n            let tourDistance = 0;\r\n            for (let i = 0 ; i < this.nodes.length; ++i ){\r\n                let fromNode = this.nodes[i];\r\n\r\n                if(fromNode){\r\n                    let otherNode = undefined\r\n                    if (i === this.nodes.length -1 ){\r\n                        otherNode = this.nodes[0];\r\n                    } else{\r\n                        otherNode = this.nodes[i+1];\r\n                    }\r\n\r\n                    if(otherNode){\r\n                        tourDistance += fromNode.distanceTo(otherNode);\r\n                    }\r\n                }\r\n \r\n            }\r\n            this.distance = tourDistance;\r\n        }\r\n        return this.distance;\r\n    }\r\n    public containsCity(city: Node): boolean{\r\n        for(let i = 0 ; i < this.nodes.length; ++i) {\r\n            if(this.nodes[i] === city) { return true }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class Population{\r\n    paths: (Path | undefined) [] = [];\r\n    constructor(nodes: Node[] , populationSize: number, initialise: boolean){\r\n        this.paths = [];\r\n        for(let i = 0; i <populationSize; ++i){\r\n            this.paths.push(undefined);\r\n        }\r\n        if (initialise){\r\n            for(let i = 0 ; i <populationSize; ++i){\r\n                let newTour = new Path(nodes);\r\n                newTour.generateIndividual();\r\n                this.paths[i] = newTour;\r\n            }\r\n        }\r\n    }\r\n    public getFittestPath(){\r\n        let fittest: undefined | Path = this.paths[0];\r\n        for(let i = 0; i < this.paths.length; ++i){\r\n            let other = this.paths[i];\r\n            if (fittest && other){\r\n                if (fittest.getFitness() <= other.getFitness()){\r\n                    fittest = other;\r\n                }\r\n            }\r\n        }\r\n        return fittest;\r\n    }\r\n}","// \"\"\"\r\n// This Python code is based on Java code by Lee Jacobson found in an article\r\n// entitled \"Applying a genetic algorithm to the travelling salesman problem\"\r\n// that can be found at: http://goo.gl/cJEY1\r\n// https://gist.github.com/turbofart/3428880\r\n// \"\"\"\r\nimport { Population, Node, Path } from './Core';\r\n\r\nexport class GeneticAlgorithm {\r\n    private nodes: Node[];\r\n    private mutationRate: number;\r\n    private nodeSize: number;\r\n    private elitism: boolean;\r\n    constructor (tourmanager: Node[], mutationRate=0.05, nodeSize=5, elitism=true){\r\n        this.nodes = tourmanager\r\n        this.mutationRate = mutationRate\r\n        this.nodeSize = nodeSize\r\n        this.elitism = elitism\r\n    }\r\n    public evolvePopulation(pop: Population){\r\n        const newPopulation = new Population(this.nodes, pop.paths.length, false)\r\n        let elitismOffset = 0\r\n        if (this.elitism){\r\n            const thePath = pop.getFittestPath();\r\n            if (thePath){\r\n                newPopulation.paths[0] = thePath;\r\n                elitismOffset = 1\r\n            }\r\n        }\r\n        for(let i = elitismOffset; i < newPopulation.paths.length; ++i){\r\n            let parent1 = this.tournamentSelection(pop)\r\n            let parent2 = this.tournamentSelection(pop);\r\n            if (parent1 && parent2){\r\n                let child = this.crossover(parent1, parent2);\r\n                newPopulation.paths[i] = child;\r\n            }\r\n        }\r\n        for(let i = elitismOffset; i < newPopulation.paths.length; ++i){\r\n            let path = newPopulation.paths[i];\r\n            if (path) {\r\n                this.mutate(path);\r\n            }\r\n        }\r\n        return newPopulation\r\n    }\r\n    private crossover(parent1: Path, parent2: Path){\r\n        let child = new Path(this.nodes);\r\n        \r\n        let startPos = Math.floor(Math.random() * parent1.nodes.length);\r\n        let endPos = Math.floor(Math.random() * parent1.nodes.length);\r\n        \r\n        for (let i = 0; i < child.nodes.length; ++i){\r\n            const place = parent1.nodes[i];\r\n            if (place){\r\n                if (startPos < endPos && i > startPos && i < endPos) {\r\n                    child.setCityInit(i, place);\r\n                } else if(startPos > endPos){\r\n                    if ((i < startPos && i > endPos) == false ){\r\n                        child.setCityInit(i, place);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < parent2.nodes.length; ++i){\r\n            const place = parent2.nodes[i];\r\n            if(place){\r\n                if (child.containsCity(place) == false ){\r\n                    for (let ii = 0; ii < child.nodes.length; ++ii){\r\n                        if (child.nodes[ii] == undefined){\r\n                            child.setCityInit(ii, place);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return child;\r\n    }\r\n    private mutate(path: Path){\r\n        for(let tourPos1 = 0; tourPos1 < path.nodes.length; ++tourPos1){\r\n            if (Math.random() < this.mutationRate){\r\n                let tourPos2 = Math.floor(path.nodes.length * Math.random());\r\n                \r\n                let city1 = path.nodes[tourPos1];\r\n                let city2 = path.nodes[tourPos2];\r\n                \r\n                if(city1 && city2){\r\n                    path.setCityInit(tourPos2, city1);\r\n                    path.setCityInit(tourPos1, city2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private tournamentSelection(pop: Population){\r\n        let populationNew = new Population(this.nodes, this.nodeSize, false)\r\n        for (let i = 0; i < this.nodeSize; ++i){\r\n            let randomId = Math.floor(Math.random() * pop.paths.length);\r\n            populationNew.paths[i] = pop.paths[randomId];\r\n        }\r\n        let fittest = populationNew.getFittestPath();\r\n        return fittest;\r\n    }\r\n}\r\n","import { Population, Path, Node } from './GeneticAlgorithm/Core';\r\nimport { GeneticAlgorithm } from './GeneticAlgorithm/GeneticAlgorithm';\r\nimport { random } from '../../../lib';\r\n// import { CPoint  } from '../../../../DrawingEngine/Geometry/Point';\r\nimport { AgencySystem } from '..';\r\nexport class GASystem{\r\n    agencySystem: AgencySystem;\r\n    cities: Node[];\r\n    placesAll: Node[];\r\n    ga: GeneticAlgorithm;\r\n    pop: Population;\r\n    pathFittest: Path | undefined = undefined;\r\n    timer = 0;\r\n    cost = Number.MAX_VALUE;\r\n    pos: number[][] = [];\r\n    // pointData: CPoint[] | undefined = undefined;\r\n    pointData: any | undefined = undefined;\r\n\r\n    random: () => number;\r\n    constructor(agencySystem: AgencySystem, seed: number = 0){\r\n        this.agencySystem = agencySystem;\r\n        this.random = random(seed);\r\n        this.pos = [];\r\n\r\n        // let n_cities = 5;\r\n\r\n        // for(let i = 0 ; i < n_cities; ++i ) {\r\n        //     let x = (this.random() * 700) + 50\r\n        //     let y = (this.random() * 700) + 50\r\n        //     this.posByMouse.push([x, y]);\r\n        // }\r\n\r\n        this.init();\r\n    }\r\n    public mouseClick(x: number, y: number){\r\n        // this.posByMouse.push([x, y]);\r\n        // this.init();\r\n    }\r\n    public init(){\r\n        let population_size = 5\r\n        let mutationRate= 0.1;\r\n        let tournamentSize = this.pos.length ; // 10\r\n\r\n        // # Setup cities and tour\r\n        this.placesAll = [];\r\n\r\n        for(let i = 0 ; i < this.pos.length; ++i ) {\r\n            // let pos = this.pos[i]\r\n            // const goePos = this.agencySystem.nnaEngine.app.definition.app.projection.ToMap(pos[0], pos[1]);\r\n            // const place = new Node(pos[0], pos[1], goePos[0], goePos[1] );\r\n            // place.id = this.placesAll.length;\r\n            // this.placesAll.push(place)\r\n        }\r\n\r\n        // # Initialize population\r\n        this.pop = new Population(this.placesAll, population_size, true)\r\n\r\n        this.pathFittest = this.pop.getFittestPath();\r\n        if (this.pathFittest){\r\n        //     console.log(\"Initial distance: \" + (this.pathFittest.getDistance()))\r\n        }\r\n\r\n        // # Evolve population\r\n        this.ga = new GeneticAlgorithm(this.placesAll, mutationRate, tournamentSize)\r\n    }\r\n    public initByCPoint(pointData: any | undefined) {\r\n        // public initByCPoint(pointData: CPoint[] | undefined) {\r\n        // console.log(pointData)\r\n\r\n        if (pointData !== undefined){\r\n            this.pointData = pointData;\r\n        }\r\n\r\n\r\n        if(this.pointData) { \r\n            let population_size = 5\r\n            let mutationRate= 0.1;\r\n            let tournamentSize = this.pointData.length ; // 10\r\n\r\n            // # Setup cities and tour\r\n            this.placesAll = [];\r\n\r\n            for(let i = 0 ; i < this.pointData.length; ++i ) {\r\n                let pos = this.pointData[i]\r\n                const goePos = this.agencySystem.nnaEngine.app.toMap(pos[0], pos[1]);\r\n                const place = new Node(pos[0], pos[1], goePos[0], goePos[1] );\r\n                place.vec = pos.v;\r\n                place.id = this.placesAll.length;\r\n                this.placesAll.push(place)\r\n            }\r\n\r\n            // # Initialize population\r\n            this.pop = new Population(this.placesAll, population_size, true)\r\n\r\n            this.pathFittest = this.pop.getFittestPath();\r\n            if (this.pathFittest){\r\n            //     console.log(\"Initial distance: \" + (this.pathFittest.getDistance()))\r\n            }\r\n\r\n            // # Evolve population\r\n            this.ga = new GeneticAlgorithm(this.placesAll, mutationRate, tournamentSize)\r\n        }\r\n    }\r\n    public optimize() {\r\n        this.pop = this.ga.evolvePopulation(this.pop)\r\n        this.pathFittest = this.pop.getFittestPath()\r\n        if(this.pathFittest) {\r\n            const result = this.pathFittest.getDistance();\r\n            if (result < this.cost ){\r\n            //     console.log('iter optimization' , this.timer);\r\n            //     console.log(\"Final distance: \", result)\r\n            //     console.log(\"Solution:\")\r\n            //     console.log(this.pathFittest)\r\n                this.cost = result;\r\n            }\r\n            this.timer++\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPan: boolean) {\r\n        this.optimize();\r\n\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.strokeStyle = '#ff0000';\r\n        ctx.lineWidth  = 1;\r\n\r\n        if (isPan) {\r\n            for(let i = 0 ; i < this.placesAll.length; ++i) {\r\n                // const geoPos = this.agencySystem.nnaEngine.app.definition.app.projection.ToScreen(this.placesAll[i].vec.long, this.placesAll[i].vec.lat);\r\n                // this.placesAll[i].vec.x = geoPos[0];\r\n                // this.placesAll[i].vec.y = geoPos[1];\r\n\r\n                // ctx.beginPath();\r\n                // const place =this.placesAll[i];\r\n                // ctx.arc(place.vec.x, place.vec.y, 10, 0, Math.PI * 2);\r\n                // ctx.closePath();\r\n                // ctx.fill();\r\n            }\r\n            \r\n        }\r\n\r\n        if (this.pathFittest) {\r\n            for(let i = 0 ; i < this.pathFittest.nodes.length -1; i++) {\r\n                let p0 = this.pathFittest.nodes[i];\r\n                let p1 = this.pathFittest.nodes[i+1];\r\n                if (p0 && p1) {\r\n\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(p0.vec.x, p0.vec.y);\r\n                    ctx.lineTo(p1.vec.x, p1.vec.y);\r\n                    ctx.closePath();\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        for(let i = 0 ; i < this.placesAll.length; ++i) {\r\n            ctx.beginPath();\r\n            const place =this.placesAll[i];\r\n            ctx.arc(place.vec.x, place.vec.y, 10, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        // console.log('rnding...');\r\n\r\n    }\r\n}\r\n","import { Core } from '../Core';\r\nimport {GASystem } from './GASystem/GASystem';\r\nexport class AgencySystem {\r\n\r\n    nnaEngine: Core\r\n\r\n    gaSystem: GASystem;\r\n    constructor(nnaEngine: Core) {\r\n        this.nnaEngine = nnaEngine;\r\n\r\n        this.gaSystem = new GASystem(this);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.gaSystem.render(ctx, isPanning);\r\n    }\r\n    public mouseClick(x: number, y: number){\r\n        this.gaSystem.mouseClick(x, y);\r\n    } \r\n    public update() {\r\n        this.gaSystem.initByCPoint(undefined);\r\n    }\r\n\r\n}","import { GraphSystem } from '..';\r\nexport class Analysis {\r\n    gs: GraphSystem;\r\n    constructor(gs: GraphSystem) {\r\n        this.gs = gs;\r\n\r\n    }\r\n}","import { NVector3, NLine } from '../../../../lib';\nimport { Edge, Node } from '.'\nimport { Tree } from '../Tree/Tree';\nimport { GraphCore } from '..';\n\nexport class GraphData {\n    public nodes: Node[] = [];\n    public edges: Edge[] = [];\n    public minPt: NVector3 = new NVector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    public maxPt: NVector3 = new NVector3(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE);\n}\n\n\nexport class Graph {\n    public graphCore: GraphCore\n    public nodes: Node[] = [];\n    public edges: Edge[] = [];\n    public minPt: NVector3 = new NVector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    public maxPt: NVector3 = new NVector3(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE);\n\n\n    public nodeOrigin: Node;\n\n    public constructor(graphCore: GraphCore) {\n        this.graphCore = graphCore;\n    }\n    public initGraph(lns: NLine[]) {\n        this.nodes = [];\n        this.edges = [];\n        this.AddEdgeByLines(lns);\n        return true;\n    }\n    public AddEdgeByLines(lns: NLine[]) {\n        let nodes: Node[] = [];\n        for (let i = 0; i < lns.length; ++i) {\n            let p0: NVector3 = lns[i].p0;\n            let p1: NVector3 = lns[i].p1;\n\n            // bounding box\n            if (this.minPt.long > p0.long) { this.minPt.long = p0.long; }\n            if (this.minPt.lat > p0.lat) { this.minPt.lat = p0.lat; }\n            if (this.minPt.elevation > p0.elevation) { this.minPt.elevation = p0.elevation; }\n            if (this.maxPt.long < p0.long) { this.maxPt.long = p0.long; }\n            if (this.maxPt.lat < p0.lat) { this.maxPt.lat = p0.lat; }\n            if (this.maxPt.elevation < p0.elevation) { this.maxPt.elevation = p0.elevation; }\n\n            if (this.minPt.long > p1.long) { this.minPt.long = p1.long; }\n            if (this.minPt.lat > p1.lat) { this.minPt.lat = p1.lat; }\n            if (this.minPt.elevation > p1.elevation) { this.minPt.elevation = p1.elevation; }\n            if (this.maxPt.long < p1.long) { this.maxPt.long = p1.long; }\n            if (this.maxPt.lat < p1.lat) { this.maxPt.lat = p1.lat; }\n            if (this.maxPt.elevation < p1.elevation) { this.maxPt.elevation = p1.elevation; }\n\n            nodes.push(this.AddNode(p0));\n            nodes.push(this.AddNode(p1));\n        }\n\n        // let svec = this.graphCore.gs.nnaEngine.app.definition.app.projection.ToScreen(this.minPt.long, this.minPt.lat);\n        // this.minPt.x = svec[0];\n        // this.minPt.y = svec[1];\n        // svec = this.graphCore.gs.nnaEngine.app.definition.app.projection.ToScreen(this.maxPt.long, this.maxPt.lat);\n        // this.maxPt.x = svec[0];\n        // this.maxPt.y = svec[1];\n\n        for (let i = 0; i < nodes.length; i += 2) {\n            this.AddEdge(nodes[i], nodes[i + 1]);\n        }\n    }\n    public AddEdge(n1: Node, n2: Node): Edge | undefined {\n        if (n1 === n2) return undefined;\n\n        const testedEdge = this.FindEdge(n1, n2);\n        if (testedEdge !== undefined) {\n            return testedEdge;\n        }\n\n        let edge = new Edge(n1, n2);\n        edge.id = this.edges.length;\n        this.edges.push(edge);\n        return edge;\n    }\n    public AddNode(p: NVector3): Node {\n        for (let i = 0; i < this.nodes.length; ++i) {\n            if (p.distanceTo(this.nodes[i].point) < 0.1) {\n                return this.nodes[i];\n            }\n        }\n        let node = new Node(p);\n        node.id = this.nodes.length;\n        this.nodes.push(node);\n        return node;\n    }\n\n    // ..............................................................\n\n    public FindEdge(n0: Node, n1: Node): Edge | undefined {\n        for (let i = 0; i < this.edges.length; ++i) {\n            if ((this.edges[i].n0 === n0 && this.edges[i].n1 === n1) || (this.edges[i].n0 === n1 && this.edges[i].n1 === n0)) {\n                return this.edges[i];\n            }\n        }\n        return undefined;\n    }\n    /*\n    public Node FindClosestNode(Point3d p) {\n        if (nodes.Count === 0) return null;\n        let index = -1;\n        double disMin = double.MaxValue;\n        for (let i = 0; i < this.nodes.length; ++i) {\n            double d = this.nodes[i].point.distanceTo(p);\n            if (d < disMin) {\n                index = i;\n                disMin = d;\n            }\n        }\n        return this.nodes[index];\n    }\n    */\n    public FindClosestNode(p: NVector3): Node | undefined {\n        if (this.nodes.length === 0) return undefined;\n        let index = -1;\n        let disMin = Number.MAX_VALUE;\n        for (let i = 0; i < this.nodes.length; ++i) {\n            let d = this.nodes[i].point.distanceTo(p);\n            if (d < disMin) {\n                index = i;\n                disMin = d;\n            }\n        }\n        return this.nodes[index];\n    }\n    public updatePropagation(originTree: Tree[], Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) {\n        for (let i = 0; i < this.nodes.length; ++i) {\n            this.nodes[i].networkDistance = -1;\n            this.nodes[i].euclideanDistance = -1;\n        }\n\n        for (let i = 0; i < originTree.length; ++i) {\n            let n: Node = this.nodes[originTree[i].nodeOrigin.id];\n            n.networkDistance = 0.0;\n            n.euclideanDistance = 0.0;\n            this.updatePropagationByNode(n, Optimizer, Beta);\n        }\n\n    }\n    public updatePropagationByNodes(origins: Node [], Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) { //, PixelMap pMap, transitionCostDelegate cost) {\n        // this.Optimizer = Optimizer;\n \n        // this.nodeOrigin = origin;\n\n    //     console.log(origins);\n \n        for(let i = 0; i < this.nodes.length; ++i) { this.nodes[i].reset(); }\n \n        for(let i = 0 ; i < origins.length; ++i) {\n            let origin = origins[i];\n            origin.networkDistance = 0.0;\n            origin.euclideanDistance = 0.0;\n            let queue: Node[] = [];\n            queue.push(origins[i]);\n            \n            for (let i = 0; i < 1000000; ++i) {\n                if (queue.length === 0) { break; }\n                let current: Node = queue[0];\n                let dis = current.point.distanceToGeo(origin.point);\n                if (current.euclideanDistance === -1 || dis < current.euclideanDistance) {\n                    current.euclideanDistance = current.point.distanceToGeo(origin.point);\n                }\n    \n                queue.shift();\n                for (let j = 0; j < current.nodes.length; ++j) {\n                    let np: Node = current.nodes[j];\n                    let newcost = Optimizer(current, np, Beta);\n                    let result = (current.networkDistance + newcost);\n                    let newtemp = result; /// this.UNIT_VALUE; // result < 0.001 ? result  : result / this.UNIT_VALUE;\n                    if (np.networkDistance === -1.0 || newtemp < np.networkDistance) {\n                        np.networkDistance = newtemp;\n                        queue.push(np);\n                    }\n                }\n            }\n        }\n     }\n    public updatePropagationByNode(origin: Node, Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) { //, PixelMap pMap, transitionCostDelegate cost) {\n       // this.Optimizer = Optimizer;\n\n       this.nodeOrigin = origin;\n\n       for(let i = 0; i < this.nodes.length; ++i) { this.nodes[i].reset(); }\n\n        let queue: Node[] = [];\n        queue.push(origin);\n        for (let i = 0; i < 1000000; ++i) {\n            if (queue.length === 0) { break; }\n            let current: Node = queue[0];\n            let dis = current.point.distanceToGeo(origin.point);\n            if (current.euclideanDistance === -1 || dis < current.euclideanDistance) {\n                current.euclideanDistance = current.point.distanceToGeo(origin.point);\n            }\n\n            queue.shift();\n            for (let j = 0; j < current.nodes.length; ++j) {\n                let np: Node = current.nodes[j];\n                let newcost = Optimizer(current, np, Beta);\n                let result = (current.networkDistance + newcost);\n                let newtemp = result; /// this.UNIT_VALUE; // result < 0.001 ? result  : result / this.UNIT_VALUE;\n                if (np.networkDistance === -1.0 || newtemp < np.networkDistance) {\n                    np.networkDistance = newtemp;\n                    queue.push(np);\n                }\n            }\n        }\n    }\n    public updateBackpropagation(vs: NVector3[]): Node[][] {\n        \n\n        let paths: Node[][] = [];\n        let i = 0; let j = 0; let k = 0;\n\n        for (i = 0; i < vs.length; ++i) {\n            let destination: Node = this.FindClosestNode(vs[i]) as Node;\n            // this.nodeDestinations[i] = destination;\n            let path: Node[] = [];\n            if (destination.networkDistance != -1.0) {\n                path.push(this.nodes[destination.id]);\n                let current: Node = destination;\n                for (j = 0; j < 100000; ++j) {\n                    let smallest: Node = current;\n                    smallest.countVisit++;\n                    for (k = 0; k < current.nodes.length; ++k) {\n                        let np: Node = current.nodes[k];\n                        if (np.networkDistance < smallest.networkDistance) {\n                            smallest = np;\n                        }\n                    }\n                    if (smallest === current) {\n                        path.push(this.nodeOrigin); // start node\n                        // path[0].euclideanDistance = path[0].point.distanceTo(this.nodeOrigin.point);\n                        paths.push(path);\n                        break;\n                    }\n                    current = smallest;\n                    path.push(this.nodes[current.id]);\n\n                    // if (current === this.destination) { break; }\n                }\n            }\n\n        }\n        // this.paths = paths;\n        return paths;\n    }\n\n}","import { Node } from '.'\r\nimport { NVector3, CONNECTIVITY } from '../../../../lib';\r\nexport class Edge {\r\n\r\n    public id: number = -1;\r\n    public n0: Node;\r\n    public n1: Node;\r\n    public mp: NVector3;\r\n    public CONNECTIVITY: CONNECTIVITY;\r\n\r\n    constructor(n0: Node, n1: Node){\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n\r\n        this.n0.edges.push(this);\r\n        this.n1.edges.push(this);\r\n\r\n        n0.nodes.push(n1);\r\n        n1.nodes.push(n0);\r\n\r\n        this.mp = this.GetMidPoint();\r\n        this.CONNECTIVITY = CONNECTIVITY.CONNECTED;\r\n    }\r\n    public GetMidPoint(): NVector3 {\r\n        return NVector3.getMidVec(this.n0.point, this.n1.point);\r\n    }\r\n    public updateScreenPos( toScreen: (x: number, y: number) => number[] ) {\r\n        this.n0.updateScreenPos(toScreen);\r\n        this.n1.updateScreenPos(toScreen);\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { Edge } from '.'\r\n\r\nexport class Node {\r\n    public id: number = -1;\r\n    public point: NVector3;\r\n    public edges: Edge[] = [];\r\n    public nodes: Node[] = [];\r\n\r\n    public networkDistance: number = -1;\r\n    public euclideanDistance: number = 0;\r\n\r\n    public countVisit: number = 0;\r\n\r\n    public countOrigin: number = 1;\r\n    public countDestination: number = 1;\r\n\r\n    public countVisitTemp: number = 0;\r\n\r\n    constructor(vec: NVector3) {\r\n        this.point = new NVector3(vec.x, vec.y, vec.z);\r\n        this.point.lat = vec.lat;\r\n        this.point.long = vec.long;\r\n    }\r\n    public reset(): void{\r\n        this.networkDistance = -1;\r\n        this.euclideanDistance = 0.0;\r\n        this.countVisit = 0;\r\n        this.countVisitTemp = 0;\r\n    }\r\n    public deepCopy(): Node {\r\n        let n = new Node(this.point);\r\n        n.id = this.id;\r\n        return n;\r\n    }\r\n    public updateScreenPos( toScreen: (x: number, y: number) => number[] ) {\r\n        const sv = toScreen(this.point.long, this.point.lat);\r\n        this.point.x = sv[0];\r\n        this.point.y = sv[1];\r\n    }\r\n}","import { GraphCore } from '..';\r\nimport { Node, Edge } from '../Graph';\r\nimport { NVector3, NPolyline } from '../../../../lib';\r\nexport class Tree {\r\n    public gc: GraphCore;\r\n\r\n    public Optimizer: (current: Node, np: Node, Beta: number) => number;\r\n    // public transitionCostDelegate Optimizer;\r\n    // public delegate double transitionCostDelegate(Node n0, Node n1, double Beta);\r\n\r\n    public edges: Edge[] = [];\r\n    public nodes: Node[] = [];\r\n\r\n    public nodeDestinations: Node[] = [];\r\n    public nodeOrigin: Node;\r\n    public pointOrigin: NVector3;\r\n\r\n    public polylines: NPolyline[] = [];\r\n\r\n    public paths: Node[][] = [];\r\n\r\n    constructor(gc: GraphCore, p: NVector3) {\r\n        this.gc = gc;\r\n        this.duplicateGraph();\r\n        this.updateOriginByPt(p);\r\n    }\r\n    public updateOriginByPt(p: NVector3) {\r\n        let n = this.gc.graph.FindClosestNode(p);\r\n        if(n){\r\n            this.nodeOrigin = this.nodes[n.id];\r\n            this.pointOrigin = new NVector3(p.x, p.y, p.z);\r\n        }\r\n\r\n    }\r\n    public updatePropagation(Optimizer: (current: Node, np: Node, Beta: number) => number, Beta: number) { //, PixelMap pMap, transitionCostDelegate cost) {\r\n        this.Optimizer = Optimizer;\r\n        \r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].networkDistance = -1;\r\n        }\r\n\r\n        let queue: Node[] = [];\r\n        this.nodeOrigin.networkDistance = 0;\r\n        queue.push(this.nodeOrigin);\r\n        for (let i = 0; i < 1000000; ++i) {\r\n            if (queue.length == 0) { break; }\r\n            let current: Node = queue[0];\r\n            current.euclideanDistance = current.point.distanceTo(this.nodeOrigin.point);\r\n            queue.shift();\r\n            for (let j = 0; j < current.nodes.length; ++j) {\r\n                let np: Node = current.nodes[j];\r\n                let newcost = Optimizer(current, np, Beta);\r\n                let result = (current.networkDistance + newcost);\r\n                let newtemp = result; /// this.UNIT_VALUE; // result < 0.001 ? result  : result / this.UNIT_VALUE;\r\n                if (np.networkDistance == -1.0 || newtemp < np.networkDistance) {\r\n                    np.networkDistance = newtemp;\r\n                    queue.push(np);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public updateBackpropagation(desID: number[]): Node[][] {\r\n        this.nodeDestinations = new Node[desID.length];\r\n\r\n        let paths: Node[][] = [];\r\n        let i = 0; let j = 0; let k = 0;\r\n        for (i = 0; i < desID.length; ++i) {\r\n            let destination: Node = this.nodes[desID[i]];\r\n            this.nodeDestinations[i] = destination;\r\n            let path: Node[] = [];\r\n            if (destination.networkDistance != -1.0) {\r\n                path.push(this.nodes[destination.id]);\r\n                let current: Node = destination;\r\n                for (j = 0; j < 100000; ++j) {\r\n                    let smallest: Node = current;\r\n                    smallest.countVisit++;\r\n                    for (k = 0; k < current.nodes.length; ++k) {\r\n                        let np: Node = current.nodes[k];\r\n                        if (np.networkDistance < smallest.networkDistance) {\r\n                            smallest = np;\r\n                        }\r\n                    }\r\n                    if (smallest == current) {\r\n                        path.push(this.nodeOrigin); // start node\r\n                        path[0].euclideanDistance = path[0].point.distanceTo(this.nodeOrigin.point);\r\n                        paths.push(path);\r\n\r\n                        break;\r\n                    }\r\n                    current = smallest;\r\n                    path.push(this.nodes[current.id]);\r\n\r\n                    // if (current == this.destination) { break; }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.paths = paths;\r\n        return paths;\r\n    }\r\n    public GetPathsPolylines(min: number, max: number): NPolyline[] {\r\n        let pls: NPolyline[] = [];\r\n        for (let i = 0; i < this.paths.length; ++i) {\r\n            let pl: NPolyline = new NPolyline();\r\n            for (let j = 0; j < this.paths[i].length; ++j) {\r\n                pl.push(this.paths[i][j].point);\r\n            }\r\n            if (min < this.paths[i][0].networkDistance && this.paths[i][0].networkDistance < max) {\r\n                pls.push(pl);\r\n            }\r\n        }\r\n        this.polylines = pls;\r\n        return this.polylines;\r\n    }\r\n\r\n    public duplicateGraph(): void {\r\n        let i = 0;\r\n        let id0 = -1;\r\n        let id1 = -1;\r\n\r\n        this.nodes = []; // new Node[this.gc.graph.nodes.Count];\r\n        this.edges = []; // new Edge[this.gc.graph.edges.Count];\r\n\r\n        for (i = 0; i < this.gc.graph.nodes.length; ++i) {\r\n            this.nodes.push(this.gc.graph.nodes[i].deepCopy());\r\n        }\r\n        for (i = 0; i < this.gc.graph.edges.length; ++i) {\r\n            id0 = this.gc.graph.edges[i].n0.id;\r\n            id1 = this.gc.graph.edges[i].n1.id;\r\n            let e: Edge = new Edge(this.nodes[id0], this.nodes[id1]);\r\n            e.id = this.gc.graph.edges[i].id;\r\n            this.edges.push(e); ;\r\n        }\r\n    }\r\n}","import { meterFromGeoGPSPos } from '../../../lib';\r\n\r\nimport { Node } from '../GraphCore/Graph/Node';\r\n\r\nexport const costFnDistanceGeo = (p0: Node, p1: Node, beta: number = 0.0002) => {\r\n    return meterFromGeoGPSPos(p1.point, p0.point);\r\n}\r\nexport const costFnDistance = (p0: Node, p1: Node, beta: number = 0.0002) => {\r\n    return p1.point.distanceTo(p0.point);\r\n}\r\nexport const decayNegative = (d: number, beta: number) => {\r\n    let result = getDecay(d, beta);\r\n    if (result > 0.999) {\r\n        result = 0.999;\r\n    }\r\n    return result;\r\n}\r\nexport const decayPositive = (d: number, beta: number) => {\r\n    let result = getDecay(d, beta);\r\n    result = 1 - result;\r\n    if (result > 0.999) {\r\n        result = 0.999;\r\n    }\r\n    return result;\r\n}\r\nexport const getDecay = (cost: number, b: number = 1.0) => { // 0.002 // 0.999\r\n    return Math.pow(1 - b, cost);\r\n}\r\nexport const getGravityFalloff = (x: number, strength: number, Beta: number) => {\r\n    return strength * Math.exp(-Beta * x * x);\r\n}","import { GraphSystem } from '..';\r\nimport { NVector3, NLine } from '../../../lib'\r\nimport { Graph } from './Graph';\r\nimport { Tree } from './Tree/Tree';\r\n\r\nimport { costFnDistanceGeo } from '../GraphUtility/GraphUtility';\r\n\r\nexport class GraphCore {\r\n\r\n\r\n    public gs: GraphSystem;\r\n    public trees: Tree[] = [];\r\n   // public List<int> idOrigin;\r\n    public destinations: NVector3[] = [];\r\n    public idDestination: number[] = [];\r\n    public graph: Graph;\r\n    constructor(gs: GraphSystem) {\r\n        this.gs = gs;\r\n        this.trees = [];\r\n        this.destinations = [];\r\n        this.idDestination = [];\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.graph = new Graph(this);\r\n        this.graph.initGraph(lns);\r\n    }\r\n    public setUnit(unit: string) {\r\n        \r\n    }\r\n    public computePath(origins: NVector3[], destinations: NVector3[], BETA: number = 0.002) {\r\n        this.trees = [];\r\n        let oWeight: number[] = [];\r\n        let dWeight: number[] = [];\r\n        this.computePathWeighted(origins, oWeight, destinations, dWeight, BETA);\r\n    }\r\n    public computePathWeighted(origins: NVector3[], oWeight: number[], destinations: NVector3[], dWeight: number[], BETA: number = 0.002) {\r\n        while (origins.length < oWeight.length) { oWeight.push(1); }\r\n        while (destinations.length < dWeight.length) { dWeight.push(1); }\r\n\r\n        this.updatePropagation(origins, oWeight);\r\n        this.updateBackpropagation(destinations, dWeight);\r\n        this.mergeAgents();\r\n    }\r\n    public updatePropagation(origins: NVector3[], oWeight: number[]) {\r\n\r\n        for (let i = 0; i < origins.length; ++i) {\r\n            let p = origins[i];\r\n\r\n            if (i == this.trees.length -1) {\r\n                if (this.trees[i].pointOrigin.distanceToGeo(p) < 0.1) {\r\n                    this.trees[i].updatePropagation(costFnDistanceGeo, 0.002);\r\n                }\r\n                else {\r\n                    this.trees[i].updateOriginByPt(p);\r\n                    this.trees[i].updatePropagation(costFnDistanceGeo, 0.002);\r\n                }\r\n            }\r\n            else {\r\n                let tree: Tree = new Tree(this, p);\r\n                tree.updatePropagation(costFnDistanceGeo, 0.002);\r\n                this.trees.push(tree);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    public updateBackpropagation(destination: NVector3[], dWeight: number[], BETA: number = 0.002) {\r\n\r\n        for (let i = 0; i < destination.length; ++i) {\r\n            if (i == this.destinations.length - 1) {\r\n                if (destination[i].distanceToGeo(this.destinations[i]) < 0.1) {\r\n                    this.idDestination.push(this.idDestination[i]);\r\n                }\r\n                else {\r\n                    let n = this.graph.FindClosestNode(destination[i]);\r\n                    if (n){\r\n                        this.idDestination[i] = n.id;\r\n                        this.destinations[i] = destination[i];\r\n                    }\r\n \r\n                }\r\n            }\r\n            else {\r\n                let n = this.graph.FindClosestNode(destination[i]);\r\n                if (n){\r\n                    this.idDestination.push(n.id);\r\n                    this.destinations.push(destination[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.trees.length; ++i) {\r\n            let tree = this.trees[i];\r\n            tree.updateBackpropagation(this.idDestination);\r\n        }\r\n    }\r\n    public mergeAgents() {\r\n        this.graph.updatePropagation(this.trees, costFnDistanceGeo, 0.002);\r\n\r\n        for (let i = 0; i < this.trees.length; ++i) {\r\n            for (let j = 0; j < this.trees[i].nodes.length; ++j) {\r\n                this.graph.nodes[j].countVisit += this.trees[i].nodes[j].countVisit;\r\n                this.graph.nodes[j].countOrigin += this.trees[i].nodes[j].countOrigin;\r\n                this.graph.nodes[j].countDestination += this.trees[i].nodes[j].countDestination;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","\r\nimport { getFalseColor, COLORBLENDING, NVector3, distanceToXY } from '../../../lib';\r\n\r\nimport { GraphSystem } from '..';\r\n\r\nimport { Node } from '../GraphCore/Graph/Node';\r\nimport { BoidsBehaviors } from '../../AgencySystem/BoidsBehaviors/BoidsBehaviors';\r\n\r\n\r\nclass Properties {\r\n    lineWidth = 0.5;\r\n    strokeStyle = 'rgba(0, 255, 0, 0.5)';\r\n}\r\n\r\nexport class RendererGraph {\r\n    gs: GraphSystem;\r\n    \r\n    BoidsBehaviors: BoidsBehaviors | undefined = undefined;\r\n\r\n    start: NVector3;\r\n    end: NVector3;\r\n\r\n    path: Node[][] = [];\r\n    selPath: Node[] | undefined = undefined;\r\n\r\n    time: number = 0.0;\r\n\r\n    properties: Properties = new Properties();\r\n\r\n    constructor(gs: GraphSystem) {\r\n        this.gs = gs;\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        \r\n        ctx.lineWidth = this.properties.lineWidth;\r\n        ctx.strokeStyle = this.properties.strokeStyle;\r\n\r\n        // console.log(this.gs.graphCore.graph.edges.length);\r\n        if(this.gs.graphCore.graph?.edges){\r\n            for (let i = 0; i < this.gs.graphCore.graph.edges.length; ++i) {\r\n                const edge = this.gs.graphCore.graph.edges[i];\r\n\r\n                if(isPanning) {\r\n                    edge.updateScreenPos(this.gs.nnaEngine.app.toScreen);\r\n            \r\n                } \r\n                // else {\r\n                    // console.log(edge.n0.networkDistance);\r\n                    ctx.beginPath();\r\n                    const cols = getFalseColor(edge.n0.networkDistance * 0.001);\r\n                    ctx.strokeStyle = `rgba(${cols[0]}, ${cols[1]}, ${cols[2]}, 1.0) `\r\n                    ctx.moveTo(edge.n0.point.x, edge.n0.point.y);\r\n                    ctx.lineTo(edge.n1.point.x, edge.n1.point.y);\r\n                    ctx.stroke();\r\n\r\n                    const dis = edge.n0.point.distanceToGeo(edge.n1.point); // * 0.000621371;\r\n\r\n                    if( !isPanning && this.gs.nnaEngine.app.controller.inspection){\r\n                        ctx.font = \"10px Arial\";\r\n                        ctx.fillStyle = '#000000';\r\n                        ctx.fillText( `${dis.toFixed(2)}`, edge.n0.point.x + (edge.n1.point.x - edge.n0.point.x) * 0.5, edge.n0.point.y + (edge.n1.point.y - edge.n0.point.y) * 0.5);\r\n                        // ctx.fillText( `${Math.round(edge.n0.networkDistance)}`, edge.n0.point.x + (edge.n1.point.x - edge.n0.point.x) * 0.5, edge.n0.point.y + (edge.n1.point.y - edge.n0.point.y) * 0.5  )\r\n                        // ctx.fillText(`${Math.round(edge.n0.networkDistance)}`, edge.n1.point.x, edge.n1.point.y  )\r\n                    }\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = \"#ffffff\";\r\n        // console.log(this.start.x, this.start.y);\r\n        if(this.start) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.start.x, this.start.y, 5, 0, Math.PI * 2.0);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        if(this.end) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.end.x, this.end.y, 15, 0, Math.PI * 2.0);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        let selPathId = -1;\r\n        let dis = Number.MAX_SAFE_INTEGER;\r\n        const mx = this.gs.nnaEngine.app.controller.m.x;\r\n        const my = this.gs.nnaEngine.app.controller.m.y;\r\n\r\n        ctx.globalCompositeOperation = COLORBLENDING.COLOR_DODGE;\r\n        for(let j = 0 ; j < this.path.length; ++j) {\r\n            ctx.strokeStyle = 'rgba(255, 255, 10, 1)'\r\n            ctx.lineWidth = 2.4;\r\n            ctx.setLineDash([5, 4]);\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.path[j][0].point.x, this.path[j][0].point.y);\r\n            let theDis = distanceToXY(this.path[j][0].point.x, this.path[j][0].point.y, mx, my)\r\n            if(theDis < dis) { dis = theDis; selPathId = j; }\r\n            for(let i = 1 ; i < this.path[j].length; ++i) {\r\n\r\n                if(this.path[j][i]){\r\n                    ctx.lineTo(this.path[j][i].point.x, this.path[j][i].point.y);\r\n                    theDis = distanceToXY(this.path[j][i].point.x, this.path[j][i].point.y, mx, my)\r\n                    if(theDis < dis) { dis = theDis; selPathId = j; }\r\n                }\r\n            }\r\n\r\n            \r\n            // ctx.closePath();\r\n            ctx.stroke();\r\n            ctx.lineDashOffset = this.time * -5;\r\n            ctx.setLineDash([]);\r\n        }\r\n\r\n        if(this.path.length > 0 && dis < 10) {\r\n            this.selPath = this.path[selPathId];\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.selPath[0].point.x, this.selPath[0].point.y);\r\n            for(let i = 1 ; i < this.selPath.length; ++i) {\r\n                if(this.selPath[i]){\r\n                    ctx.lineTo(this.selPath[i].point.x, this.selPath[i].point.y);\r\n                }\r\n            }\r\n            ctx.lineWidth = 4.4;\r\n            ctx.stroke();\r\n            ctx.lineDashOffset = this.time * -5;\r\n            ctx.setLineDash([]);\r\n        } else {\r\n            this.selPath = undefined;\r\n        }\r\n\r\n        ctx.globalCompositeOperation = COLORBLENDING.SOURCE_OVER;\r\n        // console.log(this.gs.graphCore.trees)\r\n\r\n        this.time+=0.1;\r\n\r\n\r\n        if(this.BoidsBehaviors) {\r\n            this.BoidsBehaviors.Update();\r\n            this.BoidsBehaviors.Render(ctx);\r\n        }\r\n    }\r\n    public getPath(x: number, y: number) {\r\n        if(this.selPath) {\r\n        //     console.log('detecting...', this.selPath);\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../lib';\nexport class BoidsPath {\n    r: number = 5;\n    nodes: NVector3[];\n    constructor(r: number) {\n        this.nodes = [];\n        this.r = r;\n    }\n    public AddNode(node: NVector3): void {\n        this.nodes.push(node);\n    }\n    public GetNodes(): NVector3[] {\n        let p: NVector3[] = [];\n        for (let i = 0; i < this.nodes.length; ++i) {\n            p.push(new NVector3(this.nodes[i].x, this.nodes[i].y, 0));\n            // p.push(this.nodes[i]);\n        }\n        return p;\n    }\n}","import { NVector3, remap } from '../../../lib';\nimport { BoidsPath } from './BoidsPath';\nexport class Boid {\n    public static MAX_VELOCITY: number = 5;\n    public static MAX_FORCE: number = 3;\n\n    // Collision avoidance\n    public static MAX_AVOID_AHEAD: number = 50;\n    public static AVOID_FORCE: number = 600;\n\n    // Queuing\n    public static MAX_QUEUE_AHEAD: number = 30;\n    public static MAX_QUEUE_RADIUS: number = 30;\n\n    // Separation\n    public static MAX_SEPARATION: number = 2.0;\n    public static SEPARATION_RADIUS: number = 30;\n\n    public MAX_FORCE: number;\n    public position: NVector3;\n    public velocity: NVector3;\n    public maxVelocity: number;\n    public desired: NVector3;\n    public steering: NVector3;\n    public mass: number;\n    public boidsPath: BoidsPath;\n    public currentNode: number;\n    public pathDir: number;\n    public rotation: number;\n    public vec: NVector3;\n    public preVec: NVector3[];\n\n    public avoidance: NVector3;\n    public ahead: NVector3;\n    public alpha: number;\n\n    isOriented: boolean;\n    activeBase64ID: string = ' ';\n    angle: number;\n    constructor(posX: number, posY: number, totalMass: number) {\n        // Boid.MAX_FORCE = Boid.MAX_VELOCITY * 3;\n        Boid.MAX_FORCE = Boid.MAX_VELOCITY; // * Math.random() * 2;\n        this.MAX_FORCE = Boid.MAX_FORCE;\n        this.position = new NVector3(posX, posY);\n        this.velocity = new NVector3(-1, -2);\n        this.desired = new NVector3(0, 0);\n        this.steering = new NVector3(0, 0);\n        this.vec = new NVector3(0, 0);\n        this.rotation = 0;\n        this.mass = totalMass;\n        // this.path = undefined;\n        this.currentNode = 0;\n        this.pathDir = 1;\n        this.angle = 0;\n        this.isOriented = false;\n\n        this.avoidance = new NVector3(0, 0);\n\n        this.maxVelocity = this.MAX_FORCE * (0.8 + Math.random() * 0.6);\n\n        this.Truncate(this.velocity, this.maxVelocity);\n        this.preVec = [];\n        // x = position.x;\n        // y = position.y;\n\n        // graphics.lineStyle(2, 0xffaabb);\n        // graphics.beginFill(0xFF0000);\n        // graphics.moveTo(0, 0);\n        // graphics.lineTo(0, -20);\n        // graphics.lineTo(10, 20);\n        // graphics.lineTo(-10, 20);\n        // graphics.lineTo(0, -20);\n        // graphics.endFill();\n\n        // graphics.moveTo(0, 0);\n        // this.activeBase64ID = '';\n    }\n    // GetNeighborAhead(): Boid {\n    // let ret: Boid | undefined = undefined;\n    // let qa: NVector3 = this.velocity.Clone();\n\n    // qa.Normalize();\n    // qa.Scale(Boid.MAX_QUEUE_AHEAD);\n\n    // this.ahead = this.position.Clone().Add(qa);\n\n    // for (let i = 0; i < Game.instance.boids.length; i++) {\n    //     let neighbour: Boid = Game.instance.boids[i];\n    //     let d: Number = this.Distance(ahead, neighbour.position);\n\n    //     if (neighbour != this && d <= Boid.MAX_QUEUE_RADIUS) {\n    //         ret = neighbour;\n    //         break;\n    //     }\n    // }\n\n    // return ret;\n    // }\n\n    // Queue(): NVector3 {\n    //     let v: NVector3 = this.velocity.Clone();\n    //     let brake: NVector3 = new NVector3(0, 0);\n    //     let neighbour: Boid = this.GetNeighborAhead();\n\n    //     if (neighbour != null) {\n    //         brake.x = -this.steering.x * 0.8;\n    //         brake.y = -this.steering.y * 0.8;\n\n    //         v.Scale(-1);\n    //         brake = brake.Add(v);\n    //         brake = brake.Add(this.Separation());\n\n    //         if (this.Distance(this.position, neighbour.position) <= Boid.MAX_QUEUE_RADIUS) {\n    //             this.velocity.Scale(0.3);\n    //         }\n    //     }\n\n    //     // Used to render the brake force vector on the screen\n    //     braking = brake;\n\n    //     return brake;\n    // }\n\n    // // Link: http://gamedev.tutsplus.com/tutorials/implementation/the-three-simple-rules-of-flocking-behaviors-alignment-cohesion-and-separation/\n    // separation(): NVector3 {\n    //     let force: NVector3 = new NVector3();\n    //     let neighborCount: int = 0;\n\n    //     for (let i: int = 0; i < Game.instance.boids.length; i++) {\n    //         let b: Boid = Game.instance.boids[i];\n\n    //         if (b != this && distance(b, this) <= SEPARATION_RADIUS) {\n    //             force.x += b.position.x - this.position.x;\n    //             force.y += b.position.y - this.position.y;\n    //             neighborCount++;\n    //         }\n    //     }\n\n    //     if (neighborCount != 0) {\n    //         force.x /= neighborCount;\n    //         force.y /= neighborCount;\n\n    //         force.scaleBy(-1);\n    //     }\n\n    //     force.normalize();\n    //     force.scaleBy(MAX_SEPARATION);\n\n    //     return force;\n    // }\n    public CollisionAvoidance(): NVector3 {\n        let tv: NVector3 = this.velocity.Clone();\n        tv.normalize();\n        tv.scale(Boid.MAX_AVOID_AHEAD * this.velocity.Length() / this.maxVelocity);\n\n        this.ahead = this.position.Clone().Add(tv);\n\n        let mostThreatening = undefined; // Obstacle\n\n        // for (let i = 0; i < Game.instance.obstacles.length; i++) {\n        //     // let obstacle: Obstacle = Game.instance.obstacles[i];\n        //     // let collision: Boolean = obstacle is Circle ?lineIntersecsCircle(this.position, this.ahead, obstacle as Circle) : lineIntersecsRectangle(this.position, this.ahead, obstacle as Rectangle);\n\n        //     if (collision && (mostThreatening == null || this.Distance(this.position, obstacle) < this.Distance(this.position, mostThreatening))) {\n        //         mostThreatening = obstacle;\n        //     }\n        // }\n\n        if (mostThreatening !== undefined) {\n            this.alpha = 0.4; // make the boid a little bit transparent to indicate it is colliding\n\n            // this.avoidance.x = this.ahead.x - mostThreatening.center.x;\n            // this.avoidance.y = this.ahead.y - mostThreatening.center.y;\n\n            this.avoidance.normalize();\n            this.avoidance.scale(Boid.AVOID_FORCE);\n        } else {\n            this.alpha = 1; // make the boid opaque to indicate there is no collision.\n            this.avoidance.scale(0); // nullify the this.avoidance force\n        }\n\n        return this.avoidance;\n    }\n    public Distance(a: NVector3, b: NVector3): number {\n        return Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\n    }\n    public Truncate(v: NVector3, max: number): void {\n        let i: number = max / v.Length();\n        i = i < 1.0 ? i : 1.0;\n        v.scale(i);\n    }\n    public GetAngle(vector: NVector3): number {\n        return Math.atan2(vector.y, vector.x);\n    }\n    public Update(): void {\n        // steering = Seek(Flock.mouse);\n        this.steering = this.PathFollowing();\n\n        if (true) {\n            // let width = 500\n            // let doorway: NVector3 = new NVector3(width / 2, -100);\n\n            // steering = seek(doorway);\n            this.steering = this.steering.Add(this.CollisionAvoidance());\n            // this.steering = this.steering.Add(this.Queue());\n        }\n\n        this.Truncate(this.steering, this.MAX_FORCE);\n        this.steering.scale(1 / this.mass);\n\n        this.velocity = this.velocity.Add(this.steering);\n        this.Truncate(this.velocity, this.maxVelocity);\n\n        this.position = this.position.Add(this.velocity);\n\n        if (this.isOriented) {\n            let v = new NVector3(this.velocity.x, this.velocity.y);\n            // let v = new NVector3(this.velocity.x - this.vec.x, this.velocity.y - this.vec.y).Normalize();\n            this.rotation = v.GetAngle();\n        }\n\n        this.vec = new NVector3(this.position.x, this.position.y);\n        this.AddVecHistory();\n    }\n    public AddVecHistory() {\n        this.preVec.push(new NVector3(this.vec.x, this.vec.y));\n        if (this.preVec.length > 20) { this.preVec.shift(); }\n    }\n    public Render(ctx: CanvasRenderingContext2D) {\n        if (true) {\n            // this.DrawForces(ctx);\n            this.DrawTail(ctx);\n        }\n\n        if (this.activeBase64ID !== ' ') {\n            ctx.globalCompositeOperation = 'source-over';\n            let img = new Image();\n            img.src = this.activeBase64ID;\n            ctx.save();\n            ctx.globalAlpha = 0.85;\n            ctx.translate(this.vec.x, this.vec.y);\n            ctx.rotate(this.rotation);\n            ctx.drawImage(img, -img.width / 2, -img.width / 2);\n            ctx.restore();\n            ctx.globalCompositeOperation = 'lighter';\n        } else {\n            ctx.beginPath();\n            ctx.fillStyle = 'rgba(0,255,0,0.7)';\n            ctx.arc(this.vec.x, this.vec.y, 5, 0, 3.14 * 2);\n        }\n        ctx.closePath();\n        ctx.fill();\n        // this.DrawShape(ctx);\n\n    }\n    DrawTail(ctx: CanvasRenderingContext2D) {\n        let i = this.preVec.length;\n        while (i--) {\n            ctx.beginPath();\n            ctx.fillStyle = `rgba(0,255,0,${remap(i, 0.0, this.preVec.length, 0.01, 0.175)})`;\n            ctx.arc(this.preVec[i].x, this.preVec[i].y, remap(i, 0.0, this.preVec.length, 0.1, 10), 0, 3.14 * 2);\n            ctx.closePath();\n            ctx.fill();\n        }\n    }\n    public DrawShape(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = '#FF0000';\n\n        ctx.lineWidth = 0.1;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, -20);\n        ctx.lineTo(10, 20);\n        ctx.lineTo(-10, 20);\n        ctx.lineTo(0, -20);\n        ctx.closePath();\n\n        ctx.moveTo(0, 0);\n    }\n    public DrawForces(ctx: CanvasRenderingContext2D): void {\n        let velocity: NVector3 = this.velocity.Clone();\n        let steering: NVector3 = this.steering.Clone();\n        let desired: NVector3 = this.desired.Clone();\n\n        velocity.normalize();\n        steering.normalize();\n        desired.normalize();\n\n        // Force vectors\n        // if (!BoidsBehaviors.showForces) {\n        this.DrawForceVector(ctx, velocity, '#00FF00');\n        this.DrawForceVector(ctx, desired, '#0000FF');\n        // }\n    }\n    public DrawForceVector(ctx: CanvasRenderingContext2D, force: NVector3, color: string, scale: number = 100): void {\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(this.vec.x, this.vec.y);\n        ctx.lineTo(this.vec.x + force.x * scale, this.vec.y + force.y * scale);\n        ctx.closePath();\n        ctx.stroke();\n    }\n    private Seek(target: NVector3): NVector3 {\n        let force: NVector3;\n\n        this.desired = target.Sub(this.position);\n        this.desired.normalize();\n        this.desired.scale(this.maxVelocity);\n\n        force = this.desired.Sub(this.velocity);\n\n        return force;\n    }\n    private PathFollowing(): NVector3 {\n        let target: NVector3 | undefined = undefined;\n\n        let nodes: NVector3[] = this.boidsPath.GetNodes();\n\n        target = nodes[this.currentNode];\n\n        if (this.Distance(this.position, target) <= this.boidsPath.r) {\n            this.currentNode += this.pathDir;\n\n            if (this.currentNode >= nodes.length || this.currentNode < 0) {\n                this.pathDir *= -1;\n                this.currentNode += this.pathDir;\n            }\n        }\n        return target !== undefined ? this.Seek(target) : new NVector3(0, 0, 0);\n    }\n}","import { NVector3, getRandomArbitrary } from '../../../lib';\nimport { BoidsPath } from './BoidsPath';\nimport { Boid } from './Boid';\n\nimport { Node } from '../../GraphSystem/GraphCore/Graph/Node';\n\n// import { AppDrawing } from '../../AppDrawing/AppDrawing';\n\n// http://www.red3d.com/cwr/steer/\n\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-path-following--Flockdev-8769\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-leader-following--Flockdev-10810\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-queue--Flockdev-14365\n\n// https://gamedevelopment.tutsplus.com/series/understanding-steering-behaviors--gamedev-12732\nexport class BoidsBehaviors {\n    public static mouse: NVector3 = new NVector3(100, 100, 0);\n    public static width: number = 400;\n    public static height: number = 400;\n    public static showForces: boolean = false;\n    public static instance: BoidsBehaviors;\n    public boids: Boid[] = [];\n    public boidsPath: BoidsPath;\n    // public forces: Sprite;\n    public t: number;\n    isOriented: boolean;\n    activeBase64ID: string;\n    constructor(width: number, height: number) {\n        BoidsBehaviors.instance = this;\n        BoidsBehaviors.width = width;\n        BoidsBehaviors.height = height;\n        this.isOriented = false;\n        this.t = 0.0;\n        // this.initPath(new BoidsPath(20));\n        // addEventListener(Event.ADDED_TO_STAGE, init);\n    }\n    public InitPathByAPolyline(boidsPath: BoidsPath, numBoid: number = 7) {\n        this.boidsPath = boidsPath;\n        this.InitBoid(numBoid);\n    }\n    public InitPathByNode(boidsPath: Node[], numBoid: number = 7) {\n    //     console.log(boidsPath)\n        this.boidsPath = new BoidsPath(10);\n\n        for(let i = 0 ; i < boidsPath.length; ++i) {\n            if(boidsPath[i]){\n                this.boidsPath.AddNode(boidsPath[i].point);\n            }\n        }\n        this.InitBoid(numBoid);\n    }\n    public InitPath(boidsPath: BoidsPath, numPath: number = 8, numBoid: number = 7) {\n        this.boidsPath = boidsPath;\n        this.Init(numPath, numBoid);\n    }\n    public Init(numPath: number, numBoid: number): void {\n        this.reset();\n        this.boidsPath.r = 30;\n\n        // Add path nodescircles\n        let maxPathNodes: number = numPath;\n        for (let i = 0; i < maxPathNodes; i++) {\n            let node: NVector3 = new NVector3(BoidsBehaviors.width * i / maxPathNodes + 50, BoidsBehaviors.height * Math.random() * 0.8 + 20, 0);\n            // let node: NVector3 = new NVector3(this.boidsPath.nodes[0].x, this.boidsPath.nodes[0].y);\n            this.boidsPath.AddNode(node);\n        }\n        this.InitBoid(numBoid);\n    }\n    public InitBoid(numBoid: number = 7) {\n        let boid: Boid;\n        for (let i = 0; i < numBoid; i++) {\n            boid = new Boid(BoidsBehaviors.width / 2 + Math.random() * 50, 20 * Math.random(), 20 + Math.random() * 20);\n            boid.activeBase64ID = this.activeBase64ID;\n            boid.boidsPath = this.boidsPath;\n            this.boids.push(boid);\n        }\n\n        // this.forces = new Sprite();\n\n        // addChild(forces);\n\n        // addChild(new Button(Boids.width - 80, Boids.height - 60, \"Reload\", Boids.instance.init));\n        // addChild(new Button(Boids.width - 130, Boids.height - 60, \" + \", IncreasePathRadius));\n        // addChild(new Button(Boids.width - 180, Boids.height - 60, \" - \", DecreasePathRadius));\n        // addChild(new Button(Boids.width - 260, Boids.height - 60, \"Forces\", ToggleShowForces));\n    }\n    public ShiftSpeed(min: number, max: number) {\n        for (let b of this.boids) {\n            b.maxVelocity = getRandomArbitrary(min, max);\n        }\n    }\n    public IncreasePathRadius(): void {\n        BoidsBehaviors.showForces = true;\n        this.boidsPath.r += 2;\n    }\n    public DecreasePathRadius(): void {\n        BoidsBehaviors.showForces = true;\n        this.boidsPath.r -= 2;\n    }\n    public ToggleShowForces(): void {\n        BoidsBehaviors.showForces = !BoidsBehaviors.showForces;\n    }\n    public ShiftRadius(v: number) {\n        this.boidsPath.r = v;\n    }\n    public ShiftForce(min: number, max: number) {\n        for (let b of this.boids) {\n            b.maxVelocity = getRandomArbitrary(min, max);\n        }\n    }\n    public ShiftOriented(v: boolean) {\n        for (let b of this.boids) {\n            b.isOriented = v;\n        }\n    }\n    public reset(): void {\n        // while (numChildren) {\n        //     removeChildAt(0);\n        // }\n        // boids.length = 0;\n        // path.getNodes().length = 0;\n        // showForces = false;\n\n        // stage.removeEventListener(MouseEvent.CLICK, ToggleShowForces);\n    }\n    public Update(): void {\n        for (let i = 0; i < this.boids.length; i++) { this.boids[i].Update(); }\n        if (this.t > 16) { this.t = 0; }\n        this.t += 0.5;  // AppDrawing.app.cCanvas.delta;\n    }\n    public Render(ctx: CanvasRenderingContext2D) {\n        ctx.globalCompositeOperation = 'lighter';\n        this.drawPath(ctx);\n        for (let i = 0; i < this.boids.length; i++) {\n            this.boids[i].Render(ctx);\n            // this.drawForces(ctx, this.boids[i]);\n        }\n        ctx.globalCompositeOperation = 'source-over';\n    }\n    public drawPath(ctx: CanvasRenderingContext2D): void {\n        let nodes: NVector3[] = this.boidsPath.GetNodes();\n        for (let i: number = 0; i < nodes.length; ++i) {\n            this.drawPathPoint(ctx, nodes[i], '#FF00CC');\n\n            if (BoidsBehaviors.showForces) {\n                this.drawCircle(ctx, nodes[i], 'gray', this.boidsPath.r);\n            }\n        }\n\n        ctx.beginPath();\n        ctx.lineWidth = 0.2;\n        ctx.strokeStyle = '#ffffff';\n        ctx.setLineDash([4, 4]);\n        ctx.lineDashOffset = -this.t;\n        ctx.moveTo(nodes[0].x, nodes[0].y);\n        for (let i = 1; i < nodes.length; ++i) { ctx.lineTo(nodes[i].x, nodes[i].y); }\n        // ctx.closePath();\n        ctx.stroke();\n        ctx.setLineDash([0, 0]);\n\n        ctx.beginPath();\n        ctx.lineWidth = 0.3;\n        ctx.strokeStyle = '#000000';\n        ctx.setLineDash([4, 8]);\n        ctx.lineDashOffset = -this.t;\n        ctx.moveTo(nodes[0].x, nodes[0].y);\n        for (let i = 1; i < nodes.length; ++i) { ctx.lineTo(nodes[i].x, nodes[i].y); }\n        // ctx.closePath();\n        ctx.stroke();\n        ctx.setLineDash([0, 0]);\n    }\n    public drawPathPoint(ctx: CanvasRenderingContext2D, force: NVector3, color: string): void {\n\n        ctx.fillStyle = 'rgba(255,0,0,0.6)';\n        ctx.beginPath();\n        ctx.arc(force.x, force.y, 2.5, 0, 3.14 * 2);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n        // forces.graphics.lineStyle(1, 0x323232);\n        // forces.graphics.beginFill(0xFF5000);\n        // forces.graphics.drawCircle(force.x, force.y, 6);\n        // forces.graphics.endFill();\n    }\n    public drawCircle(ctx: CanvasRenderingContext2D, force: NVector3, color: string, radius: number): void {\n        ctx.fillStyle = color;\n        ctx.beginPath();\n        ctx.arc(force.x, force.y, 2, 0, 3.14 * 2);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // forces.graphics.lineStyle(1, 0x323232);\n        // //forces.graphics.beginFill(0xFF5000);\n        // forces.graphics.drawCircle(force.x, force.y, radius);\n        // //forces.graphics.endFill();\n    }\n    public set IsOrient(v: boolean) {\n        this.isOriented = v;\n        this.ShiftOriented(v);\n    }\n    public get IsOrient() {\n        return this.isOriented;\n    }\n}","import { Core } from '../Core';\r\nimport { NVector3, NLine } from '../../lib';\r\nimport { Analysis } from './Analysis';\r\nimport { GraphCore } from './GraphCore';\r\nimport { RendererGraph } from './RendererGraph';\r\nimport { Node } from './GraphCore/Graph/Node';\r\n\r\n// import { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\n\r\nimport { costFnDistanceGeo } from './GraphUtility/GraphUtility';\r\n\r\nimport { BoidsBehaviors } from '../AgencySystem/BoidsBehaviors/BoidsBehaviors';\r\n\r\nexport class GraphSystem {\r\n    nnaEngine: Core\r\n    analysis: Analysis;\r\n    graphCore: GraphCore;\r\n    renderGraph: RendererGraph;\r\n\r\n    constructor(nnaEngine: Core) {\r\n        this.nnaEngine = nnaEngine;\r\n        this.analysis = new Analysis(this);\r\n        this.graphCore = new GraphCore(this);\r\n        this.renderGraph = new RendererGraph(this)\r\n\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.graphCore.initGraph(lns);\r\n    }\r\n\r\n    public setUnit(unit: string) {\r\n        this.graphCore.setUnit(unit);\r\n    }\r\n    public computePath(origin: NVector3[], destination: NVector3[], BETA: number = 0.002) {\r\n        this.graphCore.computePath(origin, destination, BETA);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.renderGraph.render(ctx, isPanning);\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // console.log('ddd');\r\n        this.initTwoPoint();\r\n        // this.computePath([this.start], [this.end])\r\n        const n = this.graphCore.graph.FindClosestNode(this.renderGraph.start);\r\n        const cost = (p0: Node, p1: Node, beta: number = 0.0002): number => {\r\n            return p1.point.distanceTo(p0.point) * 0.5;\r\n        }\r\n        if (n){\r\n            this.graphCore.graph.updatePropagationByNode(n, cost, 0.02);\r\n        }\r\n\r\n    }\r\n    public getPath(x: number, y: number){\r\n        this.renderGraph.getPath(x,y);\r\n    }\r\n    public initByCPoints(cps: any){\r\n        // public initByCPoints(cps: CPoint[]){\r\n        const nodes: Node[] = [];\r\n        for(let i = 0 ; i < cps.length; ++i) {\r\n            const n = this.graphCore.graph.FindClosestNode(cps[i].v) as Node;\r\n            nodes.push(n);\r\n        }\r\n        this.graphCore.graph.updatePropagationByNodes(nodes, costFnDistanceGeo, 0.02);\r\n\r\n    }\r\n    public initByCPointsBackpro(cps: any){\r\n        // public initByCPointsBackpro(cps: CPoint[]){\r\n        const nodes: NVector3[] = [];\r\n        for(let i = 0 ; i < cps.length; ++i) {\r\n            // const n = this.graphCore.graph.FindClosestNode(cps[i].v) as Node;\r\n            nodes.push(cps[i].v);\r\n        }\r\n        const path = this.graphCore.graph.updateBackpropagation(nodes);\r\n    //     console.log(path);\r\n        this.renderGraph.path = path;\r\n    }\r\n    public initByCPoint(cps: any){\r\n        // public initByCPoint(cps: CPoint[]){\r\n        // console.log(cps.length);\r\n\r\n        if(cps.length > 0) {\r\n            const start = cps[0].v;\r\n            const ends: NVector3[] = [];\r\n    \r\n            for(let i = 1 ; i < cps.length; ++i) {\r\n                ends.push(cps[i].v);\r\n            }\r\n\r\n            // const vs = cps.shift() as CPoint;\r\n            // this.end = cps[cps.length -2].v\r\n            const n = this.graphCore.graph.FindClosestNode(start) as Node;\r\n            this.renderGraph.start = n.point; // cps[cps.length -1].v\r\n            // const cost = (p0: Node, p1: Node, beta: number = 0.0002): number => {\r\n            //     return p1.point.distanceTo(p0.point) * 0.5;\r\n            // }\r\n            if (n){\r\n                this.graphCore.graph.updatePropagationByNode(n, costFnDistanceGeo, 0.02);\r\n\r\n                // const vEnds: NVector3[] = []; \r\n                // for(let i = 0 ; i < cps.length; ++i) {\r\n                //     this.end = cps[i].v;\r\n                //     vEnds.push(cps[i].v);\r\n                // }\r\n                // console.log(vEnds);\r\n\r\n                const path = this.graphCore.graph.updateBackpropagation(ends);\r\n                // console.log(path);\r\n                this.renderGraph.path = path;\r\n                this.initAgentVis();\r\n\r\n            }\r\n        }\r\n    }\r\n    public initAgentVis(){\r\n        if(this.renderGraph.path[0] && this.renderGraph.BoidsBehaviors === undefined){\r\n            this.renderGraph.BoidsBehaviors = new BoidsBehaviors(500, 500);\r\n            this.renderGraph.BoidsBehaviors?.InitPathByNode(this.renderGraph.path[0], 10);\r\n        }\r\n    }\r\n    public initTwoPoint(){\r\n       \r\n        const width = (this.graphCore.graph.maxPt.x - this.graphCore.graph.minPt.x);\r\n        const height = (this.graphCore.graph.maxPt.y - this.graphCore.graph.minPt.y);\r\n\r\n        // console.log(width, height);\r\n        \r\n        let x = this.graphCore.graph.minPt.x + (width * Math.random());\r\n        let y = this.graphCore.graph.minPt.y+ (height * Math.random());\r\n\r\n        this.renderGraph.start = this.graphCore.graph.nodes[ Math.floor((this.graphCore.graph.nodes.length -1) * Math.random()) ].point;\r\n\r\n        x = this.graphCore.graph.minPt.x + (width * Math.random());\r\n        y = this.graphCore.graph.minPt.y+ (height * Math.random());\r\n        // this.end = new NVector3(x, y, 0);\r\n\r\n        this.renderGraph.end = this.graphCore.graph.nodes[ Math.floor((this.graphCore.graph.nodes.length -1) * Math.random()) ].point;\r\n\r\n    }\r\n\r\n}","import { Core } from '../Core';\r\nexport class VoxelSystem {\r\n    nnaEngine: Core\r\n    constructor(nnaEngine: Core) {\r\n        this.nnaEngine = nnaEngine;\r\n\r\n    }\r\n}","import { AgencySystem } from './AgencySystem';\r\nimport { GraphSystem } from './GraphSystem';\r\nimport { VoxelSystem } from './VoxelSystem';\r\nimport { NNAEngineV3 } from '..';\r\nimport { NVector3, NLine } from '../lib'\r\n\r\nexport class Core {\r\n    app: NNAEngineV3;\r\n    agencySystem: AgencySystem;\r\n    graphSystem: GraphSystem;\r\n    voxelSystem: VoxelSystem;\r\n\r\n    constructor(app: NNAEngineV3) {\r\n        this.app = app;\r\n        this.agencySystem = new AgencySystem(this);\r\n        this.graphSystem = new GraphSystem(this);\r\n        this.voxelSystem = new VoxelSystem(this);\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.graphSystem.initGraph(lns);\r\n    }\r\n\r\n    public setUnit(unit: string) {\r\n        this.graphSystem.setUnit(unit);\r\n    }\r\n    public computePath(origin: NVector3[], destination: NVector3[], BETA: number = 0.002) {\r\n        this.graphSystem.computePath(origin, destination, BETA);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        // console.log('working');\r\n        this.graphSystem.render(ctx, isPanning);\r\n        this.agencySystem.render(ctx, isPanning)\r\n\r\n               // if(this.sandbox.definition) {\r\n\r\n        //     for(let i = 0 ; i < this.renderer.length; ++i) {\r\n        //         this.renderer[i](ctx, this.isPanning);\r\n        //     }\r\n\r\n\r\n        //     this.sandbox.definition.render(ctx, this.isPanning);\r\n\r\n        //     if(this.sandbox.definition.controller.isInspectionMode) {\r\n                ctx.fillStyle = \"#ffffff\";\r\n                ctx.font = \"12px Arial\";\r\n\r\n                const geoPos = this.app.toMap(this.app.controller.m.x, this.app.controller.m.y);\r\n                ctx.fillText(`Lat: ${geoPos[0]}, Lon: ${geoPos[1]}, Zoom level: `, 150, 20 );\r\n                // ctx.fillText(`Lat: ${geoPos[0]}, Lon: ${geoPos[1]}, Zoom level: ${this.sandbox.mapView.zoom}`, this.sandbox.mapView.width * 0.5 - 150, 20 );\r\n                // ctx.fillText(`FPS: ${Math.floor(this.app.core.graphSystem.nnaEngine. .definition.nnaEngineV3.fps)}`, this.sandbox.mapView.width * 0.5 - 150, 40 );\r\n                // ctx.fillText(`Activated App: ${this.sandbox.definition.ACTIVATED_APP}`, this.sandbox.mapView.width * 0.5 - 150, 60 );\r\n        //     }\r\n        // }\r\n        \r\n    }\r\n}","import { NNAEngineV3 } from '..';\r\nexport class IO {\r\n    NNAEngineV3: NNAEngineV3;\r\n    constructor(NNAEngineV3: NNAEngineV3){\r\n        this.NNAEngineV3 = NNAEngineV3;\r\n    }\r\n    public async importCSV(path: string){ // http://localhost:8080/src/assets/data.txt\r\n\r\n    //     console.log('import');\r\n\r\n        // let file = 'torus.obj';\r\n        // return fetch(`${NJSLoader.path}/3dData/${file}`)\r\n        // return fetch(path, {mode: 'no-cors'})\r\n        return fetch(path)\r\n            .then((response: Response) => {\r\n                return response.text();\r\n            })\r\n            // tslint:disable-next-line:no-any\r\n            .then((d: any) => {\r\n                // console.log(d);\r\n                // if (njslabSandboxStatic.app.appVisGL3D) {\r\n                //     njslabSandboxStatic.app.appVisGL3D.activeCommands.LoadOBJ(d);\r\n                // }\r\n                return d;\r\n            })\r\n            .catch((err: Error) => {\r\n            //     console.log(err);\r\n            });\r\n\r\n    }\r\n}\r\n","import { APP, MouseEventData, KeyboardEventData, NVector3, NLine, CSVData, getAllUrlParams } from './lib';\r\nimport { HTMLView } from './View/HTMLView';\r\nimport { Controller } from './Controller/Controller';\r\nimport { Core } from './Core/Core';\r\nimport { IO } from './IO';\r\n\r\nexport class NNAEngineV3 {\r\n\r\n    view: HTMLView;\r\n    core: Core;\r\n    io: IO;\r\n    controller: Controller;\r\n\r\n    data: CSVData;\r\n\r\n    lastCalledTime: number = Date.now();;\r\n    fps: number = 30;\r\n    delta: number = 1;\r\n\r\n    public toScreen(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n    public toMap(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n\r\n    constructor() {\r\n        this.controller = new Controller(this);\r\n        this.view = new HTMLView(this);\r\n        this.core = new Core(this);\r\n        this.io = new IO(this);\r\n        const param = getAllUrlParams();\r\n    //     console.log(param);\r\n    //     console.log('NNAEngineV3 is running...')\r\n\r\n\r\n\r\n        // const request = new Request('http://njslab.com/NJSLabEnv/NY_street_lat_long.csv');\r\n\r\n        // fetch(request, {mode: 'no-cors'}).then( (response) => {\r\n        //     // Convert to JSON\r\n        //     return response.text();\r\n        // }).then( (j) => {\r\n        //     // Yay, `j` is a JavaScript object\r\n        // //     console.log('jjjjjjjjjjjjjj', j)\r\n        //     // console.log(JSON.stringify(j));\r\n        // }).catch((error) => {\r\n        // //     console.log('Request failed', error)\r\n        // }).then((d: any) => {\r\n        // //     console.log('dddddddddddddddddddddddddd');\r\n        // //     console.log(d);\r\n        // }\r\n        // );\r\n\r\n    }\r\n    // https://cors-anywhere.herokuapp.com/http://njslab.com/NJSLabEnv/NY_street_lat_long.csv\r\n    public importDummyData(url: string = 'https://raw.githubusercontent.com/NamjuLee/data/master/NYC/NY_street_lat_long.csv'){\r\n    // public importDummyData(url: string = 'http://njslab.com/NJSLabEnv/NY_street_lat_long.csv'){\r\n        // this.io.importCSV(``).then( (d: any) => {\r\n        this.io.importCSV(url).then( (d: any) => {\r\n        //     console.log(d);\r\n            this.data = new CSVData();\r\n            this.data.ComputeCSV(d);\r\n            this.data.initLines((x: number, y: number) => this.toScreen(x, y));\r\n\r\n            this.core.graphSystem.initGraph(this.data.lineTest);\r\n        });\r\n    }\r\n    public updateProjection(projection: { toMap: (x: number, y: number) => number[] , toScreen: (x: number, y: number) => number[]} ){\r\n        this.toScreen = projection.toScreen;\r\n        this.toMap = projection.toMap;\r\n    }\r\n    public apiCall(app: APP, action: string, data: any | undefined) {\r\n        this.controller.execution(app, action, data);\r\n    }\r\n    public initGraph(lns: NLine[]) {\r\n        this.core.initGraph(lns);\r\n    }\r\n    public reset(){\r\n        this.view.reset();\r\n    }\r\n    public setUnit(unit: string) {\r\n        this.core.setUnit(unit);\r\n    }\r\n    public computePath(origin: NVector3[], destination: NVector3[], BETA: number = 0.002) {\r\n        this.core.computePath(origin, destination, BETA);\r\n    }\r\n    public mouseEvent(m: MouseEventData){\r\n        // console.log(m);\r\n        this.controller.mouseEvent(m);\r\n    }\r\n    public keyEvent(e: KeyboardEventData){\r\n        // this.controller.ke(m);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.core.render(ctx, isPanning)\r\n        \r\n        // if(isPanning) {\r\n        //     if (this.data) {\r\n        //         this.data.updateProjection(this.definition.app.projection.ToScreen);\r\n        //     }\r\n        // }\r\n\r\n        // if (this.data) {\r\n        //     this.data.render(ctx, this.definition.app.projection.ToScreen, this.definition.controller.m.x, this.definition.controller.m.y);\r\n        // }\r\n\r\n       this.ComputeFPS();\r\n        // console.log('render');\r\n    }\r\n    private ComputeFPS(){\r\n        this.delta = (Date.now() - this.lastCalledTime )/1000;\r\n        this.lastCalledTime = Date.now();\r\n        this.fps = 1 / this.delta;\r\n    }\r\n}","import { MOUSE_TYPE, COMMAND, MouseEventData } from '../../lib'\r\nimport { ActiveCommandController } from '../';\r\nexport class CommandBase {\r\n    activeCommandController: ActiveCommandController;\r\n    type: COMMAND = COMMAND.SELECT;\r\n\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n\r\n        this.activeCommandController = activeCommandController;\r\n\r\n    }\r\n    public mouseEvent(e: MouseEventData) {\r\n        // console.log(e.type)\r\n        switch (e.type) {\r\n            case MOUSE_TYPE.LEFT:\r\n                this.MouseLeftClickPre(e); return;\r\n            case MOUSE_TYPE.MIDDLE:\r\n                this.MouseMiddleClickPre(e); return;\r\n            case MOUSE_TYPE.RIGHT:\r\n                this.MouseRightClickPre(e); return;\r\n            case MOUSE_TYPE.DOUBLE:\r\n                this.MouseDoubleClickPre(e); return;\r\n            case MOUSE_TYPE.MOVE:\r\n                this.MouseMovePre(e); return;\r\n            case MOUSE_TYPE.DRAG:\r\n                this.MouseDragPre(e); return;\r\n            case MOUSE_TYPE.DOWN:\r\n                this.MouseDownPre(e); return;\r\n            case MOUSE_TYPE.UP:\r\n                this.MouseUpPre(e); return;\r\n            case MOUSE_TYPE.WHEEL:\r\n                this.MouseWheelPre(e); return;\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n     // .......................................................\r\n     public MouseDown(e: MouseEventData) {/* */ }\r\n     public MouseDownPre(e: MouseEventData) {\r\n        //  this.scene.MouseDown(e.x, e.y);\r\n\r\n        this.activeCommandController.drawingEngine.scene.capture = this.activeCommandController.drawingEngine.geometryCommon.find(e.x, e.y);\r\n        // console.log(this.activeCommandController.drawingEngine.scene.capture);\r\n\r\n        this.MouseDown(e);\r\n     }\r\n     public MouseLeftClick(e: MouseEventData) {/* */ }\r\n     public MouseLeftClickPre(e: MouseEventData) {\r\n\r\n        this.activeCommandController.drawingEngine.scene.capture = this.activeCommandController.drawingEngine.geometryCommon.find(e.x, e.y);\r\n\r\n        if(this.activeCommandController.drawingEngine.scene.capture){\r\n            this.activeCommandController.drawingEngine.scene.capture.isSelected = !this.activeCommandController.drawingEngine.scene.capture.isSelected;\r\n        } else {\r\n            this.activeCommandController.drawingEngine.geometryCommon.resetSelections();\r\n            // this.activeCommandController.drawingEngine.scene.resetSelections();\r\n        }\r\n\r\n        // console.log(this.activeCommandController.drawingEngine.scene.capture)\r\n        //  this.scene.MouseLeftClick(e.x, e.y);\r\n         this.MouseLeftClick(e);\r\n     }\r\n     public MouseMiddleClick(e: MouseEventData) {/* */ }\r\n     public MouseMiddleClickPre(e: MouseEventData) {\r\n        //  this.scene.MouseMiddleClick(e.x, e.y);\r\n         this.MouseMiddleClick(e);\r\n     }\r\n     public MouseRightClick(e: MouseEventData) { /* */ }\r\n     public MouseRightClickPre(e: MouseEventData) {\r\n        //  this.scene.MouseRightClick(e.x, e.y);\r\n         this.MouseRightClick(e);\r\n     }\r\n     public MouseUp(e: MouseEventData) { /* */ }\r\n     public MouseUpPre(e: MouseEventData) {\r\n        //  this.scene.MouseUp(e.x, e.y);\r\n\r\n        this.activeCommandController.drawingEngine.scene.capture = undefined;\r\n        // console.log('this.activeCommandController.drawingEngine.scene.capture', this.activeCommandController.drawingEngine.scene.capture)\r\n        this.MouseUp(e);\r\n \r\n     }\r\n     public MouseDoubleClick(e: MouseEventData) {/* */ }\r\n     public MouseDoubleClickPre(e: MouseEventData) {\r\n        //  this.scene.MouseDoubleClick(e.x, e.y);\r\n         this.MouseDoubleClick(e);\r\n     }\r\n     public MouseMove(e: MouseEventData) {/* */ }\r\n     public MouseMovePre(e: MouseEventData) {\r\n\r\n        this.activeCommandController.drawingEngine.geometryCommon.updateHover(e.x, e.y);\r\n        //  this.scene.MouseMove(e.x, e.y);\r\n         this.MouseMove(e);\r\n     }\r\n     public MouseDrag(e: MouseEventData) {/* */ }\r\n     public MouseDragPre(e: MouseEventData) {\r\n        //  this.scene.MouseDrag(e.x, e.y);\r\n        if (this.activeCommandController.drawingEngine.scene.capture) {\r\n            const mv = this.activeCommandController.drawingEngine.projection.toMap(e.x, e.y); \r\n            this.activeCommandController.drawingEngine.scene.capture.translate(e.x, e.y, mv[0], mv[1]);\r\n        }\r\n         this.MouseDrag(e);\r\n     }\r\n     public MouseWheel(e: MouseEventData) {/* */ }\r\n     public MouseWheelPre(e: MouseEventData) {\r\n        //  this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n         // console.log(\"drag\");\r\n         this.MouseWheel(e);\r\n     }\r\n}","import { NVector3 } from '../../lib';\r\nimport { GeometryBase } from './GeometryBase';\r\nexport class Collision {\r\n    geometryBase: GeometryBase;\r\n\r\n    isCollided: boolean = false;\r\n\r\n    neighborShapes: GeometryBase[] = [];\r\n\r\n    minVec: NVector3;\r\n    maxVec: NVector3;\r\n\r\n    isVisited: boolean = false;\r\n    numOrder: number = -1;\r\n\r\n    constructor(geometryBase: GeometryBase) {\r\n        this.geometryBase = geometryBase;\r\n        const r = 5;\r\n        this.minVec = new NVector3(this.geometryBase.v.x - r, this.geometryBase.v.y - r, 0);\r\n        this.maxVec = new NVector3(this.geometryBase.v.x + r, this.geometryBase.v.y + r, 0);\r\n    }\r\n    public Reset(){\r\n        this.neighborShapes = [];\r\n        this.numOrder = -1;\r\n        this.geometryBase.numVisit = 0;\r\n        this.geometryBase.isCollapse = false;\r\n        this.isCollided = false;\r\n        this.isVisited = false;\r\n    }\r\n}","import { GeometryBase } from '../Base/GeometryBase';\r\nimport { ACTIVE_UI, NVector3, distanceToXY } from '../../lib';\r\n\r\nimport { Scene } from '../../Scene';\r\n\r\nimport { Collision } from '../Base/Collision';\r\n\r\nexport interface IPoint {\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n}\r\n\r\nexport class CPoint extends GeometryBase {\r\n    \r\n    r: number = 5;\r\n    id: string;\r\n    t: number = 0.0;\r\n    color = '#00ff00';\r\n    colorHover = '#0ffff0';\r\n\r\n    collision: Collision;\r\n\r\n    constructor(scene: Scene, param: IPoint) {\r\n        super(scene, param.x, param.y);\r\n        this.type = ACTIVE_UI.point;\r\n        this.v = new NVector3(param.x, param.y, param.z);\r\n    }\r\n    public translate(x: number, y: number, long: number, lat: number) {\r\n        this.v.x = x;\r\n        this.v.y = y;\r\n        this.v.long = long;\r\n        this.v.lat = lat;\r\n    }\r\n    public isInside(x: number, y: number): boolean {\r\n        if (distanceToXY(this.v.x, this.v.y, x, y) < this.r + 3) {\r\n            this.isHover = true;\r\n            return true;\r\n        }\r\n        this.isHover = false;\r\n        return false;\r\n    }\r\n    public update(isPanning: boolean, toScreen: ( x: number, y: number) => number[] ) {\r\n        if (isPanning && this.scene.drawingEngine.projection.isCustom) {\r\n            const sv = toScreen(this.v.long, this.v.lat);\r\n            this.v.x = sv[0];\r\n            this.v.y = sv[1];\r\n        }\r\n    }\r\n    public toJson() {\r\n        return { x: this.v.x, y: this.v.y }\r\n    }\r\n    public renderPost(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n\r\n        let r = this.r + (Math.sin(this.t))\r\n        if(this.isHover) {\r\n            r += 3;\r\n            ctx.fillStyle = this.colorHover;\r\n        } else {\r\n            ctx.fillStyle = this.color;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, r  , 0.0, Math.PI * 2.0 );\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        if(this.isSelected) {\r\n            ctx.lineWidth =3;\r\n            ctx.strokeStyle = '#ffffff';\r\n            ctx.stroke();\r\n        }\r\n        \r\n        this.t += 0.06;\r\n    }\r\n\r\n}","import { ACTIVE_UI, getUUID } from '../../lib';\r\nimport { Scene } from '../../Scene';\r\nimport { Collision } from './Collision';\r\nimport { NVector3 } from '../../lib';\r\n\r\nexport class GeometryBase {\r\n    scene: Scene;\r\n    public v: NVector3;\r\n    public type: ACTIVE_UI;\r\n    public id: string = '';\r\n    numVisit: number = 0;\r\n\r\n    public isCollapse: boolean = false;\r\n\r\n    public isHidden: boolean = false;\r\n    public isRenderable: boolean = true;\r\n\r\n    public isSelected: boolean = false;\r\n    public isHover: boolean = false;\r\n    public collision: Collision;\r\n\r\n    constructor(scene: Scene, x: number, y: number) {\r\n        this.scene = scene;\r\n        this.v = new NVector3(x, y, 0);\r\n        this.id = getUUID();\r\n        \r\n        this.collision = new Collision(this);\r\n    }\r\n    public toJson() {\r\n        return { };\r\n    }\r\n    public translate(x: number, y: number, long: number, lat: number) {\r\n\r\n    }\r\n    public isInside(x: number, y: number): boolean {\r\n        return false;\r\n    }\r\n    public update(isPanning: boolean, toScreen: (x: number, y: number) => number[]) {\r\n        /* */\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        /* */\r\n    }\r\n    public renderPost(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        /* */\r\n    }\r\n}","import { COMMAND, MouseEventData } from '../../lib'\r\nimport { CommandBase } from './CommandBase';\r\nimport { ActiveCommandController } from '../';\r\nimport { CPoint } from '../../Geometry/Point';\r\nexport class CommandSelect extends CommandBase {\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n        super(activeCommandController);\r\n        this.type = COMMAND.SELECT;\r\n\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n    //     console.log('sel' , e)\r\n    }\r\n}\r\nexport class CommandPoint extends CommandBase {\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n        super(activeCommandController);\r\n        this.type = COMMAND.POINT;\r\n\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n        const p = new CPoint(this.activeCommandController.drawingEngine.scene, {x: e.x, y: e.y, z : 0})\r\n        const mv = this.activeCommandController.drawingEngine.projection.toMap(e.x, e.y);\r\n        p.v.long = mv[0];\r\n        p.v.lat = mv[1];\r\n\r\n        this.activeCommandController.drawingEngine.scene.addGeometry(p);\r\n        // console.log(this.activeCommandController.hasShift)\r\n        if(this.activeCommandController.hasShift) { return }\r\n        this.activeCommandController.drawingEngine.setCommand();\r\n    }\r\n}\r\nexport class CommandLine extends CommandBase {\r\n    constructor(activeCommandController: ActiveCommandController) {\r\n        super(activeCommandController);\r\n        this.type = COMMAND.LINE;\r\n\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n    //     console.log('line' , e)\r\n    }\r\n}","// import { MouseEventData } from '../../../../Core/EventInteraction';\r\nimport { DrawingEngine } from '../';\r\nimport { CommandBase } from './Commands/CommandBase';\r\nimport { CommandSelect, CommandPoint, CommandLine } from './Commands/CommandShape';\r\n\r\nimport { COMMAND } from '../lib'\r\n\r\nimport { fetchJson } from '../../../NJSCore/IO';\r\nimport { CPoint } from '../Geometry/Point';\r\n\r\nexport class ActiveCommandController {\r\n    drawingEngine: DrawingEngine;\r\n\r\n    \r\n    activeCommand: CommandBase;\r\n    public commands = {};\r\n\r\n    hasShift: boolean = false;\r\n    inspection: boolean = false;\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n\r\n        this.commands = {\r\n            SELECT : new CommandSelect(this),\r\n            POINT : new CommandPoint(this),\r\n            LINE : new CommandLine(this),\r\n        }\r\n\r\n        // this.commands.Line = new CommandBase(this);\r\n        // this.commands.Point = new CommandBase(this);\r\n        // this.commands.Line = new CommandBase(this);\r\n\r\n        this.activeCommand = this.commands[COMMAND.SELECT];\r\n    }\r\n    public setCommander(commander: string) {\r\n        switch (commander) {\r\n            case 'save':\r\n            //     console.log('save!!');\r\n                break;\r\n            case 'load':\r\n            //     console.log('load!!');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // console.log(commander);\r\n        switch (commander as COMMAND) {\r\n            case COMMAND.SELECT:\r\n                // console.log(commander);\r\n                this.activeCommand = this.commands[commander];\r\n                // console.log(this.activeCommand);\r\n                break;\r\n            case COMMAND.POINT:\r\n                // console.log(commander);\r\n                this.activeCommand = this.commands[commander];\r\n                // console.log(this.activeCommand);\r\n                break;\r\n            case COMMAND.LINE:\r\n                // console.log(commander);\r\n                this.activeCommand = this.commands[commander];\r\n                // console.log(this.activeCommand);\r\n                break;\r\n            // case 'point':\r\n            //     this.activeCommand = this.commands[commander];\r\n            //     break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    public apiCall(command: string): any {\r\n\r\n\r\n        switch (command ) {\r\n            case 'getSelectedCPoint':\r\n                return this.drawingEngine.geometryCommon.getSelCPoint();\r\n            case 'importZipData':\r\n                return this.popZipData();\r\n            case 'importClustering':\r\n                return this.drawingEngine.addon.InitClustering();\r\n            case 'importClusteringCollision':\r\n                return this.drawingEngine.addon.InitClusteringCollision();\r\n\r\n            case 'save':\r\n                return this.drawingEngine.geometryCommon.toJson();\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    public async popZipData (){\r\n                \r\n        const json = await fetchJson('https://raw.githubusercontent.com/NamjuLee/data/master/US/zip.json');\r\n    //     console.log(json);\r\n        let count = 0;\r\n        for(let i of json['pos']) {\r\n            // console.log(i);\r\n\r\n            const p = this.greatePointByGeoPos(i[0], i[1]);\r\n            p.t += Math.random() * 10;\r\n            if(count++ > 2000) { return; }\r\n        }\r\n    \r\n\r\n    }\r\n    public greatePointByGeoPos(long: number, lat: number) {\r\n        const spos = this.drawingEngine.projection.toScreen(long, lat);\r\n        const p = new CPoint(this.drawingEngine.scene, {x: spos[0], y: spos[1], z: 0 });\r\n        p.v.long = long;\r\n        p.v.lat = lat;\r\n        this.drawingEngine.scene.addGeometry(p);\r\n        return p;\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nexport class Projection{\r\n    drawingEngine: DrawingEngine;\r\n    public isCustom: boolean = false;\r\n    constructor(drawingEngine: DrawingEngine){\r\n        this.drawingEngine = drawingEngine;\r\n\r\n    }\r\n    public updateProjection(projection: { toMap: (x: number, y: number) => number[] , toScreen: (x: number, y: number) => number[]} ){\r\n        this.toMap = projection.toMap;\r\n        this.toScreen = projection.toScreen;\r\n        this.isCustom = true;\r\n    }\r\n    public toScreen(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n    public toMap(x: number, y: number){\r\n        return [x, y];\r\n    }\r\n}","import { DrawingEngine } from '../';\r\n// import firebase from 'firebase';\r\n\r\nexport class IO {\r\n    public drawingEngine: DrawingEngine;\r\n\r\n\r\n    firebaseConfig = {\r\n        apiKey: \"AIzaSyA1yKg85WGZoshbk8xR23cXr3SwpqXVgIc\",\r\n        authDomain: \"njs-data.firebaseapp.com\",\r\n        projectId: \"njs-data\",\r\n        storageBucket: \"njs-data.appspot.com\",\r\n        messagingSenderId: \"635991152770\",\r\n        appId: \"1:635991152770:web:722f5356e0d14cea50fc9b\"\r\n      };\r\n\r\n    // ref: firebase.database.Reference;\r\n\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n\r\n        // let fbdatabase = firebase.initializeApp(this.firebaseConfig);\r\n        // console.log('fbdb', fbdatabase);\r\n    \r\n        // // let db = fbdatabase.database();\r\n        // // this.ref = db.ref('drawingEngine');\r\n        // // console.log(this.ref);\r\n    \r\n        // // let data = {\r\n        // //     name:'mlData',\r\n        // //     score: '120'\r\n        // // }\r\n        // // this.sendData(data);\r\n\r\n        // // this.ref.on('value', this.getData, this.getError);\r\n    }\r\n    public sendData(data: {}) {\r\n        // let result = this.ref.push(data);\r\n        // console.log(result.key);\r\n    }\r\n\r\n    public getData = (d: any) => {\r\n        let data = d.val();\r\n    //     console.log('get data', data);\r\n        \r\n        for(let i in data) {\r\n        //     console.log(i, data[i]);\r\n        }\r\n    }\r\n    public getError = (d: any) => {\r\n        console.error(d);\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nimport { GeometryBase } from './Base/GeometryBase';\r\nexport class GeometryCommon{\r\n    drawingEngine: DrawingEngine;\r\n    constructor(drawingEngine: DrawingEngine){\r\n        this.drawingEngine = drawingEngine;\r\n\r\n    }\r\n    public find(x: number, y: number): GeometryBase | undefined {\r\n        for (let key in this.drawingEngine.scene.geoDict) {\r\n            if (this.drawingEngine.scene.geoDict[key].isInside(x, y)) {\r\n                return this.drawingEngine.scene.geoDict[key];\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n    public resetSelections(){\r\n        for (let i = 0 ; i < this.drawingEngine.scene.geometryList.length; ++i) {\r\n            this.drawingEngine.scene.geometryList[i].isSelected = false;\r\n        }\r\n    }\r\n    public getAllVecFromCPoint(){\r\n        const vs = [];\r\n        for (let i = 0 ; i < this.drawingEngine.scene.pointList.length; ++i) {\r\n            vs.push(this.drawingEngine.scene.pointList[i].v);\r\n        }\r\n        return vs;\r\n    }\r\n    public getAllFromCPoint(){\r\n        const vs = [];\r\n        for (let i = 0 ; i < this.drawingEngine.scene.pointList.length; ++i) {\r\n            vs.push(this.drawingEngine.scene.pointList[i]);\r\n        }\r\n        return vs;\r\n    }\r\n    public getSelCPoint(){\r\n        const vs = [];\r\n        for (let i = 0 ; i < this.drawingEngine.scene.pointList.length; ++i) {\r\n            if (this.drawingEngine.scene.pointList[i].isSelected) {\r\n                vs.push(this.drawingEngine.scene.pointList[i]);\r\n            }\r\n        }\r\n        return vs;\r\n    }\r\n    public updateHover(x: number, y: number) {\r\n        for (let i = 0 ; i < this.drawingEngine.scene.geometryList.length; ++i) {\r\n            this.drawingEngine.scene.geometryList[i].isInside(x, y)\r\n        }\r\n    }\r\n    public toJson() {\r\n        const data = [];\r\n        for(let i = 0 ; i < this.drawingEngine.scene.geometryList.length; ++i) {\r\n            data.push(this.drawingEngine.scene.geometryList[i].toJson());\r\n        }\r\n        return data;\r\n    }\r\n}","import { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\n// import { GeometryBase } from '../../../DrawingEngine/Geometry/Base';\r\n// import { GTYPE } from '../../../../../../../lib/Enumeration';\r\nimport { distance, NVector3 } from '../../Clustering/lib';\r\n// import { NVector3 } from '../../../../../../../lib/NVector3';\r\nimport { Renderer } from './Renderer';\r\n\r\nexport class PointCluster {\r\n    renderer: Renderer;\r\n    points: CPoint[];\r\n    r0: number = 32 * 0.5;\r\n    r1: number = 48 * 0.5;\r\n    isHover: boolean = false;\r\n    isVisited: boolean = false;\r\n    boundingBoxMin: NVector3 = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n    boundingBoxMax: NVector3 = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n    minVec: NVector3;\r\n    maxVec: NVector3;\r\n    vec = new NVector3(0, 0, 0);\r\n    private t: number = 1.0;\r\n    private GridResolution = 85;\r\n    private tempVecGridList: NVector3[] = [];\r\n    private tempGeoGridList: CPoint[][][] = [];\r\n\r\n    constructor(renderer: Renderer, geometries: CPoint[]) {\r\n        this.renderer = renderer;\r\n        this.points = geometries;\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vec.x += this.points[i].v.x;\r\n            this.vec.y += this.points[i].v.y;\r\n            this.UpdateBoundingBox(this.points[i].v);\r\n        }\r\n        this.vec.x /= this.points.length;\r\n        this.vec.y /= this.points.length;\r\n        this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n        this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n        // for(let i = 0; i < this.geometries.length; ++i) {\r\n        // this.geometries[i].isAniEasing = true;\r\n        // this.geometries[i].tVec = this.vec;\r\n        // }\r\n    }\r\n    public IsInside(m: NVector3) {\r\n        if(distance(this.vec, m ) < this.r1) {\r\n            this.isHover = true;\r\n            // this.points[0].scene.annotationInstance.activeCommandController.activeMouseCursor.SetActiveCursorHovering();\r\n            // this.points[0].scene.annotationInstance.renderer.needFocus = true;\r\n            // this.points[0].scene.annotationInstance.activeCommandController.acProperties.hasHovering = true;\r\n            return true;\r\n        } else {\r\n            this.isHover = false;\r\n            return false;\r\n        }\r\n    }\r\n    public AddPost(geo: CPoint) {\r\n        // @ts-ignore\r\n        if(this.points.includes(geo)) { return; }\r\n        this.points.push(geo);\r\n        this.vec = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n        this.vec.x += this.points[i].v.x;\r\n        this.vec.y += this.points[i].v.y;\r\n        this.UpdateBoundingBox(this.points[i].v);\r\n        }\r\n        this.vec.x /= this.points.length;\r\n        this.vec.y /= this.points.length;\r\n        this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n        this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n    }\r\n    public NeedDecompose() {\r\n        if (this.boundingBoxMax.x - this.boundingBoxMin.x > this.GridResolution) { return true; }\r\n        if (this.boundingBoxMax.y - this.boundingBoxMin.y > this.GridResolution) { return true; }\r\n        return false;\r\n    }\r\n    public Split() {\r\n        this.DeepRemove();\r\n        const xNum = (this.boundingBoxMax.x - this.boundingBoxMin.x) / this.GridResolution < 1 ? 1: (this.boundingBoxMax.x - this.boundingBoxMin.x) / this.GridResolution;\r\n        const yNum = (this.boundingBoxMax.y - this.boundingBoxMin.y) / this.GridResolution < 1 ? 1: (this.boundingBoxMax.y - this.boundingBoxMin.y) / this.GridResolution;\r\n        const grid = this.buildGrid(xNum, yNum);\r\n        this.BuildSubCluster(grid, xNum, yNum);\r\n    }\r\n    public Merge(other: PointCluster){\r\n        this.points.concat(other.points);\r\n        this.vec = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vec.x += this.points[i].v.x;\r\n            this.vec.y += this.points[i].v.y;\r\n            this.UpdateBoundingBox(this.points[i].v);\r\n        }\r\n        this.vec.x /= this.points.length;\r\n        this.vec.y /= this.points.length;\r\n        this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n        this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n        other.DeepRemove();\r\n    }\r\n    public DeepRemove(){\r\n        this.renderer.RemoveCluster(this);\r\n    }\r\n    public buildGrid(xNum: number, yNum: number) {\r\n        this.tempGeoGridList = []\r\n        let gridList = [];;\r\n        for(let y = 0; y < yNum; ++y) {\r\n            const theY = this.boundingBoxMin.y + y * this.GridResolution;\r\n            const geoMat: CPoint[][] = [];\r\n            for(let x = 0; x < xNum; ++x) {\r\n                const theX = this.boundingBoxMin.x + x * this.GridResolution;\r\n                gridList.push(new NVector3(theX, theY));\r\n                const geoList: CPoint[]= [];\r\n                geoMat.push(geoList);\r\n            }\r\n            this.tempGeoGridList.push(geoMat);\r\n        }\r\n        this.tempVecGridList = gridList;\r\n        return gridList;\r\n    }\r\n    public BuildSubCluster(vs: NVector3[], xNum: number, yNum: number){\r\n        for(let i = 0 ; i < this.points.length; ++i) {\r\n            this.GetCellAtPoint(this.points[i].v, xNum, yNum).push(this.points[i]);\r\n        }\r\n        for(let y = 0; y < this.tempGeoGridList.length; ++y) {\r\n            for(let x = 0; x < this.tempGeoGridList[y].length; ++x) {\r\n            if(this.tempGeoGridList[y][x]) {\r\n                if (this.tempGeoGridList[y][x].length === 1) {\r\n                    this.tempGeoGridList[y][x][0].collision.Reset();\r\n                } else if(this.tempGeoGridList[y][x].length > 1) {\r\n                    this.renderer.clustersRPoint.push(new PointCluster(this.renderer, this.tempGeoGridList[y][x]));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private GetCellAtPoint(tv: NVector3, xNum: number, yNum: number) {\r\n        let dp: NVector3 = new NVector3(tv.x - this.boundingBoxMin.x, tv.y - this.boundingBoxMin.y);\r\n        // let dp: NVector3 = new NVector3(this.boundingBoxMin.x - tv.x, this.boundingBoxMin.y - tv.y);\r\n        let i: number = Math.round(dp.x / this.GridResolution);\r\n        let j: number = Math.round(dp.y / this.GridResolution);\r\n        if (i >= xNum) { i = xNum - 1; }\r\n        if (j >= yNum) { j = yNum - 1; }\r\n        if (i < 0) { i = 0; }\r\n        if (j < 0) { j = 0; }\r\n        i = Math.round(i);\r\n        j = Math.round(j);\r\n        // console.log(j, i);\r\n        // console.log(this.tempGeoGridList)\r\n        return this.tempGeoGridList[j][i];\r\n    }\r\n    public Draw(ctx: CanvasRenderingContext2D, renderer: Renderer, isPanning: boolean) {\r\n        this.UpdateTimeer();\r\n\r\n        if (isPanning) {\r\n            this.vec = new NVector3(0, 0, 0);\r\n            this.boundingBoxMin = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n            this.boundingBoxMax = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.vec.x += this.points[i].v.x;\r\n                this.vec.y += this.points[i].v.y;\r\n                this.UpdateBoundingBox(this.points[i].v);\r\n            }\r\n            this.vec.x /= this.points.length;\r\n            this.vec.y /= this.points.length;\r\n            this.minVec = new NVector3(this.vec.x - this.r1, this.vec.y - this.r1, 0);\r\n            this.maxVec = new NVector3(this.vec.x + this.r1, this.vec.y + this.r1, 0);\r\n            // this.vec.y -= this.r * 0.5 // offset the ghost center along y\r\n        }\r\n\r\n        // renderer.optimizer.optimizer.optimizer.renderer.draw.shape.cluster.DrawingPresetClustering(ctx, this.points, this.vec, this.r0, this.r1, this.isHover, this.t);\r\n        \r\n        if(renderer.optimizer.inspection) {\r\n            ctx.beginPath();\r\n            ctx.rect(this.minVec.x, this.minVec.y, this.maxVec.x - this.minVec.x, this.maxVec.y - this.minVec.y)\r\n            ctx.closePath();\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\r\n            ctx.fill();\r\n            ctx.lineWidth = 0.5;\r\n            ctx.beginPath();\r\n            ctx.rect(this.boundingBoxMin.x, this.boundingBoxMin.y, this.boundingBoxMax.x - this.boundingBoxMin.x, this.boundingBoxMax.y - this.boundingBoxMin.y)\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n            if (this.tempVecGridList.length > 0) {\r\n                for(let i = 0 ; i < this.tempVecGridList.length; ++i) {\r\n                    ctx.beginPath();\r\n                    ctx.rect(this.tempVecGridList[i].x, this.tempVecGridList[i].y, this.GridResolution, this.GridResolution);\r\n                    ctx.closePath();\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    private UpdateTimeer(){\r\n        if (true ) {\r\n            this.t -= 0.1; // this.points[0].scene.annotationInstance.customization.themeCurrent.properties.timeTransitionA;\r\n            this.t = this.t < 0.4 ? 0.4 : this.t;\r\n        } else {\r\n            this.t += 0.1; // this.points[0].scene.annotationInstance.customization.themeCurrent.properties.timeTransitionB;\r\n            this.t = this.t > 1 ? 1 : this.t;\r\n        }\r\n    }\r\n    private UpdateBoundingBox(vec: NVector3){\r\n        this.boundingBoxMin.x = vec.x < this.boundingBoxMin.x ? vec.x : this.boundingBoxMin.x;\r\n        this.boundingBoxMin.y = vec.y < this.boundingBoxMin.y ? vec.y : this.boundingBoxMin.y;\r\n        this.boundingBoxMax.x = vec.x > this.boundingBoxMax.x ? vec.x : this.boundingBoxMax.x;\r\n        this.boundingBoxMax.y = vec.y > this.boundingBoxMax.y ? vec.y : this.boundingBoxMax.y;\r\n    }\r\n}","import { PointCluster } from './PointCluster';\r\nimport { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\nimport { ClusteringCollsionBasedGraph } from '../';\r\n\r\nexport class Renderer {\r\n\r\n    clustersRPoint: PointCluster[] = [];\r\n    optimizer: ClusteringCollsionBasedGraph;\r\n    constructor(optimizer: ClusteringCollsionBasedGraph) {\r\n        this.optimizer = optimizer;\r\n    }\r\n    public InitGeometry(){\r\n        this.clustersRPoint = [];\r\n    }\r\n    public addClusterByGeometries(geo: CPoint[][] ) {\r\n        for(let i = 0; i < geo.length; ++i) {\r\n            this.clustersRPoint.push(new PointCluster(this, geo[i]));\r\n        }\r\n    }\r\n    public RemoveCluster(cluster: PointCluster ){\r\n        this.clustersRPoint.splice(this.clustersRPoint.indexOf(cluster), 1);\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D, isStationary: boolean): void {\r\n    //     console.log(this.clustersRPoint.length);\r\n        if (this.clustersRPoint.length > 0) {\r\n            for(let i = 0 ; i < this.clustersRPoint.length; ++i) {\r\n                this.clustersRPoint[i].Draw(ctx, this, isStationary);\r\n            }\r\n        }\r\n\r\n    }\r\n}","import { CPoint } from '../../../DrawingEngine/Geometry/Point';\r\n// import { GeometryBase } from '../../../DrawingEngine/Geometry/Base/GeometryBase';\r\nimport { PointCluster } from './PointCluster';\r\nimport { ClusteringCollsionBasedGraph } from '..';\r\n\r\nimport { distance, AABBintersect2D } from '../../Clustering/lib';\r\n\r\nexport class GraphClustering {\r\n\r\n    optimizer: ClusteringCollsionBasedGraph;\r\n    pointList: CPoint[] = []\r\n    // listNPoint: CPoint[] = []\r\n\r\n    constructor(optimizer: ClusteringCollsionBasedGraph) {\r\n        this.optimizer = optimizer;\r\n    }\r\n\r\n    public update(): void {\r\n        this.updatePoints();\r\n\r\n        // 1: build connectivities based on collision\r\n        // this.listNPoint = this.BuildConnectivity(this.listNPoint);\r\n        this.pointList = this.BuildConnectivity(this.pointList);\r\n        this.initGeometry();\r\n        // 2: construct clusters graph based on the connectivities\r\n        const geoList = this.buildGraph(this.pointList);\r\n\r\n        if (geoList !== undefined){\r\n            this.addClusterByGeometries(geoList);\r\n            // // 3: recursive checking for the collision while repositioning clusters\r\n            this.PostUpdateCollisionBasedonGraph();\r\n\r\n            const graphcs = this.NeedDecompose();\r\n            if (graphcs.length > 0) {\r\n                // 4: tessellate big clusters based on a resolution\r\n                this.SplitClusters(graphcs);\r\n                // 5: post-process for merging based on a tolerance\r\n                this.PostMergeCluster();\r\n            }\r\n        }\r\n    }\r\n    public initGeometry(){\r\n        this.optimizer.renderer.InitGeometry();\r\n    }\r\n    public addClusterByGeometries(outGraphList: CPoint[][] ){\r\n        this.optimizer.renderer.addClusterByGeometries(outGraphList);\r\n    }\r\n    private updatePoints() {\r\n        this.pointList = [];\r\n\r\n        for(let i = 0; i < this.optimizer.points.length; ++i) {\r\n            if(this.optimizer.points[i].isHidden ||\r\n                !this.optimizer.points[i].isRenderable ){\r\n                continue\r\n            } else {\r\n                const pt = this.optimizer.points[i];\r\n                pt.collision.Reset();\r\n                this.pointList.push(pt)\r\n            }\r\n        }\r\n\r\n    }\r\n    private BuildConnectivity(listPoints: CPoint[]) {\r\n        for(let i = 0; i < listPoints.length; ++i) {\r\n            const pt = listPoints[i];\r\n            for(let j = i + 1 ; j < listPoints.length; ++j) {\r\n                const other = listPoints[j];\r\n                if (!other.isCollapse && other !== pt && AABBintersect2D([pt.collision.minVec, pt.collision.maxVec], [other.collision.minVec, other.collision.maxVec])) {\r\n                    pt.collision.isCollided = true;\r\n                    pt.isCollapse = true;\r\n                    pt.numVisit = 0;\r\n                    pt.collision.neighborShapes.push(other);\r\n                    other.collision.isCollided = true;\r\n                    other.isCollapse = true;\r\n                    other.numVisit = 0;\r\n                    other.collision.neighborShapes.push(pt);\r\n                    // other.collision.neighborShapes.push(pt);\r\n                    // pt.collision.numOrder = numOrder++;\r\n                    // break;\r\n                }\r\n            }\r\n        }\r\n        return listPoints;\r\n    }\r\n    private buildGraph(listPoints: CPoint[]) {\r\n        let outList: CPoint[][] = [];\r\n        for(let i = 0; i < listPoints.length; ++i) {\r\n            let ptList: CPoint[] = [];\r\n            let queue = [listPoints[i]];\r\n            queue[0].collision.isVisited = true;\r\n            ptList.push(queue[0]);\r\n            let safeguard = 0;\r\n            let current = undefined;\r\n            while( (current = queue.shift()) !== undefined ) {\r\n                for(let i = 0; i < current.collision.neighborShapes.length; ++i) {\r\n                    if(!current.collision.neighborShapes[i].collision.isVisited) {\r\n                        current.collision.neighborShapes[i].collision.isVisited = true;\r\n                        queue.push(current.collision.neighborShapes[i] as CPoint);\r\n                        ptList.push(current.collision.neighborShapes[i] as CPoint);\r\n                    }\r\n                }\r\n                if(safeguard++ > 1000) { console.debug('fail to optimize'); return; }\r\n            }\r\n            if (ptList.length > 1) {\r\n                outList.push(ptList);\r\n            }\r\n        }\r\n        return outList;\r\n    }\r\n    public PostUpdateCollisionBasedonGraph() {\r\n        // for(let i = 0; i < this.optimizer.renderer.clustersNPoint.length; ++i) {\r\n        //     this.UpdateByQueue(this.optimizer.renderer.clustersNPoint[i], this.listNPoint);\r\n        // }\r\n        for(let i = 0; i < this.optimizer.renderer.clustersRPoint.length; ++i) {\r\n            this.UpdateByQueue(this.optimizer.renderer.clustersRPoint[i], this.pointList);\r\n        }\r\n    }\r\n    private UpdateByQueue(cluster: PointCluster, geometries: CPoint[]) {\r\n        let remain = 0;\r\n        const queue = [...geometries]\r\n        while(queue.length) {\r\n            const geo = queue.shift();\r\n\r\n            if (geo) {\r\n                // console.log(queue.length);\r\n                // safeguard and performance optimization\r\n                if (geo.numVisit > 100) { geo.numVisit = 0; break; }\r\n                if (queue.length === 0) {\r\n                    if(geometries.length < remain++ ) { break; }\r\n                }\r\n                // end safeguard and performance optimization\r\n                if (!geo.collision.isCollided) {\r\n                    if(AABBintersect2D([geo.collision.minVec, geo.collision.maxVec], [cluster.minVec, cluster.maxVec]) ) {\r\n                        geo.collision.isCollided = true;\r\n                        geo.isCollapse = true;\r\n                        geo.numVisit = 0;\r\n                        cluster.AddPost(geo);\r\n                    } else {\r\n                        geo.numVisit++;\r\n                        queue.push(geo);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private NeedDecompose(){\r\n        const clusterGraph = [];\r\n\r\n        for(let i = 0; i < this.optimizer.renderer.clustersRPoint.length; ++i) {\r\n            if(this.optimizer.renderer.clustersRPoint[i].NeedDecompose()) {\r\n                clusterGraph.push(this.optimizer.renderer.clustersRPoint[i]);\r\n            }\r\n        }\r\n        return clusterGraph;\r\n    }\r\n    private SplitClusters(clusters: PointCluster[]) {\r\n        for(let i = 0; i < clusters.length; ++i) {\r\n            clusters[i].Split();\r\n        }\r\n    }\r\n    private PostMergeCluster(){\r\n        this.PostMergeClusterCompute(this.optimizer.renderer.clustersRPoint);\r\n    }\r\n    private PostMergeClusterCompute(clusters: PointCluster[]){\r\n        for(let i = 0; i < clusters.length - 1; ++i) {\r\n            const cluster = clusters[i];\r\n            for(let j = i + 1; j < clusters.length; ++j) {\r\n                const other = clusters[j]\r\n                if(!other.isVisited) {\r\n                    if(distance(cluster.vec, other.vec ) < cluster.r1 + 20) {\r\n                        other.isVisited = true;\r\n                        cluster.Merge(other);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { NVector3 } from '../Clustering/lib';\r\n\r\nimport { Renderer } from './Core/Renderer';\r\nimport { GraphClustering } from './Core/GraphClustering';\r\nimport { CPoint } from '../../DrawingEngine/Geometry/Point';\r\n\r\nexport class ClusteringCollsionBasedGraph {\r\n\r\n    graphClustering: GraphClustering;\r\n    renderer: Renderer;\r\n\r\n    mv: NVector3 = new NVector3(0, 0);\r\n\r\n    inspection: boolean = true;\r\n\r\n    points: CPoint[] = [];\r\n\r\n    constructor() {\r\n        this.graphClustering = new GraphClustering(this);\r\n        this.renderer = new Renderer(this);\r\n    }\r\n    public push(vs: CPoint[]) {\r\n        this.points = vs;\r\n        this.update();\r\n    }\r\n    public mouseInteraction(x: number, y: number){\r\n        // this.mv = this.optimizer.getCellAtPoint(new NVector3(x, y)).vec;\r\n    }\r\n    public update(): void {\r\n        this.graphClustering.update();\r\n        // console.log(this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming);\r\n        // if (this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming) {\r\n        // this.initGrid(width, height);\r\n        // }\r\n    //     console.log(this);\r\n    }\r\n    public getCellAtPoint(dp: NVector3) {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isStationary: boolean) {\r\n        this.renderer.Render(ctx, isStationary)\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nimport { MouseEventData, MOUSE_TYPE } from '../lib';\r\nimport { Clustering, OPTIMIZER } from '../../Addon/Clustering/';\r\nimport { ClusteringCollsionBasedGraph } from '../../Addon/ClusteringCollsionBasedGraph';\r\n\r\nexport class Addon {\r\n    drawingEngine: DrawingEngine;\r\n    clustering: Clustering | undefined = undefined;\r\n    clusteringCollsionBasedGraph: ClusteringCollsionBasedGraph | undefined = undefined;\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n    }\r\n    async InitClustering() {\r\n        return import('../../Addon/Clustering/').then(({ Clustering }) => {\r\n\r\n            const  vs = this.drawingEngine.geometryCommon.getAllVecFromCPoint();\r\n\r\n            this.clustering = new Clustering(OPTIMIZER.GRID);\r\n            this.clustering.optimizer.rx = 9;\r\n            this.clustering.optimizer.ry = 5;\r\n            this.clustering.push(vs , this.drawingEngine.renderer.ctx.canvas.width, this.drawingEngine.renderer.ctx.canvas.height);\r\n\r\n\r\n        }).catch(err => {\r\n        //     console.log('Stop loading clustering Addon.'); console.log(err);\r\n        }); \r\n    }\r\n    async InitClusteringCollision() {\r\n        return import('../../Addon/Clustering/').then(({ Clustering }) => {\r\n\r\n            const  vs = this.drawingEngine.geometryCommon.getAllFromCPoint();\r\n\r\n            this.clusteringCollsionBasedGraph = new ClusteringCollsionBasedGraph();\r\n            // this.clusteringCollsionBasedGraph.optimizer.rx = 9;\r\n            // this.clusteringCollsionBasedGraph.optimizer.ry = 5;\r\n            this.clusteringCollsionBasedGraph.push(vs);\r\n\r\n\r\n        }).catch(err => {\r\n        //     console.log('Stop loading clustering Addon.'); console.log(err);\r\n        }); \r\n    }\r\n\r\n    \r\n    public mouseInteraction(e: MouseEventData) {\r\n        switch (e.type) {\r\n            case MOUSE_TYPE.LEFT:\r\n                break;\r\n            case MOUSE_TYPE.MIDDLE:\r\n                break;\r\n            case MOUSE_TYPE.RIGHT:\r\n                break;\r\n            case MOUSE_TYPE.DOUBLE:\r\n                break;\r\n            case MOUSE_TYPE.MOVE:\r\n                this.clustering?.mouseInteraction(e.x, e.y);\r\n                break;\r\n            case MOUSE_TYPE.DRAG:\r\n                break;\r\n            case MOUSE_TYPE.DOWN:\r\n                break;\r\n            case MOUSE_TYPE.UP:\r\n                break;\r\n            case MOUSE_TYPE.WHEEL:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.clustering?.render(ctx, isPanning, this.drawingEngine.renderer.ctx.canvas.width, this.drawingEngine.renderer.ctx.canvas.height);\r\n        // this.clusteringCollsionBasedGraph?.render(ctx, isPanning, this.drawingEngine.renderer.ctx.canvas.width, this.drawingEngine.renderer.ctx.canvas.height);\r\n        this.clusteringCollsionBasedGraph?.render(ctx, isPanning);\r\n    }\r\n\r\n}","import { DrawingEngine } from '../'\r\n\r\nexport class Customization {\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Renderer {\r\n\r\n    public drawingEngine: DrawingEngine;\r\n\r\n    private lastCalledTime: number = Date.now();\r\n    private delta: number = 1;\r\n    public fps: number = 30;\r\n\r\n    public ctx: CanvasRenderingContext2D;\r\n\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.ctx = ctx;\r\n        this.update(isPanning);\r\n        this.renderPost(ctx, isPanning);\r\n     }\r\n    public update( isPanning: boolean) {\r\n        for (let key in this.drawingEngine.scene.geoDict) {\r\n            this.drawingEngine.scene.geoDict[key].update( isPanning, this.drawingEngine.projection.toScreen );\r\n        }\r\n     }\r\n    public renderPost(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        for (let key in this.drawingEngine.scene.geoDict) {\r\n            this.drawingEngine.scene.geoDict[key].renderPost(ctx, isPanning );\r\n        }\r\n        this.ComputeFPS();\r\n    }\r\n    private ComputeFPS(){\r\n        this.delta = (Date.now() - this.lastCalledTime )/1000;\r\n        this.lastCalledTime = Date.now();\r\n        this.fps = 1 / this.delta;\r\n    }\r\n}","import { DrawingEngine } from '../';\r\nimport { ACTIVE_UI } from '../lib';\r\nimport { GeometryBase } from '../Geometry/Base/GeometryBase';\r\nimport { CPoint } from '../Geometry/Point';\r\n\r\nexport class Scene {\r\n    public drawingEngine: DrawingEngine;\r\n    \r\n    public _capture: GeometryBase | undefined = undefined; \r\n    public geometryList : GeometryBase[] = [];\r\n    public pointList : CPoint[] = [];\r\n\r\n    public geoDict: {} = {};\r\n    constructor(drawingEngine: DrawingEngine) {\r\n        this.drawingEngine = drawingEngine;\r\n    }\r\n    public get capture(): GeometryBase | undefined {\r\n        return this._capture;\r\n    }\r\n    public set capture(g: GeometryBase | undefined) {\r\n        if (g) {\r\n            this.drawingEngine.ableToPan = false;\r\n        } else {\r\n            this.drawingEngine.ableToPan = true;\r\n        }\r\n        // console.log(g);\r\n        this._capture = g;\r\n    }\r\n    public addGeometry(g: GeometryBase) {\r\n        this.geoDict[g.id] = g;\r\n        this.geometryList.push(g);\r\n        if(g.type === ACTIVE_UI.point) {\r\n            this.pointList.push(g as CPoint);\r\n        }\r\n    }\r\n\r\n}","\r\nimport { MouseEventData } from './lib';\r\n\r\nimport { ActiveCommandController } from './ActiveCommand';\r\nimport { Projection } from './Projection';\r\nimport { IO } from './IO/IO';\r\nimport { GeometryCommon } from './Geometry/GeometryCommon';\r\nimport { Addon } from './Addon';\r\nimport { Renderer } from './Renderer';\r\nimport { Scene } from './Scene';\r\nimport { KeyboardEventData } from '../../NJSCore';\r\n\r\n// import { tensor2d, tidy, Tensor2D } from '@tensorflow/tfjs';\r\n// import * as tf from '@tensorflow/tfjs';\r\n\r\n\r\nexport class DrawingEngine {\r\n\r\n    public activeCommand: ActiveCommandController;\r\n    public projection: Projection;\r\n    public geometryCommon: GeometryCommon;\r\n    public scene: Scene;\r\n    public addon: Addon;\r\n    public renderer: Renderer;\r\n    public io: IO;\r\n\r\n    _ableToPan: boolean = true;\r\n\r\n    constructor() {\r\n        this.io = new IO(this);\r\n        this.addon = new Addon(this);\r\n        this.projection = new Projection(this);\r\n        this.geometryCommon = new GeometryCommon(this);\r\n        this.activeCommand = new ActiveCommandController(this);\r\n        this.scene = new Scene(this);\r\n        this.renderer = new Renderer(this);\r\n    }\r\n\r\n    public apiCall(command: string): any {\r\n        return this.activeCommand.apiCall(command);\r\n    }\r\n    public updateProjection(projection: { toMap: (x: number, y: number) => number[] , toScreen: (x: number, y: number) => number[]} ){\r\n        this.projection.updateProjection(projection);\r\n    }\r\n    public setCommand(command: string = 'SELECT') {\r\n    //     console.log(command);\r\n        this.activeCommand.setCommander(command);\r\n    }\r\n    public mouseEvent(m: MouseEventData){\r\n        this.activeCommand.activeCommand.mouseEvent(m);\r\n\r\n        this.addon.mouseInteraction(m);\r\n    }\r\n    public keyEvent(m: KeyboardEventData){\r\n        // this.activeCommand.activeCommand.k(m);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isPanning: boolean) {\r\n        this.renderer.render(ctx, isPanning);\r\n\r\n        this.addon.render(ctx, isPanning);\r\n    }\r\n    public set ableToPan(v: boolean) {\r\n        this._ableToPan = v;\r\n        this.bindAbleToPan(v);\r\n        // this.definition.app.ableToPan = v;\r\n    }\r\n    public bindAbleToPan(v: boolean){\r\n\r\n    }\r\n}","import { NWindow } from '../../View/NWindow/NWindow';\r\nimport { JSAPIEnv } from '../../Environment/JSAPI';\r\n\r\nimport { NNAEngineV3 } from '../../NJSEngine/NNAEngineV3';\r\nimport { DrawingEngine } from '../../NJSEngine/DrawingEngine';\r\nimport { APP, KeyboardEventData, MouseEventData } from '../../NJSCore';\r\n\r\nimport { NJSSandbox } from '../';\r\n\r\nexport class BindingNNA {\r\n    njsSandbox: NJSSandbox;\r\n    drawingEngine: DrawingEngine;\r\n    nna: NNAEngineV3;\r\n    constructor(njsSandbox: NJSSandbox) {\r\n        this.njsSandbox = njsSandbox;\r\n    }\r\n    public async initBinding() {\r\n        // console.log(this);\r\n        this.njsSandbox.win = new NWindow(this.njsSandbox.div, 'NNA Engine V4 by NJSTUDIO', 1200, 600);\r\n\r\n        this.njsSandbox.env = await new JSAPIEnv(this.njsSandbox.win.getContext());\r\n\r\n        this.drawingEngine = new DrawingEngine();\r\n         this.drawingEngine.updateProjection({ \r\n            toMap: (x: number, y: number) => this.njsSandbox.env.projection.ToMap(x, y), \r\n            toScreen: (x: number, y: number) => this.njsSandbox.env.projection.ToScreen(x, y)\r\n        });\r\n         this.drawingEngine.bindAbleToPan = (v: boolean) => {\r\n            this.njsSandbox.env.ableToPan = v;\r\n            // this.nna\r\n        }\r\n\r\n        this.njsSandbox.env.appendEventListener( { \r\n            mouse: (m: MouseEventData) =>  this.drawingEngine.mouseEvent(m), \r\n            keyboard: (k: KeyboardEventData) =>  this.drawingEngine.keyEvent(k) \r\n        });\r\n\r\n        \r\n        this.nna = new NNAEngineV3();\r\n        this.nna.updateProjection({ \r\n            toMap: (x: number, y: number) => this.njsSandbox.env.projection.ToMap(x, y), \r\n            toScreen: (x: number, y: number) => this.njsSandbox.env.projection.ToScreen(x, y)\r\n        });\r\n        this.njsSandbox.env.appendEventListener( { \r\n            mouse: (m: MouseEventData) => this.nna.mouseEvent(m), \r\n            keyboard: (k: KeyboardEventData) => this.nna.keyEvent(k) \r\n        });\r\n\r\n        // ........................ append renderer \r\n        this.njsSandbox.env.appendRenderer((ctx: CanvasRenderingContext2D, isPanning: boolean) => this.nna.render(ctx, isPanning));\r\n        this.njsSandbox.env.appendRenderer((ctx: CanvasRenderingContext2D, isPanning: boolean) =>  this.drawingEngine.render(ctx, isPanning));\r\n\r\n\r\n        // ........................ append left menu \r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'save',\r\n            callBack: () =>  this.drawingEngine.setCommand('save')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'load',\r\n            callBack: () =>  this.drawingEngine.setCommand('load')\r\n        });\r\n        \r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Select',\r\n            callBack: () =>  this.drawingEngine.setCommand('SELECT')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Point',\r\n            callBack: () =>  this.drawingEngine.setCommand('POINT')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Line',\r\n            callBack: () =>  this.drawingEngine.setCommand('LINE')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Polyl',\r\n            callBack: () =>  this.drawingEngine.setCommand('POLYLINE')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Circle',\r\n            callBack: () =>  this.drawingEngine.setCommand('CIRCLE')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'Rect',\r\n            callBack: () =>  this.drawingEngine.setCommand('RECTANGLE')\r\n        });\r\n\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'ZipData',\r\n            callBack: () =>  this.drawingEngine.apiCall('importZipData')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'clusterGrid',\r\n            callBack: () =>  this.drawingEngine.apiCall('importClustering')\r\n        });\r\n        this.njsSandbox.win.addIconLeftPanel({\r\n            text: 'clusterCol',\r\n            callBack: () =>  this.drawingEngine.apiCall('importClusteringCollision')\r\n        });\r\n\r\n        \r\n        // ........................ append top menu\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'import',\r\n            width: 60,\r\n            callBack: () => this.nna.importDummyData(),\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Origin',\r\n            width: 60,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.NETWORK, 'addOrigins', this.drawingEngine.apiCall('getSelectedCPoint'));\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Destination',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.NETWORK, 'addDestinations', this.drawingEngine.apiCall('getSelectedCPoint'));\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Agent',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.AGENCY, 'runAgent', undefined);\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'pathOpti',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.apiCall(APP.GA, 'pathOptimization', this.drawingEngine.apiCall('getSelectedCPoint'));\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Inspection',\r\n            width: 90,\r\n            callBack: () => {\r\n                this.nna.controller.inspection = !this.nna.controller.inspection;\r\n                this.drawingEngine.activeCommand.inspection = !this.drawingEngine.activeCommand.inspection;\r\n                // this.njsSandbox.env.definition.controller.isInspectionMode = !this.njsSandbox.env.definition.controller.isInspectionMode;\r\n            }\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Capture',\r\n            width: 60,\r\n            callBack: () =>this.nna.apiCall(APP.NETWORK, 'capture', undefined )\r\n        });\r\n        this.njsSandbox.win.addIconTopPanel({\r\n            text: 'Download',\r\n            width: 60,\r\n            callBack: () => this.nna.apiCall(APP.NETWORK, 'download', undefined )\r\n        });  \r\n\r\n    }\r\n}","\r\nexport enum OPTIMIZER {\r\n    NONE = 'NONE',\r\n    GRID = 'GRID',\r\n    GRID_SCREEN = 'GRID_SCREEN',\r\n    COLLISION = 'COLLISION',\r\n    AGENT = 'AGENT',\r\n}","import { NVector3 } from '../lib';\r\n// import { GTYPE } from '../../../../../../../lib/Enumeration';\r\n// import { AGeometryBase } from '../../../../Common/Base/AGeometryBase';\r\n// import { GridBased } from '../';\r\n\r\nexport class GridSystemScreen {\r\n\r\n    public xInterval: number = 0;\r\n    public yInterval: number = 0;\r\n    public rx: number = 9;\r\n    public ry: number = 7;\r\n    public cells: Cell[][] = [];\r\n\r\n    public points: NVector3[] = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n    public update(width: number, height: number): void {\r\n        // console.log(this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming);\r\n        // if (this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming) {\r\n        this.initGrid(width, height);\r\n        // }\r\n    }\r\n    private initGrid(width: number, height: number) {\r\n        this.cells = [];\r\n        this.xInterval = width / (this.rx - 1);\r\n        this.yInterval = height / (this.ry - 1);\r\n\r\n        for(let y = 0; y < this.ry; y++){\r\n            const cellList: Cell[] = [];\r\n            for(let x = 0; x < this.rx; x++) {\r\n                cellList.push(new Cell(this, x, y));\r\n            }\r\n            this.cells.push(cellList);\r\n        }\r\n\r\n        for(let i = 0 ; i < this.points.length; ++i){\r\n            const p = this.points[i];\r\n            this.getCellAtPoint(p).push(p);\r\n        }\r\n        for(let y = 0; y < this.ry; ++y){\r\n            for(let x = 0; x < this.rx; ++x) {\r\n                if(this.cells[y][x].points.length < 2) {\r\n                    this.cells[y][x].isRenderable = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public getCellAtPoint(dp: NVector3) {\r\n        let i: number = (Math.round(dp.x / this.xInterval));\r\n        let j: number = (Math.round(dp.y / this.yInterval));\r\n        if (i >= this.rx) { i = this.rx - 1; }\r\n        if (j >= this.ry) { j = this.ry - 1; }\r\n        if (i < 0) { i = 0; }\r\n        if (j < 0) { j = 0; }\r\n        return this.cells[j][i];\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D){\r\n        for(let y = 0; y < this.cells.length; y++){\r\n            for(let x = 0; x < this.cells[y].length; x++) {\r\n                // if(this.cells[y][x]){\r\n                this.cells[y][x].draw(ctx);\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Cell {\r\n    grid: GridSystemScreen;\r\n    r0: number = 32 * 0.5;\r\n    r1: number = 48 * 0.5;\r\n    vec: NVector3;\r\n    vecRender: NVector3;\r\n    xI: number;\r\n    yI: number;\r\n    isHover: boolean = false;\r\n    points: NVector3[] = []\r\n    _isRenderable: boolean = true;\r\n    constructor(grid: GridSystemScreen, xI: number, yI: number) {\r\n    this.grid = grid;\r\n    this.xI = xI;\r\n    this.yI = yI;\r\n    this.vec = new NVector3(xI * this.grid.xInterval, yI * this.grid.yInterval);\r\n    // this.geometries = [];\r\n    }\r\n    public push(geo: NVector3){\r\n        geo.isRenderable = false;\r\n        this.points.push(geo);\r\n        this.vecRender = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vecRender.x += this.points[i].x;\r\n            this.vecRender.y += this.points[i].y;\r\n        }\r\n        this.vecRender.x /= this.points.length;\r\n        this.vecRender.y /= this.points.length;\r\n    }\r\n    public get isRenderable() {\r\n        return this._isRenderable;\r\n    }\r\n    public set isRenderable(v: boolean) {\r\n        if(!v) {\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.points[i].isRenderable = true;\r\n            }\r\n            this.points = [];\r\n        }\r\n        this._isRenderable = v;\r\n    }\r\n    // public IsInside(m: NVector3) {\r\n    // if(Distance(this.vec, m ) < this.r1 + 2) {\r\n    // this.isHover = true;\r\n    // return true;\r\n    // } else {\r\n    // this.isHover = false;\r\n    // return false;\r\n    // }\r\n    // }\r\n    public draw(ctx: CanvasRenderingContext2D, isPanning: boolean = false) {\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n    //     console.log(isPanning)\r\n        if (!this.isRenderable) { return; }\r\n        if (isPanning) {\r\n            this.vecRender = new NVector3(0, 0, 0);\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.vecRender.x += this.points[i].x;\r\n                this.vecRender.y += this.points[i].y;\r\n            }\r\n            this.vecRender.x /= this.points.length;\r\n            this.vecRender.y /= this.points.length;\r\n            // this.vec.y -= this.r * 0.5 // offset the ghost center along y\r\n        }\r\n        // ctx.beginPath();\r\n        // ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        // ctx.closePath();\r\n        const r = 5 + this.points.length * 0.1;\r\n        ctx.fillStyle = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.stroke = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.fill();\r\n        // console.log(this.geometries.length);\r\n        ctx.beginPath();\r\n        ctx.arc(this.vecRender.x, this.vecRender.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        // ctx.stroke();\r\n        ctx.fill();\r\n\r\n        // this.grid.optimizer.optimizer.optimizer.renderer.draw.shape.cluster.DrawingPresetClustering(ctx, this.geometries, this.vecRender, this.r0, this.r1, this.isHover);\r\n    }\r\n}","import { NVector3 } from '../lib';\r\n// import { GTYPE } from '../../../../../../../lib/Enumeration';\r\n// import { AGeometryBase } from '../../../../Common/Base/AGeometryBase';\r\n// import { GridBased } from '../';\r\n\r\nexport class GridSystemDynamic {\r\n\r\n    public xInterval: number = 0;\r\n    public yInterval: number = 0;\r\n    public width = 0;\r\n    public height = 0;\r\n    public rx: number = 9;\r\n    public ry: number = 7;\r\n    public cells: Cell[][] = [];\r\n\r\n    public points: NVector3[] = [];\r\n\r\n    public minP: NVector3 = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n    public maxP: NVector3 = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n\r\n    constructor() {\r\n\r\n    }\r\n    public update(width: number, height: number): void {\r\n        // console.log(this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming);\r\n        // if (this.optimizer.optimizer.optimizer.renderer.annotationInstance.activeCommandController.acProperties.isZooming) {\r\n        this.initGrid(width, height);\r\n        // }\r\n    }\r\n    private initGrid(width: number, height: number) {\r\n        // console.log(width);\r\n        this.minP = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        this.maxP = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n\r\n        for(let i = 0 ; i < this.points.length; ++i){\r\n            const v = this.points[i];\r\n            if (this.minP.x > v.x) { this.minP.x = v.x; }\r\n            if (this.minP.y > v.y) { this.minP.y = v.y; }\r\n            if (this.minP.z > v.z) { this.minP.z = v.z; }\r\n\r\n            if (this.maxP.x < v.x) { this.maxP.x = v.x; }\r\n            if (this.maxP.y < v.y) { this.maxP.y = v.y; }\r\n            if (this.maxP.z < v.z) { this.maxP.z = v.z; }\r\n        }\r\n    //     console.log(this);\r\n\r\n        this.cells = [];\r\n        this.width = (this.maxP.x - this.minP.x);\r\n        this.height = (this.maxP.y - this.minP.y);\r\n\r\n    //     console.log('width', this.width, 'height', this.height)\r\n\r\n        this.xInterval = this.width / (this.rx - 1);\r\n        this.yInterval = this.height / (this.ry - 1);\r\n        \r\n    //     console.log('this.xInterval', this.xInterval, 'this.yInterval', this.yInterval)\r\n\r\n        for(let y = 0; y < this.ry; y++){\r\n            const cellList: Cell[] = [];\r\n            for(let x = 0; x < this.rx; x++) {\r\n                cellList.push(new Cell(this, x, y));\r\n            }\r\n            this.cells.push(cellList);\r\n        }\r\n\r\n        for(let i = 0 ; i < this.points.length; ++i){\r\n            const p = this.points[i];\r\n            this.getCellAtPoint(p).push(p);\r\n        }\r\n        for(let y = 0; y < this.ry; ++y){\r\n            for(let x = 0; x < this.rx; ++x) {\r\n                if(this.cells[y][x].points.length < 1) {\r\n                    this.cells[y][x].isRenderable = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public getCellAtPoint(dp: NVector3) {\r\n        // let dp: NVector3 = vec.Sub(this);\r\n        let i: number = (Math.round((dp.x - this.minP.x ) / this.xInterval));\r\n        let j: number = (Math.round((dp.y - this.minP.y  ) / this.yInterval));\r\n        if (i >= this.rx) { i = this.rx - 1; }\r\n        if (j >= this.ry) { j = this.ry - 1; }\r\n        if (i < 0) { i = 0; }\r\n        if (j < 0) { j = 0; }\r\n        return this.cells[j][i];\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D){\r\n\r\n        for(let y = 0; y < this.cells.length; y++){\r\n            for(let x = 0; x < this.cells[y].length; x++) {\r\n                // if(this.cells[y][x]){\r\n                this.cells[y][x].draw(ctx);\r\n                // }\r\n            }\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(this.minP.x, this.minP.y, this.maxP.x - this.minP.x, this.maxP.y - this.minP.y);\r\n        ctx.stroke();\r\n    }\r\n}\r\n\r\nclass Cell {\r\n\r\n    grid: GridSystemDynamic;\r\n    r0: number = 32 * 0.5;\r\n    r1: number = 48 * 0.5;\r\n    vec: NVector3;\r\n    vecRender: NVector3;\r\n    xI: number;\r\n    yI: number;\r\n    isHover: boolean = false;\r\n    points: NVector3[] = []\r\n    _isRenderable: boolean = true;\r\n\r\n    constructor(grid: GridSystemDynamic, xI: number, yI: number) {\r\n    this.grid = grid;\r\n    this.xI = xI;\r\n    this.yI = yI;\r\n    this.vec = new NVector3(grid.minP.x + (xI * this.grid.xInterval), grid.minP.y + (yI * this.grid.yInterval));\r\n//     console.log('x', this.vec.x, 'y', this.vec.y, )\r\n    // this.geometries = [];\r\n    }\r\n    public push(geo: NVector3){\r\n        geo.isRenderable = false;\r\n        this.points.push(geo);\r\n        this.vecRender = new NVector3(0, 0, 0);\r\n        for(let i = 0; i < this.points.length; ++i) {\r\n            this.vecRender.x += this.points[i].x;\r\n            this.vecRender.y += this.points[i].y;\r\n        }\r\n        this.vecRender.x /= this.points.length;\r\n        this.vecRender.y /= this.points.length;\r\n    }\r\n    public get isRenderable() {\r\n        return this._isRenderable;\r\n    }\r\n    public set isRenderable(v: boolean) {\r\n        if(!v) {\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.points[i].isRenderable = true;\r\n            }\r\n            this.points = [];\r\n        }\r\n        this._isRenderable = v;\r\n    }\r\n    // public IsInside(m: NVector3) {\r\n    // if(Distance(this.vec, m ) < this.r1 + 2) {\r\n    // this.isHover = true;\r\n    // return true;\r\n    // } else {\r\n    // this.isHover = false;\r\n    // return false;\r\n    // }\r\n    // }\r\n    public draw(ctx: CanvasRenderingContext2D, isPanning: boolean = false) {\r\n        if (!this.isRenderable) { \r\n            ctx.beginPath();\r\n            ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n            ctx.closePath();\r\n            ctx.stroke();    \r\n            return; \r\n        }\r\n\r\n\r\n\r\n        // console.log(isPanning)\r\n        if (isPanning) {\r\n            this.vecRender = new NVector3(0, 0, 0);\r\n            for(let i = 0; i < this.points.length; ++i) {\r\n                this.vecRender.x += this.points[i].x;\r\n                this.vecRender.y += this.points[i].y;\r\n            }\r\n            this.vecRender.x /= this.points.length;\r\n            this.vecRender.y /= this.points.length;\r\n            // this.vec.y -= this.r * 0.5 // offset the ghost center along y\r\n        }\r\n        // ctx.beginPath();\r\n        // ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        // ctx.closePath();\r\n        const r = 5 + this.points.length * 0.1;\r\n        ctx.fillStyle = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.stroke = `rgba(${r * 10}, 0, 0, 1)`;\r\n        // ctx.fill();\r\n        // console.log(this.geometries.length);\r\n        ctx.beginPath();\r\n        ctx.arc(this.vecRender.x, this.vecRender.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        // ctx.stroke();\r\n        ctx.fill();\r\n\r\n\r\n        // ctx.fillStyle = '#ffffff';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.vec.x, this.vec.y, 20, 0, Math.PI * 2);\r\n        // ctx.closePath();\r\n        // // ctx.stroke();\r\n        // ctx.fill();\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(this.vec.x - this.grid.xInterval * 0.5, this.vec.y - this.grid.yInterval * 0.5, this.grid.xInterval, this.grid.yInterval);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        // this.grid.optimizer.optimizer.optimizer.renderer.draw.shape.cluster.DrawingPresetClustering(ctx, this.geometries, this.vecRender, this.r0, this.r1, this.isHover);\r\n    }\r\n}","import { NVector3 } from './lib';\r\nimport { OPTIMIZER } from './lib/enum';\r\nimport { GridSystemScreen } from './Core/GridSystemScreen';\r\nimport { GridSystemDynamic } from './Core/GridSystemDynamic';\r\n\r\nexport { OPTIMIZER }\r\nexport class Clustering {\r\n    optimizerType: OPTIMIZER;\r\n\r\n    optimizer: GridSystemDynamic | GridSystemScreen;\r\n\r\n    mv: NVector3 = new NVector3(0, 0);\r\n\r\n    inspection: boolean = true;\r\n\r\n    constructor(optimizer: OPTIMIZER) {\r\n        this.optimizerType = optimizer;\r\n        \r\n        switch (optimizer) {\r\n            case OPTIMIZER.GRID_SCREEN:\r\n                this.optimizer = new GridSystemScreen();\r\n                break;\r\n            case OPTIMIZER.GRID:\r\n                this.optimizer = new GridSystemDynamic();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        console.debug('clustering... v 0.1.5')\r\n    }\r\n    public push(vs: NVector3[], width: number, height: number) {\r\n        this.optimizer.points = vs;\r\n        this.update(width, height);\r\n    }\r\n    public mouseInteraction(x: number, y: number){\r\n        this.mv = this.optimizer.getCellAtPoint(new NVector3(x, y)).vec;\r\n    }\r\n    public update(width: number, height: number) {\r\n        this.optimizer.update(width, height);\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, isStationary: boolean, width: number, height: number) {\r\n        if (isStationary) {\r\n            this.update(width, height);\r\n        }\r\n        this.optimizer.render(ctx)\r\n\r\n        if(this.mv){\r\n            ctx.fillStyle = '#00ff00';\r\n            ctx.beginPath();\r\n            ctx.arc(this.mv.x, this.mv.y,9, 0.0, 3.14 * 2)\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        \r\n\r\n    }\r\n\r\n}"],"names":["Controller","window","this","param","btn","document","createElement","style","width","zIndex","position","border","textContent","text","onclick","callBack","builder","divFulldownArea","appendChild","height","color","background","onmouseenter","onmouseleave","divLeftUI","Builder","divMain","divMainBody","divTopArea","divBottomArea","divForGraphicContext","colorTopMenu","colorBGmenu","titleString","initDivMain","initDivTopArea","initDivFulldownArea","box","float","padding","title","initDivContextArea","initDivLeftArea","id","closeBtn","top","left","remove","initBottomArea","bottomToolbarArea","bottomTextarea","isPressed","prePos","ondrag","e","onmousemove","xOff","clientX","yOff","clientY","parseFloat","onmousedown","updateZindex","onmouseup","onmouseout","hostDiv","bootom","updateResize","setTimeout","divHost","NWindow","controller","initPanel","addIconTopPanel","addToggleTopPanel","addIconLeftPanel","addIconLeft","removeChild","IO","app","OpenGeoJsonEx01","path","ArcGIS","AppendMapViewEvent","mapView","watch","renderer","isPanning","on","canvas","ResizeCanvas","Projection","App","ToMap","x","y","mp","toMap","clone","longitude","latitude","ToScreen","long","lat","mPoint","spatialReference","p","toScreen","proX","proY","wkid","Canvas","t","frameRate","ctx","xOffCurrent","yOffCurrent","xOffPre","yOffPre","zoomFactor","zoomFactorPre","zoomFactorCurrent","div3d","smoothingEnabled","dropRate","isRenderSkip","isLoop","timeLastRender","delta","now","then","interval","last","frameVisTimer","theDate","asyncSafeGuard","pointerEvents","getContext","globalCompositeOperation","clientWidth","clientHeight","Start","Init","Draw","requestAnimationFrame","Clear","Render","clearRect","EventInteraction","mouseEventDataPre","MouseEventData","InitArcGISMapEventV4x","ev","CommonEventBuilderArcGIS","type","MOUSE_TYPE","native","button","MouseEvent","ableToPan","stopPropagation","key","slice","KeyDownJSAPI4X","mEvent","preX","preY","yGLPicking","target","getBoundingClientRect","bottom","pressedShift","shiftKey","pressedAlt","altKey","pressedCtrl","ctrlKey","k","kEventData","CommonEventBuilder","KeyEvent","kEvent","KeyboardEventData","keyCode","code","hasCtrlKey","hasShiftKey","hasAltKey","hasMetaCommand","metaKey","Renderer","sandbox","num","i","length","JSAPIEnv","idDiv","map","arcGIS","io","projection","eventInteraction","keyEvents","MouseEvents","Map","basemap","MapView","container","center","zoom","when","SpatialReference","fn","push","event","mouse","keyboard","m","remap","CValue","OldMin","OldMax","NewMin","NewMax","getRandomArbitrary","min","max","Math","random","seed","mask","m_w","m_z","result","GraphView","HTMLView","div","networkUI","undefined","apiCall","APP","removePanelNetwork","nnaEngine","inspection","NVector3","dataOrigins","destinationOrigins","action","data","view","initPanelNetwork","core","graphSystem","initByCPoint","initByCPoints","initByCPointsBackpro","initAgentVis","agencySystem","gaSystem","getPath","pointData","update","Node","vec","node","distanceTo","Path","pathsOrigin","nodes","fitness","distance","cityIndex","setCityInit","array","temporaryValue","randomIndex","currentIndex","floor","shuffle","city","getDistance","tourDistance","fromNode","otherNode","Population","populationSize","initialise","paths","newTour","generateIndividual","fittest","other","getFitness","GeneticAlgorithm","tourmanager","mutationRate","nodeSize","elitism","pop","newPopulation","elitismOffset","thePath","getFittestPath","parent1","tournamentSelection","parent2","child","crossover","mutate","startPos","endPos","place","containsCity","ii","tourPos1","tourPos2","city1","city2","populationNew","randomId","GASystem","cities","placesAll","ga","pathFittest","timer","cost","Number","MAX_VALUE","pos","init","tournamentSize","goePos","v","evolvePopulation","isPan","optimize","fillStyle","strokeStyle","lineWidth","p0","p1","beginPath","moveTo","lineTo","closePath","stroke","arc","PI","fill","AgencySystem","render","mouseClick","Analysis","gs","Graph","graphCore","edges","minPt","maxPt","MIN_VALUE","nodeOrigin","lns","AddEdgeByLines","elevation","AddNode","AddEdge","n1","n2","testedEdge","FindEdge","edge","Edge","point","n0","index","disMin","d","originTree","Optimizer","Beta","networkDistance","euclideanDistance","n","updatePropagationByNode","origins","reset","origin","queue","current","dis","distanceToGeo","shift","j","np","newcost","newtemp","vs","destination","FindClosestNode","smallest","countVisit","CONNECTIVITY","GetMidPoint","updateScreenPos","countOrigin","countDestination","countVisitTemp","z","sv","Tree","gc","nodeDestinations","pointOrigin","polylines","duplicateGraph","updateOriginByPt","graph","desID","pls","pl","NPolyline","id0","id1","deepCopy","costFnDistanceGeo","meterFromGeoGPSPos","GraphCore","trees","destinations","idDestination","initGraph","unit","BETA","oWeight","dWeight","computePathWeighted","updatePropagation","updateBackpropagation","mergeAgents","tree","Properties","RendererGraph","BoidsBehaviors","start","end","selPath","time","properties","cols","getFalseColor","font","fillText","toFixed","selPathId","MAX_SAFE_INTEGER","mx","my","COLORBLENDING","setLineDash","theDis","distanceToXY","lineDashOffset","Update","BoidsPath","r","Boid","posX","posY","totalMass","MAX_FORCE","velocity","maxVelocity","desired","steering","mass","boidsPath","currentNode","pathDir","rotation","preVec","avoidance","ahead","alpha","isOriented","activeBase64ID","angle","MAX_VELOCITY","Truncate","tv","Clone","normalize","scale","MAX_AVOID_AHEAD","Length","Add","a","b","sqrt","vector","atan2","PathFollowing","CollisionAvoidance","GetAngle","AddVecHistory","DrawTail","img","Image","src","save","globalAlpha","translate","rotate","drawImage","restore","DrawForceVector","force","Sub","GetNodes","Distance","Seek","AVOID_FORCE","MAX_QUEUE_AHEAD","MAX_QUEUE_RADIUS","MAX_SEPARATION","SEPARATION_RADIUS","boids","instance","numBoid","InitBoid","numPath","maxPathNodes","boid","showForces","drawPath","drawPathPoint","drawCircle","radius","ShiftOriented","GraphSystem","analysis","renderGraph","setUnit","computePath","initTwoPoint","cps","updatePropagationByNodes","ends","InitPathByNode","VoxelSystem","Core","voxelSystem","geoPos","NNAEngineV3","fetch","response","catch","err","lastCalledTime","Date","fps","getAllUrlParams","url","importCSV","CSVData","ComputeCSV","initLines","lineTest","execution","mouseEvent","ComputeFPS","CommandBase","activeCommandController","COMMAND","MouseLeftClickPre","MouseMiddleClickPre","MouseRightClickPre","MouseDoubleClickPre","MouseMovePre","MouseDragPre","MouseDownPre","MouseUpPre","MouseWheelPre","drawingEngine","scene","capture","geometryCommon","find","MouseDown","isSelected","resetSelections","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","updateHover","MouseMove","mv","MouseDrag","MouseWheel","Collision","geometryBase","isCollided","neighborShapes","minVec","maxVec","isVisited","numOrder","numVisit","isCollapse","CPoint","colorHover","collision","ACTIVE_UI","isHover","isCustom","sin","isHidden","isRenderable","getTime","replace","c","toString","getUUID","CommandSelect","CommandPoint","addGeometry","hasShift","setCommand","CommandLine","ActiveCommandController","activeCommand","commands","SELECT","POINT","LINE","commander","command","getSelCPoint","popZipData","addon","InitClustering","InitClusteringCollision","toJson","fetchJson","json","count","greatePointByGeoPos","spos","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getData","val","getError","console","error","GeometryCommon","geoDict","isInside","geometryList","pointList","PointCluster","geometries","points","r0","r1","boundingBoxMin","boundingBoxMax","MIN_SAFE_INTEGER","GridResolution","tempVecGridList","tempGeoGridList","UpdateBoundingBox","geo","includes","DeepRemove","xNum","yNum","grid","buildGrid","BuildSubCluster","concat","RemoveCluster","gridList","theY","geoMat","theX","GetCellAtPoint","Reset","clustersRPoint","dp","round","UpdateTimeer","optimizer","rect","cluster","splice","indexOf","isStationary","GraphClustering","updatePoints","BuildConnectivity","initGeometry","geoList","buildGraph","addClusterByGeometries","PostUpdateCollisionBasedonGraph","graphcs","NeedDecompose","SplitClusters","PostMergeCluster","InitGeometry","outGraphList","pt","listPoints","AABBintersect2D","outList","ptList","safeguard","debug","UpdateByQueue","remain","AddPost","clusterGraph","clusters","Split","PostMergeClusterCompute","Merge","ClusteringCollsionBasedGraph","graphClustering","Addon","clustering","clusteringCollsionBasedGraph","Clustering","getAllVecFromCPoint","OPTIMIZER","rx","ry","getAllFromCPoint","mouseInteraction","renderPost","Scene","_capture","g","DrawingEngine","_ableToPan","updateProjection","setCommander","bindAbleToPan","BindingNNA","njsSandbox","nna","win","env","appendEventListener","keyEvent","appendRenderer","importDummyData","GridSystemScreen","xInterval","yInterval","cells","initGrid","cellList","Cell","getCellAtPoint","draw","xI","yI","vecRender","_isRenderable","GridSystemDynamic","minP","maxP","optimizerType","GRID_SCREEN","GRID"],"sourceRoot":""}