{"version":3,"file":"static/js/66722.c5460534.chunk.js","mappings":"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","sources":["njslab/app-legacy/Implementation/Envs/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Core/ActiveCommandController.ts","njslab/app-legacy/Implementation/Envs/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Core/GeometryCommon.ts","njslab/app-legacy/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas.ts","njslab/app-legacy/Implementation/Envs/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Core/DefinitionIndeCanvasCore.ts","njslab/app-legacy/Implementation/Envs/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Definition/GeometryInter.ts","njslab/app-legacy/Implementation/Envs/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Definition/Template.ts","njslab/app-legacy/Implementation/Envs/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Definition/Blank.ts","njslab/app-legacy/Implementation/Envs/AppAlgorithmEnv/Implementation/AlgorithmImplementation/index.ts"],"sourcesContent":["import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { AlgorithmImplementation } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: AlgorithmImplementation;\r\n\r\n    constructor(scene: AlgorithmImplementation) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { AlgorithmImplementation } from '..';\r\n\r\nexport class GeomeetryCommon {\r\n\r\n    scene: AlgorithmImplementation;\r\n\r\n    constructor(scene: AlgorithmImplementation) {\r\n        this.scene = scene;\r\n    }\r\n\r\n}","import { NVector3 } from '../../../../../';\r\nimport { MouseEventData } from '../../../../../IO/EventInteraction/MouseInteraction';\r\n\r\nimport { IndependentPanelWrapper } from '../../IndependentPanelWrapper';\r\nimport { ColorUtility } from '../../../../../Core/NColor/';\r\n\r\nimport { IndePanelPreset } from '../../Core/IndePanelPreset';\r\n\r\nimport { IndePanelBase } from './base/base/IndePanelBase';\r\n\r\nimport { BtnClose } from './base/BtnClose';\r\nimport { BtnMinimize } from './base/BtnMinimize';\r\nimport { BtnHam } from './base/BtnHam';\r\nimport { BtnResize } from './base/BtnResize';\r\n\r\nimport { BodyDiv } from './base/BodyDiv';\r\nimport { IndeSubPanel } from './base/IndeSubPanel';\r\n\r\nexport class IndependentPanelCanvas extends IndePanelBase {\r\n    independentPanelWrapper: IndependentPanelWrapper;\r\n    divInput: HTMLTextAreaElement;\r\n\r\n    btnClose: BtnClose;\r\n    btnMini: BtnMinimize;\r\n    btnHam: BtnHam;\r\n    btnResize: BtnResize;\r\n\r\n    bodyDiv: BodyDiv;\r\n    subMenu: IndeSubPanel;\r\n\r\n    subs: IndePanelBase[] = [];\r\n\r\n    _content: string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    isActive: boolean = true;\r\n\r\n    constructor(independentPanelWrapper: IndependentPanelWrapper, x: number = 0, y: number = 0, width: number = 300, height: number = 170, divNeeded: boolean = false) {\r\n        super(independentPanelWrapper);\r\n        this.independentPanelWrapper = independentPanelWrapper;\r\n        this.title = 'njslabSandbox V3';\r\n        this.width = width;\r\n        this.height = height;\r\n        if (x === 0 && y === 0) {\r\n            this.vec.x = (independentPanelWrapper.width * 0.5) - (this.width * 0.5);\r\n            this.vec.y = (independentPanelWrapper.height * 0.5) - (this.height * 0.5);\r\n        } else {\r\n            this.vec.x = x;\r\n            this.vec.y = y;\r\n        }\r\n        this.filletR = 7;\r\n        this.InitTop();\r\n        if (divNeeded) {\r\n            this.bodyDiv = new BodyDiv(this, this.vec.x, this.vec.y + this.HeadHeight, this.width, this.height - this.HeadHeight);\r\n            // this.bodyDiv.div.style.background = 'red';\r\n        }\r\n        this.InitCanvas(this.bodyDiv.div);\r\n    }\r\n\r\n    get IsMinimized() {\r\n        return this.isMinimized;\r\n    }\r\n    set IsMinimized(v: boolean) {\r\n        this.isMinimized = v;\r\n        this.btnResize.isHidden = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Hide(v); }\r\n    }\r\n    get Width() {\r\n        return this.width;\r\n    }\r\n    set Width(v: number) {\r\n        let off = v - this.width;\r\n        this.width = v;\r\n        this.btnHam.vec.x += off;\r\n        this.subMenu.vec.x += off;\r\n        if (this.bodyDiv) { this.bodyDiv.Width = v; }\r\n    }\r\n    get Height() {\r\n        return this.height;\r\n    }\r\n    set Height(v: number) {\r\n        this.height = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Height = v; }\r\n        // this.subMenu\r\n    }\r\n    get content() {\r\n        return this._content;\r\n    }\r\n    set content(v: string) {\r\n        this._content = v;\r\n        if (this.bodyDiv) { this.bodyDiv.content = v; }\r\n    }\r\n    get HasSubMenu() {\r\n        return this.hasSubMenu;\r\n    }\r\n    set HasSubMenu(v: boolean) {\r\n        this.hasSubMenu = v;\r\n        this.subMenu.IsHidden = !v;\r\n    }\r\n    InitTop() {\r\n        this.btnClose = new BtnClose(this, this.vec.x, this.vec.y);\r\n        this.btnMini = new BtnMinimize(this, this.vec.x + 25, this.vec.y);\r\n        this.btnHam = new BtnHam(this, this.vec.x - 25 + this.width, this.vec.y);\r\n        this.btnResize = new BtnResize(this, this.vec.x + this.width - 10, this.vec.y + this.height - 10, 10, 10);\r\n\r\n        this.subMenu = new IndeSubPanel(this);\r\n        this.subs.push(this.btnClose, this.btnMini, this.btnHam);\r\n    }\r\n    Translate(e: MouseEventData): void {\r\n        if (!this.isMoveable) { return; }\r\n        let xo = e.x - e.preX;\r\n        let yo = e.y - e.preY;\r\n        this.vec.x += xo;\r\n        this.vec.y += yo;\r\n        for (let i = 0; i < this.boundarVecs.length; ++i) { this.boundarVecs[i].x += xo; this.boundarVecs[i].y += yo; }\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Translate(e); }\r\n        this.btnResize.vec.x += xo;\r\n        this.btnResize.vec.y += yo;\r\n        this.subMenu.Translate(xo, yo);\r\n        if (this.bodyDiv) { this.bodyDiv.Translate(xo, yo); }\r\n\r\n    }\r\n    Remove() {\r\n        this.RemovePost();\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Remove(); }\r\n        if (this.bodyDiv) { this.bodyDiv.Remove(); }\r\n        this.btnResize.Remove();\r\n        this.independentPanelWrapper.indePanelRender.Remove(this);\r\n    }\r\n    RenderPost(ctx: CanvasRenderingContext2D): void {\r\n        // console.log(IndePanelRender.length);\r\n        // this.vec.x = this.mainPanel.vec.x + this.xOff;\r\n        // this.vec.y = this.mainPanel.vec.y + this.yOff;\r\n        this.ComputeBoundary();\r\n\r\n        let color;\r\n        // if (this.isOver) {\r\n        //     color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuOver, this.transparent);\r\n        // } else {\r\n        color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuNormal, this.transparent);\r\n        // }\r\n        if (this.isMinimized) {\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n\r\n        } else {\r\n            IndePanelPreset.RoundedRectFillWithColorMainMenu(ctx, this.title, this.boundarVecs, this.filletR, 0, this.isOver, this.isSelected, color);\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n        }\r\n        this.RenderHeadTitle(ctx);\r\n        if (!this.isMinimized) {\r\n            this.RenderBodyContent(ctx);\r\n        }\r\n        if (this.hasSubMenu) {\r\n            this.subMenu.RenderPost(ctx);\r\n        }\r\n        this.RenderBtnHorizontal(ctx);\r\n    }\r\n    RenderBtnHorizontal(ctx: CanvasRenderingContext2D) {\r\n        /* */\r\n    }\r\n    RenderHeadTitle(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        // if (this.isOver) {\r\n        //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // } else {\r\n        ctx.fillStyle = '#ffffff';\r\n        // }\r\n        ctx.textBaseline = 'top';\r\n        ctx.textAlign = 'center';\r\n        ctx.font = '100 12px Arial';\r\n        ctx.shadowBlur = 0;\r\n        // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        ctx.shadowOffsetY = 0;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.fillText(this.title, this.vec.x + (this.width * 0.5), this.vec.y + (this.HeadHeight * 0.5) - 7);\r\n\r\n        ctx.restore();\r\n    }\r\n    RenderBodyContent(ctx: CanvasRenderingContext2D) {\r\n        // ctx.save();\r\n        // // if (this.isOver) {\r\n        // //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // // } else {\r\n        // ctx.fillStyle = '#000000';\r\n        // // }\r\n        // ctx.textBaseline = 'top';\r\n        // ctx.textAlign = 'center';\r\n        // ctx.font = '100 9px Sans-serif';\r\n        // ctx.fillText(this.content, this.vec.x + (this.width * 0.5), this.vec.y + (this.height * 0.5) - 5);\r\n\r\n        // ctx.shadowBlur = 0;\r\n        // // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        // ctx.shadowOffsetY = 0;\r\n        // ctx.shadowOffsetX = 0;\r\n\r\n        // ctx.restore();\r\n\r\n    }\r\n    RemovePost() {\r\n        this.isActive = false;\r\n    }\r\n    InitCanvas(hostDiv: HTMLElement) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.zIndex = '0';\r\n        hostDiv.appendChild(this.canvas);\r\n\r\n        this.canvas.id = 'NCanvasRenderer';\r\n        this.canvas.className = 'njslab-web-core-canvas-renderer';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.canvas.width = hostDiv.clientWidth; // hostDivForSize.clientWidth;\r\n        this.canvas.height = hostDiv.clientHeight; // hostDivForSize.clientHeight;\r\n\r\n        this.btnResize.ResizePropagation = (width: number, height: number) => {\r\n            this.canvas.width = width; // hostDivForSize.clientWidth;\r\n            this.canvas.height = height; // hostDivForSize.clientHeight;\r\n        };\r\n        this.LoopIndependentCanvas(this.ctx);\r\n    }\r\n    LoopIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        requestAnimationFrame(() => { this.LoopIndependentCanvas(ctx); });\r\n        this.RenderIndependentCanvas(ctx);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.canvas.width = width; // hostDivForSize.clientWidth;\r\n        this.canvas.height = height; // hostDivForSize.clientHeight;\r\n    }\r\n}","import { IndependentPanelCanvas } from '../../../../../../NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { AlgorithmImplementation } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: AlgorithmImplementation;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        this.scene = AlgorithmImplementation;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas();\r\n    }\r\n    InitIndeCanvas() {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, 650, 350, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, 650, 450, true);\r\n        }\r\n        this.indeCanvas.title = 'Title';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n// import { NVector3 } from '../../../lib';\r\nimport { AlgorithmImplementation } from '..';\r\nexport class GeometryInter extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n    r: number = 5;\r\n    t: number = 0.0;\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        super(AlgorithmImplementation);\r\n        this.indeCanvas.title = 'Geometry Intersect';\r\n        this.Init();\r\n    }\r\n    public Init() { this.mouse = [0, 0]; }\r\n    public MouseMove(x: number, y: number) { this.mouse = [x, y]; }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.t = 0.01;\r\n        ctx.beginPath();\r\n        ctx.arc(this.mouse[0], this.mouse[1], Math.sin(this.t) * 3 + this.r, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\nimport { AlgorithmImplementation } from '..';\r\nexport class Template extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n    r: number = 5;\r\n    t: number = 0.0;\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        super(AlgorithmImplementation);\r\n        this.indeCanvas.title = 'template';\r\n        this.Init();\r\n    }\r\n    public Init() { this.mouse = [0, 0]; }\r\n    public MouseMove(x: number, y: number) { this.mouse = [x, y]; }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.t = 0.01;\r\n        ctx.beginPath();\r\n        ctx.arc(this.mouse[0], this.mouse[1], Math.sin(this.t) * 3 + this.r, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { AlgorithmImplementation } from '..';\r\n\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        super(AlgorithmImplementation);\r\n    }\r\n    public Init() {\r\n        //\r\n    }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}","import { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\nimport { GeomeetryCommon } from './Core/GeometryCommon';\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\n// import { BallBounce } from './Definition/BallBounce';\r\n// import { BallBounceClass } from './Definition/BallBounceClass';\r\n// // import { GaussianDistribution } from '../SceneVis/Definition/GaussianDistribution';\r\n\r\nimport { GeometryInter } from './Definition/GeometryInter';\r\nimport { Template } from './Definition/Template';\r\nimport { Blank } from './Definition/Blank';\r\n\r\nimport { Implementation } from '..';\r\nexport class AlgorithmImplementation {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n    geomeetryCommon: GeomeetryCommon;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.geomeetryCommon = new GeomeetryCommon(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    LoadDefinition(v: string) {\r\n        //\r\n    }\r\n    public InitPost() {\r\n        this.implementation.AddMenu('AlgorithmEnv', 'definition', 'blank', () => {\r\n            this.definitions = [];\r\n            const d0 = new Blank(this); d0.Dummy();\r\n        });\r\n        this.implementation.AddMenu('AlgorithmEnv', 'definition', 'Template', () => {\r\n            this.definitions = [];\r\n            const d0 = new Template(this); d0.Dummy();\r\n        });\r\n        this.implementation.AddMenu('AlgorithmEnv', 'definition', 'Geo Inter', () => {\r\n            this.definitions = [];\r\n            const d0 = new GeometryInter(this); d0.Dummy();\r\n        });\r\n\r\n    }\r\n}"],"names":["ActiveCommandController","constructor","scene","this","MouseEventController","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","x","y","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","GeomeetryCommon","IndependentPanelCanvas","IndePanelBase","independentPanelWrapper","width","height","divNeeded","super","divInput","btnClose","btnMini","btnHam","btnResize","bodyDiv","subMenu","subs","_content","canvas","ctx","isActive","title","vec","filletR","InitTop","BodyDiv","HeadHeight","InitCanvas","div","IsMinimized","isMinimized","v","isHidden","Hide","Width","off","Height","content","HasSubMenu","hasSubMenu","IsHidden","BtnClose","BtnMinimize","BtnHam","BtnResize","IndeSubPanel","push","Translate","isMoveable","xo","preX","yo","preY","i","boundarVecs","length","Remove","RemovePost","indePanelRender","RenderPost","color","ComputeBoundary","ColorUtility","IndePanelPreset","transparent","isOver","isSelected","NVector3","theme","colSelectedBG","RenderHeadTitle","RenderBodyContent","RenderBtnHorizontal","save","fillStyle","textBaseline","textAlign","font","shadowBlur","shadowOffsetY","shadowOffsetX","fillText","restore","hostDiv","document","createElement","style","position","zIndex","appendChild","id","className","pointerEvents","getContext","clientWidth","clientHeight","ResizePropagation","LoopIndependentCanvas","clearRect","requestAnimationFrame","RenderIndependentCanvas","console","log","ResizeCanvas","DefinitionIndeCanvasCore","AlgorithmImplementation","indeCanvas","mOffX","mOffY","definitions","InitIndeCanvas","implementation","app","needUI","viewController","NUIWrapper","NUI","Dummy","Init","IsMouseInsidePanel","GeometryInter","mouse","pts","r","t","beginPath","arc","Math","sin","PI","stroke","Template","Blank","p","closePath","fill","activeCommandController","geomeetryCommon","model","graphicsCoreWrapper","canvasWrapper","InitDefinition","d","Render","Dispose","LoadDefinition","InitPost","AddMenu"],"sourceRoot":""}