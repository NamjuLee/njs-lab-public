{"version":3,"file":"static/js/89945.8dd811d9.chunk.js","mappings":"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","sources":["../node_modules/alpha-complex/alpha.js","../node_modules/alpha-shape/alpha.js","../node_modules/bit-twiddle/twiddle.js","../node_modules/boundary-cells/boundary.js","../node_modules/cell-orientation/orientation.js","../node_modules/circumcenter/circumcenter.js","../node_modules/circumradius/crad.js","../node_modules/compare-cell/compare.js","../node_modules/compare-oriented-cell/compare.js","../node_modules/delaunay-triangulate/triangulate.js","../node_modules/dup/dup.js","../node_modules/incremental-convex-hull/ich.js","../node_modules/reduce-simplicial-complex/reduce.js","../node_modules/robust-compress/compress.js","../node_modules/robust-determinant/robust-determinant.js","../node_modules/robust-linear-solve/linsolve.js","../node_modules/robust-orientation/orientation.js","../node_modules/robust-scale/robust-scale.js","../node_modules/robust-subtract/robust-diff.js","../node_modules/robust-sum/robust-sum.js","../node_modules/simplicial-complex-boundary/boundary.js","../node_modules/simplicial-complex/topology.js","../node_modules/two-product/two-product.js","../node_modules/two-sum/two-sum.js","../node_modules/union-find/index.js","../node_modules/uniq/uniq.js"],"sourcesContent":["'use strict'\n\nmodule.exports = alphaComplex\n\nvar delaunay = require('delaunay-triangulate')\nvar circumradius = require('circumradius')\n\nfunction alphaComplex(alpha, points) {\n  return delaunay(points).filter(function(cell) {\n    var simplex = new Array(cell.length)\n    for(var i=0; i<cell.length; ++i) {\n      simplex[i] = points[cell[i]]\n    }\n    return circumradius(simplex) * alpha < 1\n  })\n}","module.exports = alphaShape\n\nvar ac = require('alpha-complex')\nvar bnd = require('simplicial-complex-boundary')\n\nfunction alphaShape(alpha, points) {\n  return bnd(ac(alpha, points))\n}","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n","'use strict'\n\nmodule.exports = boundary\n\nfunction boundary (cells) {\n  var i, j, k\n  var n = cells.length\n  var sz = 0\n  for (i = 0; i < n; ++i) {\n    sz += cells[i].length\n  }\n  var result = new Array(sz)\n  var ptr = 0\n  for (i = 0; i < n; ++i) {\n    var c = cells[i]\n    var d = c.length\n    for (j = 0; j < d; ++j) {\n      var b = result[ptr++] = new Array(d - 1)\n      var p = 0\n      for (k = 0; k < d; ++k) {\n        if (k === j) {\n          continue\n        }\n        b[p++] = c[k]\n      }\n      if (j & 1) {\n        var tmp = b[1]\n        b[1] = b[0]\n        b[0] = tmp\n      }\n    }\n  }\n  return result\n}\n","'use strict'\n\nmodule.exports = orientation\n\nfunction orientation(s) {\n  var p = 1\n  for(var i=1; i<s.length; ++i) {\n    for(var j=0; j<i; ++j) {\n      if(s[i] < s[j]) {\n        p = -p\n      } else if(s[j] === s[i]) {\n        return 0\n      }\n    }\n  }\n  return p\n}\n","\"use strict\"\n\nvar dup = require(\"dup\")\nvar solve = require(\"robust-linear-solve\")\n\nfunction dot(a, b) {\n  var s = 0.0\n  var d = a.length\n  for(var i=0; i<d; ++i) {\n    s += a[i] * b[i]\n  }\n  return s\n}\n\nfunction barycentricCircumcenter(points) {\n  var N = points.length\n  if(N === 0) {\n    return []\n  }\n  \n  var D = points[0].length\n  var A = dup([points.length+1, points.length+1], 1.0)\n  var b = dup([points.length+1], 1.0)\n  A[N][N] = 0.0\n  for(var i=0; i<N; ++i) {\n    for(var j=0; j<=i; ++j) {\n      A[j][i] = A[i][j] = 2.0 * dot(points[i], points[j])\n    }\n    b[i] = dot(points[i], points[i])\n  }\n  var x = solve(A, b)\n\n  var denom = 0.0\n  var h = x[N+1]\n  for(var i=0; i<h.length; ++i) {\n    denom += h[i]\n  }\n\n  var y = new Array(N)\n  for(var i=0; i<N; ++i) {\n    var h = x[i]\n    var numer = 0.0\n    for(var j=0; j<h.length; ++j) {\n      numer += h[j]\n    }\n    y[i] =  numer / denom\n  }\n\n  return y\n}\n\nfunction circumcenter(points) {\n  if(points.length === 0) {\n    return []\n  }\n  var D = points[0].length\n  var result = dup([D])\n  var weights = barycentricCircumcenter(points)\n  for(var i=0; i<points.length; ++i) {\n    for(var j=0; j<D; ++j) {\n      result[j] += points[i][j] * weights[i]\n    }\n  }\n  return result\n}\n\ncircumcenter.barycenetric = barycentricCircumcenter\nmodule.exports = circumcenter","module.exports = circumradius\n\nvar circumcenter = require('circumcenter')\n\nfunction circumradius(points) {\n  var center = circumcenter(points)\n  var avgDist = 0.0\n  for(var i=0; i<points.length; ++i) {\n    var p = points[i]\n    for(var j=0; j<center.length; ++j) {\n      avgDist += Math.pow(p[j] - center[j], 2)\n    }\n  }\n  return Math.sqrt(avgDist / points.length)\n}","module.exports = compareCells\n\nvar min = Math.min\n\nfunction compareInt(a, b) {\n  return a - b\n}\n\nfunction compareCells(a, b) {\n  var n = a.length\n    , t = a.length - b.length\n  if(t) {\n    return t\n  }\n  switch(n) {\n    case 0:\n      return 0\n    case 1:\n      return a[0] - b[0]\n    case 2:\n      return (a[0]+a[1]-b[0]-b[1]) ||\n             min(a[0],a[1]) - min(b[0],b[1])\n    case 3:\n      var l1 = a[0]+a[1]\n        , m1 = b[0]+b[1]\n      t = l1+a[2] - (m1+b[2])\n      if(t) {\n        return t\n      }\n      var l0 = min(a[0], a[1])\n        , m0 = min(b[0], b[1])\n      return min(l0, a[2]) - min(m0, b[2]) ||\n             min(l0+a[2], l1) - min(m0+b[2], m1)\n    case 4:\n      var aw=a[0], ax=a[1], ay=a[2], az=a[3]\n        , bw=b[0], bx=b[1], by=b[2], bz=b[3]\n      return (aw+ax+ay+az)-(bw+bx+by+bz) ||\n             min(aw,ax,ay,az)-min(bw,bx,by,bz,bw) ||\n             min(aw+ax,aw+ay,aw+az,ax+ay,ax+az,ay+az) -\n               min(bw+bx,bw+by,bw+bz,bx+by,bx+bz,by+bz) ||\n             min(aw+ax+ay,aw+ax+az,aw+ay+az,ax+ay+az) -\n               min(bw+bx+by,bw+bx+bz,bw+by+bz,bx+by+bz)\n    default:\n      var as = a.slice().sort(compareInt)\n      var bs = b.slice().sort(compareInt)\n      for(var i=0; i<n; ++i) {\n        t = as[i] - bs[i]\n        if(t) {\n          return t\n        }\n      }\n      return 0\n  }\n}\n","'use strict'\n\nvar compareCells = require('compare-cell')\nvar parity = require('cell-orientation')\n\nmodule.exports = compareOrientedCells\n\nfunction compareOrientedCells(a, b) {\n  return compareCells(a, b) || parity(a) - parity(b)\n}\n","\"use strict\"\n\nvar ch = require(\"incremental-convex-hull\")\nvar uniq = require(\"uniq\")\n\nmodule.exports = triangulate\n\nfunction LiftedPoint(p, i) {\n  this.point = p\n  this.index = i\n}\n\nfunction compareLifted(a, b) {\n  var ap = a.point\n  var bp = b.point\n  var d = ap.length\n  for(var i=0; i<d; ++i) {\n    var s = bp[i] - ap[i]\n    if(s) {\n      return s\n    }\n  }\n  return 0\n}\n\nfunction triangulate1D(n, points, includePointAtInfinity) {\n  if(n === 1) {\n    if(includePointAtInfinity) {\n      return [ [-1, 0] ]\n    } else {\n      return []\n    }\n  }\n  var lifted = points.map(function(p, i) {\n    return [ p[0], i ]\n  })\n  lifted.sort(function(a,b) {\n    return a[0] - b[0]\n  })\n  var cells = new Array(n - 1)\n  for(var i=1; i<n; ++i) {\n    var a = lifted[i-1]\n    var b = lifted[i]\n    cells[i-1] = [ a[1], b[1] ]\n  }\n  if(includePointAtInfinity) {\n    cells.push(\n      [ -1, cells[0][1], ],\n      [ cells[n-1][1], -1 ])\n  }\n  return cells\n}\n\nfunction triangulate(points, includePointAtInfinity) {\n  var n = points.length\n  if(n === 0) {\n    return []\n  }\n  \n  var d = points[0].length\n  if(d < 1) {\n    return []\n  }\n\n  //Special case:  For 1D we can just sort the points\n  if(d === 1) {\n    return triangulate1D(n, points, includePointAtInfinity)\n  }\n  \n  //Lift points, sort\n  var lifted = new Array(n)\n  var upper = 1.0\n  for(var i=0; i<n; ++i) {\n    var p = points[i]\n    var x = new Array(d+1)\n    var l = 0.0\n    for(var j=0; j<d; ++j) {\n      var v = p[j]\n      x[j] = v\n      l += v * v\n    }\n    x[d] = l\n    lifted[i] = new LiftedPoint(x, i)\n    upper = Math.max(l, upper)\n  }\n  uniq(lifted, compareLifted)\n  \n  //Double points\n  n = lifted.length\n\n  //Create new list of points\n  var dpoints = new Array(n + d + 1)\n  var dindex = new Array(n + d + 1)\n\n  //Add steiner points at top\n  var u = (d+1) * (d+1) * upper\n  var y = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    y[i] = 0.0\n  }\n  y[d] = u\n\n  dpoints[0] = y.slice()\n  dindex[0] = -1\n\n  for(var i=0; i<=d; ++i) {\n    var x = y.slice()\n    x[i] = 1\n    dpoints[i+1] = x\n    dindex[i+1] = -1\n  }\n\n  //Copy rest of the points over\n  for(var i=0; i<n; ++i) {\n    var h = lifted[i]\n    dpoints[i + d + 1] = h.point\n    dindex[i + d + 1] =  h.index\n  }\n\n  //Construct convex hull\n  var hull = ch(dpoints, false)\n  if(includePointAtInfinity) {\n    hull = hull.filter(function(cell) {\n      var count = 0\n      for(var j=0; j<=d; ++j) {\n        var v = dindex[cell[j]]\n        if(v < 0) {\n          if(++count >= 2) {\n            return false\n          }\n        }\n        cell[j] = v\n      }\n      return true\n    })\n  } else {\n    hull = hull.filter(function(cell) {\n      for(var i=0; i<=d; ++i) {\n        var v = dindex[cell[i]]\n        if(v < 0) {\n          return false\n        }\n        cell[i] = v\n      }\n      return true\n    })\n  }\n\n  if(d & 1) {\n    for(var i=0; i<hull.length; ++i) {\n      var h = hull[i]\n      var x = h[0]\n      h[0] = h[1]\n      h[1] = x\n    }\n  }\n\n  return hull\n}","\"use strict\"\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe","\"use strict\"\n\n//High level idea:\n// 1. Use Clarkson's incremental construction to find convex hull\n// 2. Point location in triangulation by jump and walk\n\nmodule.exports = incrementalConvexHull\n\nvar orient = require(\"robust-orientation\")\nvar compareCell = require(\"simplicial-complex\").compareCells\n\nfunction compareInt(a, b) {\n  return a - b\n}\n\nfunction Simplex(vertices, adjacent, boundary) {\n  this.vertices = vertices\n  this.adjacent = adjacent\n  this.boundary = boundary\n  this.lastVisited = -1\n}\n\nSimplex.prototype.flip = function() {\n  var t = this.vertices[0]\n  this.vertices[0] = this.vertices[1]\n  this.vertices[1] = t\n  var u = this.adjacent[0]\n  this.adjacent[0] = this.adjacent[1]\n  this.adjacent[1] = u\n}\n\nfunction GlueFacet(vertices, cell, index) {\n  this.vertices = vertices\n  this.cell = cell\n  this.index = index\n}\n\nfunction compareGlue(a, b) {\n  return compareCell(a.vertices, b.vertices)\n}\n\nfunction bakeOrient(d) {\n  var code = [\"function orient(){var tuple=this.tuple;return test(\"]\n  for(var i=0; i<=d; ++i) {\n    if(i > 0) {\n      code.push(\",\")\n    }\n    code.push(\"tuple[\", i, \"]\")\n  }\n  code.push(\")}return orient\")\n  var proc = new Function(\"test\", code.join(\"\"))\n  var test = orient[d+1]\n  if(!test) {\n    test = orient\n  }\n  return proc(test)\n}\n\nvar BAKED = []\n\nfunction Triangulation(dimension, vertices, simplices) {\n  this.dimension = dimension\n  this.vertices = vertices\n  this.simplices = simplices\n  this.interior = simplices.filter(function(c) {\n    return !c.boundary\n  })\n\n  this.tuple = new Array(dimension+1)\n  for(var i=0; i<=dimension; ++i) {\n    this.tuple[i] = this.vertices[i]\n  }\n\n  var o = BAKED[dimension]\n  if(!o) {\n    o = BAKED[dimension] = bakeOrient(dimension)\n  }\n  this.orient = o\n}\n\nvar proto = Triangulation.prototype\n\n//Degenerate situation where we are on boundary, but coplanar to face\nproto.handleBoundaryDegeneracy = function(cell, point) {\n  var d = this.dimension\n  var n = this.vertices.length - 1\n  var tuple = this.tuple\n  var verts = this.vertices\n\n  //Dumb solution: Just do dfs from boundary cell until we find any peak, or terminate\n  var toVisit = [ cell ]\n  cell.lastVisited = -n\n  while(toVisit.length > 0) {\n    cell = toVisit.pop()\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n    for(var i=0; i<=d; ++i) {\n      var neighbor = cellAdj[i]\n      if(!neighbor.boundary || neighbor.lastVisited <= -n) {\n        continue\n      }\n      var nv = neighbor.vertices\n      for(var j=0; j<=d; ++j) {\n        var vv = nv[j]\n        if(vv < 0) {\n          tuple[j] = point\n        } else {\n          tuple[j] = verts[vv]\n        }\n      }\n      var o = this.orient()\n      if(o > 0) {\n        return neighbor\n      }\n      neighbor.lastVisited = -n\n      if(o === 0) {\n        toVisit.push(neighbor)\n      }\n    }\n  }\n  return null\n}\n\nproto.walk = function(point, random) {\n  //Alias local properties\n  var n = this.vertices.length - 1\n  var d = this.dimension\n  var verts = this.vertices\n  var tuple = this.tuple\n\n  //Compute initial jump cell\n  var initIndex = random ? (this.interior.length * Math.random())|0 : (this.interior.length-1)\n  var cell = this.interior[ initIndex ]\n\n  //Start walking\nouterLoop:\n  while(!cell.boundary) {\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n\n    for(var i=0; i<=d; ++i) {\n      tuple[i] = verts[cellVerts[i]]\n    }\n    cell.lastVisited = n\n\n    //Find farthest adjacent cell\n    for(var i=0; i<=d; ++i) {\n      var neighbor = cellAdj[i]\n      if(neighbor.lastVisited >= n) {\n        continue\n      }\n      var prev = tuple[i]\n      tuple[i] = point\n      var o = this.orient()\n      tuple[i] = prev\n      if(o < 0) {\n        cell = neighbor\n        continue outerLoop\n      } else {\n        if(!neighbor.boundary) {\n          neighbor.lastVisited = n\n        } else {\n          neighbor.lastVisited = -n\n        }\n      }\n    }\n    return\n  }\n\n  return cell\n}\n\nproto.addPeaks = function(point, cell) {\n  var n = this.vertices.length - 1\n  var d = this.dimension\n  var verts = this.vertices\n  var tuple = this.tuple\n  var interior = this.interior\n  var simplices = this.simplices\n\n  //Walking finished at boundary, time to add peaks\n  var tovisit = [ cell ]\n\n  //Stretch initial boundary cell into a peak\n  cell.lastVisited = n\n  cell.vertices[cell.vertices.indexOf(-1)] = n\n  cell.boundary = false\n  interior.push(cell)\n\n  //Record a list of all new boundaries created by added peaks so we can glue them together when we are all done\n  var glueFacets = []\n\n  //Do a traversal of the boundary walking outward from starting peak\n  while(tovisit.length > 0) {\n    //Pop off peak and walk over adjacent cells\n    var cell = tovisit.pop()\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n    var indexOfN = cellVerts.indexOf(n)\n    if(indexOfN < 0) {\n      continue\n    }\n\n    for(var i=0; i<=d; ++i) {\n      if(i === indexOfN) {\n        continue\n      }\n\n      //For each boundary neighbor of the cell\n      var neighbor = cellAdj[i]\n      if(!neighbor.boundary || neighbor.lastVisited >= n) {\n        continue\n      }\n\n      var nv = neighbor.vertices\n\n      //Test if neighbor is a peak\n      if(neighbor.lastVisited !== -n) {      \n        //Compute orientation of p relative to each boundary peak\n        var indexOfNeg1 = 0\n        for(var j=0; j<=d; ++j) {\n          if(nv[j] < 0) {\n            indexOfNeg1 = j\n            tuple[j] = point\n          } else {\n            tuple[j] = verts[nv[j]]\n          }\n        }\n        var o = this.orient()\n\n        //Test if neighbor cell is also a peak\n        if(o > 0) {\n          nv[indexOfNeg1] = n\n          neighbor.boundary = false\n          interior.push(neighbor)\n          tovisit.push(neighbor)\n          neighbor.lastVisited = n\n          continue\n        } else {\n          neighbor.lastVisited = -n\n        }\n      }\n\n      var na = neighbor.adjacent\n\n      //Otherwise, replace neighbor with new face\n      var vverts = cellVerts.slice()\n      var vadj = cellAdj.slice()\n      var ncell = new Simplex(vverts, vadj, true)\n      simplices.push(ncell)\n\n      //Connect to neighbor\n      var opposite = na.indexOf(cell)\n      if(opposite < 0) {\n        continue\n      }\n      na[opposite] = ncell\n      vadj[indexOfN] = neighbor\n\n      //Connect to cell\n      vverts[i] = -1\n      vadj[i] = cell\n      cellAdj[i] = ncell\n\n      //Flip facet\n      ncell.flip()\n\n      //Add to glue list\n      for(var j=0; j<=d; ++j) {\n        var uu = vverts[j]\n        if(uu < 0 || uu === n) {\n          continue\n        }\n        var nface = new Array(d-1)\n        var nptr = 0\n        for(var k=0; k<=d; ++k) {\n          var vv = vverts[k]\n          if(vv < 0 || k === j) {\n            continue\n          }\n          nface[nptr++] = vv\n        }\n        glueFacets.push(new GlueFacet(nface, ncell, j))\n      }\n    }\n  }\n\n  //Glue boundary facets together\n  glueFacets.sort(compareGlue)\n\n  for(var i=0; i+1<glueFacets.length; i+=2) {\n    var a = glueFacets[i]\n    var b = glueFacets[i+1]\n    var ai = a.index\n    var bi = b.index\n    if(ai < 0 || bi < 0) {\n      continue\n    }\n    a.cell.adjacent[a.index] = b.cell\n    b.cell.adjacent[b.index] = a.cell\n  }\n}\n\nproto.insert = function(point, random) {\n  //Add point\n  var verts = this.vertices\n  verts.push(point)\n\n  var cell = this.walk(point, random)\n  if(!cell) {\n    return\n  }\n\n  //Alias local properties\n  var d = this.dimension\n  var tuple = this.tuple\n\n  //Degenerate case: If point is coplanar to cell, then walk until we find a non-degenerate boundary\n  for(var i=0; i<=d; ++i) {\n    var vv = cell.vertices[i]\n    if(vv < 0) {\n      tuple[i] = point\n    } else {\n      tuple[i] = verts[vv]\n    }\n  }\n  var o = this.orient(tuple)\n  if(o < 0) {\n    return\n  } else if(o === 0) {\n    cell = this.handleBoundaryDegeneracy(cell, point)\n    if(!cell) {\n      return\n    }\n  }\n\n  //Add peaks\n  this.addPeaks(point, cell)\n}\n\n//Extract all boundary cells\nproto.boundary = function() {\n  var d = this.dimension\n  var boundary = []\n  var cells = this.simplices\n  var nc = cells.length\n  for(var i=0; i<nc; ++i) {\n    var c = cells[i]\n    if(c.boundary) {\n      var bcell = new Array(d)\n      var cv = c.vertices\n      var ptr = 0\n      var parity = 0\n      for(var j=0; j<=d; ++j) {\n        if(cv[j] >= 0) {\n          bcell[ptr++] = cv[j]\n        } else {\n          parity = j&1\n        }\n      }\n      if(parity === (d&1)) {\n        var t = bcell[0]\n        bcell[0] = bcell[1]\n        bcell[1] = t\n      }\n      boundary.push(bcell)\n    }\n  }\n  return boundary\n}\n\nfunction incrementalConvexHull(points, randomSearch) {\n  var n = points.length\n  if(n === 0) {\n    throw new Error(\"Must have at least d+1 points\")\n  }\n  var d = points[0].length\n  if(n <= d) {\n    throw new Error(\"Must input at least d+1 points\")\n  }\n\n  //FIXME: This could be degenerate, but need to select d+1 non-coplanar points to bootstrap process\n  var initialSimplex = points.slice(0, d+1)\n\n  //Make sure initial simplex is positively oriented\n  var o = orient.apply(void 0, initialSimplex)\n  if(o === 0) {\n    throw new Error(\"Input not in general position\")\n  }\n  var initialCoords = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    initialCoords[i] = i\n  }\n  if(o < 0) {\n    initialCoords[0] = 1\n    initialCoords[1] = 0\n  }\n\n  //Create initial topological index, glue pointers together (kind of messy)\n  var initialCell = new Simplex(initialCoords, new Array(d+1), false)\n  var boundary = initialCell.adjacent\n  var list = new Array(d+2)\n  for(var i=0; i<=d; ++i) {\n    var verts = initialCoords.slice()\n    for(var j=0; j<=d; ++j) {\n      if(j === i) {\n        verts[j] = -1\n      }\n    }\n    var t = verts[0]\n    verts[0] = verts[1]\n    verts[1] = t\n    var cell = new Simplex(verts, new Array(d+1), true)\n    boundary[i] = cell\n    list[i] = cell\n  }\n  list[d+1] = initialCell\n  for(var i=0; i<=d; ++i) {\n    var verts = boundary[i].vertices\n    var adj = boundary[i].adjacent\n    for(var j=0; j<=d; ++j) {\n      var v = verts[j]\n      if(v < 0) {\n        adj[j] = initialCell\n        continue\n      }\n      for(var k=0; k<=d; ++k) {\n        if(boundary[k].vertices.indexOf(v) < 0) {\n          adj[j] = boundary[k]\n        }\n      }\n    }\n  }\n\n  //Initialize triangles\n  var triangles = new Triangulation(d, initialSimplex, list)\n\n  //Insert remaining points\n  var useRandom = !!randomSearch\n  for(var i=d+1; i<n; ++i) {\n    triangles.insert(points[i], useRandom)\n  }\n  \n  //Extract boundary cells\n  return triangles.boundary()\n}","'use strict'\n\nvar compareCell = require('compare-cell')\nvar compareOrientedCell = require('compare-oriented-cell')\nvar orientation = require('cell-orientation')\n\nmodule.exports = reduceCellComplex\n\nfunction reduceCellComplex(cells) {\n  cells.sort(compareOrientedCell)\n  var n = cells.length\n  var ptr = 0\n  for(var i=0; i<n; ++i) {\n    var c = cells[i]\n    var o = orientation(c)\n    if(o === 0) {\n      continue\n    }\n    if(ptr > 0) {\n      var f = cells[ptr-1]\n      if(compareCell(c, f) === 0 &&\n         orientation(f)    !== o) {\n        ptr -= 1\n        continue\n      }\n    }\n    cells[ptr++] = c\n  }\n  cells.length = ptr\n  return cells\n}\n","\"use strict\"\n\nmodule.exports = compressExpansion\n\nfunction compressExpansion(e) {\n  var m = e.length\n  var Q = e[e.length-1]\n  var bottom = m\n  for(var i=m-2; i>=0; --i) {\n    var a = Q\n    var b = e[i]\n    Q = a + b\n    var bv = Q - a\n    var q = b - bv\n    if(q) {\n      e[--bottom] = Q\n      Q = q\n    }\n  }\n  var top = 0\n  for(var i=bottom; i<m; ++i) {\n    var a = e[i]\n    var b = Q\n    Q = a + b\n    var bv = Q - a\n    var q = b - bv\n    if(q) {\n      e[top++] = q\n    }\n  }\n  e[top++] = Q\n  e.length = top\n  return e\n}","\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar robustSum = require(\"robust-sum\")\nvar robustScale = require(\"robust-scale\")\nvar compress = require(\"robust-compress\")\n\nvar NUM_EXPANDED = 6\n\nfunction cofactor(m, c) {\n  var result = new Array(m.length-1)\n  for(var i=1; i<m.length; ++i) {\n    var r = result[i-1] = new Array(m.length-1)\n    for(var j=0,k=0; j<m.length; ++j) {\n      if(j === c) {\n        continue\n      }\n      r[k++] = m[i][j]\n    }\n  }\n  return result\n}\n\nfunction matrix(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = new Array(n)\n    for(var j=0; j<n; ++j) {\n      result[i][j] = [\"m[\", i, \"][\", j, \"]\"].join(\"\")\n    }\n  }\n  return result\n}\n\nfunction sign(n) {\n  if(n & 1) {\n    return \"-\"\n  }\n  return \"\"\n}\n\nfunction generateSum(expr) {\n  if(expr.length === 1) {\n    return expr[0]\n  } else if(expr.length === 2) {\n    return [\"sum(\", expr[0], \",\", expr[1], \")\"].join(\"\")\n  } else {\n    var m = expr.length>>1\n    return [\"sum(\", generateSum(expr.slice(0, m)), \",\", generateSum(expr.slice(m)), \")\"].join(\"\")\n  }\n}\n\nfunction determinant(m) {\n  if(m.length === 2) {\n    return [\"sum(prod(\", m[0][0], \",\", m[1][1], \"),prod(-\", m[0][1], \",\", m[1][0], \"))\"].join(\"\")\n  } else {\n    var expr = []\n    for(var i=0; i<m.length; ++i) {\n      expr.push([\"scale(\", determinant(cofactor(m, i)), \",\", sign(i), m[0][i], \")\"].join(\"\"))\n    }\n    return generateSum(expr)\n  }\n}\n\nfunction compileDeterminant(n) {\n  var proc = new Function(\"sum\", \"scale\", \"prod\", \"compress\", [\n    \"function robustDeterminant\",n, \"(m){return compress(\", \n      determinant(matrix(n)),\n    \")};return robustDeterminant\", n].join(\"\"))\n  return proc(robustSum, robustScale, twoProduct, compress)\n}\n\nvar CACHE = [\n  function robustDeterminant0() { return [0] },\n  function robustDeterminant1(m) { return [m[0][0]] }\n]\n\nfunction generateDispatch() {\n  while(CACHE.length < NUM_EXPANDED) {\n    CACHE.push(compileDeterminant(CACHE.length))\n  }\n  var procArgs = []\n  var code = [\"function robustDeterminant(m){switch(m.length){\"]\n  for(var i=0; i<NUM_EXPANDED; ++i) {\n    procArgs.push(\"det\" + i)\n    code.push(\"case \", i, \":return det\", i, \"(m);\")\n  }\n  code.push(\"}\\\nvar det=CACHE[m.length];\\\nif(!det)\\\ndet=CACHE[m.length]=gen(m.length);\\\nreturn det(m);\\\n}\\\nreturn robustDeterminant\")\n  procArgs.push(\"CACHE\", \"gen\", code.join(\"\"))\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, compileDeterminant]))\n  for(var i=0; i<CACHE.length; ++i) {\n    module.exports[i] = CACHE[i]\n  }\n}\n\ngenerateDispatch()","\"use strict\"\n\nvar determinant = require(\"robust-determinant\")\n\nvar NUM_EXPAND = 6\n\nfunction generateSolver(n) {\n  var funcName = \"robustLinearSolve\" + n + \"d\"\n  var code = [\"function \", funcName, \"(A,b){return [\"]\n  for(var i=0; i<n; ++i) {\n    code.push(\"det([\")\n    for(var j=0; j<n; ++j) {\n      if(j > 0) {\n        code.push(\",\")\n      }\n      code.push(\"[\")\n      for(var k=0; k<n; ++k) {\n        if(k > 0) {\n          code.push(\",\")\n        }\n        if(k === i) {\n          code.push(\"+b[\", j, \"]\")\n        } else {\n          code.push(\"+A[\", j, \"][\", k, \"]\")\n        }\n      }\n      code.push(\"]\")\n    }\n    code.push(\"]),\")\n  }\n  code.push(\"det(A)]}return \", funcName)\n  var proc = new Function(\"det\", code.join(\"\"))\n  if(n < 6) {\n    return proc(determinant[n])\n  }\n  return proc(determinant)\n}\n\nfunction robustLinearSolve0d() {\n  return [ 0 ]\n}\n\nfunction robustLinearSolve1d(A, b) {\n  return [ [ b[0] ], [ A[0][0] ] ]\n}\n\nvar CACHE = [\n  robustLinearSolve0d,\n  robustLinearSolve1d\n]\n\nfunction generateDispatch() {\n  while(CACHE.length < NUM_EXPAND) {\n    CACHE.push(generateSolver(CACHE.length))\n  }\n  var procArgs = []\n  var code = [\"function dispatchLinearSolve(A,b){switch(A.length){\"]\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    procArgs.push(\"s\" + i)\n    code.push(\"case \", i, \":return s\", i, \"(A,b);\")\n  }\n  code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\")\n  procArgs.push(\"CACHE\", \"g\", code.join(\"\"))\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, generateSolver]))\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    module.exports[i] = CACHE[i]\n  }\n}\n\ngenerateDispatch()","\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar robustSum = require(\"robust-sum\")\nvar robustScale = require(\"robust-scale\")\nvar robustSubtract = require(\"robust-subtract\")\n\nvar NUM_EXPAND = 5\n\nvar EPSILON     = 1.1102230246251565e-16\nvar ERRBOUND3   = (3.0 + 16.0 * EPSILON) * EPSILON\nvar ERRBOUND4   = (7.0 + 56.0 * EPSILON) * EPSILON\n\nfunction orientation_3(sum, prod, scale, sub) {\n  return function orientation3Exact(m0, m1, m2) {\n    var p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])))\n    var n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_4(sum, prod, scale, sub) {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    var p = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))))\n    var n = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_5(sum, prod, scale, sub) {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    var p = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m1[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), -m2[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m3[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), -m4[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m1[3])))), sum(sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m3[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), -m4[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), m0[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m1[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m3[3])))))\n    var n = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m2[3])), sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), m3[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m4[3]))), sum(sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), -m1[3])), sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m4[3]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation(n) {\n  var fn =\n    n === 3 ? orientation_3 :\n    n === 4 ? orientation_4 : orientation_5\n\n  return fn(robustSum, twoProduct, robustScale, robustSubtract)\n}\n\nvar orientation3Exact = orientation(3)\nvar orientation4Exact = orientation(4)\n\nvar CACHED = [\n  function orientation0() { return 0 },\n  function orientation1() { return 0 },\n  function orientation2(a, b) {\n    return b[0] - a[0]\n  },\n  function orientation3(a, b, c) {\n    var l = (a[1] - c[1]) * (b[0] - c[0])\n    var r = (a[0] - c[0]) * (b[1] - c[1])\n    var det = l - r\n    var s\n    if(l > 0) {\n      if(r <= 0) {\n        return det\n      } else {\n        s = l + r\n      }\n    } else if(l < 0) {\n      if(r >= 0) {\n        return det\n      } else {\n        s = -(l + r)\n      }\n    } else {\n      return det\n    }\n    var tol = ERRBOUND3 * s\n    if(det >= tol || det <= -tol) {\n      return det\n    }\n    return orientation3Exact(a, b, c)\n  },\n  function orientation4(a,b,c,d) {\n    var adx = a[0] - d[0]\n    var bdx = b[0] - d[0]\n    var cdx = c[0] - d[0]\n    var ady = a[1] - d[1]\n    var bdy = b[1] - d[1]\n    var cdy = c[1] - d[1]\n    var adz = a[2] - d[2]\n    var bdz = b[2] - d[2]\n    var cdz = c[2] - d[2]\n    var bdxcdy = bdx * cdy\n    var cdxbdy = cdx * bdy\n    var cdxady = cdx * ady\n    var adxcdy = adx * cdy\n    var adxbdy = adx * bdy\n    var bdxady = bdx * ady\n    var det = adz * (bdxcdy - cdxbdy)\n            + bdz * (cdxady - adxcdy)\n            + cdz * (adxbdy - bdxady)\n    var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz)\n                  + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz)\n                  + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz)\n    var tol = ERRBOUND4 * permanent\n    if ((det > tol) || (-det > tol)) {\n      return det\n    }\n    return orientation4Exact(a,b,c,d)\n  }\n]\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length]\n  if(!proc) {\n    proc = CACHED[args.length] = orientation(args.length)\n  }\n  return proc.apply(undefined, args)\n}\n\nfunction proc (slow, o0, o1, o2, o3, o4, o5) {\n  return function getOrientation(a0, a1, a2, a3, a4) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return 0;\n      case 2:\n        return o2(a0, a1)\n      case 3:\n        return o3(a0, a1, a2)\n      case 4:\n        return o4(a0, a1, a2, a3)\n      case 5:\n        return o5(a0, a1, a2, a3, a4)\n    }\n\n    var s = new Array(arguments.length)\n    for (var i = 0; i < arguments.length; ++i) {\n      s[i] = arguments[i]\n    }\n    return slow(s)\n  }\n}\n\nfunction generateOrientationProc() {\n  while(CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length))\n  }\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED))\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i]\n  }\n}\n\ngenerateOrientationProc()","\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar twoSum = require(\"two-sum\")\n\nmodule.exports = scaleLinearExpansion\n\nfunction scaleLinearExpansion(e, scale) {\n  var n = e.length\n  if(n === 1) {\n    var ts = twoProduct(e[0], scale)\n    if(ts[0]) {\n      return ts\n    }\n    return [ ts[1] ]\n  }\n  var g = new Array(2 * n)\n  var q = [0.1, 0.1]\n  var t = [0.1, 0.1]\n  var count = 0\n  twoProduct(e[0], scale, q)\n  if(q[0]) {\n    g[count++] = q[0]\n  }\n  for(var i=1; i<n; ++i) {\n    twoProduct(e[i], scale, t)\n    var pq = q[1]\n    twoSum(pq, t[0], q)\n    if(q[0]) {\n      g[count++] = q[0]\n    }\n    var a = t[1]\n    var b = q[1]\n    var x = a + b\n    var bv = x - a\n    var y = b - bv\n    q[1] = x\n    if(y) {\n      g[count++] = y\n    }\n  }\n  if(q[1]) {\n    g[count++] = q[1]\n  }\n  if(count === 0) {\n    g[count++] = 0.0\n  }\n  g.length = count\n  return g\n}","\"use strict\"\n\nmodule.exports = robustSubtract\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b\n  var bv = x - a\n  var av = x - bv\n  var br = b - bv\n  var ar = a - av\n  var y = ar + br\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction robustSubtract(e, f) {\n  var ne = e.length|0\n  var nf = f.length|0\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], -f[0])\n  }\n  var n = ne + nf\n  var g = new Array(n)\n  var count = 0\n  var eptr = 0\n  var fptr = 0\n  var abs = Math.abs\n  var ei = e[eptr]\n  var ea = abs(ei)\n  var fi = -f[fptr]\n  var fa = abs(fi)\n  var a, b\n  if(ea < fa) {\n    b = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    b = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n      fa = abs(fi)\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    a = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n      fa = abs(fi)\n    }\n  }\n  var x = a + b\n  var bv = x - a\n  var y = b - bv\n  var q0 = y\n  var q1 = x\n  var _x, _bv, _av, _br, _ar\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei\n      eptr += 1\n      if(eptr < ne) {\n        ei = e[eptr]\n        ea = abs(ei)\n      }\n    } else {\n      a = fi\n      fptr += 1\n      if(fptr < nf) {\n        fi = -f[fptr]\n        fa = abs(fi)\n      }\n    }\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n  }\n  while(eptr < ne) {\n    a = ei\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n    }\n  }\n  while(fptr < nf) {\n    a = fi\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    } \n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n    }\n  }\n  if(q0) {\n    g[count++] = q0\n  }\n  if(q1) {\n    g[count++] = q1\n  }\n  if(!count) {\n    g[count++] = 0.0  \n  }\n  g.length = count\n  return g\n}","\"use strict\"\n\nmodule.exports = linearExpansionSum\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b\n  var bv = x - a\n  var av = x - bv\n  var br = b - bv\n  var ar = a - av\n  var y = ar + br\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction linearExpansionSum(e, f) {\n  var ne = e.length|0\n  var nf = f.length|0\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], f[0])\n  }\n  var n = ne + nf\n  var g = new Array(n)\n  var count = 0\n  var eptr = 0\n  var fptr = 0\n  var abs = Math.abs\n  var ei = e[eptr]\n  var ea = abs(ei)\n  var fi = f[fptr]\n  var fa = abs(fi)\n  var a, b\n  if(ea < fa) {\n    b = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    b = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    a = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  var x = a + b\n  var bv = x - a\n  var y = b - bv\n  var q0 = y\n  var q1 = x\n  var _x, _bv, _av, _br, _ar\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei\n      eptr += 1\n      if(eptr < ne) {\n        ei = e[eptr]\n        ea = abs(ei)\n      }\n    } else {\n      a = fi\n      fptr += 1\n      if(fptr < nf) {\n        fi = f[fptr]\n        fa = abs(fi)\n      }\n    }\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n  }\n  while(eptr < ne) {\n    a = ei\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n    }\n  }\n  while(fptr < nf) {\n    a = fi\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    } \n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n    }\n  }\n  if(q0) {\n    g[count++] = q0\n  }\n  if(q1) {\n    g[count++] = q1\n  }\n  if(!count) {\n    g[count++] = 0.0  \n  }\n  g.length = count\n  return g\n}","'use strict'\n\nmodule.exports = boundary\n\nvar bnd = require('boundary-cells')\nvar reduce = require('reduce-simplicial-complex')\n\nfunction boundary(cells) {\n  return reduce(bnd(cells))\n}\n","\"use strict\"; \"use restrict\";\n\nvar bits      = require(\"bit-twiddle\")\n  , UnionFind = require(\"union-find\")\n\n//Returns the dimension of a cell complex\nfunction dimension(cells) {\n  var d = 0\n    , max = Math.max\n  for(var i=0, il=cells.length; i<il; ++i) {\n    d = max(d, cells[i].length)\n  }\n  return d-1\n}\nexports.dimension = dimension\n\n//Counts the number of vertices in faces\nfunction countVertices(cells) {\n  var vc = -1\n    , max = Math.max\n  for(var i=0, il=cells.length; i<il; ++i) {\n    var c = cells[i]\n    for(var j=0, jl=c.length; j<jl; ++j) {\n      vc = max(vc, c[j])\n    }\n  }\n  return vc+1\n}\nexports.countVertices = countVertices\n\n//Returns a deep copy of cells\nfunction cloneCells(cells) {\n  var ncells = new Array(cells.length)\n  for(var i=0, il=cells.length; i<il; ++i) {\n    ncells[i] = cells[i].slice(0)\n  }\n  return ncells\n}\nexports.cloneCells = cloneCells\n\n//Ranks a pair of cells up to permutation\nfunction compareCells(a, b) {\n  var n = a.length\n    , t = a.length - b.length\n    , min = Math.min\n  if(t) {\n    return t\n  }\n  switch(n) {\n    case 0:\n      return 0;\n    case 1:\n      return a[0] - b[0];\n    case 2:\n      var d = a[0]+a[1]-b[0]-b[1]\n      if(d) {\n        return d\n      }\n      return min(a[0],a[1]) - min(b[0],b[1])\n    case 3:\n      var l1 = a[0]+a[1]\n        , m1 = b[0]+b[1]\n      d = l1+a[2] - (m1+b[2])\n      if(d) {\n        return d\n      }\n      var l0 = min(a[0], a[1])\n        , m0 = min(b[0], b[1])\n        , d  = min(l0, a[2]) - min(m0, b[2])\n      if(d) {\n        return d\n      }\n      return min(l0+a[2], l1) - min(m0+b[2], m1)\n    \n    //TODO: Maybe optimize n=4 as well?\n    \n    default:\n      var as = a.slice(0)\n      as.sort()\n      var bs = b.slice(0)\n      bs.sort()\n      for(var i=0; i<n; ++i) {\n        t = as[i] - bs[i]\n        if(t) {\n          return t\n        }\n      }\n      return 0\n  }\n}\nexports.compareCells = compareCells\n\nfunction compareZipped(a, b) {\n  return compareCells(a[0], b[0])\n}\n\n//Puts a cell complex into normal order for the purposes of findCell queries\nfunction normalize(cells, attr) {\n  if(attr) {\n    var len = cells.length\n    var zipped = new Array(len)\n    for(var i=0; i<len; ++i) {\n      zipped[i] = [cells[i], attr[i]]\n    }\n    zipped.sort(compareZipped)\n    for(var i=0; i<len; ++i) {\n      cells[i] = zipped[i][0]\n      attr[i] = zipped[i][1]\n    }\n    return cells\n  } else {\n    cells.sort(compareCells)\n    return cells\n  }\n}\nexports.normalize = normalize\n\n//Removes all duplicate cells in the complex\nfunction unique(cells) {\n  if(cells.length === 0) {\n    return []\n  }\n  var ptr = 1\n    , len = cells.length\n  for(var i=1; i<len; ++i) {\n    var a = cells[i]\n    if(compareCells(a, cells[i-1])) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      cells[ptr++] = a\n    }\n  }\n  cells.length = ptr\n  return cells\n}\nexports.unique = unique;\n\n//Finds a cell in a normalized cell complex\nfunction findCell(cells, c) {\n  var lo = 0\n    , hi = cells.length-1\n    , r  = -1\n  while (lo <= hi) {\n    var mid = (lo + hi) >> 1\n      , s   = compareCells(cells[mid], c)\n    if(s <= 0) {\n      if(s === 0) {\n        r = mid\n      }\n      lo = mid + 1\n    } else if(s > 0) {\n      hi = mid - 1\n    }\n  }\n  return r\n}\nexports.findCell = findCell;\n\n//Builds an index for an n-cell.  This is more general than dual, but less efficient\nfunction incidence(from_cells, to_cells) {\n  var index = new Array(from_cells.length)\n  for(var i=0, il=index.length; i<il; ++i) {\n    index[i] = []\n  }\n  var b = []\n  for(var i=0, n=to_cells.length; i<n; ++i) {\n    var c = to_cells[i]\n    var cl = c.length\n    for(var k=1, kn=(1<<cl); k<kn; ++k) {\n      b.length = bits.popCount(k)\n      var l = 0\n      for(var j=0; j<cl; ++j) {\n        if(k & (1<<j)) {\n          b[l++] = c[j]\n        }\n      }\n      var idx=findCell(from_cells, b)\n      if(idx < 0) {\n        continue\n      }\n      while(true) {\n        index[idx++].push(i)\n        if(idx >= from_cells.length || compareCells(from_cells[idx], b) !== 0) {\n          break\n        }\n      }\n    }\n  }\n  return index\n}\nexports.incidence = incidence\n\n//Computes the dual of the mesh.  This is basically an optimized version of buildIndex for the situation where from_cells is just the list of vertices\nfunction dual(cells, vertex_count) {\n  if(!vertex_count) {\n    return incidence(unique(skeleton(cells, 0)), cells, 0)\n  }\n  var res = new Array(vertex_count)\n  for(var i=0; i<vertex_count; ++i) {\n    res[i] = []\n  }\n  for(var i=0, len=cells.length; i<len; ++i) {\n    var c = cells[i]\n    for(var j=0, cl=c.length; j<cl; ++j) {\n      res[c[j]].push(i)\n    }\n  }\n  return res\n}\nexports.dual = dual\n\n//Enumerates all cells in the complex\nfunction explode(cells) {\n  var result = []\n  for(var i=0, il=cells.length; i<il; ++i) {\n    var c = cells[i]\n      , cl = c.length|0\n    for(var j=1, jl=(1<<cl); j<jl; ++j) {\n      var b = []\n      for(var k=0; k<cl; ++k) {\n        if((j >>> k) & 1) {\n          b.push(c[k])\n        }\n      }\n      result.push(b)\n    }\n  }\n  return normalize(result)\n}\nexports.explode = explode\n\n//Enumerates all of the n-cells of a cell complex\nfunction skeleton(cells, n) {\n  if(n < 0) {\n    return []\n  }\n  var result = []\n    , k0     = (1<<(n+1))-1\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var k=k0; k<(1<<c.length); k=bits.nextCombination(k)) {\n      var b = new Array(n+1)\n        , l = 0\n      for(var j=0; j<c.length; ++j) {\n        if(k & (1<<j)) {\n          b[l++] = c[j]\n        }\n      }\n      result.push(b)\n    }\n  }\n  return normalize(result)\n}\nexports.skeleton = skeleton;\n\n//Computes the boundary of all cells, does not remove duplicates\nfunction boundary(cells) {\n  var res = []\n  for(var i=0,il=cells.length; i<il; ++i) {\n    var c = cells[i]\n    for(var j=0,cl=c.length; j<cl; ++j) {\n      var b = new Array(c.length-1)\n      for(var k=0, l=0; k<cl; ++k) {\n        if(k !== j) {\n          b[l++] = c[k]\n        }\n      }\n      res.push(b)\n    }\n  }\n  return normalize(res)\n}\nexports.boundary = boundary;\n\n//Computes connected components for a dense cell complex\nfunction connectedComponents_dense(cells, vertex_count) {\n  var labels = new UnionFind(vertex_count)\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      for(var k=j+1; k<c.length; ++k) {\n        labels.link(c[j], c[k])\n      }\n    }\n  }\n  var components = []\n    , component_labels = labels.ranks\n  for(var i=0; i<component_labels.length; ++i) {\n    component_labels[i] = -1\n  }\n  for(var i=0; i<cells.length; ++i) {\n    var l = labels.find(cells[i][0])\n    if(component_labels[l] < 0) {\n      component_labels[l] = components.length\n      components.push([cells[i].slice(0)])\n    } else {\n      components[component_labels[l]].push(cells[i].slice(0))\n    }\n  }\n  return components\n}\n\n//Computes connected components for a sparse graph\nfunction connectedComponents_sparse(cells) {\n  var vertices  = unique(normalize(skeleton(cells, 0)))\n    , labels    = new UnionFind(vertices.length)\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      var vj = findCell(vertices, [c[j]])\n      for(var k=j+1; k<c.length; ++k) {\n        labels.link(vj, findCell(vertices, [c[k]]))\n      }\n    }\n  }\n  var components        = []\n    , component_labels  = labels.ranks\n  for(var i=0; i<component_labels.length; ++i) {\n    component_labels[i] = -1\n  }\n  for(var i=0; i<cells.length; ++i) {\n    var l = labels.find(findCell(vertices, [cells[i][0]]));\n    if(component_labels[l] < 0) {\n      component_labels[l] = components.length\n      components.push([cells[i].slice(0)])\n    } else {\n      components[component_labels[l]].push(cells[i].slice(0))\n    }\n  }\n  return components\n}\n\n//Computes connected components for a cell complex\nfunction connectedComponents(cells, vertex_count) {\n  if(vertex_count) {\n    return connectedComponents_dense(cells, vertex_count)\n  }\n  return connectedComponents_sparse(cells)\n}\nexports.connectedComponents = connectedComponents\n","\"use strict\"\n\nmodule.exports = twoProduct\n\nvar SPLITTER = +(Math.pow(2, 27) + 1.0)\n\nfunction twoProduct(a, b, result) {\n  var x = a * b\n\n  var c = SPLITTER * a\n  var abig = c - a\n  var ahi = c - abig\n  var alo = a - ahi\n\n  var d = SPLITTER * b\n  var bbig = d - b\n  var bhi = d - bbig\n  var blo = b - bhi\n\n  var err1 = x - (ahi * bhi)\n  var err2 = err1 - (alo * bhi)\n  var err3 = err2 - (ahi * blo)\n\n  var y = alo * blo - err3\n\n  if(result) {\n    result[0] = y\n    result[1] = x\n    return result\n  }\n\n  return [ y, x ]\n}","\"use strict\"\n\nmodule.exports = fastTwoSum\n\nfunction fastTwoSum(a, b, result) {\n\tvar x = a + b\n\tvar bv = x - a\n\tvar av = x - bv\n\tvar br = b - bv\n\tvar ar = a - av\n\tif(result) {\n\t\tresult[0] = ar + br\n\t\tresult[1] = x\n\t\treturn result\n\t}\n\treturn [ar+br, x]\n}","\"use strict\"; \"use restrict\";\n\nmodule.exports = UnionFind;\n\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n  \n  for(var i=0; i<count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\n\nvar proto = UnionFind.prototype\n\nObject.defineProperty(proto, \"length\", {\n  \"get\": function() {\n    return this.roots.length\n  }\n})\n\nproto.makeSet = function() {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n}\n\nproto.find = function(x) {\n  var x0 = x\n  var roots = this.roots;\n  while(roots[x] !== x) {\n    x = roots[x]\n  }\n  while(roots[x0] !== x) {\n    var y = roots[x0]\n    roots[x0] = x\n    x0 = y\n  }\n  return x;\n}\n\nproto.link = function(x, y) {\n  var xr = this.find(x)\n    , yr = this.find(y);\n  if(xr === yr) {\n    return;\n  }\n  var ranks = this.ranks\n    , roots = this.roots\n    , xd    = ranks[xr]\n    , yd    = ranks[yr];\n  if(xd < yd) {\n    roots[xr] = yr;\n  } else if(yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n}","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n"],"names":["module","exports","alpha","points","delaunay","filter","cell","simplex","Array","length","i","circumradius","require","bnd","ac","countTrailingZeros","v","c","INT_BITS","INT_MAX","INT_MIN","sign","abs","mask","min","x","y","max","isPow2","log2","r","shift","log10","popCount","nextPow2","prevPow2","parity","REVERSE_TABLE","tab","s","reverse","interleave2","deinterleave2","n","interleave3","z","deinterleave3","nextCombination","t","cells","j","k","sz","result","ptr","d","b","p","tmp","dup","solve","dot","a","barycentricCircumcenter","N","A","denom","h","numer","circumcenter","D","weights","barycenetric","center","avgDist","Math","pow","sqrt","l1","m1","l0","m0","aw","ax","ay","az","bw","bx","by","bz","as","slice","sort","compareInt","bs","compareCells","ch","uniq","LiftedPoint","this","point","index","compareLifted","ap","bp","includePointAtInfinity","lifted","map","push","triangulate1D","upper","l","dpoints","dindex","u","hull","count","dupe_array","value","dupe_number","randomSearch","Error","initialSimplex","o","orient","apply","initialCoords","initialCell","Simplex","boundary","adjacent","list","verts","vertices","adj","indexOf","triangles","Triangulation","useRandom","insert","compareCell","lastVisited","GlueFacet","compareGlue","prototype","flip","BAKED","dimension","simplices","interior","tuple","code","proc","Function","join","test","bakeOrient","proto","handleBoundaryDegeneracy","toVisit","pop","cellAdj","neighbor","nv","vv","walk","random","initIndex","outerLoop","cellVerts","prev","addPeaks","tovisit","glueFacets","indexOfN","indexOfNeg1","na","vverts","vadj","ncell","opposite","uu","nface","nptr","ai","bi","nc","bcell","cv","compareOrientedCell","orientation","f","e","m","Q","bottom","q","top","twoProduct","robustSum","robustScale","compress","NUM_EXPANDED","cofactor","matrix","generateSum","expr","determinant","compileDeterminant","CACHE","procArgs","undefined","concat","generateDispatch","NUM_EXPAND","generateSolver","funcName","robustSubtract","orientation_3","sum","prod","scale","sub","m2","orientation_4","m3","orientation_5","m4","orientation3Exact","orientation4Exact","CACHED","det","tol","adx","bdx","cdx","ady","bdy","cdy","adz","bdz","cdz","bdxcdy","cdxbdy","cdxady","adxcdy","adxbdy","bdxady","slowOrient","args","slow","o0","o1","o2","o3","o4","o5","a0","a1","a2","a3","a4","arguments","generateOrientationProc","twoSum","ts","g","pq","ne","nf","bv","av","br","ar","scalarScalar","eptr","fptr","ei","ea","fi","fa","_x","_bv","q0","q1","reduce","bits","UnionFind","compareZipped","normalize","attr","len","zipped","unique","findCell","lo","hi","mid","incidence","from_cells","to_cells","il","cl","kn","idx","skeleton","k0","SPLITTER","ahi","alo","bhi","blo","roots","ranks","Object","defineProperty","makeSet","find","x0","link","xr","yr","xd","yd","compare","sorted","unique_pred","unique_eq"],"sourceRoot":""}