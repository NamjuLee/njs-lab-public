{"version":3,"file":"static/js/2284.0499192d.chunk.js","mappings":"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","sources":["njslab/Lab/Project_03_SlowZone/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../lib';\r\nimport { getCSVFromURL, getJSONFromURL } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: number[][] = [];\r\n\r\n    routesMain: any = [];\r\n    routesTreated: any = [];\r\n    routesControl: any = [];\r\n    \r\n    constructor(view: any) {\r\n        super(view);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.id = 'layer';\r\n        canvas.width = this.mView.container.clientWidth;\r\n        canvas.height = this.mView.container.clientHeight;\r\n        canvas.style.background= 'rgba(0, 15, 0, 0.6)';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.pointerEvents = 'none';\r\n        this.mView.container.appendChild(canvas);\r\n\r\n        const path = '/static/research/slow-zone/'\r\n\r\n        \r\n        getCSVFromURL(process.env.PUBLIC_URL + path + 'high_low_connectedness_user.csv').then((d) => {\r\n\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            console.log(line)\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                const lon = +values[3];\r\n                const lat = +values[4];\r\n                if (lon !== 0 || lat !== 0) {\r\n                    this.pts.push([lon, lat]);\r\n                }\r\n            }\r\n            console.log(this.pts);\r\n            this.center(2.3375387, 48.8606701);\r\n            this.zoom(12);\r\n        });\r\n\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'Paris-main-st.geojson').then((data) => {\r\n            for (let i = 0 ; i < data['features'].length; ++i) {\r\n                this.routesMain.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'treated-st.geojson').then((data) => {\r\n            for (let i = 0 ; i < data['features'].length; ++i) {\r\n                this.routesTreated.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'control-st.geojson').then((data) => {\r\n            for (let i = 0 ; i < data['features'].length; ++i) {\r\n                this.routesControl.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        this.start();\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.globalCompositeOperation = 'screen' ; //'lighten';\r\n\r\n          \r\n        renderLine(ctx, this.routesMain, '#00FFFF', 0.5, this.toScreen);\r\n        renderLine(ctx, this.routesControl, '#ff0000', 0.5, this.toScreen);\r\n        renderLine(ctx, this.routesTreated, '#00ff00', 0.5, this.toScreen);\r\n\r\n\r\n        for (let i = 0; i < this.pts.length; ++i) { \r\n            const projected = this.toScreen(this.pts[i][0], this.pts[i][1]); \r\n            renderPoint(ctx, projected[0], projected[1], this.time + 3, 'rgba(255, 0, 0, 0.85)' );\r\n        }\r\n\r\n    }\r\n    keyDown(k: KeyboardEvent): void {\r\n        console.log('key pressed', k);\r\n    }\r\n    mouseDown(x: number, y: number): void {\r\n        console.log('mouse down')\r\n    }\r\n    mouseUp(x: number, y: number): void {\r\n        console.log('mouse up')\r\n    }\r\n    mouseClick(x: number, y: number): void {\r\n        console.log(x,y)\r\n        const mapProjected = this.toMap(x, y);\r\n        this.pts.push(mapProjected);\r\n    }\r\n    mouseMove(x: number, y: number) {\r\n\r\n    }\r\n}\r\n\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n}\r\n\r\nconst renderLine = (ctx: CanvasRenderingContext2D, paths: any, color: string, lineWidth: number, toScreen: (x: number, y: number) => number[]  ) => {\r\n    ctx.strokeStyle = color;\r\n    for (let i = 0; i < paths.length; ++i) { \r\n        const route = paths[i]\r\n        \r\n        for (let j = 0; j < route.length; ++j) { \r\n\r\n            let projected = toScreen(route[j][0][0], route[j][0][1]); \r\n            const path = new Path2D();\r\n            path.moveTo(projected[0], projected[1]);\r\n\r\n            for (let k = 1; k < route[j].length; ++k) { \r\n                projected = toScreen(route[j][k][0], route[j][k][1]); \r\n                path.lineTo(projected[0], projected[1]);\r\n            }\r\n\r\n            ctx.lineWidth =  lineWidth; // Math.sin(lineWidth * 1.5) + 1.15;\r\n            ctx.stroke(path);\r\n        }\r\n    }\r\n}"],"names":["Solution","view","pts","routesMain","routesTreated","routesControl","canvas","document","createElement","id","width","mView","container","clientWidth","height","clientHeight","style","background","position","pointerEvents","appendChild","path","getCSVFromURL","then","d","line","split","console","log","i","length","values","lon","lat","push","center","zoom","getJSONFromURL","data","start","ctx","globalCompositeOperation","renderLine","this","toScreen","projected","renderPoint","time","k","x","y","mapProjected","toMap","RendererJSAPI","t","color","fillStyle","beginPath","arc","Math","sin","PI","closePath","fill","paths","lineWidth","strokeStyle","route","j","Path2D","moveTo","lineTo","stroke"],"sourceRoot":""}