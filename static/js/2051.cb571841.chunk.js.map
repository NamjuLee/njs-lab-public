{"version":3,"file":"static/js/2051.cb571841.chunk.js","mappings":"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","sources":["njslab/Project/Project_99_Playground/Test_01/Monaco/index.ts","njslab/Project/Project_99_Playground/Test_01/index.ts"],"sourcesContent":["// import * as monaco from 'monaco-editor';\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api.js';\nimport 'monaco-editor/esm/vs/language/typescript/monaco.contribution.js';\nimport * as ts from 'typescript';\n\nimport { RendererCanvas } from '../../../../../lib';\n\nexport class MonacoEditor {\n  editor: monaco.editor.IStandaloneCodeEditor;\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  constructor(div: HTMLElement) {\n    div.style.display = 'flex';\n\n    const divLeft = document.createElement('div');\n    div.appendChild(divLeft);\n    divLeft.style.width = '30%';\n    divLeft.style.height = '100%';\n    divLeft.style.background = '#333';\n    divLeft.id = 'dddd'\n\n    var isResizing = false;\n    var lastX = 0;\n\n    divLeft.addEventListener('mousedown', function(e) {\n      isResizing = true;\n      lastX = e.clientX;\n    });\n\n    document.addEventListener('mousemove', function(e) {\n      if (!isResizing) return;\n      \n      var delta = e.clientX - lastX;\n      var newWidth = divLeft.offsetWidth + delta;\n      \n      divLeft.style.width = newWidth + 'px';\n      \n      lastX = e.clientX;\n    });\n    \n    document.addEventListener('mouseup', function() {\n      isResizing = false;\n    });\n\n    const divRight = document.createElement('div');\n    div.appendChild(divRight);\n    // divRight.style.width = '100%';\n    // divRight.style.height = '100%';\n    divRight.style.background = '#888';\n\n    // const dd0 = document.createElement('div');\n    // dd0.style.width = '100%';\n    // dd0.style.height = '100px';\n    // div.appendChild(dd0);\n\n    const run = document.createElement('div');\n    run.textContent = '>>'\n    run.style.background = '#f00';\n    run.style.width = '50px';\n    run.style.height = '50px';\n    run.addEventListener('click', this.runCode);\n    div.appendChild(run);\n\n    // const dd1 = document.createElement('div');\n    // dd1.style.paddingTop = '20px';\n    // dd1.style.width = '100%';\n    // dd1.style.height = '50%';\n    // dd1.id = 'editor';\n    // div.appendChild(dd1);\n    this.editor = initializeEditor(divLeft.id);\n\n    // // // 실행 버튼 클릭 이벤트 리스너 등록\n    // const initializeRunButton = () => {\n    //     const runButton = document.createElement('div');\n    //     runButton.style.width = '100px';\n    //     runButton.style.height = '100px';\n    //     runButton.style.position = 'absolute';\n    //     div.appendChild(runButton);\n    //     runButton.addEventListener('click', this.runCode);\n    // };\n\n    // // 초기화 함수 호출\n    // initializeRunButton();\n\n\n    // this.canvas = document.createElement('canvas');\n    // this.canvas.width = 400;\n    // this.canvas.height = 400;\n    // div.appendChild(this.canvas);\n\n\n    // Get the 2D rendering context\n    // this.ctx = this.canvas.getContext('2d');\n\n  }\n  runCode = () => {\n    const code = this.editor.getValue();\n    const ctx = this.ctx;\n    try {\n      eval(code);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  destroy() {\n    \n  }\n}\n\nconst codedd = \n`console.log(\"Hello, Monaco Editor!\");\nctx.beginPath()\nctx.arc(100, 100, 10, 0, 3.14 * 2)\nctx.fill()\n\n\nclass DD {\na = 3\nb = 2\n    constructor() {\n        console.log(this.a * this.b)\n    }\n}\n\nconst dd = new DD()\n`\n\nconst code = `\nclass CanvasCustomD extends RendererCanvas {\n\n    constructor(div) {\n\n    }\n    render(ctx) {\n      // TODO\n      // You code goes here for the rending loop\n  \n      ctx.beginPath();\n      ctx.arc(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5, 300, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.fillStyle = '#fff';\n      ctx.fill()\n  \n      // !! can stop render after this frame.\n      // this.isStatic = true;\n    }\n    mouseDown(x: number, y: number) {\n      // TODO\n    }\n    mouseUp(x, y) {\n      // TODO\n    }\n    mouseDrag(x, y) {\n      // TODO\n    }\n    mouseClick(x, y) {\n      // TODO\n    }\n    mouseMove(x, y) {\n      // TODO\n    }\n    keyDown(k) {\n      // TODO\n    }\n}\n`;\n\n\nconst initializeEditor = (id: string = 'containerEditor') => {\n\n  // monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n  //   noSemanticValidation: false,\n  //   noSyntaxValidation: false,\n  //   diagnosticCodesToIgnore: [/* top-level return */ 1108]\n  // });\n\n  // // Set up TypeScript compiler options\n  // monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n  //   target: monaco.languages.typescript.ScriptTarget.ES2015,\n  //   allowNonTsExtensions: true\n  // });\n\n  // monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n  //   target: monaco.languages.typescript.ScriptTarget.ESNext,\n  //   allowNonTsExtensions: true\n  // });\n\n  const model = monaco.editor.createModel(code, 'typescript');\n  const editor = monaco.editor.create(document.getElementById(id), {\n    // value: 'console.log(\"Hello, Monaco Editor!\");',\n    model,\n    value: code,\n    language: 'typescript',\n    minimap: { enabled: false },\n    automaticLayout: true,\n    contextmenu: false,\n    \n    fontSize: 16,\n    scrollbar: {\n      useShadows: false,\n      vertical: \"visible\",\n      horizontal: \"visible\",\n      horizontalScrollbarSize: 12,\n      verticalScrollbarSize: 12\n    },\n    theme: 'vs-dark',\n  });\n\n  // editor.langu\n\n  monaco.editor.setModelLanguage(editor.getModel(), 'typescript');\n  editor.updateOptions({ wordWrap: \"on\" })\n\n  return editor;\n};\n\n\nexport class CanvasCustom extends RendererCanvas {\n  constructor(div: HTMLDivElement) {\n    super(div);\n    this.start();\n  }\n  public render(ctx: CanvasRenderingContext2D): void {\n    // TODO\n    // You code goes here for the rending loop\n\n    ctx.beginPath();\n    ctx.arc(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5, 300, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill()\n\n    // !! can stop render after this frame.\n    // this.isStatic = true;\n  }\n  public mouseDown(x: number, y: number): void {\n    // TODO\n  }\n  public mouseUp(x: number, y: number): void {\n    // TODO\n  }\n  public mouseDrag(x: number, y: number): void {\n    // TODO\n  }\n  public mouseClick(x: number, y: number): void {\n    // TODO\n  }\n  public mouseMove(x: number, y: number) {\n    // TODO\n  }\n  public keyDown(k: KeyboardEvent): void {\n    // TODO\n  }\n}\n","import { MonacoEditor } from './Monaco';\r\n\r\nexport class Solution {\r\n  divHost: HTMLDivElement;\r\n  monacoEditor: MonacoEditor;\r\n\r\n  constructor(div: HTMLDivElement) {\r\n    this.divHost = div;\r\n\r\n    const divMain = document.createElement('div');\r\n    divMain.style.background = '#f00';\r\n    divMain.style.display = 'flex';\r\n    divMain.style.width = '100%';\r\n    divMain.style.height = '100%';\r\n    this.divHost.appendChild(divMain)\r\n\r\n    const divEditor = document.createElement('div');\r\n    divEditor.style.width = '100%';\r\n    divEditor.style.height = '100%';\r\n    // divEditor.style.position = 'absolute';\r\n    divEditor.id = 'containerEditor';\r\n    divEditor.style.background = '#555';\r\n    divMain.appendChild(divEditor)\r\n\r\n    // const view = document.createElement('div');\r\n    // view.style.width = '100%';\r\n    // view.style.height = '100%';\r\n    // // view.style.position = 'absolute';\r\n    // view.id = 'containerEditor';\r\n    // view.style.background = '#0f5';\r\n    // div.appendChild(view)\r\n\r\n    this.monacoEditor = new MonacoEditor(divEditor);\r\n    // this.canvas = new CanvasCustom(view);\r\n  }\r\n  public destroy() {\r\n    // window.removeEventListener('resize', this.resize);\r\n    this.monacoEditor.destroy();\r\n    try {\r\n      while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n        this.divHost.removeChild(this.divHost.lastElementChild);\r\n      }\r\n    } catch (error) { }\r\n  }\r\n}\r\n"],"names":["MonacoEditor","constructor","div","editor","canvas","ctx","runCode","code","this","getValue","eval","error","console","style","display","divLeft","document","createElement","appendChild","width","height","background","id","isResizing","lastX","addEventListener","e","clientX","delta","newWidth","offsetWidth","divRight","run","textContent","initializeEditor","destroy","codedd","model","monaco","getElementById","value","language","minimap","enabled","automaticLayout","contextmenu","fontSize","scrollbar","useShadows","vertical","horizontal","horizontalScrollbarSize","verticalScrollbarSize","theme","getModel","updateOptions","wordWrap","CanvasCustom","RendererCanvas","super","start","render","beginPath","arc","Math","PI","closePath","fillStyle","fill","mouseDown","x","y","mouseUp","mouseDrag","mouseClick","mouseMove","keyDown","k","Solution","divHost","monacoEditor","divMain","divEditor","undefined","lastElementChild","removeChild"],"sourceRoot":""}