{"version":3,"file":"static/js/52166.abf5399b.chunk.js","mappings":"iKAMO,MAAMA,EAGTC,YAAYC,GAAa,KAFlBC,aAAO,OACPC,cAAQ,EAEX,MAAMD,EAAUE,SAASC,eAAeJ,GACxCK,KAAKJ,QAAUA,EAGfI,KAAKJ,QAAQK,MAAMC,QAAU,OAC7BF,KAAKJ,QAAQK,MAAME,WAAa,SAEhC,MAAMC,EAAMN,SAASO,cAAc,OACnCD,EAAIH,MAAMK,WAAa,OACvBF,EAAIH,MAAMM,YAAc,OACxBH,EAAIH,MAAMO,gBAAkB,OAC5BJ,EAAIH,MAAMQ,MAAQ,SAClBL,EAAIH,MAAMS,OAAS,QAEnBV,KAAKJ,QAAQe,YAAYP,GAKzBJ,KAAKH,SAAW,IAAIe,EAASR,EA4BjC,CACOS,UACHb,KAAKH,SAASgB,UACd,IACI,KAAOb,KAAKJ,SAAWI,KAAKJ,QAAQkB,kBAAkB,CAClD,MAAMC,EAAYf,KAAKJ,QAAQkB,iBAC/Bd,KAAKJ,QAAQoB,YAAYD,EAC7B,CAGJ,CAFE,MAAOE,GACLC,QAAQD,MAAM,iCAAkCA,EACpD,CAEJ,EAGG,MAAML,UAAiBO,EAAAA,GAE1BzB,YAAYU,GACRgB,MAAMhB,GACNJ,KAAKqB,OAAOpB,MAAMqB,SAAW,WAC7BtB,KAAKqB,OAAOpB,MAAMQ,MAAQ,OAC1BT,KAAKqB,OAAOpB,MAAMS,OAAS,OAO3BV,KAAKuB,OACT,CACOC,OAAOC,GAMV,E","sources":["njslab/Tools/RhinoCommon/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib'\r\n\r\n// import * as rhino3dm from 'rhino3dm';\r\n\r\n// const rhino3dm = require('rhino3dm')()\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(id: string) {\r\n        const divHost = document.getElementById(id)\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        // console.log(rhino3dm);\r\n        \r\n        // rhino3dm().then((rhino) => {\r\n        //     const sphere = new rhino.Sphere([1,2,3,], 12)\r\n        //     console.log(sphere.radius)\r\n        //   })\r\n\r\n        // const script = document.createElement(\"script\");\r\n        // script.src = \"https://cdn.jsdelivr.net/npm/rhino3dm@0.12.0/rhino3dm.min.js\";\r\n        // script.addEventListener(\"load\", () => {\r\n        //     window.rhino3dm().then((Module) => {\r\n        //         //creating a sphere using rhino3dm\r\n        //         setSphere(new Module.Sphere([1, 2, 3], 16));\r\n        //     });\r\n        // );\r\n\r\n        // rhino3dm().then(async m => {\r\n        //     console.log('Loaded rhino3dm.')\r\n        //     rhino = m // global\r\n        //     // init()\r\n        //     // create()\r\n        //   })\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        try {\r\n            while (this.divHost && this.divHost.lastElementChild) {\r\n                const lastChild = this.divHost.lastElementChild as Node;\r\n                this.divHost.removeChild(lastChild);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error removing child elements:', error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n\r\n}"],"names":["Solution","constructor","id","divHost","renderer","document","getElementById","this","style","display","alignItems","div","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","lastChild","removeChild","error","console","RendererCanvas","super","canvas","position","start","render","ctx"],"sourceRoot":""}