{"version":3,"file":"static/js/75425.ea5e28e6.chunk.js","mappings":"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","sources":["njslab/Tools/BezierCurve/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: string) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    p0: Vector;\r\n    p1: Vector;\r\n    p2: Vector;\r\n    p3: Vector;\r\n\r\n    N = 10;\r\n\r\n    m: Vector = new Vector(0,0);\r\n\r\n    down = false;\r\n    capture = undefined;\r\n\r\n    ptsList: Vector[] = [];\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n        this.p0 = new Vector(80, 120);\r\n        this.p1 = new Vector(50, 50);\r\n        this.p2 = new Vector(180, 50);\r\n        this.p3 = new Vector(250, 120);\r\n        this.ptsList = [this.p0, this.p1, this.p2, this.p3];\r\n\r\n        const slider = getSlider('N', 1, 10);\r\n        this.divHost.appendChild(slider.div);\r\n        slider.slider.oninput = () => {\r\n            this.N = +slider.slider.value\r\n            // console.log(slider.slider.value)\r\n            slider.text.innerText = 'N: ' + this.N;\r\n        }\r\n        // const log = document.getElementById('log');\r\n        // const slider = document.getElementById('myRange');\r\n        // slider.inpu\r\n        // slider.oninput = () => {\r\n        //     this.N = +slider.value;\r\n        //     // render();\r\n        //     log.innerHTML = 'N: ' + N;\r\n        //     // console.log(N)\r\n        // }\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        // this.down = true;\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let i = 0; i < this.ptsList.length; ++i) {\r\n\r\n            const dis = this.ptsList[i].distanceTo(this.m);\r\n\r\n            if (dis < 10) {\r\n                this.capture = this.ptsList[i];\r\n                // console.log(this.ptsList[i]);\r\n            }\r\n\r\n        }\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.capture = undefined;\r\n        // this.down = false;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        if (this.capture) {\r\n            this.capture.x = x;\r\n            this.capture.y = y;\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n\r\n        this.p0.draw(ctx);\r\n        this.p1.draw(ctx);\r\n        this.p2.draw(ctx);\r\n        this.p3.draw(ctx);\r\n\r\n\r\n        let pts = [];\r\n\r\n        let interval = 1.0 / this.N;\r\n        for (let i = 0; i <= this.N; ++i) {\r\n            let theInterval = interval * i;\r\n            let v = DeCasteljausAlgorithm(this.p0, this.p1, this.p2, this.p3, interval * i);\r\n            pts.push(v);\r\n        }\r\n\r\n        ctx.strokeStyle = '#00ffff';\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        for (let i = 0; i < pts.length - 1; ++i) {\r\n            ctx.moveTo(pts[i].x, pts[i].y)\r\n            ctx.lineTo(pts[1 + i].x, pts[1 + i].y)\r\n        }\r\n        ctx.stroke();\r\n\r\n\r\n        ctx.strokeStyle = '#000';\r\n        ctx.lineWidth = 1;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p2.x, this.p2.y);\r\n        ctx.lineTo(this.p3.x, this.p3.y);\r\n        ctx.stroke();\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n\r\n}\r\n\r\n\r\n// https://codepen.io/NJStudio/pen/zYwZmEL?editors=1010\r\nclass Vector {\r\n    x = 0;\r\n    y = 0;\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    distanceTo(other: Vector) {\r\n        return Math.sqrt((other.x - this.x) * (other.x - this.x) + (other.y - this.y) * (other.y - this.y));\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, 5.0, 0.0, 3.14159 * 2)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\nconst interpolation = (p0: Vector, p1: Vector, t0: number, t1: number) => {\r\n    return new Vector(\r\n        t1 * p0.x + t0 * p1.x,\r\n        t1 * p0.y + t0 * p1.y\r\n    );\r\n};\r\nconst DeCasteljausAlgorithm = (p0: Vector, p1: Vector, p2: Vector, p3: Vector, t0: number) => {\r\n    //Linear interpolation = lerp = (1 - t) * A + t * B\r\n    let t1 = 1.0 - t0;\r\n    //Layer 1 \r\n    let QVector = interpolation(p0, p1, t0, t1);\r\n    let RVector = interpolation(p1, p2, t0, t1);\r\n    let SVector = interpolation(p2, p3, t0, t1);\r\n\r\n    //Layer 2\r\n    let PVector = interpolation(QVector, RVector, t0, t1);\r\n    let TVector = interpolation(RVector, SVector, t0, t1);\r\n\r\n    //Final interpolated position\r\n    return interpolation(PVector, TVector, t0, t1);\r\n};\r\n\r\n// ..\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.innerText = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider, text\r\n    };\r\n};"],"names":["Solution","constructor","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","p0","p1","p2","p3","N","m","Vector","down","capture","undefined","ptsList","canvas","position","slider","getSlider","oninput","value","text","innerText","start","mouseDown","x","y","i","length","distanceTo","mouseUp","mouseDrag","render","ctx","clearRect","draw","pts","interval","v","DeCasteljausAlgorithm","push","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","other","Math","sqrt","fillStyle","arc","closePath","fill","interpolation","t0","t1","QVector","RVector","SVector","PVector","TVector","title","min","max","type","color"],"sourceRoot":""}