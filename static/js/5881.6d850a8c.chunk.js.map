{"version":3,"file":"static/js/5881.6d850a8c.chunk.js","mappings":"qQAKaA,EAAoB,WAQ/B,cAAe,oBANfC,MAAgB,GAAG,KAEnBC,cAAQ,OAERC,wBAAyB,EAGvBC,KAAKH,MAAQ,GACbG,KAAKF,SAAW,CACd,IAAIG,EAAAA,EAAQ,GAAI,GAAI,GACpB,IAAIA,EAAAA,EAAQ,IAAK,GAAI,GACrB,IAAIA,EAAAA,EAAQ,IAAK,IAAK,GACtB,IAAIA,EAAAA,EAAQ,GAAI,IAAK,GACrB,IAAIA,EAAAA,EAAQ,GAAI,GAAI,GAExB,CA8CC,OA9CA,6CACD,SAA6BC,GAC3BF,KAAKD,uBAAyBG,CAChC,GAAC,+BACD,SAAyBC,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,KAAKH,MAAMQ,SAAUD,EAAIJ,KAAKH,MAAMO,GAAGE,YAAcH,CAC3E,GAAC,wBACD,SAAkBA,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,KAAKH,MAAMQ,SAAUD,EAAIJ,KAAKH,MAAMO,GAAGG,KAAOJ,CACpE,GAAC,4BACD,SAAsBA,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,KAAKH,MAAMQ,SAAUD,EAAIJ,KAAKH,MAAMO,GAAGI,YAAcL,CAC3E,GAAC,sBACD,SAAgBM,EAAWC,EAAWC,EAAWC,GAC/C,IAAIC,EAAO,IAAIC,EAAKd,KAAM,IAAIC,EAAAA,EAAQQ,EAAGC,GAAI,IAAIT,EAAAA,EAAQ,EAAG,GAAI,IAAIA,EAAAA,EAAQU,EAAGC,GAAIZ,KAAKF,UACxFE,KAAKH,MAAMkB,KAAKF,EAClB,GAAC,oBACD,WAAiB,IACS,EADV,UACAb,KAAKH,OAAK,IAAxB,2BAA0B,CAAhB,QACNmB,QACJ,CAAC,+BAEH,GAAC,sBACD,WACE,IACwB,EADpBC,EAAiB,GAAG,UACVjB,KAAKH,OAAK,IAAxB,2BAA0B,CAAC,IAAlBqB,EAAC,QACJA,EAAEC,cACJF,EAAIF,KAAKG,EAAEE,EAEf,CAAC,+BACD,OAAOH,CACT,GAEA,oBAEA,SAAcI,GACZrB,KAAKH,MAAMyB,SAAQ,SAACJ,GAClBA,EAAEK,OAAOF,EACX,IAEAA,EAAIG,YACJH,EAAII,OAAOzB,KAAKF,SAAS,GAAGW,EAAGT,KAAKF,SAAS,GAAGY,GAChD,IAAK,IAAIN,EAAI,EAAGA,EAAIJ,KAAKF,SAASO,SAAUD,EAC1CiB,EAAIK,OAAO1B,KAAKF,SAASM,GAAGK,EAAGT,KAAKF,SAASM,GAAGM,GAElDW,EAAIM,QACN,KAAC,EA/D8B,GAkEpBb,EAAI,WA0Cf,WAAYc,EAAkCR,EAAYS,EAAaC,EAAahC,IAAuB,oBAtC3GiC,SAAW,EAAE,KACbvB,YAAc,EAAE,KAChBwB,SAAW,GAAI,KACfzB,KAAO,MAAM,KAEbY,cAAe,EAAK,KAEpBC,OAAC,OACDS,QAAE,OACFC,QAAE,OACFG,aAAO,OACPC,YAAM,OACNC,SAAW,EAAE,KAEbC,KAAe,EAAM,KACrBC,qBAAe,OACfC,cAAQ,OACRC,SAAoB,IAAItC,EAAAA,EAAQ,EAAG,EAAG,GAAG,KAGzCuC,YAAsB,EAAE,KACxBC,gBAAkB,GAAG,KACrBC,cAAgB,GAAG,KACnBC,aAAe,GAAG,KAElBC,EAAY,EAAI,KAEhBC,gBAAkB,GAAG,KACrBC,iBAAmB,GAAG,KACtBC,WAAwB,GAAG,KAC3BC,gBAAkB,EAAI,KAEtBC,cAAgB,EAAI,KACpBnD,cAAQ,OACR8B,gBAAU,OAEVtB,YAAsB,EAGpBN,KAAK4B,WAAaA,EAClBd,EAAKoC,KAAKnC,KAAKf,MACfA,KAAKoB,EAAIA,EACTpB,KAAK6B,GAAKA,EACV7B,KAAK8B,GAAKA,EACNhC,IACFE,KAAKF,SAAWA,GAElBE,KAAKmD,cACP,CAwQC,OAxQA,8BACD,WAEEnD,KAAKoD,YAIP,GAAC,0BACD,WACE,IAAIC,EAAMrD,KAAKsD,qBAEf,QAAsBC,IAAlBvD,KAAKF,SACP,OAAQ0D,EAAAA,EAAAA,IAAeH,EAAKrD,KAAKF,WAC/BuD,EAAMrD,KAAKsD,qBAIftD,KAAKkC,OAASmB,CAChB,GAAC,gCACD,WACE,IAAI5C,EAAIgD,EAAAA,GAAAA,aAAyBzD,KAAK6B,GAAGpB,EAAGT,KAAK8B,GAAGrB,GAChDC,EAAI+C,EAAAA,GAAAA,aAAyBzD,KAAK6B,GAAGnB,EAAGV,KAAK8B,GAAGpB,GACpD,OAAO,IAAIT,EAAAA,EAAQQ,EAAGC,EACxB,GAAC,wBACD,WACEV,KAAKqC,gBAAkB,IAAIpC,EAAAA,EAAQD,KAAKkC,OAAOzB,EAAIT,KAAKoB,EAAEX,EAAGT,KAAKkC,OAAOxB,EAAIV,KAAKoB,EAAEV,EAAGV,KAAKkC,OAAOwB,EAAI1D,KAAKoB,EAAEsC,GAC9G1D,KAAKqC,gBAAgBsB,UACrB3D,KAAKqC,gBAAgB5B,GAAKT,KAAKQ,YAC/BR,KAAKqC,gBAAgB3B,GAAKV,KAAKQ,YAC/BR,KAAKqC,gBAAgBqB,GAAK1D,KAAKQ,YAE/B,IAAIC,EAAKT,KAAKqC,gBAAgB5B,EAAIT,KAAKuC,SAAS9B,EAAKT,KAAK+B,SAAW/B,KAAKqC,gBAAgB5B,EAAIT,KAAKuC,SAAS9B,EAAIT,KAAK+B,SACjHrB,EAAKV,KAAKqC,gBAAgB3B,EAAIV,KAAKuC,SAAS7B,EAAKV,KAAK+B,SAAW/B,KAAKqC,gBAAgB3B,EAAIV,KAAKuC,SAAS7B,EAAIV,KAAK+B,SACjH2B,EAAK1D,KAAKqC,gBAAgBqB,EAAI1D,KAAKuC,SAASmB,EAAK1D,KAAK+B,SAAW/B,KAAKqC,gBAAgBqB,EAAI1D,KAAKuC,SAASmB,EAAI1D,KAAK+B,SAErH/B,KAAKsC,SAAW,IAAIrC,EAAAA,EAAQQ,EAAIT,KAAKO,KAAMG,EAAIV,KAAKO,KAAMmD,EAAI1D,KAAKO,MAEnEP,KAAKuC,SAAS9B,EAAKT,KAAKuC,SAAS9B,EAAIT,KAAKsC,SAAS7B,EAAKT,KAAKgC,SAAWhC,KAAKuC,SAAS9B,EAAIT,KAAKsC,SAAS7B,EAAIT,KAAKgC,SACjHhC,KAAKuC,SAAS7B,EAAKV,KAAKuC,SAAS7B,EAAIV,KAAKsC,SAAS5B,EAAKV,KAAKgC,SAAWhC,KAAKuC,SAAS7B,EAAIV,KAAKsC,SAAS5B,EAAIV,KAAKgC,SACjHhC,KAAKuC,SAASmB,EAAK1D,KAAKuC,SAASmB,EAAI1D,KAAKsC,SAASoB,EAAK1D,KAAKgC,SAAWhC,KAAKuC,SAASmB,EAAI1D,KAAKsC,SAASoB,EAAI1D,KAAKgC,SAEjHhC,KAAK4D,QAEL5D,KAAKoB,EAAEX,GAAKT,KAAKuC,SAAS9B,EAC1BT,KAAKoB,EAAEV,GAAKV,KAAKuC,SAAS7B,EAC1BV,KAAKoB,EAAEsC,GAAK1D,KAAKuC,SAASmB,EAC1B1D,KAAK4C,GAAK,IACN5C,KAAK4C,EAAI5C,KAAKM,cAChBN,KAAK4C,EAAI,EACT5C,KAAKmD,eAET,GAAC,wBACD,WAaEnD,KAAKsC,SAAWtC,KAAK6D,OAAO,IAAI5D,EAAAA,EAAQD,KAAKuC,SAAS9B,EAAGT,KAAKuC,SAAS7B,EAAGV,KAAKuC,SAASmB,IAExF1D,KAAKsC,SAAS7B,EAAIT,KAAKsC,SAAS7B,EAAIT,KAAK+B,SAAW/B,KAAKsC,SAAS7B,EAAIT,KAAK+B,SAC3E/B,KAAKsC,SAAS5B,EAAIV,KAAKsC,SAAS5B,EAAIV,KAAK+B,SAAW/B,KAAKsC,SAAS5B,EAAIV,KAAK+B,SAC3E/B,KAAKsC,SAASoB,EAAI1D,KAAKsC,SAASoB,EAAI1D,KAAK+B,SAAW/B,KAAKsC,SAASoB,EAAI1D,KAAK+B,SAE3E/B,KAAKsC,SAAS7B,GAAKT,KAAKO,KACxBP,KAAKsC,SAAS5B,GAAKV,KAAKO,KACxBP,KAAKsC,SAASoB,GAAK1D,KAAKO,KAEpBP,KAAKuC,SAAS9B,EAAIT,KAAKsC,SAAS7B,EAAIT,KAAKgC,SAC3ChC,KAAKuC,SAAS9B,EAAIT,KAAKuC,SAAS9B,EAAIT,KAAKsC,SAAS7B,EAElDT,KAAKuC,SAAS9B,EAAIT,KAAKgC,SAErBhC,KAAKuC,SAAS7B,EAAIV,KAAKsC,SAAS5B,EAAIV,KAAKgC,SAC3ChC,KAAKuC,SAAS7B,EAAIV,KAAKuC,SAAS7B,EAAIV,KAAKsC,SAAS5B,EAElDV,KAAKuC,SAAS7B,EAAIV,KAAKgC,SAErBhC,KAAKuC,SAASmB,EAAI1D,KAAKsC,SAASoB,EAAI1D,KAAKgC,SAC3ChC,KAAKuC,SAASmB,EAAI1D,KAAKuC,SAASmB,EAAI1D,KAAKsC,SAASoB,EAElD1D,KAAKuC,SAASmB,EAAI1D,KAAKgC,SAWzBhC,KAAK4D,QAELE,QAAQC,IAAI/D,KAAKgC,UAEjBhC,KAAKoB,EAAEX,GAAKT,KAAKuC,SAAS9B,EAC1BT,KAAKoB,EAAEV,GAAKV,KAAKuC,SAAS7B,EAC1BV,KAAKoB,EAAEsC,GAAK1D,KAAKuC,SAASmB,CAE5B,GAAC,oBACD,SAAcnB,GAEZ,IAAIyB,EAAe,IAAI/D,EAAAA,EAAQsC,EAAS9B,EAAG8B,EAAS7B,EAAG6B,EAASmB,GAChEM,EAAaC,YACbD,EAAaE,MAAMlE,KAAKyC,iBAGxB,IAAI0B,EAAe,IAAIlE,EAAAA,EAAQ,GAAI,GAenC,OAdAkE,EAAaD,MAAMlE,KAAK0C,eAIxByB,EAAenE,KAAKoE,SAASD,EAAcnE,KAAKwC,aAKhDxC,KAAKwC,aAAe6B,KAAKC,SAAWtE,KAAK2C,aAAmC,GAApB3C,KAAK2C,aAI/CqB,EAAaO,IAAIJ,EAEjC,GAAC,sBACD,SAAgBjE,EAAYsE,GAC1B,IAAIC,EAAcvE,EAAEG,SAGpB,OAFAH,EAAEO,EAAI4D,KAAKK,IAAIF,GAASC,EACxBvE,EAAEQ,EAAI2D,KAAKM,IAAIH,GAASC,EACjBvE,CACT,GAAC,8BACD,WAEE,IAAI0E,OAAwBrB,EACxBsB,EAAc7E,KAAKuC,SAASuC,QAEhCD,EAAGZ,YACHY,EAAGX,MAAMlE,KAAK6C,iBAId,IAFA,IAAIkC,EAAQ/E,KAAKoB,EAAE0D,QAAQP,IAAIM,GAEtBzE,EAAI,EAAGA,EAAIU,EAAKoC,KAAK7C,OAAQD,IAAK,CACzC,IAAI4E,EAAiBlE,EAAKoC,KAAK9C,GAC3B6E,EAAIhF,EAAAA,EAAAA,WAAmB8E,EAAOC,EAAS5D,GAC3C,GAAI4D,IAAahF,MAAQiF,GAAKjF,KAAK8C,iBAAkB,CACnD8B,EAAMI,EACN,KACF,CACF,CAEA,OAAOJ,CACT,GAAC,mBACD,WAOE,YAJiBrB,IAFFvD,KAAKkF,oBAGlBlF,KAAKuC,SAAS2B,MAAM,IAGf,IAAIjE,EAAAA,EAAQ,EAAG,EACxB,GAEA,oBACA,SAAcoB,GAGZrB,KAAKmF,aAAa9D,EACpB,GAAC,mCACD,SAA6BA,GAQ3B,GACD,mCACD,SAA6BA,GAQ3B,GACD,0BACD,SAAoBA,GAClBrB,KAAK4C,GAAK,IACV5C,KAAKgD,iBAAmB,EACpBhD,KAAKgD,gBAAkB,IAAM,IAC3BhD,KAAK+C,WAAW1C,OAAS,IAC3BL,KAAK+C,WAAWqC,QAElBpF,KAAK+C,WAAWhC,KAAK,IAAId,EAAAA,EAAQD,KAAKoB,EAAEX,EAAGT,KAAKoB,EAAEV,IAElDV,KAAKgD,gBAAkB,GAEzB,IAAK,IAAI5C,EAAI,EAAGA,EAAIJ,KAAK+C,WAAW1C,SAAUD,EAC5CiB,EAAIgE,UAAY,2BAChBhE,EAAIG,YACJH,EAAIiE,IAAItF,KAAK+C,WAAW3C,GAAGK,EAAGT,KAAK+C,WAAW3C,GAAGM,EAAS,GAALN,EAAU,EAAG,MAClEiB,EAAIkE,YACJlE,EAAImE,OAGNnE,EAAIoE,YAAc,UAClBpE,EAAIqE,UAAY,GASZ1F,KAAK4B,WAAW7B,yBAElBsB,EAAIG,YACJH,EAAII,OAAOzB,KAAKoB,EAAEX,EAAGT,KAAKoB,EAAEV,GAC5BW,EAAIK,OAAO1B,KAAKkC,OAAOzB,EAAGT,KAAKkC,OAAOxB,GACtCW,EAAIM,SAEJN,EAAIgE,UAAY,UAChBhE,EAAIG,YACJH,EAAIiE,IAAItF,KAAKkC,OAAOzB,EAAGT,KAAKkC,OAAOxB,EAAG,IAAK,EAAG,MAC9CW,EAAIkE,YACJlE,EAAImE,QAKNnE,EAAIgE,UAAY,UAChBhE,EAAIG,YACJH,EAAIiE,IAAItF,KAAKoB,EAAEX,EAAGT,KAAKoB,EAAEV,EAAG,IAAK,EAAG,MACpCW,EAAIkE,YACJlE,EAAImE,OACJnE,EAAIG,YACJH,EAAIiE,IAAItF,KAAKoB,EAAEX,EAAGT,KAAKoB,EAAEV,EAAG,GAAwB,EAAnB2D,KAAKM,IAAI3E,KAAK4C,GAAQ,EAAG,MAC1DvB,EAAIkE,YAEJlE,EAAIM,SAGJN,EAAIqE,UAAY,GAChBrE,EAAIoE,YAAW,eAAW,IAAG,KAAK,IAAG,KAAK,EAAC,KAAK,EAAyB,IAArBzF,KAAKiD,cAAoB,KAC7E5B,EAAIG,YACJH,EAAIiE,IAAItF,KAAKoB,EAAEX,EAAGT,KAAKoB,EAAEV,EAAGV,KAAKiD,cAAe,EAAG,MACnD5B,EAAIkE,YACJlE,EAAIM,SACJ3B,KAAKiD,eAAiB,GAClB,EAAyB,IAArBjD,KAAKiD,cAAuB,IAClCjD,KAAKiD,cAAgB,EAIzB,KAAC,EA5Tc,GAAJnC,EAEJoC,KAAe,GCpEjB,IAAMyC,EAAQ,WAGjB,WAAYC,GAAe,IAAD,4BAFnBA,aAAO,OACPC,cAAQ,EAEX7F,KAAK4F,QAAUA,EAGf5F,KAAK4F,QAAQE,MAAMC,QAAU,OAC7B/F,KAAK4F,QAAQE,MAAME,WAAa,SAEhC,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIH,MAAMM,WAAa,OACvBH,EAAIH,MAAMO,YAAc,OACxBJ,EAAIH,MAAMQ,gBAAkB,OAC5BL,EAAIH,MAAMS,MAAQ,QAClBN,EAAIH,MAAMU,OAAS,QACnBxG,KAAK4F,QAAQa,YAAYR,GAEzBjG,KAAK6F,SAAW,IAAIa,EAAST,GAE7B,IAAMU,EAAOT,SAASC,cAAc,OACpCF,EAAIW,OAAOD,GACXA,EAAKE,YAAc,6CAEnB,IAAMC,EAAKZ,SAASC,cAAc,OAClCF,EAAIW,OAAOE,GAEX,IAAMC,GAAMC,EAAAA,EAAAA,IAAU,QAAS,EAAG,IAClCf,EAAIQ,YAAYM,EAAId,KACpBc,EAAIE,OAAOC,aAAe,IAC1BH,EAAIE,OAAOE,QAAU,WACjB,EAAKtB,SAASuB,cAAcC,mBAAmBN,EAAIE,OAAOzC,MAC9D,EAEA,IAAM8C,GAAMN,EAAAA,EAAAA,IAAU,OAAQ,EAAG,KACjCf,EAAIQ,YAAYa,EAAIrB,KACpBqB,EAAIL,OAAOC,aAAe,IAC1BI,EAAIL,OAAOE,QAAU,WACjB,EAAKtB,SAASuB,cAAcG,YAAYD,EAAIL,OAAOzC,MACvD,EAEA,IAAMgD,GAAMR,EAAAA,EAAAA,IAAU,WAAY,EAAG,IACrCf,EAAIQ,YAAYe,EAAIvB,KACpBuB,EAAIP,OAAOC,aAAe,IAC1BM,EAAIP,OAAOE,QAAU,WACjB,EAAKtB,SAASuB,cAAcK,gBAAgBD,EAAIP,OAAOzC,MAC3D,EAEA,IAAMkD,GAAOC,EAAAA,EAAAA,IAAY,UACzBb,EAAGL,YAAYiB,EAAKzB,KACpByB,EAAKE,SAASC,SAAU,EACxBH,EAAKE,SAASE,SAAW,YAES,IAA1BJ,EAAKE,SAASC,QACd,EAAKhC,SAASkC,uBAAsB,GAEpC,EAAKlC,SAASkC,uBAAsB,EAE5C,CAGJ,CAMC,OANA,+BACD,WAEI,IADA/H,KAAK6F,SAASmC,UACPhI,KAAK4F,QAAQqC,kBAChBjI,KAAK4F,QAAQsC,YAAYlI,KAAK4F,QAAQqC,iBAE9C,KAAC,EAnEgB,GAsERvB,EAAQ,0CAKjB,WAAYT,GAAW,IAAD,EAWL,OAXK,gBAClB,cAAMA,IAJVmB,mBAAa,IACbe,SAAW,EAIP,EAAKC,OAAOtC,MAAMuC,SAAW,WAC7B,EAAKD,OAAOtC,MAAMS,MAAQ,OAC1B,EAAK6B,OAAOtC,MAAMU,OAAS,OAM3B,EAAKY,cAAgB,IAAIxH,EACzB,EAAK0I,QAAQ,CACjB,CAqBC,OArBA,6CACD,SAA6BpI,GACzBF,KAAKoH,cAAcW,sBAAsB7H,EAC7C,GAAC,uBACD,SAAiBO,EAAWC,GAE5B,GAAC,qBACD,SAAeD,EAAWC,GACtBV,KAAKoH,cAAcmB,SAAS9H,EAAGC,EAAGV,KAAKoI,OAAO7B,MAAOvG,KAAKoI,OAAO5B,OACrE,GAAC,uBACD,SAAiB/F,EAAWC,GACpBV,KAAKmI,SAAW,IAChBnI,KAAKoH,cAAcmB,SAAS9H,EAAGC,EAAGV,KAAKoI,OAAO7B,MAAOvG,KAAKoI,OAAO5B,QACjExG,KAAKmI,SAAW,GAEpBnI,KAAKmI,UACT,GAAC,oBACD,SAAc9G,GAEVrB,KAAKoH,cAAcpG,SACnBhB,KAAKoH,cAAc7F,OAAOF,EAC9B,KAAC,EAtCgB,CAASmH,EAAAA,G","sources":["njslab/Tools/Boid/BoidContollerWander0.ts","njslab/Tools/Boid/index.ts"],"sourcesContent":["import { MathUtility, NVector3 } from '../../../lib/NJSCore';\r\n\r\nimport { Vector3, isInsideOfVecs } from '../../../lib';\r\n// import { Vector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BoidContollerWander0 {\r\n\r\n  boids: Boid[] = [];\r\n\r\n  boundary: Vector3[];\r\n\r\n  _toggleTargetRendering = false;\r\n\r\n  constructor() {\r\n    this.boids = [];\r\n    this.boundary = [\r\n      new Vector3(50, 50, 0),\r\n      new Vector3(300, 70, 0),\r\n      new Vector3(400, 400, 0),\r\n      new Vector3(50, 300, 0),\r\n      new Vector3(50, 50, 0),\r\n    ]\r\n  }\r\n  public toggleTargetRendering(v: boolean) {\r\n    this._toggleTargetRendering = v;\r\n  }\r\n  public updateTargetDelay(n: number) {\r\n    for (let i = 0; i < this.boids.length; ++i) {this.boids[i].targetDelay = n;}\r\n  }\r\n  public updateMass(n: number) {\r\n    for (let i = 0; i < this.boids.length; ++i) {this.boids[i].mass = n;}\r\n  }\r\n  public updateVelocity(n: number) {\r\n    for (let i = 0; i < this.boids.length; ++i) {this.boids[i].maxVelocity = n;}\r\n  }\r\n  public AddAgent(x: number, y: number, w: number, h: number) {\r\n    let boid = new Boid(this, new Vector3(x, y), new Vector3(0, 0), new Vector3(w, h), this.boundary);\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public GetPoint() {\r\n    let pts: Vector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  public Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n\r\n    ctx.beginPath()\r\n    ctx.moveTo(this.boundary[0].x, this.boundary[0].y)\r\n    for (let i = 1; i < this.boundary.length; ++i) {\r\n      ctx.lineTo(this.boundary[i].x, this.boundary[i].y)\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 2; // 1; // 5;\r\n  maxVelocity = 2; // 1; // 8;\r\n  maxSpeed = 0.9; // 1; // 13.0;\r\n  mass = 100.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: Vector3;\r\n  p0: Vector3;\r\n  p1: Vector3;\r\n  targets: Vector3[];\r\n  target: Vector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: Vector3;\r\n  steering: Vector3;\r\n  velocity: Vector3 = new Vector3(0, 0, 0);\r\n\r\n  // .......................\r\n  wanderAngle: number = 0;\r\n  CIRCLE_DISTANCE = 50;\r\n  CIRCLE_RADIUS = 50;\r\n  ANGLE_CHANGE = 15;\r\n\r\n  t: number = 0.0;\r\n\r\n  MAX_QUEUE_AHEAD = 15;\r\n  MAX_QUEUE_RADIUS = 10;\r\n  trajectory: Vector3[] = [];\r\n  timerTrajectory = 0.0;\r\n\r\n  scaleBounding = 0.0;\r\n  boundary: Vector3[];\r\n  controller: BoidContollerWander0;\r\n\r\n  targetDelay: number = 3;\r\n\r\n  constructor(controller: BoidContollerWander0, p: Vector3, p0: Vector3, p1: Vector3, boundary?: Vector3[]) {\r\n    this.controller = controller;\r\n    Boid.list.push(this);\r\n    this.p = p;\r\n    this.p0 = p0;\r\n    this.p1 = p1;\r\n    if (boundary) {\r\n      this.boundary = boundary;\r\n    }\r\n    this.UpdateTarget();\r\n  }\r\n  public Update() {\r\n    // this.UpdateVec0();\r\n    this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    // this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  public UpdateTarget() {\r\n    let vec = this.getRandomVecInSide();\r\n\r\n    if (this.boundary !== undefined) {\r\n      while (!isInsideOfVecs(vec, this.boundary)) {\r\n        vec = this.getRandomVecInSide();\r\n      }\r\n    }\r\n\r\n    this.target = vec;\r\n  }\r\n  public getRandomVecInSide() {\r\n    let x = MathUtility.GetRandomInt(this.p0.x, this.p1.x);\r\n    let y = MathUtility.GetRandomInt(this.p0.y, this.p1.y);\r\n    return new Vector3(x, y);\r\n  }\r\n  public UpdateVec1() {\r\n    this.desiredVelocity = new Vector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new Vector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    this.Queue();\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n    this.t += 0.01;\r\n    if (this.t > this.targetDelay) {\r\n      this.t = 0.0;\r\n      this.UpdateTarget();\r\n    }\r\n  }\r\n  public UpdateVec0() {\r\n    // this.desiredVelocity = new Vector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity.Unitize();\r\n    // this.desiredVelocity.x *= this.maxVelocity;\r\n    // this.desiredVelocity.y *= this.maxVelocity;\r\n    // this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    // let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    // let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    // let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    // this.steering = ;\r\n\r\n    this.steering = this.Wander(new Vector3(this.velocity.x, this.velocity.y, this.velocity.z));\r\n\r\n    this.steering.x = this.steering.x < this.maxForce ? this.steering.x : this.maxForce;\r\n    this.steering.y = this.steering.y < this.maxForce ? this.steering.y : this.maxForce;\r\n    this.steering.z = this.steering.z < this.maxForce ? this.steering.z : this.maxForce;\r\n\r\n    this.steering.x /= this.mass;\r\n    this.steering.y /= this.mass;\r\n    this.steering.z /= this.mass;\r\n\r\n    if (this.velocity.x + this.steering.x < this.maxSpeed) {\r\n      this.velocity.x = this.velocity.x + this.steering.x;\r\n    } else {\r\n      this.velocity.x = this.maxSpeed;\r\n    }\r\n    if (this.velocity.y + this.steering.y < this.maxSpeed) {\r\n      this.velocity.y = this.velocity.y + this.steering.y;\r\n    } else {\r\n      this.velocity.y = this.maxSpeed;\r\n    }\r\n    if (this.velocity.z + this.steering.z < this.maxSpeed) {\r\n      this.velocity.z = this.velocity.z + this.steering.z;\r\n    } else {\r\n      this.velocity.z = this.maxSpeed;\r\n    }\r\n    // this.velocity.x = this.velocity.x + this.steering.x < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    // this.velocity.y = this.velocity.y + this.steering.y < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    // this.velocity.z = this.velocity.z + this.steering.z < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    // steering = wander()\r\n    // steering = truncate (steering, max_force)\r\n    // steering = steering / mass\r\n    // velocity = truncate (velocity + steering , max_speed)\r\n    // position = position + velocity\r\n    this.Queue();\r\n\r\n    console.log(this.maxSpeed);\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n\r\n  }\r\n  public Wander(velocity: Vector3) {\r\n    // Calculate the circle center\r\n    let circleCenter = new Vector3(velocity.x, velocity.y, velocity.z);\r\n    circleCenter.normalize();\r\n    circleCenter.scale(this.CIRCLE_DISTANCE);\r\n    //\r\n    // Calculate the displacement force\r\n    let displacement = new Vector3(0, -1);\r\n    displacement.scale(this.CIRCLE_RADIUS);\r\n    //\r\n    // Randomly change the vector direction\r\n    // by making it change its current angle\r\n    displacement = this.setAngle(displacement, this.wanderAngle);\r\n    //\r\n    // Change wanderAngle just a bit, so it\r\n    // won't have the same value in the\r\n    // next game frame.\r\n    this.wanderAngle += Math.random() * this.ANGLE_CHANGE - this.ANGLE_CHANGE * .5;\r\n    //\r\n    // Finally calculate and return the wander force\r\n    var wanderForce: Vector3;\r\n    wanderForce = circleCenter.add(displacement);\r\n    return wanderForce;\r\n  }\r\n  public setAngle(v: Vector3, value: number) {\r\n    let len: number = v.length();\r\n    v.x = Math.cos(value) * len;\r\n    v.y = Math.sin(value) * len;\r\n    return v;\r\n  }\r\n  public GetNeighborAhead() {\r\n    // var i:int;\r\n    var ret: Boid | undefined = undefined;\r\n    var qa: Vector3 = this.velocity.clone();\r\n\r\n    qa.normalize();\r\n    qa.scale(this.MAX_QUEUE_AHEAD);\r\n\r\n    let ahead = this.p.clone().add(qa);\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let neighbor: Boid = Boid.list[i];\r\n      let d = Vector3.distanceTo(ahead, neighbor.p);\r\n      if (neighbor !== this && d <= this.MAX_QUEUE_RADIUS) {\r\n        ret = neighbor;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  public Queue() {\r\n    var neighbor = this.GetNeighborAhead();\r\n\r\n    if (neighbor !== undefined) {\r\n      this.velocity.scale(0.3);\r\n    }\r\n\r\n    return new Vector3(0, 0);\r\n  }\r\n\r\n  // .......................................................................................................................\r\n  public Render(ctx: CanvasRenderingContext2D) {\r\n    // this.RenderDesiredVelocity(ctx);\r\n    // this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  public RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#00ff00';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  public RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#ff0000';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  public RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    this.t += 0.05\r\n    this.timerTrajectory += 1;\r\n    if (this.timerTrajectory % 5 === 0) {\r\n      if (this.trajectory.length > 30) {\r\n        this.trajectory.shift();\r\n      }\r\n      this.trajectory.push(new Vector3(this.p.x, this.p.y));\r\n\r\n      this.timerTrajectory = 0;\r\n    }\r\n    for (let i = 0; i < this.trajectory.length; ++i) {\r\n      ctx.fillStyle = 'rgba(100, 100, 100 ,0.1)';\r\n      ctx.beginPath();\r\n      ctx.arc(this.trajectory[i].x, this.trajectory[i].y, (i) * 0.2, 0, 3.14 * 2);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.targets[0].x , this.targets[0].y);\r\n    // for (let i = 1 ; i < this.targets.length; ++i) {\r\n    //   ctx.lineTo(this.targets[i].x , this.targets[i].y);\r\n    // }\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n\r\n    if (this.controller._toggleTargetRendering) {\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.p.x, this.p.y);\r\n      ctx.lineTo(this.target.x, this.target.y);\r\n      ctx.stroke();\r\n\r\n      ctx.fillStyle = '#000000';\r\n      ctx.beginPath();\r\n      ctx.arc(this.target.x, this.target.y, 2.5, 0, 3.14 * 2);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n\r\n    }\r\n\r\n\r\n    ctx.fillStyle = '#000000';\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 2.5, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10 + Math.sin(this.t) * 5, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // animation\r\n    ctx.lineWidth = 0.5\r\n    ctx.strokeStyle = `rgba(${255}, ${255}, ${0}, ${1 - this.scaleBounding * 0.07})`\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, this.scaleBounding, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.scaleBounding += 0.2;\r\n    if (1 - this.scaleBounding * 0.07 < 0) {\r\n      this.scaleBounding = 0;\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :Vector3 {\r\n  var v :Vector3 = velocity.clone();\r\n  var brake :Vector3 = new Vector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { RendererCanvas, getCheckBox, getSlider } from '../../../lib'\r\n\r\nimport { BoidContollerWander0 } from './BoidContollerWander0';\r\nimport { BoidContollerWander1 } from './BoidContollerWander1';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#333';\r\n        div.style.width = '500px';\r\n        div.style.height = '500px';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        const text = document.createElement('div');\r\n        div.append(text);\r\n        text.textContent = 'Click or drag on canvas to populate agents'\r\n\r\n        const ui = document.createElement('div');\r\n        div.append(ui);\r\n\r\n        const sl1 = getSlider('Delay', 1, 10);\r\n        div.appendChild(sl1.div);\r\n        sl1.slider.defaultValue = '3';\r\n        sl1.slider.oninput = () => {\r\n            this.renderer.BoidContoller.updateTargetDelay(+sl1.slider.value)\r\n        };\r\n\r\n        const sl2 = getSlider('Mass', 1, 500);\r\n        div.appendChild(sl2.div);\r\n        sl2.slider.defaultValue = '3';\r\n        sl2.slider.oninput = () => {\r\n            this.renderer.BoidContoller.updateMass(+sl2.slider.value)\r\n        };\r\n\r\n        const sl3 = getSlider('Velocity', 1, 10);\r\n        div.appendChild(sl3.div);\r\n        sl3.slider.defaultValue = '3';\r\n        sl3.slider.oninput = () => {\r\n            this.renderer.BoidContoller.updateVelocity(+sl3.slider.value)\r\n        };\r\n\r\n        const cBox = getCheckBox('target');\r\n        ui.appendChild(cBox.div)\r\n        cBox.checkBox.checked = false;\r\n        cBox.checkBox.onchange = () => {\r\n            // console.log(cBox.checkBox.checked)\r\n            if (cBox.checkBox.checked === true) {\r\n                this.renderer.toggleTargetRendering(true);\r\n            } else {\r\n                this.renderer.toggleTargetRendering(false);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    BoidContoller: BoidContollerWander0;\r\n    dragTime = 0;\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n        this.BoidContoller = new BoidContollerWander0();\r\n        this.start();\r\n    }\r\n    public toggleTargetRendering(v: boolean) {\r\n        this.BoidContoller.toggleTargetRendering(v);\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.BoidContoller.AddAgent(x, y, this.canvas.width, this.canvas.height);\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        if (this.dragTime > 5) {\r\n            this.BoidContoller.AddAgent(x, y, this.canvas.width, this.canvas.height);\r\n            this.dragTime = 0;\r\n        }\r\n        this.dragTime++;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n\r\n        this.BoidContoller.Update();\r\n        this.BoidContoller.Render(ctx);\r\n    }\r\n}"],"names":["BoidContollerWander0","boids","boundary","_toggleTargetRendering","this","Vector3","v","n","i","length","targetDelay","mass","maxVelocity","x","y","w","h","boid","Boid","push","Update","pts","b","isRenderable","p","ctx","forEach","Render","beginPath","moveTo","lineTo","stroke","controller","p0","p1","maxForce","maxSpeed","targets","target","targetID","col","desiredVelocity","steering","velocity","wanderAngle","CIRCLE_DISTANCE","CIRCLE_RADIUS","ANGLE_CHANGE","t","MAX_QUEUE_AHEAD","MAX_QUEUE_RADIUS","trajectory","timerTrajectory","scaleBounding","list","UpdateTarget","UpdateVec1","vec","getRandomVecInSide","undefined","isInsideOfVecs","MathUtility","z","unitize","Queue","Wander","console","log","circleCenter","normalize","scale","displacement","setAngle","Math","random","add","value","len","cos","sin","ret","qa","clone","ahead","neighbor","d","GetNeighborAhead","RenderCircle","shift","fillStyle","arc","closePath","fill","strokeStyle","lineWidth","Solution","divHost","renderer","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","text","append","textContent","ui","sl1","getSlider","slider","defaultValue","oninput","BoidContoller","updateTargetDelay","sl2","updateMass","sl3","updateVelocity","cBox","getCheckBox","checkBox","checked","onchange","toggleTargetRendering","destroy","lastElementChild","removeChild","dragTime","canvas","position","start","AddAgent","RendererCanvas"],"sourceRoot":""}