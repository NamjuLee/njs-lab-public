{"version":3,"file":"static/js/2508.59f2536c.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-vector-dynamics/base/RendererThree.ts","njslab/Workshop/workshop-vector-dynamics/base/util.ts","njslab/Workshop/workshop-vector-dynamics/workshop-vector-dynamic-3.ts"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three-orbitcontrols-ts';\n\nclass RendererThreeBase {\n    public canvas: HTMLCanvasElement;\n    public hostDiv: HTMLElement;\n    public ctx: CanvasRenderingContext2D;\n    public t: number = 0.0;\n    public camera: THREE.PerspectiveCamera;\n    public scene: THREE.Scene;\n    public renderer: THREE.WebGLRenderer;\n    public controls: OrbitControls;\n    private requestFrame: number;\n    constructor(id: string) {\n        this.hostDiv = document.getElementById(id);\n        this.initCanvas();\n    }\n    private initCanvas() {\n        THREE.Object3D.DEFAULT_UP.set(0, 1, 0);\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0x000000);\n        this.scene.castShadow = true;\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setPixelRatio(this.hostDiv.clientWidth / this.hostDiv.clientHeight);\n        this.renderer.domElement.id = 'Three';\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n        this.hostDiv.appendChild(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(30, this.hostDiv.clientWidth / this.hostDiv.clientHeight, 1, 5000);\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.camera.position.set(20, 20, 20);\n        this.controls.update();\n\n        this.canvas = this.renderer.domElement;\n\n        this.init();\n    }\n    private init() {\n        this.eventBind();\n\n    }\n    private eventBind() {\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.mouseDown(e);\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.mouseUp(e);\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.mouseMove(e);\n        this.renderer.domElement.addEventListener('click', (e: MouseEvent) => this.mouseClick(e))\n\n        window.addEventListener('resize', () => this.onWindowResize());\n\n    }\n    private onWindowResize() {\n        this.camera.aspect = this.hostDiv.clientWidth / this.hostDiv.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n    }\n    private loop = () => {\n        this.requestFrame = requestAnimationFrame(this.loop);\n        this.controls.update();\n        this.update(this.scene);\n        this.renderer.render(this.scene, this.camera);\n        this.t += 0.01;\n\n        // console.log('rendering...');\n    }\n    // .............................................................................\n    public start() {\n        this.loop();\n    }\n    public mouseDown(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseUp(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseMove(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDrag(e: MouseEvent) {\n        // console.log(e);\n    }\n    public update(scene: THREE.Scene) {\n\n    }\n    public destroy() {\n        window.removeEventListener('resize', () => this.onWindowResize());\n        cancelAnimationFrame(this.requestFrame);\n        this.requestFrame = undefined;\n        while (this.hostDiv.lastChild) {\n            this.hostDiv.removeChild(this.hostDiv.lastChild);\n        }\n    }\n}\n\n\nexport class RendererThree extends RendererThreeBase {\n\n    pointLight: THREE.PointLight\n\n    raycaster = new THREE.Raycaster();\n    mouse = new THREE.Vector2();\n    m = new THREE.Vector3();\n\n    sphere: THREE.Mesh;\n    \n    ground: THREE.Mesh;\n\n    axis: THREE.AxesHelper;\n    grid: THREE.GridHelper;\n\n    arrayMesh: THREE.Mesh[] = [];\n    arrayPoint: any = [];\n    arrayArrow: any = [];\n\n    constructor(id: string = 'main') {\n        super(id)\n        this.initPost();\n        this.start();\n    }\n    public initPost() {\n        const ambientLight = new THREE.AmbientLight(0x555555);\n        this.scene.add(ambientLight);\n\n        this.pointLight = new THREE.PointLight(0xffffff, 100);\n        this.pointLight.position.x = 10;\n        this.pointLight.castShadow = true;\n        this.scene.add(this.pointLight);\n\n        this.axis = new THREE.AxesHelper(5);\n        this.axis.position.y = 0.001;\n        this.scene.add(this.axis);\n\n        const sizeGrid = 50\n        this.grid = new THREE.GridHelper(sizeGrid, 100, 0x444444, 0x323232);\n        this.scene.add(this.grid);\n\n        const geometry = new THREE.PlaneGeometry(sizeGrid, sizeGrid);\n        const materialG = new THREE.MeshBasicMaterial({color: 0x010101, side: THREE.DoubleSide, \n            transparent: true, opacity: 0\n        });\n        this.ground = new THREE.Mesh(geometry, materialG);\n        this.ground.rotation.x = -Math.PI / 2; // Rotate to make it flat\n        // this.ground.position.set(0,-1,0)\n        this.scene.add(this.ground);\n\n        \n        // @ts-ignore\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const geometrySphere = new THREE.SphereGeometry(0.05, 50, 50);\n        const objectSphere = new THREE.Mesh(geometrySphere, material);\n        objectSphere.translateX(1)\n        this.sphere = objectSphere\n        this.scene.add(objectSphere);\n\n\n        // let geometry = new THREE.SphereGeometry(1, 50, 50);\n        // let object = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial());\n        // object.translateX(-1)\n        // this.add(object);\n\n        // geometry = new THREE.SphereGeometry(1, 50, 50);\n        // object = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial());\n        // object.translateX(1)\n        // this.add(object);\n    }\n    public reset() {\n        this.arrayMesh = [];\n        this.arrayPoint = [];\n        this.arrayArrow = [];\n\n        for( let i = this.scene.children.length - 1; i >= 0; i--) { \n            let obj = this.scene.children[i];\n            this.scene.remove(obj); \n       }\n       this.initPost()\n    }\n    set showGrid(v: boolean) {\n        this.grid.visible = v;\n    }\n    set showAxis(v: boolean) {\n        this.axis.visible = v;\n    }\n\n    public add(object: THREE.Mesh, point, picking = true) {\n        this.scene.add(object);\n        if (picking) {\n            this.arrayMesh.push(object)\n            this.arrayPoint.push(point)\n        }\n    }\n    public addArrow(vec, velocity) {\n        const arrowHelper = new THREE.ArrowHelper( velocity, vec, 1, '#f00' );\n        this.arrayArrow.push(arrowHelper)\n        this.scene.add( arrowHelper );\n    }\n    public addPoint(v: any) {\n        // @ts-ignore\n        const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        const geometry = new THREE.SphereGeometry(0.1, 20, 20);\n        const object = new THREE.Mesh(geometry, material);\n        object.translateX(v.vec.x);\n        object.translateY(v.vec.z);\n        object.translateZ(v.vec.y);\n        this.add(object, v);\n        this.addArrow(v.vec, v.velocity);\n\n        \n    }\n    public mouseMove(e: MouseEvent): void {\n        console.log('mouseMove')\n        this.picking(e)\n\n    }\n    public picking(e: MouseEvent) {\n        this.mouse.x = (e.offsetX / this.renderer.domElement.clientWidth) * 2 - 1;\n        this.mouse.y = -(e.offsetY / this.renderer.domElement.clientHeight) * 2 + 1;\n\n        this.raycaster.setFromCamera(this.mouse, this.camera);\n\n        const intersects = this.raycaster.intersectObjects([ ...this.arrayMesh]);\n        if (intersects.length > 0) {\n\n            console.log(intersects[0].object);\n            console.log(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n            this.m.set(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\n\n            if (intersects[0].object !== this.sphere) {\n                this.sphere.position.set(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n            }\n            return intersects;\n\n        }\n\n        const intersectGround = this.raycaster.intersectObjects([this.ground]);\n        if (intersectGround.length > 0) {\n            // console.log(intersectGround)\n            this.m.set(intersectGround[0].point.x, intersectGround[0].point.y, intersectGround[0].point.z);\n            this.sphere.position.set(intersectGround[0].point.x, intersectGround[0].point.y, intersectGround[0].point.z)\n        }\n\n        return undefined;\n    }\n    public mouseClick(e: MouseEvent): void {\n        console.log('mouseClick')\n        const mesh = this.picking(e)\n        if (mesh) {\n            console.log({mesh})\n        }\n        console.log('mouseClick')\n        this.mouseClickPost(e);\n    }\n\n    public update(scene: THREE.Scene) {\n        this.render(scene)\n\n        this.arrayMesh.forEach((m: THREE.Mesh, i) => {\n            m.position.x = this.arrayPoint[i].vec.x;\n            m.position.y = this.arrayPoint[i].vec.z;\n            m.position.z = this.arrayPoint[i].vec.y;\n        })\n\n        this.arrayArrow.forEach((m: THREE.ArrowHelper, i) => {\n            m.position.x = this.arrayPoint[i].vec.x;\n            m.position.y = this.arrayPoint[i].vec.z;\n            m.position.z = this.arrayPoint[i].vec.y;\n            \n            const vec = new THREE.Vector3(this.arrayPoint[i].velocity.x, this.arrayPoint[i].velocity.z, this.arrayPoint[i].velocity.y)\n            const len = vec.length() * 0.5\n            m.setLength(len, 0.1,  0.1)\n            m.setDirection(vec)\n        })\n\n        const matrix = new THREE.Matrix4();\n        matrix.makeRotationY(Math.PI * 0.011);\n        this.pointLight.position.applyMatrix4(matrix);\n\n    }\n    public render = (scene: THREE.Scene) => { }\n    public mouseClickPost = (e: MouseEvent) => {\n        console.log('mouseClick, implementation needed')\n    }\n}\n","export const getCheckBox = (title: string) => {\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const checkBox = document.createElement('input');\n    checkBox.type = 'checkbox';\n    checkBox.defaultChecked = false;\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(checkBox);\n    div.appendChild(text);\n\n    return {\n        div, checkBox\n    }\n};","import { RendererThree } from './base/RendererThree';\r\nimport { getCheckBox } from './base/util'\r\n\r\nexport class Solution {\r\n    div: HTMLDivElement\r\n    renderer: RendererThree;\r\n    m: number[] = [0, 0];\r\n    t: number = 0.0;\r\n    pts: Point[] = [];\r\n    constructor(div: HTMLDivElement) {\r\n        this.div = div;\r\n        this.renderer = new RendererThree(div.id);\r\n        this.renderer.render = (scene) => this.render(scene);\r\n        this.initDom();\r\n        this.init();\r\n    }\r\n    public initDom() {\r\n        const div = document.createElement('div');\r\n        div.style.position = 'absolute'\r\n        this.div.appendChild(div);\r\n\r\n        const cBox = getCheckBox('grid');\r\n        div.append(cBox.div);\r\n        cBox.checkBox.checked = true;\r\n        cBox.checkBox.onchange = () => {\r\n            if (cBox.checkBox.checked === true) {\r\n                this.renderer.showGrid = true;\r\n            } else {\r\n                this.renderer.showGrid = false;\r\n            }\r\n        }\r\n\r\n        const axis = getCheckBox('axis');\r\n        div.append(axis.div);\r\n        axis.checkBox.checked = true;\r\n        axis.checkBox.onchange = () => {\r\n            if (axis.checkBox.checked === true) {\r\n                this.renderer.showAxis = true;\r\n            } else {\r\n                this.renderer.showAxis = false;\r\n            }\r\n        }\r\n    }\r\n    public init() {\r\n\r\n\r\n        for(let i = -10; i < 25; i++) {\r\n            for(let j = -10; j < 10; j++) {\r\n                const p = new Point(i ,j ,0);\r\n                this.pts.push(p);\r\n                this.renderer.addPoint(p)\r\n            }\r\n        }\r\n\r\n        // console.log('init')\r\n    }\r\n    public render(scene): void {\r\n        // console.log(scene)\r\n\r\n        // this.pts[0].vec.z-= 0.0001\r\n        // ctx.fillStyle = '#f00';\r\n\r\n\r\n        for(let i = 0 ; i < this.pts.length; ++i) {\r\n            this.pts[i].vec.z = Math.cos(i * this.t * 0.01)\r\n        }\r\n\r\n\r\n        // this.pts.forEach((v)=>{\r\n        //     v.move(this.t, 0.7)\r\n        //     v.render(ctx);\r\n        // });\r\n\r\n        // this.renderMouse(ctx);\r\n        this.t +=0.01\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        // this.m[0] = x - this.canvas.width * 0.5;\r\n        // this.m[1] = y - this.canvas.height * 0.5;\r\n    }\r\n    public renderMouse(ctx) {\r\n        // ctx.fillStyle = '#eee';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        // ctx.closePath();\r\n        // ctx.fill();\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        // const v = new Point(x - this.canvas.width * 0.5, y - this.canvas.height * 0.5, 0);\r\n        // this.pts.push(v);\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n    }\r\n}\r\n\r\nclass Point {\r\n    public vec: Vector3;\r\n    public velocity: Vector3;\r\n    public force: Vector3;\r\n    public mass = 10;\r\n    public r: number = 10;\r\n\r\n    constructor(x, y, z) {\r\n        this.vec =      new Vector3(x, y, z)\r\n        this.velocity = new Vector3(0,0,0)\r\n        this.force =    new Vector3(0.0, -0.1,0)\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.r, 0, Math.PI * 2.0)\r\n        ctx.closePath();\r\n        ctx.fill()\r\n    }\r\n    public move(dt: number, damping: number = 0.9) {\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        this.velocity = multiply(this.velocity, damping);\r\n        this.velocity = add(this.velocity,  multiply(this.force, (dt / this.mass )))\r\n\r\n        this.vec = add(this.vec, multiply(this.velocity, dt));\r\n\r\n        // if (this.vec.y < 0) {\r\n        //     this.vec.y *= -1.0\r\n        // }\r\n    }\r\n}\r\n\r\n\r\n// ......................\r\nconst xAxis = () => {\r\n    return new Vector3(1, 0, 0);\r\n}\r\nconst yAxis = () => {\r\n    return new Vector3(0, 1, 0);\r\n}\r\nconst zAxis = () => {\r\n    return new Vector3(0, 0, 1);\r\n}\r\nconst zero = () => {\r\n    return new Vector3(0, 0, 0);\r\n}\r\nconst origin = () => {\r\n    return new Vector3(0, 0, 0);\r\n}\r\n// ......................\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}\r\nconst dotProduct = (v1: Vector3, v2: Vector3) => {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n}\r\nconst crossProduct = (v1: Vector3, v2: Vector3) => {\r\n    return new Vector3(\r\n        v1.y * v2.z - v1.z * v2.y,\r\n        v1.z * v2.x - v1.x * v2.z,\r\n        v1.x * v2.y - v1.y * v2.x\r\n    );\r\n}\r\nconst normalize = (v: Vector3) => {\r\n    let len: number = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    if (len < 0.0001) {\r\n        return new Vector3(v.x, v.y, v.z);\r\n    }\r\n    return new Vector3(v.x / len, v.y / len, v.z / len);\r\n}\r\nconst length = (v: Vector3) => {\r\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n}\r\n\r\n// ......................\r\nconst multiply = (v: Vector3, s: number) => {\r\n    return scale(v, s);\r\n}\r\nconst scale = (v: Vector3, s: number) => {\r\n    return new Vector3(v.x * s, v.y * s, v.z * s);\r\n}\r\nconst sub = (v0: Vector3, v1: Vector3) => {\r\n    return new Vector3(v0.x - v1.x, v0.y - v1.y, v0.z - v1.z);\r\n}\r\nconst add = (v0: Vector3, v1: Vector3) => {\r\n    return new Vector3(v0.x + v1.x, v0.y + v1.y, v0.z + v1.z);\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    // public multiply(v: number) {\r\n    //     this.x *= v;\r\n    //     this.y *= v;\r\n    //     this.z *= v;\r\n    // }\r\n    // public add(v: Vector3) {\r\n    //     this.x += v.x;\r\n    //     this.y += v.y;\r\n    //     this.z += v.z;\r\n    // }\r\n}\r\n"],"names":["RendererThreeBase","constructor","id","canvas","hostDiv","ctx","t","camera","scene","renderer","controls","requestFrame","loop","this","requestAnimationFrame","update","render","document","getElementById","initCanvas","THREE","background","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","style","position","shadowMap","enabled","setSize","appendChild","OrbitControls","set","init","eventBind","onmousedown","e","mouseDown","onmouseup","mouseUp","onmousemove","mouseMove","addEventListener","mouseClick","window","onWindowResize","aspect","updateProjectionMatrix","start","mouseDClick","mouseDrag","destroy","removeEventListener","cancelAnimationFrame","undefined","lastChild","removeChild","RendererThree","super","pointLight","raycaster","mouse","m","sphere","ground","axis","grid","arrayMesh","arrayPoint","arrayArrow","mouseClickPost","console","log","initPost","ambientLight","add","x","y","geometry","materialG","color","side","transparent","opacity","rotation","Math","PI","material","geometrySphere","objectSphere","translateX","reset","i","children","length","obj","remove","showGrid","v","visible","showAxis","object","point","picking","push","addArrow","vec","velocity","arrowHelper","addPoint","translateY","z","translateZ","offsetX","offsetY","setFromCamera","intersects","intersectObjects","intersectGround","mesh","forEach","len","setLength","setDirection","matrix","makeRotationY","applyMatrix4","getCheckBox","title","div","createElement","display","checkBox","type","defaultChecked","text","textContent","Solution","pts","initDom","cBox","append","checked","onchange","j","p","Point","cos","renderMouse","force","mass","r","Vector3","beginPath","arc","closePath","fill","move","dt","damping","multiply","s","scale","v0","v1"],"sourceRoot":""}