{"version":3,"file":"static/js/6690.53220233.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/TSNE-Viz/Graph.ts"],"sourcesContent":["import { NVector3 } from '../../../../lib/NJSCore';\r\n\r\nexport class Graph {\r\n\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    dt: number = 0.0;\r\n\r\n    mouse: NVector3 = new NVector3(0, 0);\r\n\r\n    damping = 0.96;\r\n    gravity = -0.032;\r\n    timeStep = 0.16; // 0.316; // 0.18; // 0.26;\r\n    groundZ = -9.26;\r\n\r\n    capture: Node | undefined = undefined;\r\n\r\n    constructor() {\r\n    }\r\n    Init(width: number, height: number) {\r\n        this.InitGridR(width, height);\r\n        this.nodes[0].fixed = true;\r\n        this.nodes[9].fixed = true;\r\n        this.nodes[this.nodes.length - 1].fixed = true;\r\n        this.nodes[this.nodes.length - 1 - 9].fixed = true;\r\n    }\r\n    updateOptionA(v: number) {\r\n        this.damping = v * 0.1;\r\n        console.log(this.damping, 'damping');\r\n    }\r\n    updateOptionB(v: number) {\r\n        this.timeStep = v * 0.05;\r\n        console.log(this.timeStep, 'timeStep');\r\n    }\r\n    updateOptionC(v: number) {\r\n        // this.gravity = v * 0.1;\r\n        // console.log(this.gravity, 'gravity');\r\n    }\r\n    shrinkage(id: number, v: number) {\r\n        this.nodes[id].fixed = true;\r\n        for (let i = 0; i < this.nodes[id].edge.length; ++i) {\r\n            this.nodes[id].edge[i].targetLengthShrinkage(v)\r\n        }\r\n    }\r\n    InitGridR(width: number, height: number, xNum: number = 10, yNum: number = 10) {\r\n        const xOff = 0;\r\n        const yOff = 0;\r\n        const xInterval = (width / xNum) + 1;\r\n        const yInterval = (height / yNum) + 1;\r\n        const nbase = this.nodes.length;\r\n        for (let i = 0; i < yNum; ++i) {\r\n            for (let j = 0; j < xNum; ++j) {\r\n                let x = xOff + xInterval * j - width * 0.5;\r\n                let y = yOff + yInterval * i - height * 0.5;\r\n                this.AddNode(x, 0, y, NVector3.Zero(), 1.0);\r\n                // this.nodes.push(new Node(new NVector3(x, y), new NVector3(0, 0), 1));\r\n            }\r\n        }\r\n        for (let j = 0; j < yNum; ++j) {\r\n            for (let i = 0; i < xNum; ++i) {\r\n                let k = j * xNum + i;\r\n\r\n                if (i !== 0) { this.AddEdge(this.nodes[nbase + k - 1], this.nodes[nbase + k]); }\r\n                if (j !== 0) { this.AddEdge(this.nodes[nbase + k - xNum], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== 0) {this.AddEdge(this.nodes[nbase + k - xNum - 1], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== yNum - 1) {this.AddEdge(this.nodes[nbase + k + xNum - 1], this.nodes[nbase + k]); }\r\n            }\r\n        }\r\n    }\r\n    public Clear() {\r\n        this.nodes = [];\r\n        this.edges = [];\r\n    }\r\n    public AddNode(x: number, y: number, z: number, _u0: NVector3 = new NVector3(0, 0, 0), _mass: number = 1): Node {\r\n        const n = new Node(new NVector3(x, y, z), _u0, _mass);\r\n        this.nodes.push(n);\r\n        n.id = this.nodes.length - 1;\r\n        return n;\r\n    }\r\n    public AddEdge(n0: Node, n1: Node): Edge {\r\n        const e = new Edge(n0, n1);\r\n        n0.edge.push(e);\r\n        n1.edge.push(e);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        console.log('move', x, y);\r\n    }\r\n    MouseDClick(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        const n = this.FindNode(this.mouse);\r\n        if (n) {\r\n            n.fixed = !n.fixed;\r\n        }\r\n        console.log('click', x, y);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        this.capture = this.FindNode(this.mouse);\r\n        if (this.capture) {\r\n            this.capture.fixed = true;\r\n            this.capture.isCapture = true;\r\n        }\r\n        console.log('down', x, y, this.capture);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        console.log('click', x, y, this.capture);\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.isCapture = false;\r\n            this.capture = undefined;\r\n        }\r\n        console.log('up', x, y);\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n        console.log('drag', x, y);\r\n    }\r\n    Render(ctx?: CanvasRenderingContext2D) {\r\n\r\n        this.dt += 0.1;\r\n        this.Move(this.mouse.x, this.mouse.y, this.mouse.z, this.damping, 0, this.timeStep, this.groundZ, 1);\r\n\r\n        // for (let e of this.edges) { e.Render(ctx); }\r\n        // for (let n of this.nodes) { n.Render(ctx, this.mouse); }\r\n    }\r\n    FindNode(mv: NVector3) {\r\n        for (let n of this.nodes) {\r\n            if (n.v.Distance(mv) < n.m + 3) {\r\n                return n;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    public Move(x: number, y: number, z: number, damping: number, g: number = 0, dt: number = 0.01, groundZ: number = -10, step: number = 1) {\r\n        const atr = new NVector3(x, y, z);\r\n        for (let i = 0; i < step; ++i) {\r\n            for (const n of this.nodes) {\r\n\r\n                // const dv: NVector3 = atr - n.p;\r\n                //  L = dv.Length;\r\n                // dv.Unitize();\r\n                // n.f = dv * Math.Exp(-0.1 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n\r\n                const dv = NVector3.Sub(atr, n.v);\r\n                const L = dv.Length();\r\n                dv.Unitize();\r\n                n.f = NVector3.Add(NVector3.Scale(dv, Math.exp(-0.1 * L * L) * 0.1), (NVector3.Scale(NVector3.YAxis(), g)));\r\n            }\r\n            for (const e of this.edges) { e.ApplySpringForce(); }\r\n            for (const n of this.nodes) { n.Move(dt, damping, groundZ); }\r\n        }\r\n    }\r\n}\r\nexport class Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 0.0;\r\n    public isModified = false;\r\n    public springConstant: number = 0.8; // 1; // 0.8;\r\n    private _targetLengthOriginal = 0;\r\n    constructor(n0: Node, n1: Node) {\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n        this.targetLength = this.n0.v.Distance(this.n1.v) * 0.95;\r\n        this._targetLengthOriginal = this.targetLength;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#ff0000';\r\n\r\n        if (NVector3.Distance(this.n0.v, this.n1.v) < this.targetLength * 2) {\r\n\r\n            ctx.strokeStyle = '#0000ff';\r\n            // this.n0.isShort = true;\r\n            // this.n1.isShort = true;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.n0.v.x, this.n0.v.y);\r\n        ctx.lineTo(this.n1.v.x, this.n1.v.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    targetLengthShrinkage(n: number) {\r\n        if (!this.isModified) {\r\n            this.isModified = true;\r\n            this.targetLength *= n;\r\n        }\r\n    }\r\n\r\n    public ApplySpringForce() {\r\n        // Vector3d dp = n1.p - n0.p;\r\n        // double dist = dp.Length;\r\n        // dp.Unitize();\r\n\r\n        // n0.f += dp * (dist - TargetLength) * SpringConstant;\r\n        // n1.f -= dp * (dist - TargetLength) * SpringConstant;\r\n\r\n        // const dp: NVector3 = NVector3.Sub(this.n1.p, this.n0.p);\r\n        // const dist:number = dp.Length();\r\n        // dp.Unitize();\r\n\r\n        let dp = NVector3.Sub(this.n1.v, this.n0.v);\r\n        let dist = dp.Length();\r\n        dp.Unitize();\r\n\r\n        const length = NVector3.Scale(dp, (dist - this.targetLength) * this.springConstant);\r\n        this.n0.f = NVector3.Add(this.n0.f, length);\r\n        this.n1.f = NVector3.Sub(this.n1.f, length);\r\n\r\n    }\r\n}\r\nexport class Node {\r\n    public id: number = -1;\r\n    public edge: Edge[] = [];\r\n    public nNodes: Node[] = [];\r\n    public v: NVector3 = NVector3.Origin();\r\n    public f: NVector3 = NVector3.Origin();\r\n    public u: NVector3 = NVector3.Origin();\r\n    public m: number = 0.0;\r\n\r\n    public fixed: boolean = false;\r\n    public isCapture: boolean = false;\r\n    constructor(_p0: NVector3, _u0: NVector3, _mass: number) {\r\n        this.v = new NVector3(_p0.x, _p0.y, _p0.z);\r\n        this.u = new NVector3(_u0.x, _u0.y, _u0.z);\r\n        this.m = _mass;\r\n    }\r\n    public Move(dt: number, damping: number, groundZ: number = 0.0) {\r\n        if (this.fixed || this.isCapture) { return; }\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        // this.u = NVector3.Scale(this.u , damping );\r\n        // this.u = NVector3.Add( this.u,  NVector3.Scale(this.f, dt / this.m));\r\n        // this.p  = NVector3.Add(this.p, NVector3.Scale(this.u, dt));\r\n\r\n        this.u.Mult(damping);\r\n        this.u.Add(NVector3.Scale(this.f, dt / this.m));\r\n\r\n        const v = NVector3.Scale(this.u, dt);\r\n        // this.v.Add( );\r\n        this.v.x += v.x;\r\n        this.v.y += v.y;\r\n\r\n        // if (this.p.y < groundZ) {\r\n        //     this.p.y = groundZ;\r\n        //     if (this.u.y < 0.0) {this.u.y = -this.u.y; }\r\n        // }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, m: NVector3) {\r\n        ctx.beginPath();\r\n\r\n        if (m.Distance(this.v) < this.m + 3) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 6, 0.0, Math.PI * 2);\r\n        } else {\r\n            ctx.fillStyle = '#f90000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 3, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        if (this.fixed) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 7.5, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}"],"names":["Graph","nodes","edges","dt","mouse","NVector3","damping","gravity","timeStep","groundZ","capture","undefined","width","height","this","InitGridR","fixed","length","v","console","log","id","i","edge","targetLengthShrinkage","xNum","yNum","xOff","yOff","xInterval","yInterval","nbase","j","x","y","AddNode","k","AddEdge","z","_u0","_mass","n","Node","push","n0","n1","e","Edge","FindNode","isCapture","ctx","Move","mv","Distance","m","g","step","atr","dv","L","Length","Unitize","f","Math","exp","ApplySpringForce","targetLength","isModified","springConstant","_targetLengthOriginal","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","dp","dist","_p0","nNodes","u","Mult","Add","fillStyle","arc","PI","fill"],"sourceRoot":""}