{"version":3,"file":"static/js/81835.e9e35ddb.chunk.js","mappings":"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","sources":["njslab/Tools/Delaunay/index.ts"],"sourcesContent":["import { Delaunay, NVector3 } from '../../../lib/NJSCore';\r\nimport { RendererCanvas } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id) as HTMLDivElement;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '90%';\r\n        div.style.height = '50%';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n    delaunay: Delaunay\r\n    vs: Point[] = [];\r\n    selVec: Point | undefined = undefined;\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n        this.vs = [];\r\n        for (let i = 0; i < 5; ++i) {\r\n            this.vs.push(new Point(Math.random() * this.canvas.width, Math.random() * this.canvas.height));\r\n        }\r\n\r\n        // console.log(this.vs)\r\n\r\n        this.compute();\r\n\r\n\r\n\r\n\r\n        // Example Usage\r\n        const g = new Graph();\r\n\r\n        g.addVertex(0);\r\n        g.addVertex(1);\r\n        g.addVertex(2);\r\n        g.addVertex(3);\r\n        g.addVertex(4);\r\n\r\n        g.addEdge(0, 1, 2);\r\n        g.addEdge(0, 3, 6);\r\n        g.addEdge(1, 2, 3);\r\n        g.addEdge(1, 3, 8);\r\n        g.addEdge(1, 4, 5);\r\n        g.addEdge(2, 4, 7);\r\n        g.addEdge(3, 4, 9);\r\n\r\n        const MST = g.primMST(0);\r\n\r\n        console.log(\"Minimum Spanning Tree:\");\r\n        MST.forEach(edge => {\r\n            console.log(`${edge.vertex1} - ${edge.vertex2} : ${edge.weight}`);\r\n        });\r\n\r\n\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        const mv = new NVector3(x, y)\r\n\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            const dis = this.vs[i].vec.Distance(mv)\r\n            // console.log(dis)\r\n            if (dis < 6) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n\r\n        // this.selVec = undefined;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // console.log(this.selVec)\r\n        if (this.selVec) {\r\n            this.selVec.vec.x = x;\r\n            this.selVec.vec.y = y;\r\n            this.compute();\r\n\r\n        }\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.selVec = undefined;\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        this.vs.push(new Point(x, y));\r\n        this.compute();\r\n\r\n    }\r\n    public compute() {\r\n        this.delaunay = new Delaunay(this.vs.map((v) => v.vec));\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        // this.delaunay = new Delaunay(this.vs);\r\n        this.delaunay.DrawTriClass(ctx)\r\n\r\n        this.vs.forEach((v) => {\r\n            v.render(ctx)\r\n        })\r\n\r\n\r\n        // console.log(this.vs.length)\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Point {\r\n    public vec: NVector3\r\n    constructor(x, y, z = 0) {\r\n        this.vec = new NVector3(x, y, z);\r\n\r\n    }\r\n    public render(ctx) {\r\n        ctx.fillStyle = '#f00'\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, 6, 0, Math.PI * 2)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\n\r\nclass Graph {\r\n    vertices;\r\n    edges;\r\n    constructor() {\r\n        this.vertices = [];\r\n        this.edges = [];\r\n    }\r\n    addVertex(vertex) {\r\n        this.vertices.push(vertex);\r\n    }\r\n\r\n    addEdge(vertex1, vertex2, weight) {\r\n        this.edges.push({ vertex1, vertex2, weight });\r\n    }\r\n\r\n    primMST(startVertex) {\r\n        const visited = {};\r\n        const MST = [];\r\n\r\n        visited[startVertex] = true;\r\n\r\n        while (MST.length < this.vertices.length - 1) {\r\n            let minEdge = null;\r\n\r\n            this.edges.forEach(edge => {\r\n                if ((visited[edge.vertex1] && !visited[edge.vertex2]) ||\r\n                    (!visited[edge.vertex1] && visited[edge.vertex2])) {\r\n                    if (!minEdge || edge.weight < minEdge.weight) {\r\n                        minEdge = edge;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (!minEdge) {\r\n                break;\r\n            }\r\n\r\n            MST.push(minEdge);\r\n            visited[minEdge.vertex1] = true;\r\n            visited[minEdge.vertex2] = true;\r\n        }\r\n\r\n        return MST;\r\n    }\r\n}"],"names":["Solution","constructor","id","divHost","renderer","this","document","getElementById","style","display","alignItems","div","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","delaunay","vs","selVec","undefined","canvas","position","i","push","Point","Math","random","compute","g","Graph","addVertex","addEdge","MST","primMST","console","log","forEach","edge","vertex1","vertex2","weight","start","mouseDown","x","y","mv","NVector3","length","vec","Distance","mouseDrag","mouseUp","mouseClick","Delaunay","map","v","render","ctx","DrawTriClass","z","fillStyle","beginPath","arc","PI","closePath","fill","vertices","edges","vertex","startVertex","visited","minEdge"],"sourceRoot":""}