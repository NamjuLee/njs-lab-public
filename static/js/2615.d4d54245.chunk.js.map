{"version":3,"file":"static/js/2615.d4d54245.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-vector-Sandbox/SandboxVector/Renderer/Base/Base.ts","njslab/Workshop/workshop-vector-Sandbox/SandboxVector/Renderer/index.ts","njslab/Workshop/workshop-vector-Sandbox/SandboxVector/Scene/index.ts","njslab/Workshop/workshop-vector-Sandbox/SandboxVector/Common/index.ts","njslab/Workshop/workshop-vector-Sandbox/SandboxVector/Util/index.ts","webpack://NJS-Lab/./src/njslab/Workshop/workshop-vector-Sandbox/SandboxVector/View/style.module.css?7f2c","njslab/Workshop/workshop-vector-Sandbox/SandboxVector/View/index.ts","njslab/Workshop/workshop-vector-Sandbox/SandboxVector/index.ts","njslab/Workshop/workshop-vector-Sandbox/workshop-vector-sandbox.ts"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three-orbitcontrols-ts';\n\nexport class RendererThreeVectorSandboxBase {\n    public canvas: HTMLCanvasElement;\n    public hostDiv: HTMLElement;\n    public ctx: CanvasRenderingContext2D;\n    public t: number = 0.0;\n    public camera: THREE.PerspectiveCamera;\n    public scene: THREE.Scene;\n    public renderer: THREE.WebGLRenderer;\n    public controls: OrbitControls;\n    private requestFrame: number;\n    constructor(id: string) {\n        this.hostDiv = document.getElementById(id);\n        this.initCanvas();\n    }\n    private initCanvas() {\n        this.scene = new THREE.Scene();\n        this.setBG(0x000000)\n        this.scene.castShadow = true;\n\n        THREE.Object3D.DEFAULT_UP.set(0, 0, 1);\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setPixelRatio(this.hostDiv.clientWidth / this.hostDiv.clientHeight);\n        this.renderer.domElement.id = 'Three';\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n        this.hostDiv.appendChild(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(30, this.hostDiv.clientWidth / this.hostDiv.clientHeight, 1, 5000);\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.camera.position.set(20, -20, 20);\n        this.controls.update();\n\n\n\n        this.canvas = this.renderer.domElement;\n\n        this.init();\n    }\n    public setBG(hexColor) {\n        this.scene.background = new THREE.Color(hexColor);\n    }\n    private init() {\n        this.eventBind();\n\n    }\n    private eventBind() {\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.mouseDownPre(e);\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.mouseUpPre(e);\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.mouseMovePre(e);\n        this.renderer.domElement.addEventListener('click', (e: MouseEvent) => this.mouseClickPre(e))\n\n        window.addEventListener('resize', () => this.onWindowResize());\n\n    }\n    private onWindowResize() {\n        this.camera.aspect = this.hostDiv.clientWidth / this.hostDiv.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n    }\n    private loop = () => {\n        this.requestFrame = requestAnimationFrame(this.loop);\n        this.controls.update();\n        this.update(this.scene);\n        this.renderer.render(this.scene, this.camera);\n        this.t += 0.01;\n\n        // console.log('rendering...');\n    }\n    // .............................................................................\n    public start() {\n        this.loop();\n    }\n    public mouseDownPre(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseUpPre(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseClickPre(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDClickPre(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseMovePre(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDragPre(e: MouseEvent) {\n        // console.log(e);\n    }\n    public update(scene: THREE.Scene) {\n        // console.log(e);\n    }\n    public destroy() {\n        window.removeEventListener('resize', () => this.onWindowResize());\n        cancelAnimationFrame(this.requestFrame);\n        this.requestFrame = undefined;\n        while (this.hostDiv.lastChild) {\n            this.hostDiv.removeChild(this.hostDiv.lastChild);\n        }\n    }\n}\n\n\n","import * as THREE from 'three';\nimport SandboxVector from '../';\nimport { RendererThreeVectorSandboxBase } from './Base/Base'\n\nexport class RendererThreeVecSandbox extends RendererThreeVectorSandboxBase {\n    sandboxVector: SandboxVector\n    pointLight: THREE.PointLight\n\n    raycaster = new THREE.Raycaster();\n    mouse = new THREE.Vector2();\n    m = new THREE.Vector3();\n\n    sphere: THREE.Mesh;\n    \n    ground: THREE.Mesh;\n\n    axis: THREE.AxesHelper;\n    grid: THREE.GridHelper;\n\n\n    constructor(sandboxVector: SandboxVector, id: string = 'main', color = '#000') {\n        super(id)\n        this.sandboxVector = sandboxVector;\n        this.setBG(color)\n\n        this.initPost();\n        this.start();\n    }\n    public initPost() {\n        const ambientLight = new THREE.AmbientLight(0x555555);\n        this.scene.add(ambientLight);\n\n        this.pointLight = new THREE.PointLight(0xffffff, 100);\n        this.pointLight.position.x = 10;\n        this.pointLight.castShadow = true;\n        this.scene.add(this.pointLight);\n\n        this.axis = new THREE.AxesHelper(5);\n        this.axis.position.z = 0.001;\n        // this.axis.rotation.y = -Math.PI / 2;\n        this.scene.add(this.axis);\n\n        const sizeGrid = 50\n        this.grid = new THREE.GridHelper(sizeGrid, 100, 0x444444, 0x323232);\n        this.grid.rotation.x = -Math.PI / 2;\n        this.scene.add(this.grid);\n\n        const geometry = new THREE.PlaneGeometry(sizeGrid, sizeGrid);\n        const materialG = new THREE.MeshBasicMaterial({color: 0x010101, side: THREE.DoubleSide, \n            transparent: true, opacity: 0\n        });\n        this.ground = new THREE.Mesh(geometry, materialG);\n        // this.ground.rotation.x = -Math.PI / 2; // Rotate to make it flat\n        // this.ground.position.set(0,-1,0)\n        this.scene.add(this.ground);\n\n        \n        // @ts-ignore\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const geometrySphere = new THREE.SphereGeometry(0.05, 50, 50);\n        const objectSphere = new THREE.Mesh(geometrySphere, material);\n        objectSphere.translateX(1)\n        this.sphere = objectSphere\n        this.scene.add(objectSphere);\n\n\n        // let geometry = new THREE.SphereGeometry(1, 50, 50);\n        // let object = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial());\n        // object.translateX(-1)\n        // this.add(object);\n\n        // geometry = new THREE.SphereGeometry(1, 50, 50);\n        // object = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial());\n        // object.translateX(1)\n        // this.add(object);\n    }\n    public reset() {\n\n    }\n    set showGrid(v: boolean) {\n        this.grid.visible = v;\n    }\n    set showAxis(v: boolean) {\n        this.axis.visible = v;\n    }\n    public picking(e: MouseEvent, arrayMesh) {\n        this.mouse.x = (e.offsetX / this.renderer.domElement.clientWidth) * 2 - 1;\n        this.mouse.y = -(e.offsetY / this.renderer.domElement.clientHeight) * 2 + 1;\n\n        this.raycaster.setFromCamera(this.mouse, this.camera);\n\n        const intersects = this.raycaster.intersectObjects([ ...arrayMesh]);\n        if (intersects.length > 0) {\n            // console.log(intersects[0].object);\n            // console.log(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n            this.m.set(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\n\n            if (intersects[0].object !== this.sphere) {\n                this.sphere.position.set(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n            }\n            return {mesh: intersects, ground:undefined};\n\n        }\n\n        const intersectGround = this.raycaster.intersectObjects([this.ground]);\n        if (intersectGround.length > 0) {\n            // console.log(intersectGround)\n            this.m.set(intersectGround[0].point.x, intersectGround[0].point.y, intersectGround[0].point.z);\n            this.sphere.position.set(intersectGround[0].point.x, intersectGround[0].point.y, intersectGround[0].point.z)\n            return {mesh: undefined, ground :intersectGround};\n        }\n\n        return undefined;\n    }\n    public update(scene: THREE.Scene) {\n        this.updatePost(scene)\n\n        if (this.sandboxVector.scene) {\n            this.sandboxVector.scene.arrayMesh.forEach((m: THREE.Mesh, i) => {\n                m.position.x = this.sandboxVector.scene.arrayPoint[i].vec.x;\n                m.position.y = this.sandboxVector.scene.arrayPoint[i].vec.y;\n                m.position.z = this.sandboxVector.scene.arrayPoint[i].vec.z;\n            })\n\n            this.sandboxVector.scene.arrayArrow.forEach((m: THREE.ArrowHelper, i) => {\n                m.position.x = this.sandboxVector.scene.arrayPoint[i].vec.x;\n                m.position.y = this.sandboxVector.scene.arrayPoint[i].vec.y;\n                m.position.z = this.sandboxVector.scene.arrayPoint[i].vec.z;\n                \n                const vec = new THREE.Vector3(this.sandboxVector.scene.arrayPoint[i].velocity.x, this.sandboxVector.scene.arrayPoint[i].velocity.y, this.sandboxVector.scene.arrayPoint[i].velocity.z)\n                const len = vec.length() * 0.5\n                m.setLength(len, 0.1,  0.1)\n                m.setDirection(vec)\n            })\n\n            this.sandboxVector.scene.arrayLineMesh.forEach((ln, i) => {\n                const lnObj = this.sandboxVector.scene.arrayLine[i]\n                ln.geometry.attributes.position.setXYZ(0, lnObj.p0.vec.x, lnObj.p0.vec.y, lnObj.p0.vec.z);\n                ln.geometry.attributes.position.setXYZ(1, lnObj.p1.vec.x, lnObj.p1.vec.y, lnObj.p1.vec.z);\n                ln.geometry.attributes.position.needsUpdate = true;\n            })\n\n\n        }\n\n\n\n\n        const matrix = new THREE.Matrix4();\n        matrix.makeRotationY(Math.PI * 0.011);\n        this.pointLight.position.applyMatrix4(matrix);\n\n    }\n    public updatePost = (scene: THREE.Scene) => { }\n    // .................................................... Event\n    public onMouseClick = (e) => {}\n    public mouseClickPre(e: MouseEvent): void {\n        const intersect = this.picking(e, this.sandboxVector.scene.arrayMesh);\n        this.sandboxVector.common.updateSelectedData(intersect);\n        this.onMouseClick({e, intersect});\n    }\n    public onMouseMove = (e) => {}\n    public mouseMovePre= (e: MouseEvent) => {\n        const intersect = this.picking(e, this.sandboxVector.scene.arrayMesh);\n        this.onMouseMove({e, intersect});\n    }\n\n}\n","import * as THREE from 'three';\nimport SandboxVector from '../';\n\nexport class Scene {\n    public sandboxVector: SandboxVector;\n    public scene;\n\n    arrayMesh: THREE.Mesh[] = [];\n    arrayPoint: any = [];\n    arrayArrow: any = [];\n\n    arrayLine: any = []\n    arrayLineMesh: THREE.Mesh[]  = []\n\n    constructor(sandboxVector: SandboxVector) {\n        this.sandboxVector = sandboxVector;\n        this.scene = sandboxVector.renderer.scene;\n    }\n    public reset() {\n\n\n        for (let i = this.arrayMesh.length - 1; i >= 0; i--) {\n            let obj = this.arrayMesh[i];\n            this.scene.remove(obj);\n        }\n\n        for (let i = this.arrayArrow.length - 1; i >= 0; i--) {\n            let obj = this.arrayArrow[i];\n            this.scene.remove(obj);\n        }\n\n        this.arrayMesh = [];\n        this.arrayPoint = [];\n        this.arrayArrow = [];\n\n        this.arrayLine = []\n        //    this.initPost()\n    }\n    public add(object: THREE.Mesh, point, picking = true) {\n        this.scene.add(object);\n        if (picking) {\n            this.arrayMesh.push(object)\n            this.arrayPoint.push(point)\n        }\n    }\n    public addArrow(vec, velocity) {\n        const arrowHelper = new THREE.ArrowHelper(velocity, vec, 1, '#f00');\n        this.arrayArrow.push(arrowHelper)\n        this.scene.add(arrowHelper);\n    }\n    public addPoint(v: any) {\n        // @ts-ignore\n        const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        const geometry = new THREE.SphereGeometry(0.1, 20, 20);\n        const object = new THREE.Mesh(geometry, material);\n        object.translateX(v.vec.x);\n        object.translateY(v.vec.z);\n        object.translateZ(v.vec.y);\n        this.add(object, v);\n        this.addArrow(v.vec, v.velocity);\n\n    }\n    public addLine(ln: any) {\n        this.arrayLine.push(ln)\n\n        const material = new THREE.LineBasicMaterial( { color: 0xffffff } );\n\n        const points = [];\n        points.push( new THREE.Vector3(ln.p0.vec.x, ln.p0.vec.y, ln.p0.vec.z ) );\n        points.push( new THREE.Vector3(ln.p1.vec.x, ln.p1.vec.y, ln.p1.vec.z ) );\n\n        const geometry = new THREE.BufferGeometry().setFromPoints( points );\n        const line = new THREE.Line( geometry, material );\n        // @ts-ignore\n        this.arrayLineMesh.push(line)\n        this.scene.add(line)\n    }\n}","import * as THREE from 'three';\nimport SandboxVector from '../';\n\nexport class Common {\n    public app: SandboxVector\n    constructor(app: SandboxVector) {\n        this.app = app;\n    }\n    public updateSelectedData(data) {\n        if (data.mesh) {\n            const selGeo = data.mesh[0]\n            console.log({ selGeo });\n\n            this.app.view.updateSelectedData(selGeo)\n\n        }\n    }\n}","export const getCheckBox = (title: string) => {\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const checkBox = document.createElement('input');\n    checkBox.type = 'checkbox';\n    checkBox.defaultChecked = false;\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(checkBox);\n    div.appendChild(text);\n\n    return {\n        div, checkBox\n    }\n};","// extracted by mini-css-extract-plugin\nexport default {\"middle\":\"style_middle__CBXMN\"};","import { getCheckBox } from '../Util';\nimport SandboxVectorImplementation from '../';\n\nimport style from './style.module.css';\n\nexport class ViewSandbox {\n    hostDiv: HTMLElement;\n    main: HTMLElement;\n    mainID: string = 'mainSandbox';\n\n    private divTop;\n    private divRight: HTMLDivElement;\n    private divStatus;\n    public sandbox: SandboxVectorImplementation;\n    constructor(sandbox: SandboxVectorImplementation) {\n        this.sandbox = sandbox;\n        this.initUI();\n        this.initTop();\n        this.initStatus();\n    }\n    public reset() {\n        this.divRight.innerText = ''\n    }\n    public updateSelectedData(data) {\n        // console.log(data)\n        this.divRight.innerText = `x: ${data.point.x} \\n y: ${data.point.y} \\n z: ${data.point.z}`;\n    }\n\n    private initUI(){\n        this.hostDiv = document.getElementById(this.sandbox.id);\n\n        const div = document.createElement('div');\n        // div.id = this.mainID;\n        div.style.background = this.sandbox.themeColor;\n        div.style.width = '100%';\n        div.style.height = '100%';\n        this.hostDiv.append(div);\n\n\n        const divTop = document.createElement('div');\n        // div.style.position = 'absolute';\n        // divTop.style.background = '#999';\n        divTop.style.width = '100%';\n        divTop.style.height = '40px';\n        div.append(divTop);\n        this.divTop = divTop;\n\n        const divMiddle = document.createElement('div');\n        divMiddle.className = style.middle\n        div.append(divMiddle);\n\n        const divMiddleLeft = document.createElement('div');\n        // divMiddleLeft.style.background = '#ff0';\n        divMiddleLeft.style.width = '200px';\n        divMiddleLeft.style.height = '100%';\n        divMiddle.append(divMiddleLeft);\n\n        const divMiddleCenter = document.createElement('div');\n        // div.style.position = 'absolute';\n        // divMiddleCenter.className = style.middle\n        divMiddleCenter.id = this.mainID;\n        // divMiddleCenter.style.background = '#f00';\n        divMiddleCenter.style.width = '100%';\n        divMiddleCenter.style.height = '100%';\n        divMiddle.append(divMiddleCenter);\n\n        const divMiddleRight= document.createElement('div');\n        // divMiddleRight.style.background = '#0f0';\n        divMiddleRight.style.width = '300px';\n        divMiddleRight.style.height = '100%';\n        divMiddleRight.style.padding = '10px';\n        divMiddle.append(divMiddleRight);\n        this.divRight= document.createElement('div');\n        this.divRight.style.width = '100%';\n        this.divRight.style.height = '100%';\n        // this.divRight.style.background = '#f00';\n        // this.divRight.style.text = 'wrap';\n        divMiddleRight.append(this.divRight);\n\n\n\n        const divStatus = document.createElement('div');\n        // div.style.position = 'absolute';\n        // divStatus.style.background = '#00f';\n        divStatus.style.width = '100%';\n        divStatus.style.height = '40px';\n        divStatus.style.display = 'flex';\n        div.append(divStatus);\n        this.divStatus = divStatus;\n    }\n    public initTop() {\n        const divResetWrapper = document.createElement('div');\n        this.divTop.append(divResetWrapper);\n        const resetBtn = document.createElement('button');\n        resetBtn.textContent = 'reset';\n        resetBtn.onclick = () => {\n            this.sandbox.reset();\n        }\n        divResetWrapper.append(resetBtn);\n    }\n    public initStatus(){\n\n        const divGridWrapper = document.createElement('div');\n        this.divStatus.append(divGridWrapper);\n        divGridWrapper.style.border = '2px'\n        const cBox = getCheckBox('grid');\n        divGridWrapper.append(cBox.div);\n        cBox.checkBox.checked = true;\n        cBox.checkBox.onchange = () => {\n            if (cBox.checkBox.checked === true) {\n                this.sandbox.renderer.showGrid = true;\n            } else {\n                this.sandbox.renderer.showGrid = false;\n            }\n        }\n\n        const divAxisWrapper = document.createElement('div');\n        this.divStatus.append(divAxisWrapper);\n        divAxisWrapper.style.border = '2px'\n        const axis = getCheckBox('axis');\n        divAxisWrapper.append(axis.div);\n        axis.checkBox.checked = true;\n        axis.checkBox.onchange = () => {\n            if (axis.checkBox.checked === true) {\n                this.sandbox.renderer.showAxis = true;\n            } else {\n                this.sandbox.renderer.showAxis = false;\n            }\n        }\n\n\n    }\n}","import { RendererThreeVecSandbox } from './Renderer';\nimport { Scene } from './Scene';\nimport { Common } from './Common';\nimport { ViewSandbox } from './View';\n\nclass SandBoxVector {\n    public id: string;\n    public renderer: RendererThreeVecSandbox;\n    public view: ViewSandbox;\n    public common: Common;\n    public scene: Scene;\n    public themeColor = '#222';\n    public t = 0\n    constructor(id: string) {\n        this.id = id;\n        this.initDom();\n\n        this.initRenderer();\n    }\n    public destroy() {\n        this.renderer.destroy();\n    }\n    private initDom() {\n        this.view = new ViewSandbox(this);\n    }\n    private initRenderer() {\n        this.renderer = new RendererThreeVecSandbox(this, this.view.mainID, this.themeColor);\n        this.renderer.updatePost = (scene) => this.update();\n        this.renderer.onMouseMove = (e) => this.onMouseMove(e);\n        this.renderer.onMouseClick = (e) => this.onMouseClick(e);\n        this.scene = new Scene(this);\n        this.common = new Common(this)\n\n    }\n    public reset() {\n        this.t = 0\n        this.renderer.reset();\n        this.scene.reset();\n        this.view.reset();\n\n        this.start();\n    }\n    // ..........................\n    public start() {\n        // TODO:\n    }\n    public update() {\n        // TODO:\n    }\n    public onMouseMove(e: any) { }\n    public onMouseClick(e: any) { }\n}\n\nexport default SandBoxVector","import SandboxVector from './SandboxVector';\r\n\r\nexport class Solution {\r\n    public div: HTMLDivElement\r\n    public sandboxVector: SandboxVectorImplementation;\r\n    constructor(div: HTMLDivElement) {\r\n        this.div = div;\r\n        this.sandboxVector = new SandboxVectorImplementation(div.id);\r\n    }\r\n    public destroy() {\r\n        this.sandboxVector.destroy();\r\n    }\r\n}\r\n\r\nclass SandboxVectorImplementation extends SandboxVector {\r\n    constructor(id: string) {\r\n        super(id)\r\n        this.start()\r\n    }\r\n    // ................................ global variable\r\n    t: number = 0.0;\r\n    m: number[] = [0, 0];\r\n    pts: Point[] = []\r\n    lns: Line[] = []\r\n\r\n    public start() {\r\n        // ................................ start\r\n\r\n        // const p = new Point(0,0,5, 3,0,2);\r\n        // // p.force = new Vector3(0.0, 0.0, -9.81)\r\n        // this.pts.push(p);\r\n        // this.scene.addPoint(p)\r\n\r\n        // const p2 = new Point(0,0,6, 1,0,2);\r\n        // // p.force = new Vector3(0.0, 0.0, -9.81)\r\n        // this.pts.push(p2);\r\n        // this.scene.addPoint(p2)\r\n\r\n\r\n        // const ln = new Line(p, p2);\r\n        // // p.force = new Vector3(0.0, 0.0, -9.81)\r\n        // this.lns.push(ln);\r\n        // this.scene.addLine(ln)  \r\n\r\n\r\n        for(let i = -10; i < 25; i++) {\r\n            for(let j = -10; j < 10; j++) {\r\n                const p = new Point(i ,j ,Math.sin(i * j * 0.1) + 10 );\r\n                this.pts.push(p);\r\n                this.scene.addPoint(p)\r\n            }\r\n        }\r\n\r\n\r\n        for(let i = 0 ; i < this.pts.length - 1; ++i) {\r\n            const line = new Line(this.pts[i], this.pts[i+1]);\r\n            // p.force = new Vector3(0.0, 0.0, -9.81)\r\n            this.lns.push(line);\r\n            this.scene.addLine(line)  \r\n        }\r\n    }\r\n    public update() {\r\n        // ................................ update loop\r\n        this.pts.forEach((v)=>{\r\n            v.move(this.t, 0.985)\r\n        });\r\n\r\n        this.t +=0.0001\r\n    }\r\n    // ................................ event\r\n    public onMouseMove(e): void {\r\n        // console.log('move', e)\r\n\r\n    }\r\n    public onMouseClick(e): void {\r\n\r\n        console.log(e)\r\n        \r\n        // const v = new Point(x, y, 0);\r\n        // console.log(v)\r\n        // this.pts.push(v);\r\n        // console.log('ddd')\r\n\r\n        // console.log(this.sandboxVector.m)\r\n\r\n        // const v = this.sandboxVector.m;\r\n        // const p = new Point(v.x, v.z, v.y)\r\n        // this.pts.push(p);\r\n        // this.sandboxVector.addPoint(p);\r\n\r\n        if (e.intersect?.ground && e.intersect.ground[0].point) {\r\n            this.addPoint(e.intersect.ground[0].point)\r\n        }\r\n\r\n    }\r\n    public addPoint(v) {\r\n        const p = new Point(v.x, v.y, v.z, 0, 0, 10);\r\n        this.pts.push(p);\r\n        this.scene.addPoint(p)\r\n    }\r\n}\r\n\r\n// ...........................................................\r\n\r\n\r\nclass Line {\r\n    p0: Point;\r\n    p1: Point;\r\n    constructor(p0, p1) {\r\n        this.p0 = p0;\r\n        this.p1 = p1;\r\n    }\r\n}\r\n\r\n\r\nclass Point {\r\n    public dt = 0;\r\n    public vec: Vector3;\r\n    public velocity: Vector3;\r\n    public force: Vector3 = new Vector3(0,0,-.98);\r\n    public mass = 1;\r\n    public r: number = 10;\r\n    public damping = 0.99 // - (Math.random() * 0.01)\r\n    constructor(x, y, z ,ux = 0, uy = 0, uz = 0) {\r\n        this.vec =      new Vector3(x, y, z)\r\n        this.velocity = new Vector3(ux, uy, uz)\r\n\r\n    }\r\n    public move(dt: number, damping: number = 1) {\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        // u *= damping;\r\n        // u = u + (f * (dt / m));\r\n        // p = p + (u * dt);\r\n\r\n\r\n        // this.velocity.x = this.velocity.x * this.damping;\r\n        // this.velocity.y = this.velocity.y * this.damping;\r\n        // this.velocity.z = this.velocity.z * this.damping;\r\n        \r\n        // this.velocity.x = this.velocity.x + (this.force.x * (this.dt / this.mass))\r\n        // this.velocity.y = this.velocity.y + (this.force.y * (this.dt / this.mass))\r\n        // this.velocity.z = this.velocity.z + (this.force.z * (this.dt / this.mass))\r\n\r\n        // this.vec.x = this.vec.x + (this.velocity.x * this.dt)\r\n        // this.vec.y = this.vec.y + (this.velocity.y * this.dt)\r\n        // this.vec.z = this.vec.z + (this.velocity.z * this.dt)\r\n\r\n\r\n        this.velocity = multiply(this.velocity, this.damping);\r\n        this.velocity = add(this.velocity,  multiply(this.force, (this.dt / this.mass )))\r\n        this.vec = add(this.vec, multiply(this.velocity, this.dt ));\r\n\r\n\r\n        if (this.vec.z < 0) {\r\n            this.vec.z = 0;\r\n            if (this.velocity.z < 0) {\r\n                this.velocity.z *= -0.95\r\n            }\r\n        }\r\n\r\n        // console.log(this.velocity)\r\n        this.dt += 0.0001;\r\n    }\r\n}\r\n\r\n\r\n// ......................\r\nconst xAxis = () => {\r\n    return new Vector3(1, 0, 0);\r\n}\r\nconst yAxis = () => {\r\n    return new Vector3(0, 1, 0);\r\n}\r\nconst zAxis = () => {\r\n    return new Vector3(0, 0, 1);\r\n}\r\nconst zero = () => {\r\n    return new Vector3(0, 0, 0);\r\n}\r\nconst origin = () => {\r\n    return new Vector3(0, 0, 0);\r\n}\r\n// ......................\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}\r\nconst dotProduct = (v1: Vector3, v2: Vector3) => {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n}\r\nconst crossProduct = (v1: Vector3, v2: Vector3) => {\r\n    return new Vector3(\r\n        v1.y * v2.z - v1.z * v2.y,\r\n        v1.z * v2.x - v1.x * v2.z,\r\n        v1.x * v2.y - v1.y * v2.x\r\n    );\r\n}\r\nconst normalize = (v: Vector3) => {\r\n    let len: number = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    if (len < 0.0001) {\r\n        return new Vector3(v.x, v.y, v.z);\r\n    }\r\n    return new Vector3(v.x / len, v.y / len, v.z / len);\r\n}\r\nconst length = (v: Vector3) => {\r\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n}\r\n\r\n// ......................\r\nconst multiply = (v: Vector3, s: number) => {\r\n    return scale(v, s);\r\n}\r\nconst scale = (v: Vector3, s: number) => {\r\n    return new Vector3(v.x * s, v.y * s, v.z * s);\r\n}\r\nconst sub = (v0: Vector3, v1: Vector3) => {\r\n    return new Vector3(v0.x - v1.x, v0.y - v1.y, v0.z - v1.z);\r\n}\r\nconst add = (v0: Vector3, v1: Vector3) => {\r\n    return new Vector3(v0.x + v1.x, v0.y + v1.y, v0.z + v1.z);\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}\r\n"],"names":["RendererThreeVectorSandboxBase","constructor","id","canvas","hostDiv","ctx","t","camera","scene","renderer","controls","requestFrame","loop","this","requestAnimationFrame","update","render","document","getElementById","initCanvas","THREE","setBG","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","style","position","shadowMap","enabled","setSize","appendChild","OrbitControls","set","init","hexColor","background","eventBind","onmousedown","e","mouseDownPre","onmouseup","mouseUpPre","onmousemove","mouseMovePre","addEventListener","mouseClickPre","window","onWindowResize","aspect","updateProjectionMatrix","start","mouseDClickPre","mouseDragPre","destroy","removeEventListener","cancelAnimationFrame","undefined","lastChild","removeChild","RendererThreeVecSandbox","sandboxVector","color","super","pointLight","raycaster","mouse","m","sphere","ground","axis","grid","updatePost","onMouseClick","onMouseMove","intersect","picking","arrayMesh","initPost","ambientLight","add","x","z","rotation","Math","PI","geometry","materialG","side","transparent","opacity","material","geometrySphere","objectSphere","translateX","reset","showGrid","v","visible","showAxis","offsetX","y","offsetY","setFromCamera","intersects","intersectObjects","length","point","object","mesh","intersectGround","forEach","i","arrayPoint","vec","arrayArrow","velocity","len","setLength","setDirection","arrayLineMesh","ln","lnObj","arrayLine","attributes","setXYZ","p0","p1","needsUpdate","matrix","makeRotationY","applyMatrix4","common","updateSelectedData","Scene","obj","remove","push","addArrow","arrowHelper","addPoint","translateY","translateZ","addLine","points","setFromPoints","line","Common","app","data","selGeo","console","log","view","getCheckBox","title","div","createElement","display","checkBox","type","defaultChecked","text","textContent","ViewSandbox","sandbox","main","mainID","divTop","divRight","divStatus","initUI","initTop","initStatus","innerText","themeColor","width","height","append","divMiddle","className","divMiddleLeft","divMiddleCenter","divMiddleRight","padding","divResetWrapper","resetBtn","onclick","divGridWrapper","border","cBox","checked","onchange","divAxisWrapper","initDom","initRenderer","Solution","SandboxVectorImplementation","SandboxVector","pts","lns","j","p","Point","sin","Line","move","ux","uy","uz","dt","force","Vector3","mass","r","damping","multiply","s","scale","v0","v1"],"sourceRoot":""}