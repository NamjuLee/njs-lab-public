{"version":3,"file":"static/js/271.2172d93b.chunk.js","mappings":"gJAEO,MAAMA,UAAiBC,EAAAA,GAM1BC,YAAYC,GACRC,MAAMD,GAAK,KALfE,WAAK,OACLC,EAAI,IAAIC,EAAQ,EAAE,EAAE,GAAE,KAEtBC,cAAe,EAIX,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,YAAc,MACrBH,EAAOI,MAAMC,SAAW,WACxBL,EAAOM,QAAU,KACbC,KAAKR,cAAgBQ,KAAKR,YAAY,EAE1CL,EAAIc,YAAYR,GAEhBO,KAAKE,OAAOL,MAAMC,SAAW,WAK7BE,KAAKG,MACT,CACOA,OAEHH,KAAKX,MAAQ,IAAIe,EACjBJ,KAAKK,WAAW,IAAK,KAErBL,KAAKM,OACT,CACOC,WACH,MAAMC,EAAIC,KAAKC,SAAWV,KAAKE,OAAOS,MAChCC,EAAIH,KAAKC,SAAWV,KAAKE,OAAOW,OACtCb,KAAKK,WAAWG,EAAGI,EACvB,CACOE,OAAOC,GACPf,KAAKR,cACJQ,KAAKO,WAGTP,KAAKX,MAAMyB,OAAOC,GAElBA,EAAIC,YACJD,EAAIE,IAAIjB,KAAKV,EAAEkB,EAAGR,KAAKV,EAAEsB,EAAG,EAAG,EAAG,MAClCG,EAAIG,YACJH,EAAII,UAAY,OAChBJ,EAAIK,MAER,CACOf,WAAWG,EAAWI,GACzBZ,KAAKX,MAAMgC,QAAQb,EAAGI,EAAG,EAC7B,CACOU,UAAUd,EAAWI,GACxBZ,KAAKV,EAAEkB,EAAIA,EACXR,KAAKV,EAAEsB,EAAIA,CACf,EAIJ,MAAMR,EAGFlB,cAAe,KAFfqC,MAAQ,GAAE,KACVC,MAAQ,EAGR,CACOH,QAAQb,EAAWI,EAAWa,GACjC,MAAMC,EAAO,IAAIC,EAAKnB,EAAGI,EAAG,GAC5BZ,KAAKwB,MAAMI,KAAKF,GAEhB1B,KAAK6B,aACT,CACOC,QAAQC,EAAUC,GACrB,MAAMN,EAAO,IAAIO,EAAKF,EAAIC,GAC1BhC,KAAKuB,MAAMK,KAAKF,EACpB,CACOG,cACH7B,KAAKuB,MAAQ,GAEb,IAAI,IAAIW,EAAI,EAAIA,EAAIlC,KAAKwB,MAAMW,SAAUD,EAAG,CACxC,IAEIF,EAFAI,EAAMC,OAAOC,UACbP,EAAK/B,KAAKwB,MAAMU,GAEpB,IAAI,IAAIK,EAAI,EAAIA,EAAIvC,KAAKwB,MAAMW,SAAUI,EAAG,CACxC,IAAIb,EAAO1B,KAAKwB,MAAMe,GACtB,GAAIR,IAAOL,EAAM,CACb,IAAIc,EAASC,EAASV,EAAGW,IAAKhB,EAAKgB,KAC/BN,EAAMI,IACNJ,EAAMI,EACNR,EAAKN,EAEb,CACJ,CACA1B,KAAK8B,QAAQC,EAAIC,EACrB,CACJ,CACOlB,OAAOC,GACVf,KAAKuB,MAAMoB,SAASC,IAAYA,EAAE9B,OAAOC,EAAI,IAC7Cf,KAAKwB,MAAMmB,SAASE,IAAaA,EAAE/B,OAAOC,EAAI,GAClD,EAIJ,MAAMkB,EAGF/C,YAAY6C,EAAUC,GAAW,KAF1BD,QAAE,OACFC,QAAE,EAELhC,KAAK+B,GAAKA,EACV/B,KAAKgC,GAAKA,CACd,CACOlB,OAAOC,QACM+B,IAAZ9C,KAAK+B,SAAgCe,IAAZ9C,KAAKgC,KAElCjB,EAAIC,YACJD,EAAIgC,OAAO/C,KAAK+B,GAAGW,IAAIlC,EAAGR,KAAK+B,GAAGW,IAAI9B,GACtCG,EAAIiC,OAAOhD,KAAKgC,GAAGU,IAAIlC,EAAGR,KAAKgC,GAAGU,IAAI9B,GACtCG,EAAIkC,YAAc,OAClBlC,EAAImC,SACR,EAGJ,MAAMvB,EAGFzC,YAAYsB,EAAWI,GAA0B,IAAfa,EAAQ,uDAAG,EAAC,KAFvCiB,SAAG,OACHS,EAAY,EAEfnD,KAAK0C,IAAM,IAAInD,EAAQiB,EAAGI,EAAGa,EACjC,CACOX,OAAOC,GACVA,EAAIC,YACJD,EAAIE,IAAIjB,KAAK0C,IAAIlC,EAAGR,KAAK0C,IAAI9B,EAAGZ,KAAKmD,EAAG,EAAG,MAC3CpC,EAAIG,YACJH,EAAII,UAAY,UAChBJ,EAAIK,MACR,EAEJ,MAAM7B,EAIFL,YAAYsB,EAAWI,GAAyB,IAAda,EAAQ,uDAAG,EAAC,KAHvCjB,OAAC,OACDI,OAAC,OACDa,OAAC,EAEJzB,KAAKQ,EAAIA,EACTR,KAAKY,EAAIA,EACTZ,KAAKyB,EAAIA,CACb,EAGJ,MAAMgB,EAAW,CAACW,EAAaC,IACpB5C,KAAK6C,KAAKC,EAAUH,EAAIC,IAE7BE,EAAY,CAACH,EAAaC,KACpBD,EAAG5C,EAAI6C,EAAG7C,IAAM4C,EAAG5C,EAAI6C,EAAG7C,IAAM4C,EAAGxC,EAAIyC,EAAGzC,IAAMwC,EAAGxC,EAAIyC,EAAGzC,IAAMwC,EAAG3B,EAAI4B,EAAG5B,IAAM2B,EAAG3B,EAAI4B,EAAG5B,E","sources":["njslab/Workshop/workshop-graph/04_Graph-wrapper/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../../lib';\r\n\r\nexport class Solution extends RendererCanvas {\r\n\r\n    graph: Graph;\r\n    m = new Vector3(0,0,0)\r\n    \r\n    needPopulate = false\r\n    constructor(div: HTMLDivElement) {\r\n        super(div);\r\n\r\n        const divBtn = document.createElement('button');\r\n        divBtn.textContent = 'run'\r\n        divBtn.style.position = 'absolute'\r\n        divBtn.onclick = () => {\r\n            this.needPopulate = !this.needPopulate;\r\n        }\r\n        div.appendChild(divBtn);\r\n\r\n        this.canvas.style.position = 'absolute'\r\n\r\n        \r\n\r\n        // const btn = doc\r\n        this.init();\r\n    }\r\n    public init() {\r\n        // TODO\r\n        this.graph = new Graph();\r\n        this.mouseClick(100, 100);\r\n        \r\n        this.start()\r\n    }\r\n    public populate() {\r\n        const x = Math.random() * this.canvas.width\r\n        const y = Math.random() * this.canvas.height\r\n        this.mouseClick(x, y);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        if(this.needPopulate) {\r\n            this.populate()\r\n        }\r\n\r\n        this.graph.render(ctx);\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#888';\r\n        ctx.fill();\r\n\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        this.graph.addNode(x, y, 0);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n}\r\n\r\n\r\nclass Graph {\r\n    edges = []\r\n    nodes = []\r\n    constructor() {\r\n\r\n    }\r\n    public addNode(x: number, y: number, z: number) {\r\n        const node = new Node(x, y, 0);\r\n        this.nodes.push(node);\r\n\r\n        this.computeEdge();\r\n    }\r\n    public addEdge(n0: Node, n1: Node) {\r\n        const node = new Edge(n0, n1);\r\n        this.edges.push(node);\r\n    }\r\n    public computeEdge() {\r\n        this.edges = [];\r\n\r\n        for(let j = 0 ; j < this.nodes.length; ++j) {\r\n            let dis = Number.MAX_VALUE;\r\n            let n0 = this.nodes[j];\r\n            let n1 = undefined;\r\n            for(let i = 0 ; i < this.nodes.length; ++i) {\r\n                let node = this.nodes[i];\r\n                if (n0 !== node) {\r\n                    let theDis = distance(n0.vec, node.vec);\r\n                    if (dis > theDis) {\r\n                        dis = theDis;\r\n                        n1 = node;\r\n                    }\r\n                }\r\n            }\r\n            this.addEdge(n0, n1);\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.edges.forEach((e: Edge)=> {e.render(ctx);}) \r\n        this.nodes.forEach((n: Node) => {n.render(ctx);})\r\n    }\r\n}\r\n\r\n\r\nclass Edge {\r\n    public n0: Node\r\n    public n1: Node\r\n    constructor(n0: Node, n1: Node) {\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        if (this.n0 === undefined || this.n1 === undefined) { return; }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.n0.vec.x, this.n0.vec.y)\r\n        ctx.lineTo(this.n1.vec.x, this.n1.vec.y)\r\n        ctx.strokeStyle = '#0f0';\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nclass Node {\r\n    public vec: Vector3;\r\n    public r: number = 5;\r\n    constructor(x: number, y: number, z:number = 0) {\r\n        this.vec = new Vector3(x, y, z)\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.r, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.fill();\r\n    }\r\n}\r\nclass Vector3 {\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n    constructor(x: number, y: number, z:number = 0){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z\r\n    }\r\n}\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}"],"names":["Solution","RendererCanvas","constructor","div","super","graph","m","Vector3","needPopulate","divBtn","document","createElement","textContent","style","position","onclick","this","appendChild","canvas","init","Graph","mouseClick","start","populate","x","Math","random","width","y","height","render","ctx","beginPath","arc","closePath","fillStyle","fill","addNode","mouseMove","edges","nodes","z","node","Node","push","computeEdge","addEdge","n0","n1","Edge","j","length","dis","Number","MAX_VALUE","i","theDis","distance","vec","forEach","e","n","undefined","moveTo","lineTo","strokeStyle","stroke","r","v0","v1","sqrt","distance2"],"sourceRoot":""}