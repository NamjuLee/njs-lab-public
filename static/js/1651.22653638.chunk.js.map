{"version":3,"file":"static/js/1651.22653638.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-mapping/UrbanNetwork/01_Interaction.ts","njslab/Workshop/workshop-mapping/UrbanNetwork/03_NetworkAStart.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../../lib'\r\n\r\nimport { distanceTo } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: Point[] = [];\r\n    lns: Line[] = [];\r\n\r\n    path: any;\r\n\r\n    previousPt: Point | undefined = undefined;\r\n\r\n    ptStart: InteractivePoint;\r\n    ptEnd: InteractivePoint;\r\n    captured: InteractivePoint | undefined = undefined;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        // disable interaction with a base map\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n        this.center(-71.102761, 42.366946);\r\n        this.zoom(15)\r\n\r\n\r\n        this.ptStart = new InteractivePoint(315, 90);\r\n        this.ptEnd = new InteractivePoint(1268, 1120);\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n\r\n        this.lns.map( (l: Line) => {\r\n            return l.render(ctx, this.time);\r\n        });\r\n        this.pts.map( (p: Point) => {\r\n            return  p.render(ctx, this.time);\r\n        });\r\n\r\n\r\n        if (this.path) {\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.path[0].x, this.path[0].y);\r\n            for(let i = 1; i < this.path.length; ++i) {\r\n                ctx.lineTo(this.path[i].x, this.path[i].y);\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = '#f00';\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        this.ptStart.Render(ctx, this.time);\r\n        this.ptEnd.Render(ctx, this.time);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        if (this.ptStart.inInside(x,y)) {\r\n            this.captured = this.ptStart;\r\n            return;\r\n        }\r\n        if (this.ptEnd.inInside(x,y)) {\r\n            this.captured = this.ptEnd;\r\n            return;\r\n        }\r\n       \r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captured = undefined;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n\r\n        if (this.previousPt === undefined) {\r\n            const p = new Point(x, y);\r\n            this.previousPt = p\r\n            this.pts.push(p);\r\n        } else {\r\n            const p = new Point(x, y);\r\n            this.pts.push(p);\r\n            \r\n            this.lns.push(new Line(this.previousPt, p));\r\n            this.previousPt = undefined;\r\n\r\n\r\n       }\r\n\r\n\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        if (this.captured) {\r\n        //     console.log(x, y)\r\n            this.captured.x = x;\r\n            this.captured.y = y;\r\n        }    \r\n    }\r\n}\r\n\r\n\r\nexport class InteractivePoint {\r\n    x: number;\r\n    y: number;\r\n    r: number = 10;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, Math.sin(t) + this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#00f'\r\n        ctx.fill();\r\n\r\n        ctx.strokeStyle = '#fff'\r\n        ctx.stroke();\r\n    }\r\n    public inInside(x: number, y: number) {\r\n        if (distanceTo(x, y, 0, this.x, this.y, 0) < this.r + 2){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Line {\r\n    public p0: Point;\r\n    public p1: Point;\r\n    public lineWidth = 2;\r\n    constructor(p0: Point, p1: Point) {\r\n        this.p0 = p0;\r\n        this.p1 = p1;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.closePath();\r\n\r\n        ctx.lineWidth = this.lineWidth;\r\n        ctx.strokeStyle = '#fff';\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nexport class Point {\r\n    x: number;\r\n    y: number;\r\n    z: number = 0;\r\n    r: number = 6;\r\n    constructor(x: number, y: number)  {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, Math.sin(t) + this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#0f0'\r\n        ctx.fill();\r\n        ctx.strokeStyle = '#fff'\r\n        ctx.stroke();\r\n    }\r\n}","import { RendererJSAPI } from '../../../../lib'\r\n\r\n// import { getLineSeg, distanceTo, Graph, Node } from 'njscore';\r\n\r\nimport { getLineSeg, AStart, NodeAStar, buildNetwork, distanceTo } from '../../../../lib';\r\n\r\n\r\nimport { Point, Line, InteractivePoint } from './01_Interaction';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: Point[] = [];\r\n    lns: Line[] = [];\r\n\r\n    path: any;\r\n\r\n    previousPt: Point | undefined = undefined;\r\n\r\n    ptStart: InteractivePoint;\r\n    ptEnd: InteractivePoint;\r\n    captured: InteractivePoint | undefined = undefined;\r\n\r\n\r\n    nodeAStar: NodeAStar[] = [];\r\n    nodeStart: NodeAStar;\r\n    nodeEnd: NodeAStar;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        // disable interaction with a base map\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n        this.center(-71.102761, 42.366946);\r\n        this.zoom(15)\r\n\r\n\r\n        this.ptStart = new InteractivePoint(315, 90);\r\n        this.ptEnd = new InteractivePoint(868, 820);\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        this.lns.map((l: Line) => {\r\n            return l.render(ctx, this.time);\r\n        });\r\n        this.pts.map((p: Point) => {\r\n            return p.render(ctx, this.time);\r\n        });\r\n\r\n        console.log(this.path)\r\n        if (this.path) {\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.path[0].x, this.path[0].y);\r\n            for (let i = 1; i < this.path.length; ++i) {\r\n\r\n                if (this.path[i] !== undefined) {\r\n                    ctx.lineTo(this.path[i].x, this.path[i].y);\r\n                }\r\n\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = '#f00';\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        this.ptStart.Render(ctx, this.time);\r\n        this.ptEnd.Render(ctx, this.time);\r\n\r\n\r\n        \r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        if (this.ptStart.inInside(x, y)) {\r\n            this.captured = this.ptStart;\r\n            return;\r\n        }\r\n        if (this.ptEnd.inInside(x, y)) {\r\n            this.captured = this.ptEnd;\r\n            return;\r\n        }\r\n\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captured = undefined;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n\r\n        if (this.previousPt === undefined) {\r\n            const p = new Point(x, y);\r\n            this.previousPt = p\r\n            this.pts.push(p);\r\n        } else {\r\n            const p = new Point(x, y);\r\n            this.pts.push(p);\r\n\r\n            this.lns.push(new Line(this.previousPt, p));\r\n            this.previousPt = undefined;\r\n\r\n            const obj = (JSON.parse(JSON.stringify(this.lns)));\r\n            console.log(getLineSeg(obj))\r\n\r\n            this.nodeAStar = buildNetwork(getLineSeg(obj));\r\n\r\n            this.nodeStart =  getCloseNode(this.ptStart.x, this.ptStart.y, 0, this.nodeAStar);\r\n            this.nodeEnd = getCloseNode(this.ptEnd.x, this.ptEnd.y, 0, this.nodeAStar);\r\n\r\n            this.path = AStart.gePath(this.nodeStart, this.nodeEnd);\r\n\r\n        }\r\n\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        if (this.captured) {\r\n            this.captured.x = x;\r\n            this.captured.y = y;\r\n\r\n            this.nodeStart =  getCloseNode(this.ptStart.x, this.ptStart.y, 0, this.nodeAStar);\r\n            this.nodeEnd = getCloseNode(this.ptEnd.x, this.ptEnd.y, 0, this.nodeAStar);\r\n\r\n            this.path = AStart.gePath(this.nodeStart, this.nodeEnd);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst getCloseNode = (x: number, y: number, z: number, nodes: NodeAStar[] ) => {\r\n    let dis = 100000;\r\n    let id = -1;\r\n    for(let i = 0 ; i < nodes.length; ++i) {\r\n        let theDis = distanceTo(x, y, z, nodes[i].x, nodes[i].y, nodes[i].z);\r\n        if (theDis < dis) {\r\n            dis = theDis;\r\n            id = i;\r\n        }\r\n    }\r\n    return nodes[id];\r\n}\r\n\r\n"],"names":["Solution","view","pts","lns","path","previousPt","undefined","ptStart","ptEnd","captured","mView","on","event","stopPropagation","navigation","mouseWheelZoomEnabled","center","zoom","InteractivePoint","start","ctx","this","map","l","render","time","p","beginPath","moveTo","x","y","i","length","lineTo","lineWidth","strokeStyle","stroke","Render","inInside","Point","push","Line","RendererJSAPI","r","t","arc","Math","sin","PI","closePath","fillStyle","fill","distanceTo","p0","p1","z","nodeAStar","nodeStart","nodeEnd","console","log","obj","JSON","parse","stringify","getLineSeg","buildNetwork","getCloseNode","AStart","nodes","dis","id","theDis"],"sourceRoot":""}