{"version":3,"file":"static/js/9497.98ed2845.chunk.js","mappings":"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","sources":["njslab/Lab/image-filter/index.ts"],"sourcesContent":["import { RendererCanvas, getImgFromURL } from '../../../lib';\r\n\r\nexport enum ColorCorrection {\r\n    AutoContrast = 'autoContrast',\r\n    None = 'None'\r\n};\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.margin = '50px';\r\n        div.style.background = 'rgba(0,0,0,0)';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.renderer = new Renderer(div);\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n};\r\nexport class Renderer extends RendererCanvas {\r\n    img: HTMLImageElement | undefined = undefined;\r\n    rotation = 0.0;\r\n    m: number[] = [0, 0];\r\n\r\n    switch = true;\r\n    isDithering = false;\r\n    typeCorrection: ColorCorrection = ColorCorrection.AutoContrast;\r\n    \r\n    params = {\r\n        \"blur\" : 0,\r\n        \"sepia\": 0,\r\n        \"contrast\": 1,\r\n        \"brightness\": 1,\r\n        \"saturate\": 1,\r\n        \"hueRotate\": 0,\r\n    };\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.ctx = this.canvas.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        \r\n        getImgFromURL('https://www.glenstone.org/wp-content/uploads/2018/07/AV_Landscape-Hero-Contour-2993-1276x800.jpg').then((img: HTMLImageElement) => {\r\n            // getImgFromURL('https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png').then((img: HTMLImageElement) => {\r\n            this.img = img;\r\n            this.img.onload = (ev) => {\r\n                this.update(img);\r\n            };\r\n        });\r\n\r\n        const divInput = document.createElement('input');\r\n        divInput.value = 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png';\r\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\r\n            if (e.code === 'Enter') {\r\n                getImgFromURL(divInput.value).then((img: HTMLImageElement) => {\r\n                    this.img = img;\r\n                    this.img.onload = (ev) => {\r\n                        this.update(img);\r\n                    };\r\n                });\r\n            }\r\n        });\r\n        this.divHost.appendChild(divInput);\r\n\r\n        const slType = getSlider('saturate', 0, 200)\r\n        slType.slider.defaultValue = '100';\r\n        this.divHost.appendChild(slType.div);\r\n        slType.slider.oninput = () => {\r\n            const value = parseInt(slType.slider.value) * 0.01;\r\n            // console.log(value);\r\n            this.params.saturate = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType2 = getSlider('hueRotate', -360, 360)\r\n        slType2.slider.defaultValue = '0';\r\n        this.divHost.appendChild(slType2.div);\r\n        slType2.slider.oninput = () => {\r\n            const value = parseInt(slType2.slider.value) * 1;\r\n            // console.log(value);\r\n            this.params.hueRotate = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType3 = getSlider('contrast', 0, 20)\r\n        slType3.slider.defaultValue = '10';\r\n        this.divHost.appendChild(slType3.div);\r\n        slType3.slider.oninput = () => {\r\n            const value = parseInt(slType3.slider.value) * .1;\r\n            // console.log(value);\r\n            this.params.contrast = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType4 = getSlider('brightness', 0, 20)\r\n        slType4.slider.defaultValue = '10';\r\n        this.divHost.appendChild(slType4.div);\r\n        slType4.slider.oninput = () => {\r\n            const value = parseInt(slType4.slider.value) * .1;\r\n            // console.log(value);\r\n            this.params.brightness = value;\r\n            this.render(this.ctx);\r\n        };\r\n        const slType5 = getSlider('sepia', 0, 100)\r\n        slType5.slider.defaultValue = '0';\r\n        this.divHost.appendChild(slType5.div);\r\n        slType5.slider.oninput = () => {\r\n            const value = parseInt(slType5.slider.value) * .01;\r\n            // console.log(value);\r\n            this.params.sepia = value;\r\n            this.render(this.ctx);\r\n        };\r\n        this.start();\r\n    }\r\n    public update(img: HTMLImageElement) {\r\n        this.img = img;\r\n        this.canvas.width = this.img.width;\r\n        this.canvas.height = this.img.height;\r\n        this.render(this.ctx);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        if (this.img === undefined) { return; }\r\n\r\n        const params = this.params;\r\n\r\n        // for(let i = 0 ; i < filters.length; ++i) {\r\n        //     params[filters[i][0]] = filters[i][1];\r\n        // }\r\n        // console.log(params);\r\n\r\n        const vertexShaderSource = `\r\n            attribute vec2 a_position;\r\n            attribute vec2 a_texCoord;\r\n            varying vec2 v_texCoord;\r\n\r\n            void main() {\r\n                gl_Position = vec4(a_position, 0, 1);\r\n                v_texCoord = a_texCoord;\r\n            }\r\n        `;\r\n\r\n        const fragmentShaderSource = `\r\n            precision mediump float;\r\n            \r\n            uniform vec2 u_resolution;\r\n            uniform float u_blurRadius;\r\n            uniform float u_sepia;\r\n            uniform float u_contrast;\r\n            uniform float u_brightness;\r\n            uniform float u_saturation;\r\n            uniform float u_hueRotation;\r\n            uniform sampler2D u_texture;\r\n            varying vec2 v_texCoord;\r\n\r\n            vec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n                vec4 color = vec4(0.0);\r\n                vec2 off1 = vec2(1.3333333333333333) * direction;\r\n                color += texture2D(image, uv) * 0.29411764705882354;\r\n                color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\r\n                color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\r\n                return color; \r\n            }\r\n\r\n            void main() {\r\n                vec2 flippedTexCoord = vec2(v_texCoord.x, 1.0 - v_texCoord.y);\r\n                vec4 color = texture2D(u_texture, flippedTexCoord);\r\n\r\n                float gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));\r\n\r\n                // ..................\r\n                if (u_sepia > .0) {\r\n                    vec3 sepia = vec3(1.0, 0.95, 0.82);\r\n                    color = mix(color, vec4(gray * sepia, color.a), u_sepia);\r\n                }\r\n\r\n\r\n                // ..................\r\n                // if ((u_brightness != 1.0) || (u_contrast != 1.0)) {\r\n                    vec3 colorRgb = color.rgb * u_brightness;\r\n                    colorRgb = (colorRgb - vec3(0.5)) * max(u_contrast, 0.0) + vec3(0.5);\r\n                    color = vec4(colorRgb, color.a);\r\n                // }\r\n\r\n\r\n                // ..................\r\n                color = vec4(mix(vec3(gray), color.rgb, u_saturation), color.a);\r\n\r\n                \r\n                // ..................\r\n                if (u_hueRotation != .0){\r\n                    float angle = u_hueRotation * 3.14159265358979323846264 / 180.0;\r\n                    float s = sin(angle);\r\n                    float c = cos(angle);\r\n                    mat3 hueRotationMatrix = mat3(\r\n                        0.213 + 0.787 * c - 0.213 * s, 0.715 - 0.715 * c - 0.715 * s, 0.072 - 0.072 * c + 0.928 * s,\r\n                        0.213 - 0.213 * c + 0.143 * s, 0.715 + 0.285 * c + 0.140 * s, 0.072 - 0.072 * c - 0.283 * s,\r\n                        0.213 - 0.213 * c - 0.787 * s, 0.715 - 0.715 * c + 0.715 * s, 0.072 + 0.928 * c + 0.072 * s\r\n                    );\r\n                    colorRgb = color.rgb * hueRotationMatrix;\r\n                    color = vec4(colorRgb, color.a);\r\n                }\r\n\r\n                // ..................\r\n                gl_FragColor = color;\r\n            }\r\n        `;\r\n\r\n        const image = this.img;\r\n        const canvasGL: HTMLCanvasElement = document.createElement('canvas');\r\n        canvasGL.width = image.width;\r\n        canvasGL.height = image.height;\r\n\r\n        const gl: WebGLRenderingContext = canvasGL.getContext('webgl2');\r\n        const texture: WebGLTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n        const vertexShader: WebGLShader = gl.createShader(gl.VERTEX_SHADER);\r\n        gl.shaderSource(vertexShader, vertexShaderSource);\r\n        gl.compileShader(vertexShader);\r\n\r\n        const fragmentShader: WebGLShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n        gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n        gl.compileShader(fragmentShader);\r\n\r\n        const program: WebGLProgram = gl.createProgram();\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n        gl.useProgram(program);\r\n\r\n        const positionAttributeLocation: number = gl.getAttribLocation(program, 'a_position');\r\n        const texCoordAttributeLocation: number = gl.getAttribLocation(program, 'a_texCoord');\r\n        const textureUniformLocation: WebGLUniformLocation = gl.getUniformLocation(program, 'u_texture');\r\n        gl.uniform1i(textureUniformLocation, 0);\r\n\r\n        const positionBuffer: WebGLBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(positionAttributeLocation);\r\n        gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        const texCoordBuffer: WebGLBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(texCoordAttributeLocation);\r\n        gl.vertexAttribPointer(texCoordAttributeLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n        const sepiaUniformLocation = gl.getUniformLocation(program, 'u_sepia');\r\n        gl.uniform1f(sepiaUniformLocation, params.sepia);\r\n        const saturationUniformLocation = gl.getUniformLocation(program, 'u_saturation');\r\n        gl.uniform1f(saturationUniformLocation, params.saturate);\r\n        const brightnessUniformLocation = gl.getUniformLocation(program, 'u_brightness');\r\n        gl.uniform1f(brightnessUniformLocation, params.brightness);\r\n        const contrastUniformLocation = gl.getUniformLocation(program, 'u_contrast');\r\n        gl.uniform1f(contrastUniformLocation, params.contrast);\r\n        const hueRotationUniformLocation = gl.getUniformLocation(program, 'u_hueRotation');\r\n        gl.uniform1f(hueRotationUniformLocation, params.hueRotate);\r\n        const blurUniformLocation = gl.getUniformLocation(program, 'u_blurRadius');\r\n        gl.uniform1f(blurUniformLocation, 1.8);\r\n        const resolutionUniform = gl.getUniformLocation(program, 'u_resolution');\r\n        gl.uniform2f(resolutionUniform, gl.canvas.width, gl.canvas.height);\r\n        \r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.drawImage(canvasGL, 0, 0);\r\n\r\n        gl.deleteProgram(program);\r\n        gl.deleteTexture(texture);\r\n        gl.deleteShader(vertexShader);\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteBuffer(positionBuffer);\r\n        gl.deleteBuffer(texCoordBuffer);\r\n\r\n        this.isStatic = true;\r\n    }\r\n};\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n    return {\r\n        div, slider, text\r\n    }\r\n};"],"names":["ColorCorrection","Solution","constructor","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","margin","background","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","img","undefined","rotation","m","switch","isDithering","typeCorrection","AutoContrast","params","ctx","canvas","getContext","willReadFrequently","position","width","height","getImgFromURL","then","onload","ev","update","divInput","value","addEventListener","e","code","slType","getSlider","slider","defaultValue","oninput","parseInt","saturate","render","slType2","hueRotate","slType3","contrast","slType4","brightness","slType5","sepia","start","image","canvasGL","gl","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","useProgram","positionAttributeLocation","getAttribLocation","texCoordAttributeLocation","textureUniformLocation","getUniformLocation","uniform1i","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","texCoordBuffer","activeTexture","TEXTURE0","sepiaUniformLocation","uniform1f","saturationUniformLocation","brightnessUniformLocation","contrastUniformLocation","hueRotationUniformLocation","blurUniformLocation","resolutionUniform","uniform2f","drawArrays","TRIANGLE_STRIP","clearRect","drawImage","deleteProgram","deleteTexture","deleteShader","deleteBuffer","isStatic","title","min","max","type","text","textContent","color"],"sourceRoot":""}