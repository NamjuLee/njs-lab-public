{"version":3,"file":"static/js/8886.b4658b91.chunk.js","mappings":"iLAGA,MAAMA,EAUFC,YAAYC,GAAa,KATlBC,YAAM,OACNC,aAAO,OACPC,SAAG,OACHC,EAAY,EAAI,KAChBC,YAAM,OACNC,WAAK,OACLC,cAAQ,OACRC,cAAQ,OACPC,kBAAY,OA6CZC,KAAO,KACXC,KAAKF,aAAeG,sBAAsBD,KAAKD,MAC/CC,KAAKH,SAASK,SACdF,KAAKE,OAAOF,KAAKL,OACjBK,KAAKJ,SAASO,OAAOH,KAAKL,MAAOK,KAAKN,QACtCM,KAAKP,GAAK,GAAI,EAhDdO,KAAKT,QAAUa,SAASC,eAAehB,GACvCW,KAAKM,YACT,CACQA,aACJN,KAAKL,MAAQ,IAAIY,EAAAA,IACjBP,KAAKL,MAAMa,WAAa,IAAID,EAAAA,IAAY,GACxCP,KAAKL,MAAMc,YAAa,EAExBT,KAAKJ,SAAW,IAAIW,EAAAA,IAAoB,CAAEG,WAAW,EAAMC,OAAO,IAClEX,KAAKJ,SAASgB,cAAcZ,KAAKT,QAAQsB,YAAcb,KAAKT,QAAQuB,cACpEd,KAAKJ,SAASmB,WAAW1B,GAAK,QAC9BW,KAAKJ,SAASmB,WAAWC,MAAMC,SAAW,WAC1CjB,KAAKJ,SAASsB,UAAUC,SAAU,EAClCnB,KAAKJ,SAASwB,QAAQpB,KAAKT,QAAQsB,YAAab,KAAKT,QAAQuB,cAC7Dd,KAAKT,QAAQ8B,YAAYrB,KAAKJ,SAASmB,YAEvCf,KAAKN,OAAS,IAAIa,EAAAA,IAAwB,GAAIP,KAAKT,QAAQsB,YAAcb,KAAKT,QAAQuB,aAAc,EAAG,KACvGd,KAAKH,SAAW,IAAIyB,EAAAA,cAActB,KAAKN,OAAQM,KAAKJ,SAASmB,YAC7Df,KAAKN,OAAOuB,SAASM,IAAI,GAAI,GAAI,IACjCvB,KAAKH,SAASK,SAEdF,KAAKV,OAASU,KAAKJ,SAASmB,WAE5Bf,KAAKwB,MACT,CACQA,OACJxB,KAAKyB,WAET,CACQA,YACJzB,KAAKJ,SAASmB,WAAWW,YAAeC,GAAkB3B,KAAK4B,UAAUD,GACzE3B,KAAKJ,SAASmB,WAAWc,UAAaF,GAAkB3B,KAAK8B,QAAQH,GACrE3B,KAAKJ,SAASmB,WAAWgB,YAAeJ,GAAkB3B,KAAKgC,UAAUL,GACzE3B,KAAKJ,SAASmB,WAAWkB,iBAAiB,SAAUN,GAAkB3B,KAAKkC,WAAWP,KAEtFQ,OAAOF,iBAAiB,UAAU,IAAMjC,KAAKoC,kBAEjD,CACQA,iBACJpC,KAAKN,OAAO2C,OAASrC,KAAKT,QAAQsB,YAAcb,KAAKT,QAAQuB,aAC7Dd,KAAKN,OAAO4C,yBACZtC,KAAKJ,SAASwB,QAAQpB,KAAKT,QAAQsB,YAAab,KAAKT,QAAQuB,aACjE,CAWOyB,QACHvC,KAAKD,MACT,CACO6B,UAAUD,GACb,CAEGG,QAAQH,GACX,CAEGO,WAAWP,GACd,CAEGa,YAAYb,GACf,CAEGK,UAAUL,GACb,CAEGc,UAAUd,GACb,CAEGzB,OAAOP,GAEd,CACO+C,UAIH,IAHAP,OAAOQ,oBAAoB,UAAU,IAAM3C,KAAKoC,mBAChDQ,qBAAqB5C,KAAKF,cAC1BE,KAAKF,kBAAe+C,EACb7C,KAAKT,QAAQuD,WAChB9C,KAAKT,QAAQwD,YAAY/C,KAAKT,QAAQuD,UAE9C,EAIG,MAAME,UAAsB7D,EAgB/BC,cACI6D,MADkB,uDAAG,QACZ,KAfbC,gBAAU,OAEVC,UAAY,IAAI5C,EAAAA,IAAkB,KAClC6C,MAAQ,IAAI7C,EAAAA,IAAgB,KAC5B8C,EAAI,IAAI9C,EAAAA,IAAgB,KAExB+C,YAAM,OAENC,UAAI,OACJC,UAAI,OAEJC,UAA0B,GAAG,KAC7BC,WAAkB,GAAG,KA8GdvD,OAAUR,MAzGb,MAAMgE,EAAe,IAAIpD,EAAAA,IAAmB,SAC5CP,KAAKL,MAAMiE,IAAID,GAEf3D,KAAKkD,WAAa,IAAI3C,EAAAA,IAAiB,SAAU,KACjDP,KAAKkD,WAAWjC,SAAS4C,EAAI,GAC7B7D,KAAKkD,WAAWzC,YAAa,EAC7BT,KAAKL,MAAMiE,IAAI5D,KAAKkD,YAEpBlD,KAAKuD,KAAO,IAAIhD,EAAAA,IAAiB,GACjCP,KAAKuD,KAAKtC,SAAS6C,EAAI,KACvB9D,KAAKL,MAAMiE,IAAI5D,KAAKuD,MAEpBvD,KAAKwD,KAAO,IAAIjD,EAAAA,IAAiB,GAAI,IAAK,QAAU,SACpDP,KAAKL,MAAMiE,IAAI5D,KAAKwD,MAEpBxD,KAAK+D,WACL/D,KAAKuC,OACT,CACOwB,WAEH,MAAMC,EAAW,IAAIzD,EAAAA,IAAwB,CAAE0D,MAAO,QAChDC,EAAiB,IAAI3D,EAAAA,IAAqB,IAAM,GAAI,IACpD4D,EAAe,IAAI5D,EAAAA,IAAW2D,EAAgBF,GACpDG,EAAaC,WAAW,GACxBpE,KAAKsD,OAASa,EACdnE,KAAKL,MAAMiE,IAAIO,EAYnB,CACIE,aAASC,GACTtE,KAAKwD,KAAKe,QAAUD,CACxB,CACIE,aAASF,GACTtE,KAAKuD,KAAKgB,QAAUD,CACxB,CAEOV,IAAIa,EAAoBC,GAAwB,IAAjBC,IAAO,yDACzC3E,KAAKL,MAAMiE,IAAIa,GACXE,IACA3E,KAAKyD,UAAUmB,KAAKH,GACpBzE,KAAK0D,WAAWkB,KAAKF,GAE7B,CACOG,SAASP,GAEZ,MAAMN,EAAW,IAAIzD,EAAAA,IAAwB,CAAE0D,MAAO,WAChDa,EAAW,IAAIvE,EAAAA,IAAqB,GAAK,GAAI,IAC7CkE,EAAS,IAAIlE,EAAAA,IAAWuE,EAAUd,GACxCS,EAAOL,WAAWE,EAAES,IAAIlB,GACxBY,EAAOO,WAAWV,EAAES,IAAIE,GACxBR,EAAOS,WAAWZ,EAAES,IAAIjB,GACxB9D,KAAK4D,IAAIa,EAAQH,EACrB,CACOtC,UAAUL,GACb3B,KAAK2E,QAAQhD,EAEjB,CACOgD,QAAQhD,GACX3B,KAAKoD,MAAMS,EAAKlC,EAAEwD,QAAUnF,KAAKJ,SAASmB,WAAWF,YAAe,EAAI,EACxEb,KAAKoD,MAAMU,GAAMnC,EAAEyD,QAAUpF,KAAKJ,SAASmB,WAAWD,aAAgB,EAAI,EAE1Ed,KAAKmD,UAAUkC,cAAcrF,KAAKoD,MAAOpD,KAAKN,QAE9C,MAAM4F,EAAatF,KAAKmD,UAAUoC,iBAAiBvF,KAAKyD,WACxD,GAAI6B,EAAWE,OAAS,EAMpB,OALAxF,KAAKqD,EAAE9B,IAAI+D,EAAW,GAAGZ,MAAMb,EAAGyB,EAAW,GAAGZ,MAAMZ,EAAGwB,EAAW,GAAGZ,MAAMO,GAEzEK,EAAW,GAAGb,SAAWzE,KAAKsD,QAC9BtD,KAAKsD,OAAOrC,SAASM,IAAI+D,EAAW,GAAGZ,MAAMb,EAAGyB,EAAW,GAAGZ,MAAMZ,EAAGwB,EAAW,GAAGZ,MAAMO,GAExFK,CAIf,CACOpD,WAAWP,GACD3B,KAAK2E,QAAQhD,EAI9B,CAEOzB,OAAOP,GACVK,KAAKG,OAAOR,GAEZK,KAAKyD,UAAUgC,SAAQ,CAACpC,EAAeqC,KACnCrC,EAAEpC,SAAS4C,EAAI7D,KAAK0D,WAAWgC,GAAGX,IAAIlB,EACtCR,EAAEpC,SAAS6C,EAAI9D,KAAK0D,WAAWgC,GAAGX,IAAIE,EACtC5B,EAAEpC,SAASgE,EAAIjF,KAAK0D,WAAWgC,GAAGX,IAAIjB,CAAC,IAG3C,MAAM6B,EAAS,IAAIpF,EAAAA,IACnBoF,EAAOC,cAAwB,KAAVC,KAAKC,IAC1B9F,KAAKkD,WAAWjC,SAAS8E,aAAaJ,EAE1C,ECjOG,MAAMK,EAAeC,IACxB,MAAMC,EAAM9F,SAAS+F,cAAc,OACnCD,EAAIlF,MAAMoF,QAAU,OAEpB,MAAMC,EAAWjG,SAAS+F,cAAc,SACxCE,EAASC,KAAO,WAChBD,EAASE,gBAAiB,EAC1B,MAAMC,EAAOpG,SAAS+F,cAAc,OAMpC,OALAK,EAAKC,YAAcR,EACnBO,EAAKxF,MAAMiD,MAAQ,OACnBiC,EAAI7E,YAAYgF,GAChBH,EAAI7E,YAAYmF,GAET,CACHN,MAAKG,WACR,ECZE,MAAMK,EAMTtH,YAAY8G,GAAsB,KALlCA,SAAG,OACHtG,cAAQ,OACRyD,EAAc,CAAC,EAAG,GAAG,KACrB5D,EAAY,EAAI,KAChBkH,IAAe,GAEX3G,KAAKkG,IAAMA,EACXlG,KAAKJ,SAAW,IAAIoD,EAAckD,EAAI7G,IACtCW,KAAKJ,SAASO,OAAUR,GAAUK,KAAKG,OAAOR,GAC9CK,KAAK4G,UACL5G,KAAKwB,MACT,CACOoF,UACH,MAAMV,EAAM9F,SAAS+F,cAAc,OACnCD,EAAIlF,MAAMC,SAAW,WACrBjB,KAAKkG,IAAI7E,YAAY6E,GAErB,MAAMW,EAAOb,EAAY,QACzBE,EAAIY,OAAOD,EAAKX,KAChBW,EAAKR,SAASU,SAAU,EACxBF,EAAKR,SAASW,SAAW,MACS,IAA1BH,EAAKR,SAASU,QACd/G,KAAKJ,SAASyE,UAAW,EAEzBrE,KAAKJ,SAASyE,UAAW,CAC7B,EAGJ,MAAMd,EAAOyC,EAAY,QACzBE,EAAIY,OAAOvD,EAAK2C,KAChB3C,EAAK8C,SAASU,SAAU,EACxBxD,EAAK8C,SAASW,SAAW,MACS,IAA1BzD,EAAK8C,SAASU,QACd/G,KAAKJ,SAAS4E,UAAW,EAEzBxE,KAAKJ,SAAS4E,UAAW,CAC7B,CAER,CACOhD,OAGH,IAAI,IAAIkE,GAAK,GAAIA,EAAI,GAAIA,IACrB,IAAI,IAAIuB,GAAK,GAAIA,EAAI,GAAIA,IAAK,CAC1B,MAAMC,EAAI,IAAIC,EAAMzB,EAAGuB,EAAG,GAC1BjH,KAAK2G,IAAI/B,KAAKsC,GACdlH,KAAKJ,SAASiF,SAASqC,EAC3B,CAIR,CACO/G,OAAOR,GAOV,IAAI,IAAI+F,EAAI,EAAIA,EAAI1F,KAAK2G,IAAInB,SAAUE,EACnC1F,KAAK2G,IAAIjB,GAAGX,IAAIE,EAAIY,KAAKuB,IAAI1B,EAAI1F,KAAKP,EAAI,KAU9CO,KAAKP,GAAI,GACb,CACOuC,UAAU6B,EAAWC,GAExB,CAEGuD,YAAY7H,GAKf,CAEG0C,WAAW2B,EAAWC,GAEzB,CAGGpB,UACH1C,KAAKJ,SAAS8C,SAClB,EAKJ,MAAMyE,EAOF/H,YAAYyE,EAAGC,EAAGmB,GAAI,KANfF,SAAG,OACHuC,cAAQ,OACRC,WAAK,OACLC,KAAO,GAAG,KACVC,EAAY,GAGfzH,KAAK+E,IAAW,IAAI2C,EAAQ7D,EAAGC,EAAGmB,GAClCjF,KAAKsH,SAAW,IAAII,EAAQ,EAAE,EAAE,GAChC1H,KAAKuH,MAAW,IAAIG,EAAQ,GAAM,GAAI,EAE1C,CACOvH,OAAOX,GACVA,EAAImI,YACJnI,EAAIoI,IAAI5H,KAAK+E,IAAIlB,EAAG7D,KAAK+E,IAAIjB,EAAG9D,KAAKyH,EAAG,EAAa,EAAV5B,KAAKC,IAChDtG,EAAIqI,YACJrI,EAAIsI,MACR,CACOC,KAAKC,GAAoC,IAAxBC,EAAe,uDAAG,GAKtCjI,KAAKsH,SAASY,SAASD,GACvBjI,KAAKsH,SAAS1D,IAAIsE,EAASlI,KAAKuH,MAAQS,EAAKhI,KAAKwH,OAClDxH,KAAK+E,IAAInB,IAAIsE,EAASlI,KAAKsH,SAAUU,GAKzC,EAGJ,MAAMN,EAIFtI,YAAYyE,EAAGC,EAAGmB,GAAI,KAHfpB,EAAY,EAAI,KAChBC,EAAY,EAAI,KAChBmB,EAAY,EAEfjF,KAAK6D,EAAIA,EACT7D,KAAK8D,EAAIA,EACT9D,KAAKiF,EAAIA,CACb,CACOiD,SAAS5D,GACZtE,KAAK6D,GAAKS,EACVtE,KAAK8D,GAAKQ,EACVtE,KAAKiF,GAAKX,CACd,CACOV,IAAIU,GACPtE,KAAK6D,GAAKS,EAAET,EACZ7D,KAAK8D,GAAKQ,EAAER,EACZ9D,KAAKiF,GAAKX,EAAEW,CAChB,EAGJ,MAMMiD,EAAW,CAACC,EAAYC,IACnB,IAAIV,EAAQS,EAAEtE,EAAIuE,EAAGD,EAAEtE,EAAIuE,EAAGD,EAAElD,EAAImD,E","sources":["njslab/Workshop/workshop-vector-dynamics/base/RendererThree.ts","njslab/Workshop/workshop-vector-dynamics/base/util.ts","njslab/Workshop/workshop-vector-dynamics/workshop-vector-dynamic-0.ts"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three-orbitcontrols-ts';\n\nclass RendererThreeBase {\n    public canvas: HTMLCanvasElement;\n    public hostDiv: HTMLElement;\n    public ctx: CanvasRenderingContext2D;\n    public t: number = 0.0;\n    public camera: THREE.PerspectiveCamera;\n    public scene: THREE.Scene;\n    public renderer: THREE.WebGLRenderer;\n    public controls: OrbitControls;\n    private requestFrame: number;\n    constructor(id: string) {\n        this.hostDiv = document.getElementById(id);\n        this.initCanvas();\n    }\n    private initCanvas() {\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0x000000);\n        this.scene.castShadow = true;\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setPixelRatio(this.hostDiv.clientWidth / this.hostDiv.clientHeight);\n        this.renderer.domElement.id = 'Three';\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n        this.hostDiv.appendChild(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(30, this.hostDiv.clientWidth / this.hostDiv.clientHeight, 1, 5000);\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.camera.position.set(20, 20, 20);\n        this.controls.update();\n\n        this.canvas = this.renderer.domElement;\n\n        this.init();\n    }\n    private init() {\n        this.eventBind();\n\n    }\n    private eventBind() {\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.mouseDown(e);\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.mouseUp(e);\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.mouseMove(e);\n        this.renderer.domElement.addEventListener('click', (e: MouseEvent) => this.mouseClick(e))\n\n        window.addEventListener('resize', () => this.onWindowResize());\n\n    }\n    private onWindowResize() {\n        this.camera.aspect = this.hostDiv.clientWidth / this.hostDiv.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n    }\n    private loop = () => {\n        this.requestFrame = requestAnimationFrame(this.loop);\n        this.controls.update();\n        this.update(this.scene);\n        this.renderer.render(this.scene, this.camera);\n        this.t += 0.01;\n\n        // console.log('rendering...');\n    }\n    // .............................................................................\n    public start() {\n        this.loop();\n    }\n    public mouseDown(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseUp(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseMove(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDrag(e: MouseEvent) {\n        // console.log(e);\n    }\n    public update(scene: THREE.Scene) {\n\n    }\n    public destroy() {\n        window.removeEventListener('resize', () => this.onWindowResize());\n        cancelAnimationFrame(this.requestFrame);\n        this.requestFrame = undefined;\n        while (this.hostDiv.lastChild) {\n            this.hostDiv.removeChild(this.hostDiv.lastChild);\n        }\n    }\n}\n\n\nexport class RendererThree extends RendererThreeBase {\n\n    pointLight: THREE.PointLight\n\n    raycaster = new THREE.Raycaster();\n    mouse = new THREE.Vector2();\n    m = new THREE.Vector3();\n\n    sphere: THREE.Mesh;\n\n    axis: THREE.AxesHelper;\n    grid: THREE.GridHelper;\n\n    arrayMesh: THREE.Mesh[] = [];\n    arrayPoint: any = [];\n\n    constructor(id: string = 'main') {\n        super(id)\n\n        const ambientLight = new THREE.AmbientLight(0x555555);\n        this.scene.add(ambientLight);\n\n        this.pointLight = new THREE.PointLight(0xffffff, 100);\n        this.pointLight.position.x = 10;\n        this.pointLight.castShadow = true;\n        this.scene.add(this.pointLight);\n\n        this.axis = new THREE.AxesHelper(5);\n        this.axis.position.y = 0.001;\n        this.scene.add(this.axis);\n\n        this.grid = new THREE.GridHelper(50, 100, 0x444444, 0x323232);\n        this.scene.add(this.grid);\n\n        this.initPost();\n        this.start();\n    }\n    public initPost() {\n        // @ts-ignore\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const geometrySphere = new THREE.SphereGeometry(0.05, 50, 50);\n        const objectSphere = new THREE.Mesh(geometrySphere, material);\n        objectSphere.translateX(1)\n        this.sphere = objectSphere\n        this.scene.add(objectSphere);\n\n\n        // let geometry = new THREE.SphereGeometry(1, 50, 50);\n        // let object = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial());\n        // object.translateX(-1)\n        // this.add(object);\n\n        // geometry = new THREE.SphereGeometry(1, 50, 50);\n        // object = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial());\n        // object.translateX(1)\n        // this.add(object);\n    }\n    set showGrid(v: boolean) {\n        this.grid.visible = v;\n    }\n    set showAxis(v: boolean) {\n        this.axis.visible = v;\n    }\n\n    public add(object: THREE.Mesh, point, picking = true) {\n        this.scene.add(object);\n        if (picking) {\n            this.arrayMesh.push(object)\n            this.arrayPoint.push(point)\n        }\n    }\n    public addPoint(v: any) {\n        // @ts-ignore\n        const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        const geometry = new THREE.SphereGeometry(0.1, 20, 20);\n        const object = new THREE.Mesh(geometry, material);\n        object.translateX(v.vec.x);\n        object.translateY(v.vec.z);\n        object.translateZ(v.vec.y);\n        this.add(object, v);\n    }\n    public mouseMove(e: MouseEvent): void {\n        this.picking(e)\n\n    }\n    public picking(e: MouseEvent) {\n        this.mouse.x = (e.offsetX / this.renderer.domElement.clientWidth) * 2 - 1;\n        this.mouse.y = -(e.offsetY / this.renderer.domElement.clientHeight) * 2 + 1;\n\n        this.raycaster.setFromCamera(this.mouse, this.camera);\n\n        const intersects = this.raycaster.intersectObjects(this.arrayMesh);\n        if (intersects.length > 0) {\n            this.m.set(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\n\n            if (intersects[0].object !== this.sphere) {\n                this.sphere.position.set(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n            }\n            return intersects;\n\n        }\n        return undefined;\n    }\n    public mouseClick(e: MouseEvent): void {\n        const mesh = this.picking(e)\n        if (mesh) {\n            // console.log({mesh})\n        }\n    }\n\n    public update(scene: THREE.Scene) {\n        this.render(scene)\n\n        this.arrayMesh.forEach((m: THREE.Mesh, i) => {\n            m.position.x = this.arrayPoint[i].vec.x;\n            m.position.y = this.arrayPoint[i].vec.z;\n            m.position.z = this.arrayPoint[i].vec.y;\n        })\n\n        const matrix = new THREE.Matrix4();\n        matrix.makeRotationY(Math.PI * 0.011);\n        this.pointLight.position.applyMatrix4(matrix);\n\n    }\n    public render = (scene: THREE.Scene) => { }\n}\n","export const getCheckBox = (title: string) => {\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const checkBox = document.createElement('input');\n    checkBox.type = 'checkbox';\n    checkBox.defaultChecked = false;\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(checkBox);\n    div.appendChild(text);\n\n    return {\n        div, checkBox\n    }\n};","import { RendererThree } from './base/RendererThree';\r\nimport { getCheckBox } from './base/util'\r\n\r\nexport class Solution {\r\n    div: HTMLDivElement\r\n    renderer: RendererThree;\r\n    m: number[] = [0, 0];\r\n    t: number = 0.0;\r\n    pts: Point[] = [];\r\n    constructor(div: HTMLDivElement) {\r\n        this.div = div;\r\n        this.renderer = new RendererThree(div.id);\r\n        this.renderer.render = (scene) => this.render(scene);\r\n        this.initDom();\r\n        this.init();\r\n    }\r\n    public initDom() {\r\n        const div = document.createElement('div');\r\n        div.style.position = 'absolute'\r\n        this.div.appendChild(div);\r\n\r\n        const cBox = getCheckBox('grid');\r\n        div.append(cBox.div);\r\n        cBox.checkBox.checked = true;\r\n        cBox.checkBox.onchange = () => {\r\n            if (cBox.checkBox.checked === true) {\r\n                this.renderer.showGrid = true;\r\n            } else {\r\n                this.renderer.showGrid = false;\r\n            }\r\n        }\r\n\r\n        const axis = getCheckBox('axis');\r\n        div.append(axis.div);\r\n        axis.checkBox.checked = true;\r\n        axis.checkBox.onchange = () => {\r\n            if (axis.checkBox.checked === true) {\r\n                this.renderer.showAxis = true;\r\n            } else {\r\n                this.renderer.showAxis = false;\r\n            }\r\n        }\r\n    }\r\n    public init() {\r\n\r\n\r\n        for(let i = -10; i < 25; i++) {\r\n            for(let j = -10; j < 10; j++) {\r\n                const p = new Point(i ,j ,0);\r\n                this.pts.push(p);\r\n                this.renderer.addPoint(p)\r\n            }\r\n        }\r\n\r\n        // console.log('init')\r\n    }\r\n    public render(scene): void {\r\n        // console.log(scene)\r\n\r\n        // this.pts[0].vec.z-= 0.0001\r\n        // ctx.fillStyle = '#f00';\r\n\r\n\r\n        for(let i = 0 ; i < this.pts.length; ++i) {\r\n            this.pts[i].vec.z = Math.cos(i * this.t * 0.01)\r\n        }\r\n\r\n\r\n        // this.pts.forEach((v)=>{\r\n        //     v.move(this.t, 0.7)\r\n        //     v.render(ctx);\r\n        // });\r\n\r\n        // this.renderMouse(ctx);\r\n        this.t +=0.01\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        // this.m[0] = x - this.canvas.width * 0.5;\r\n        // this.m[1] = y - this.canvas.height * 0.5;\r\n    }\r\n    public renderMouse(ctx) {\r\n        // ctx.fillStyle = '#eee';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        // ctx.closePath();\r\n        // ctx.fill();\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        // const v = new Point(x - this.canvas.width * 0.5, y - this.canvas.height * 0.5, 0);\r\n        // this.pts.push(v);\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Point {\r\n    public vec: Vector3;\r\n    public velocity: Vector3;\r\n    public force: Vector3;\r\n    public mass = 10;\r\n    public r: number = 10;\r\n\r\n    constructor(x, y, z) {\r\n        this.vec =      new Vector3(x, y, z)\r\n        this.velocity = new Vector3(0,0,0)\r\n        this.force =    new Vector3(0.0, -0.1,0)\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.r, 0, Math.PI * 2.0)\r\n        ctx.closePath();\r\n        ctx.fill()\r\n    }\r\n    public move(dt: number, damping: number = 0.9) {\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        this.velocity.multiply(damping);\r\n        this.velocity.add(multiply(this.force, (dt / this.mass)))\r\n        this.vec.add(multiply(this.velocity, dt));\r\n\r\n        // if (this.vec.y < 0) {\r\n        //     this.vec.y *= -1.0\r\n        // }\r\n    }\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    public multiply(v: number) {\r\n        this.x *= v;\r\n        this.y *= v;\r\n        this.z *= v;\r\n    }\r\n    public add(v: Vector3) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n    }\r\n}\r\n\r\nconst add = (a: Vector3, b: Vector3) => {\r\n    return new Vector3(a.x + b.x, a.x + b.y, a.z + b.z)\r\n}\r\nconst divide = (a: Vector3, b: Vector3) => {\r\n    return new Vector3(a.x - b.x, a.x - b.y, a.z - b.z)\r\n}\r\nconst multiply = (a: Vector3, b: number) => {\r\n    return new Vector3(a.x * b, a.x * b, a.z * b)\r\n}"],"names":["RendererThreeBase","constructor","id","canvas","hostDiv","ctx","t","camera","scene","renderer","controls","requestFrame","loop","this","requestAnimationFrame","update","render","document","getElementById","initCanvas","THREE","background","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","style","position","shadowMap","enabled","setSize","appendChild","OrbitControls","set","init","eventBind","onmousedown","e","mouseDown","onmouseup","mouseUp","onmousemove","mouseMove","addEventListener","mouseClick","window","onWindowResize","aspect","updateProjectionMatrix","start","mouseDClick","mouseDrag","destroy","removeEventListener","cancelAnimationFrame","undefined","lastChild","removeChild","RendererThree","super","pointLight","raycaster","mouse","m","sphere","axis","grid","arrayMesh","arrayPoint","ambientLight","add","x","y","initPost","material","color","geometrySphere","objectSphere","translateX","showGrid","v","visible","showAxis","object","point","picking","push","addPoint","geometry","vec","translateY","z","translateZ","offsetX","offsetY","setFromCamera","intersects","intersectObjects","length","forEach","i","matrix","makeRotationY","Math","PI","applyMatrix4","getCheckBox","title","div","createElement","display","checkBox","type","defaultChecked","text","textContent","Solution","pts","initDom","cBox","append","checked","onchange","j","p","Point","cos","renderMouse","velocity","force","mass","r","Vector3","beginPath","arc","closePath","fill","move","dt","damping","multiply","a","b"],"sourceRoot":""}