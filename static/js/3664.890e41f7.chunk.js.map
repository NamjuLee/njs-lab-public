{"version":3,"file":"static/js/3664.890e41f7.chunk.js","mappings":"oOA0HA,MAvHoB,KAElB,MAqEMA,EAAU,WAIhB,MAAMC,EAAkB,CACtBC,GAAIF,EAEJG,KAAM,OACNC,OAAQ,CACN,YAAa,QACb,WAAY,QACZC,WAAsB,WAGxBC,MAAO,CACL,aAAc,UACd,aAAc,IAKZC,EAAsB,IACvBN,EACHC,GAAIF,EAAU,QACdG,KAAM,OACNK,OAAQR,EACRI,OAAQ,CACNC,WAAsB,WAExBC,MAAO,CACL,aAAc,OACd,eAAgB,KAIpB,OACE,UAAC,KAAM,CACLJ,GAAIF,EACJG,KAAK,UACLM,KA5Gc,CAChB,KAAQ,oBACR,SAAY,CACV,CACE,KAAQ,UACR,WAAc,CAAC,EACf,SAAY,CACV,YAAe,CACb,CACE,EACG,kBACD,oBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,oBAEF,EACG,kBACD,sBAIN,KAAQ,cA6ED,WAEX,SAAC,KAAK,IAAKR,KACX,SAAC,KAAK,IAAKM,MACJ,EC/Fb,OAEI,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,MAYrCC,GAAUC,EAAAA,EAAAA,cAAYC,IACxB,MAAMC,EAASD,EAAME,UAAYF,EAAME,SAAS,GAChDC,QAAQC,IAAIJ,EAAME,UAElBC,QAAQC,IAAIJ,EAAMK,OAAOC,sBAAsBN,EAAMO,QAErDX,EAAa,CACXY,UAAWR,EAAMS,OAAOC,IACxBC,SAAUX,EAAMS,OAAOG,IACvBC,WAAYZ,GAAUA,EAAOa,WAAWC,QACxC,GAED,IAECC,GAAUjB,EAAAA,EAAAA,cAAYC,IAGxB,MAAME,EAAWF,EAAMK,OAAOC,sBAAsBN,EAAMO,OAE1DJ,QAAQC,IAAIF,EAAS,GAatB,IAOH,OAIQ,SAAC,KAAG,CACAe,OAAQC,IACRC,iBAAkB,CACdX,WAAY,IACZG,SAAU,GACVS,KAAM,KAMVC,MAAO,CACHC,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,KAAM,GAEVC,SAAS,kCACTC,kBAAmBC,6FACnBC,YAAY,EAEZC,YAAarC,EACbkB,QAASA,EAAQ,UAOjB,SAAC,EAAW,KAM3B,ECnHM,MAAMoB,EAEXC,YAAYC,GACV,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIlB,MAAME,OAAS,OACnBe,EAAQI,YAAYH,GAEPI,EAAAA,WAAoBJ,GAE5BK,OAGHC,EAAAA,cAAoBC,EAAK,CAAC,GAG9B,CACAC,UACE,E","sources":["njslab/Tools/ReactMapGL/Layer/LayerCustom.tsx","njslab/Tools/ReactMapGL/App.tsx","njslab/Tools/ReactMapGL/index.tsx"],"sourcesContent":["\nimport { Layer, Source } from \"react-map-gl\";\n\nconst LayerCustom = () => {\n\n  const data: any = {\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n      {\n        \"type\": \"Feature\",\n        \"properties\": {},\n        \"geometry\": {\n          \"coordinates\": [\n            [\n              [\n                -91.44397295553597,\n                37.421743437936485\n              ],\n              [\n                -91.44397295553597,\n                32.49285288096823\n              ],\n              [\n                -83.28687772065805,\n                32.49285288096823\n              ],\n              [\n                -83.28687772065805,\n                37.421743437936485\n              ],\n              [\n                -91.44397295553597,\n                37.421743437936485\n              ]\n            ]\n          ],\n          \"type\": \"Polygon\"\n        }\n      }\n    ]\n  }\n\n  // const data: any = {\n  //   type: 'FeatureCollection',\n  //   features: [\n  //     {\n  //       type: 'Feature',\n  //       properties: {},\n  //       geometry: {\n  //         type: 'Polygon',\n  //         coordinates: [\n  //           [\n  //             [-122.4194, 37.7749],\n  //             [-122.4194, 37.8049],\n  //             [-122.3894, 37.8049],\n  //             [-122.3894, 37.7749],\n  //             [-122.4194, 37.7749],\n  //           ],\n  //         ],\n  //       },\n  //     },\n  //   ],\n  // };\n\n\n  const ayerStyle3: any = {\n    id: 'custom-layer',\n    type: 'fill',\n    paint: {\n      'fill-color': '#3366cc',\n      'fill-opacity': 0.5,\n    },\n  };\n\n  const layerID = 'my-layer';\n\n  let visible = true;\n\n  const layerStyle: any = {\n    id: layerID,\n    // source: layerID,\n    type: 'line',\n    layout: {\n      'line-join': 'round',\n      'line-cap': 'round',\n      visibility: visible ? 'visible' : 'none'\n    },\n    // 'source-layer': 'landuse',\n    paint: {\n      'line-color': '#4E3FC8',\n      'line-width': 4,\n    },\n    // filter: ['==', 'class', 'park'],\n  }\n\n  const layerStyleFill: any = {\n    ...layerStyle,\n    id: layerID + '-fill',\n    type: 'fill',\n    source: layerID,\n    layout: {\n      visibility: visible ? 'visible' : 'none'\n    },\n    paint: {\n      'fill-color': '#f00',\n      'fill-opacity': 0.1,\n    },\n  };\n\n  return (\n    <Source\n      id={layerID}\n      type='geojson'\n      data={data}\n    >\n      <Layer {...layerStyle} />\n      <Layer {...layerStyleFill} />\n    </Source>\n\n  );\n\n}\nexport default LayerCustom;","import mapboxgl from 'mapbox-gl';\nimport Map, { Marker } from 'react-map-gl';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Suspense, useCallback, useState } from 'react';\n// import { Scene } from './Scene';\n\nimport LayerCustom from './Layer/LayerCustom';\n\nimport styles from './style.module.css';\n\n// mapbox style\n// mapbox://styles/mapbox/standard\n// mapbox://styles/mapbox/streets-v11\n// mapbox://styles/mapbox/outdoors-v11\n// mapbox://styles/mapbox/light-v10\n// mapbox://styles/mapbox/dark-v10\n// mapbox://styles/mapbox/satellite-v9\n// mapbox://styles/mapbox/satellite-streets-v11\n// mapbox://styles/mapbox/navigation-day-v1\n// mapbox://styles/mapbox/navigation-night-v1\n\nexport default () => {\n\n    const [hoverInfo, setHoverInfo] = useState(null);\n\n    // const onHover = useCallback(event => {\n    //     console.log(event.features)\n    //     if (event?.features && event.features.length > 0) {\n    //         console.log(event.features)\n    //         // setHoveredFeatures(event.features)\n    //     } else {\n    //         // setHoveredFeatures([])\n    //     }\n    // }, [])\n\n    const onHover = useCallback(event => {\n        const county = event.features && event.features[0];\n        console.log(event.features)\n\n        console.log(event.target.queryRenderedFeatures(event.point))\n\n        setHoverInfo({\n          longitude: event.lngLat.lng,\n          latitude: event.lngLat.lat,\n          countyName: county && county.properties.COUNTY\n        });\n\n      }, []);\n\n    const onClick = useCallback(event => {\n\n        \n        const features = event.target.queryRenderedFeatures(event.point);\n        // Now 'features' contains information about the clicked features\n        console.log(features);\n    //   };\n\n        //     if (event?.features?.length > 0) {\n        //         // Iterates through clicked features (in order of top-down) until it successfully\n        //         // triggers a callback that returns true.\n        //         event.features.some((clickedFeature) =>\n        //             Object.entries(mapClickHandlers).some(([label, handler]) =>\n        //                 clickedFeature?.layer?.id.includes(label) && handler(clickedFeature, event)\n        //             )\n        //         )\n        //     }\n        // }, [mapClickHandlers, drawMode])\n    }, [])\n\n    const marker = {\n        latitude: 37.7577,\n        longitude: -122.4376,\n    };\n\n    return (\n        // <div ref={mapContainer} className={styles.mapContainer}>\n        // <div>\n        // <Suspense>\n            <Map\n                mapLib={mapboxgl}\n                initialViewState={{\n                    longitude: -100,\n                    latitude: 40,\n                    zoom: 3.5\n\n                    // latitude: 37.7577,\n                    // longitude: -122.4376,\n                    // zoom: 8,\n                }}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    position: 'relative',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    zIndex: 0,\n                    flex: 1,\n                }}\n                mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n                mapboxAccessToken={process.env.REACT_APP_MAPBOX}\n                dragRotate={false}\n\n                onMouseMove={onHover}\n                onClick={onClick}\n\n            >\n                {/* <Marker latitude={marker.latitude} longitude={marker.longitude}>\n                    <div>Marker Content</div>\n                </Marker> */}\n\n                <LayerCustom />\n\n\n            </Map>\n        // </Suspense>\n    )\n}\n","import ReactDOM from 'react-dom/client';\r\nimport App from './App'\r\nimport React from 'react';\r\n\r\nexport class Solution {\r\n\r\n  constructor(divHost: HTMLDivElement) {\r\n    const div = document.createElement('div');\r\n    div.style.height = '100%';\r\n    divHost.appendChild(div);\r\n\r\n    const root = ReactDOM.createRoot(div);\r\n\r\n    root.render(\r\n      // <React.StrictMode>\r\n      // <HelleApp /> syntax sugar\r\n      React.createElement(App, {})\r\n      // </React.StrictMode>\r\n    );\r\n  }\r\n  destroy(){\r\n    // console.log('destroy');\r\n  }\r\n}"],"names":["layerID","layerStyle","id","type","layout","visibility","paint","layerStyleFill","source","data","hoverInfo","setHoverInfo","useState","onHover","useCallback","event","county","features","console","log","target","queryRenderedFeatures","point","longitude","lngLat","lng","latitude","lat","countyName","properties","COUNTY","onClick","mapLib","mapboxgl","initialViewState","zoom","style","width","height","position","top","left","right","bottom","zIndex","flex","mapStyle","mapboxAccessToken","process","dragRotate","onMouseMove","Solution","constructor","divHost","div","document","createElement","appendChild","ReactDOM","render","React","App","destroy"],"sourceRoot":""}