{"version":3,"file":"static/js/7139.f071e6d1.chunk.js","mappings":"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","sources":["njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/ColorUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/VectorUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/TurfUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/DrawingPreest.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/constant.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/SceneManager.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/Base/GeometryBase.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/Math.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/Geometry/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/Renderer/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/Transform/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryAreaPolygon/Geometry/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryAreaPolygon/Renderer/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryAreaPolygon/Transform/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryAreaPolygon/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Common/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/ActiveCommander/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/MapboxGLWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/DeckGL/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/CanvasDynamic.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/UI/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Scene/SceneState.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Scene/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/ApiWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/index.ts"],"sourcesContent":["export const hex2RGB = (hex: string, isGray: boolean = false) => {\n    hex = hex.replace('#', '');\n    let r = parseInt(hex.substring(0, 2), 16);\n    let g = parseInt(hex.substring(2, 4), 16);\n    let b = parseInt(hex.substring(4, 6), 16);\n    if (isGray) {\n        let v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n        return [v, v, v];\n    } else {\n        return [r, g, b];\n    }\n}","export const distance = (v0: RVector3, v1: RVector3): number => {\n    return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n};\nexport const isInsideOfVecs = (v: RVector3, vecs: RVector3[]): boolean => {\n    // ray-casting algorithm based on https://github.com/substack/point-in-polygon\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n    let x = v.x, y = v.y;\n    let inside = false;\n    for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\n        let xi = vecs[i].x, yi = vecs[i].y;\n        let xj = vecs[j].x, yj = vecs[j].y;\n        let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n    return inside;\n};\nexport const isInsideEllipse = (cv: RVector3, m: RVector3, r0: number, r1: number, threshold: number = 5) => {\n    const x = Math.pow((m.x - cv.x), 2) / Math.pow(threshold + r0, 2);\n    const y = Math.pow((m.y - cv.y), 2) / Math.pow(threshold + r1, 2);\n    if (x + y <= 1) {\n        return true;\n    }\n    return false;\n};\nexport const closestPointOnLine = (pt: RVector3, p0: RVector3, p1: RVector3) => {\n    const A = p1.y - p0.y;\n    const B = p0.x - p1.x;\n    const C = p1.x * p0.y - p0.x * p1.y;\n    const dis = Math.abs(A * pt.x + B * pt.y + C) / Math.sqrt(A * A + B * B);\n    const proX = (B * (B * pt.x - A * pt.y) - A * C) / (A * A + B * B);\n    const proY = (A * (-B * pt.x + A * pt.y) - B * C) / (A * A + B * B);\n    return { x: proX, y: proY, dis: dis };\n}\nexport const getCosAngleByTwoVectors = (v0: RVector3, v1: RVector3): number => {\n    return dotProduct(normalize(v0), normalize(v1));\n};\nexport const getAngleByTwoVectorsRadian = (v0: RVector3, v1: RVector3): number => {\n    return Math.acos(getCosAngleByTwoVectors(v0, v1));\n}\nexport const getAngleByTwoVectors = (v0: RVector3, v1: RVector3): number => {\n    return getAngleByTwoVectorsRadian(v0, v1) * 180.0 / Math.PI;\n  }\nexport const lengt = (v: RVector3): number => {\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n};\nexport const normalize = (v: RVector3): RVector3 => {\n    let len: number = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n    if (len < 0.000001) {\n        return new RVector3(v.x, v.y, v.z);\n    }\n    return new RVector3(v.x / len, v.y / len, v.z / len);\n};\nexport const dotProduct = (v1: RVector3, v2: RVector3): number => {\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n}\nexport const crossProduct = (v1: RVector3, v2: RVector3): RVector3 => {\n    return new RVector3(\n        v1.y * v2.z - v1.z * v2.y,\n        v1.z * v2.x - v1.x * v2.z,\n        v1.x * v2.y - v1.y * v2.x\n    );\n}\nexport const divideByNum = (v0: RVector3, v1: RVector3, n: number = 5): RVector3[] => {\n    const vs: RVector3[] = [];\n    const xOff = (v1.x - v0.x) / n;\n    const yOff = (v1.y - v0.y) / n;\n    const zOff = (v1.z - v0.z) / n;\n    for (let j = 0; j < n; ++j) {\n        let x = v0.x + xOff * j;\n        let y = v0.y + yOff * j;\n        let z = v0.z + zOff * j;\n        vs.push(new RVector3(x, y, z));\n    }\n    return vs;\n}\nexport class RVector3 {\n    x: number = 0.0;\n    y: number = 0.0;\n    z: number = 0.0;\n    lng: number = 0.0;\n    lat: number = 0.0;\n    ele: number = 0.0;\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}","import * as turf from '@turf/turf';\n\nexport const difference = (area: turf.Polygon | any, polygons: turf.Polygon[], boolean) => {\n    for (let i = 0; i < polygons.length; ++i) {\n        if (boolean[i]) {\n            area = turf.difference(area, polygons[i]);\n        }\n    };\n    return area;\n};\n\nexport const computePathPolygon = (object: turf.Polygon, projection: (lon: number, lat: number) => number[]): Path2D => {\n    const path = new Path2D();\n    let x, y;\n    for (let j = 0; j < object['geometry']['coordinates'].length; ++j) {\n        // if (j === 0) {\n        const pathOut = new Path2D();\n        for (let i = object['geometry']['coordinates'][j].length - 1; i > -1; --i) {\n\n            const p = object['geometry']['coordinates'][j][i];\n            if (i === object['geometry']['coordinates'][j].length - 1) {\n                const sp = projection(p[0], p[1])\n                pathOut.moveTo(sp[0], sp[1]);\n            } else {\n                const sp = projection(p[0], p[1])\n                pathOut.lineTo(sp[0], sp[1]);\n            }\n        }\n        pathOut.closePath();\n        path.addPath(pathOut);\n    }\n    return path;\n};\n","import { RVector3 } from './';\nexport const drawingPoint = (ctx: CanvasRenderingContext2D, x: number, y: number) => {\n    ctx.beginPath();\n    ctx.arc(x, y, 10, 0, Math.PI * 2.0);\n    ctx.closePath();\n    ctx.fill();\n};\nexport const renderControlPoint = (ctx: CanvasRenderingContext2D, vs: RVector3[], fillColor = 'rgba(200, 200, 200, 1.0)', strokeColor = 'rgba(50, 50, 50, 1.0)', lineWidth = 3 ) => {\n    ctx.fillStyle = fillColor;\n    ctx.strokeStyle = strokeColor;\n    ctx.lineWidth = lineWidth;\n    vs.forEach(v => {\n        ctx.beginPath();\n        ctx.arc(v.x, v.y, 8, 0, Math.PI * 2.0);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n    });\n};","export const LANDUSE_TYPE_MAPPING = {\n  R: { text: 'Residential', color: '#ffff6e' },\n  B: { text: 'Business', color: '#f59700' },\n  X: { text: 'Residential & Business', color: '#FFC25F' },\n  A: { text: 'Agriculture', color: '#9EFF99' },\n  LIBRARY: { text: 'Library', color: '#04E762' },\n  SCHOOL: { text: 'School', color: '#95E06C' },\n  GOVERNMENT: { text: 'Government', color: '#D741A7' },\n  HEALTH: { text: 'Health', color: '#008BF8' },\n  COMMUNITY: { text: 'Community', color: '#00CECB' },\n  RELIGION: { text: 'Religion', color: '#9BFFFD' },\n  C: { text: 'Other CAI', color: '#D544CC' },\n  O: { text: 'Other BSLs', color: 'gray' }\n}\nexport const FUNDING_STATUS_MAPPING = {\n  None: {\n    text: 'Not assigned',\n    color: 'gray'\n  },\n  default: {\n    text: 'Default',\n    color: '#5287E6'\n  },\n  pending: {\n    text: 'Pending',\n    color: '#746CDD'\n  },\n  assigned: {\n    text: 'Assigned',\n    color: '#A355D4'\n  }\n}\nexport const TYPE_GEOMETRY = {\n  RECT: 'RECT',\n  CIRCLE: 'CIRCLE',\n  POLYGON: 'POLYGON',\n}","export class SceneManager {\n  private histories: any = [];\n  private currentIndex = -1;\n  public reset() {\n    this.histories = [];\n    this.currentIndex = -1;\n  }\n  public push(data: any) {\n    if (this.currentIndex < this.histories.length - 1) {\n      this.histories.splice(this.currentIndex + 1, this.histories.length);\n    }\n    this.histories.push(data);\n    this.currentIndex = this.histories.length - 1;\n  }\n  public getCurrentIndex() {\n    return this.currentIndex;\n  }\n  public getHistoryLength() {\n    return this.histories.length;\n  }\n  public getCurrentState() {\n    return { currentIndex: this.getCurrentIndex(), historyNum: this.getHistoryLength() };\n  }\n  public undo() {\n    if (this.currentIndex === 0) { return undefined; }\n    this.currentIndex--;\n    return this.histories[this.currentIndex];\n  }\n  public redo() {\n    this.currentIndex++;\n    this.currentIndex = this.currentIndex < this.histories.length ? this.currentIndex : this.histories.length - 1;\n    return this.histories[this.currentIndex];\n  }\n}","import * as turf from '@turf/turf';\nimport { Scene } from '../../../../Scene';\nimport { TYPE_GEOMETRY, getUUID } from '../../../../lib';\n\nexport class GeometryBase {\n    public scene: Scene;\n    public TYPE = TYPE_GEOMETRY.RECT;\n    public t = 0.1;\n    public id: string;\n    public capturedVecId: number = -1;\n    public isHovered: boolean = false;\n    public hasAnimation: boolean = false;\n    public updateNeeded: boolean = false;\n    public captureNeeded: boolean = false;\n    protected _isSelected: boolean = false;\n\n    public polygonTurfOriginal: turf.Polygon | any;\n    public polygonTurfSubtracted: turf.Polygon;\n\n    constructor(scene: Scene) {\n        this.scene = scene;\n        this.id = getUUID();\n\n        this.scene.push(this);\n    }\n    public get isSelected() {\n        return this._isSelected;\n    }\n    public set isSelected(v: boolean) {\n        this._isSelected = v;\n    }\n    public isInside(x: number, y: number) {\n        return false;\n    }\n    public translate(x: number, y: number) {\n        \n    }\n    public removeVertexLastVertex() {\n        \n    }\n    public update() {\n\n    }\n    public onMouseUp() {\n        \n    }\n    public onMouseClick(e) {\n\n    }\n    public onMouseDoubleClick(e) {\n\n    }\n    public shiftType() {\n        \n    }\n    public updateGeoProjection() {\n\n    }\n    public updateGhostPos(x: number, y: number) {\n\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        this.update();\n        this.renderPost(ctx);\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n\n    }\n    public toJson() {\n        \n    }\n    public updateWidthHight(width: number, height: number) {\n\n    }\n    public remove(): void {\n        this.scene.remove(this);\n    }\n}","export const getUUID = () => {   // reference : https://jsfiddle.net/briguy37/2MVFd/\n    let d = new Date().getTime();\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\n        let r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}","import { RVector3, } from '../../../../../lib';\n\nexport class AreaGeometry {\n\n    public vec: RVector3;\n\n    public vsRect: RVector3[] = [];\n\n    public segR = 36;\n    public vsCircle: RVector3[] = [];\n\n    public width = 200;\n    public height = 200;\n\n    constructor(vec: RVector3, width: number, height: number) {\n        this.vec = vec;\n        this.width = width;\n        this.height = height;\n        this.reset();\n        this.initRect();\n        this.initCircleVec();\n    }\n    public initRect() {\n        const widthHalf = this.width * 0.5;\n        const heightHalf = this.height * 0.5;\n        this.vsRect.push(new RVector3(this.vec.x - widthHalf, this.vec.y + heightHalf));\n        this.vsRect.push(new RVector3(this.vec.x + widthHalf, this.vec.y + heightHalf));\n        this.vsRect.push(new RVector3(this.vec.x + widthHalf, this.vec.y - heightHalf));\n        this.vsRect.push(new RVector3(this.vec.x - widthHalf, this.vec.y - heightHalf));\n    }\n    public initCircleVec() {\n        this.vsCircle = [];\n        const r = (Math.PI * 2) / this.segR\n        for (let i = 0; i < this.segR; ++i) {\n            const x = Math.cos(r * i) * this.width * 0.5;\n            const y = Math.sin(r * i) * this.height * 0.5;\n            const v = new RVector3(this.vec.x + x, this.vec.y + y, 0);\n            this.vsCircle.push(v)\n        }\n    }\n    public updateScreen(toScreen: (x: number, y: number)=> number[]) {\n        // console.log('update screen pos');\n\n        let sp = toScreen(this.vec.lng, this.vec.lat);\n        this.vec.x = sp[0];\n        this.vec.y = sp[1];\n\n        for (let i = 0; i < this.vsRect.length; ++i) {\n            sp = toScreen(this.vsRect[i].lng, this.vsRect[i].lat);\n            this.vsRect[i].x = sp[0];\n            this.vsRect[i].y = sp[1];\n        }\n\n        for (let i = 0; i < this.vsCircle.length; ++i) {\n            // console.log(this.vs[i].lng, this.vs[i].lat)\n            sp = toScreen(this.vsCircle[i].lng, this.vsCircle[i].lat);\n            this.vsCircle[i].x = sp[0];\n            this.vsCircle[i].y = sp[1];\n            // console.log(this.vsCircle[i].x, this.vsCircle[i].y);\n        }\n\n        this.width = Math.abs(this.vsRect[0].x - this.vsRect[2].x);\n        this.height = Math.abs(this.vsRect[0].y - this.vsRect[2].y);\n    }\n    public updateProjection(toMap: (x: number, y: number)=> number[]) {\n        // console.log('update map pos');\n        const mp = toMap(this.vec.x, this.vec.y);\n        this.vec.lng = mp[0];\n        this.vec.lat = mp[1];\n        for (let i = 0; i < this.vsRect.length; ++i) {\n            let mp = toMap(this.vsRect[i].x, this.vsRect[i].y);\n            this.vsRect[i].lng = mp[0];\n            this.vsRect[i].lat = mp[1];\n        }\n\n        for (let i = 0; i < this.vsCircle.length; ++i) {\n            let mp = toMap(this.vsCircle[i].x, this.vsCircle[i].y);\n            this.vsCircle[i].lng = mp[0];\n            this.vsCircle[i].lat = mp[1];\n        }\n        this.updateCenterVec();\n    }\n    public updateCenterVec() {\n        let xSum = 0;\n        let ySum = 0;\n        for (let i = 0; i < this.vsRect.length; ++i) {\n            xSum += this.vsRect[i].x;\n            ySum += this.vsRect[i].y;\n        }\n        this.vec.x = xSum / this.vsRect.length;\n        this.vec.y = ySum / this.vsRect.length;\n    }\n    public updateScreenPosCircle() {\n        const r = (Math.PI * 2) / this.segR\n        for (let i = 0; i < this.segR; ++i) {\n            const x = Math.cos(r * i) * this.width * 0.5;\n            const y = Math.sin(r * i) * this.height * 0.5;\n            // const v = new RVector3(this.vec.x + x, this.host.vec.y + y, 0);\n            // const [mx, my] = this.scene.common.toMap(x, y);\n            // this.vec.lng = mx;\n            // this.vec.lat = my;\n            this.vsCircle[i].x = this.vec.x + x;\n            this.vsCircle[i].y = this.vec.y + y;\n        }\n        // console.log('updateCircle');\n    }\n    public reset() {\n        this.vsRect = [];\n        this.vsCircle = [];\n    }\n    public updateWidthHight(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n        this.reset();\n        this.initRect();\n        this.initCircleVec();\n    }\n}","import * as turf from '@turf/turf';\n\nimport { Area } from '..';\n\nimport { LANDUSE_TYPE_MAPPING, TYPE_GEOMETRY, renderControlPoint, difference, computePathPolygon } from '../../../../../lib';\n\nexport class Renderer {\n    public host: Area;\n    public pathCroppedArea: Path2D\n    constructor(host: Area) {\n        this.host = host;\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.renderAreaBounding(ctx);\n        this.renderCroppedArea(ctx);\n\n        if (this.host.isHovered || this.host.isSelected) {\n            this.renderControlPoint(ctx);\n            this.renderDim(ctx);\n\n            if (this.host.isSelected) {\n                this.renderSelected(ctx);\n            }\n        }\n        this.renderCenterPoint(ctx);\n        this.renderProperties(ctx);\n    }\n    private renderCenterPoint(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        ctx.moveTo(this.host.vec.x - 5, this.host.vec.y);\n        ctx.lineTo(this.host.vec.x + 5, this.host.vec.y);\n        ctx.moveTo(this.host.vec.x, this.host.vec.y - 5);\n        ctx.lineTo(this.host.vec.x, this.host.vec.y + 5);\n        ctx.stroke();\n    }\n    private renderCroppedArea(ctx: CanvasRenderingContext2D) {\n        if (this.host.updateNeeded || this.host.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n            const diff = difference(this.host.polygonTurfOriginal, this.host.scene.polygonsDifference, this.host.scene.ids);\n            this.host.polygonTurfSubtracted = diff;\n            this.pathCroppedArea = computePathPolygon(diff, this.host.scene.common.toScreen);\n            this.host.updateNeeded = false;\n            // console.log('updating');\n        }\n\n        ctx.setLineDash([5, 7]);\n        ctx.lineDashOffset = this.host.t;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#fff';\n\n        const op = 0.2 + Math.sin(this.host.t * 0.1) * 0.09;\n        ctx.fillStyle = `rgba(0, 255, 255, ${op} )`;\n\n        ctx.fill(this.pathCroppedArea, 'evenodd');\n        ctx.stroke(this.pathCroppedArea);\n\n        ctx.setLineDash([]);\n    }\n    private renderControlPoint(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'rgba(200, 200, 200, 1.0)';\n        ctx.strokeStyle = 'rgba(50, 50, 50, 1.0)';\n        ctx.lineWidth = 3;\n\n        renderControlPoint(ctx, this.host.geometry.vsRect);\n        renderControlPoint(ctx, this.host.transform.cVecGhost);\n\n    }\n    private renderDim(ctx: CanvasRenderingContext2D) {\n        ctx.textAlign = 'center';\n        ctx.font = '14px arial';\n        ctx.fillStyle = '#fff';\n\n        if (this.host.TYPE === TYPE_GEOMETRY.CIRCLE) {\n            // ctx.ellipse(this.host.vec.x, this.host.vec.y, this.host.geometry.width * 0.5, this.host.geometry.height * 0.5, 0.0, 0.0, Math.PI * 2.0);\n\n            let line = turf.lineString([[this.host.geometry.vsRect[0].lng, this.host.geometry.vsRect[0].lat], [this.host.geometry.vsRect[1].lng, this.host.geometry.vsRect[1].lat]]);\n            let length = turf.length(line, { units: 'miles' }) * 0.5;\n\n            let x = this.host.geometry.vsRect[0].x + ((this.host.geometry.vsRect[1].x - this.host.geometry.vsRect[0].x) * 0.75);\n            let y = this.host.geometry.vec.y - 10;\n            ctx.fillText(`R1 : ${length.toFixed(5)} miles`, x, y);\n\n\n            line = turf.lineString([[this.host.geometry.vsRect[0].lng, this.host.geometry.vsRect[0].lat], [this.host.geometry.vsRect[3].lng, this.host.geometry.vsRect[3].lat]]);\n            length = turf.length(line, { units: 'miles' }) * 0.5;\n\n            x = this.host.geometry.vec.x - 10;\n            y = this.host.geometry.vsRect[0].y + ((this.host.geometry.vsRect[3].y - this.host.geometry.vsRect[0].y) * 0.75);\n\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(-90 * Math.PI / 180);\n            ctx.fillText(`R2 : ${length.toFixed(5)} miles`, 0, 0);\n            ctx.restore();\n\n            ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';\n            ctx.lineWidth = 0.5;\n\n            ctx.beginPath();\n            ctx.moveTo(this.host.geometry.vec.x, this.host.geometry.vsRect[2].y);\n            ctx.lineTo(this.host.geometry.vec.x, this.host.geometry.vec.y);\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.moveTo(this.host.geometry.vec.x, this.host.geometry.vec.y);\n            ctx.lineTo(this.host.geometry.vsRect[1].x, this.host.geometry.vec.y);\n            ctx.stroke();\n\n        } else {\n            let line = turf.lineString([[this.host.geometry.vsRect[0].lng, this.host.geometry.vsRect[0].lat], [this.host.geometry.vsRect[1].lng, this.host.geometry.vsRect[1].lat]]);\n            let length = turf.length(line, { units: 'miles' });\n\n            let x = this.host.geometry.vsRect[0].x + ((this.host.geometry.vsRect[1].x - this.host.geometry.vsRect[0].x) * 0.5);\n            let y = this.host.geometry.vsRect[0].y + 25;\n            ctx.fillText(`W : ${length.toFixed(5)} miles`, x, y);\n\n\n            line = turf.lineString([[this.host.geometry.vsRect[0].lng, this.host.geometry.vsRect[0].lat], [this.host.geometry.vsRect[3].lng, this.host.geometry.vsRect[3].lat]]);\n            length = turf.length(line, { units: 'miles' });\n\n            x = this.host.geometry.vsRect[0].x - 25;\n            y = this.host.geometry.vsRect[0].y + ((this.host.geometry.vsRect[3].y - this.host.geometry.vsRect[0].y) * 0.5);\n\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(-90 * Math.PI / 180);\n\n            ctx.fillText(`H : ${length.toFixed(5)} miles`, 0, 0);\n\n            ctx.restore();\n        }\n\n        // ctx.globalCompositeOperation = 'source-over';\n        // ctx.stroke()\n    }\n    private renderAreaBounding(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        if (this.host.TYPE === TYPE_GEOMETRY.CIRCLE) {\n            ctx.ellipse(this.host.vec.x, this.host.vec.y, this.host.geometry.width * 0.5, this.host.geometry.height * 0.5, 0.0, 0.0, Math.PI * 2.0);\n        } else {\n            ctx.rect(this.host.geometry.vsRect[3].x, this.host.geometry.vsRect[3].y, this.host.geometry.width, this.host.geometry.height);\n        }\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n        ctx.stroke();\n    }\n    private renderProperties(ctx: CanvasRenderingContext2D) {\n        const area = turf.convertArea(turf.area(this.host.polygonTurfSubtracted), 'meters', 'miles')\n        ctx.textAlign = 'center';\n        ctx.font = '18px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`ID: ${this.host.id.split('-')[0]}`, this.host.vec.x, this.host.vec.y - 90 - this.host.geometry.height * 0.5);\n\n        ctx.fillText(`Area in square miles: ${area.toFixed(5)}`, this.host.vec.x, this.host.vec.y - 60 - this.host.geometry.height * 0.5);\n        // console.log(this.host.cp.x, 50 - this.host.cp.y - this.host.geometry.height * 0.5);\n\n        const pts = turf.pointsWithinPolygon(this.host.scene.points, this.host.polygonTurfSubtracted)\n        // console.log(pts);\n        let r = 0, b = 0, other = 0;\n        for (let i = 0; i < pts.features.length; ++i) {\n            if (pts.features[i].properties['landuse'] === 'R') {\n                r += 1;\n            } else if (pts.features[i].properties['landuse'] === 'B') {\n                b += 1;\n            } else {\n                other += 1;\n            }\n        }\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.R.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.R.text}: ${r},`, this.host.vec.x - 120, this.host.vec.y - 25 - this.host.geometry.height * 0.5);\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.B.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.B.text}: ${b},`, this.host.vec.x + 28, this.host.vec.y - 25 - this.host.geometry.height * 0.5);\n\n        ctx.fillStyle = 'rgb(0, 128, 0)';\n        ctx.fillText(`Other: ${other}`, this.host.vec.x + 140, this.host.vec.y - 25 - this.host.geometry.height * 0.5);\n        // console.log(r, b, other)\n    }\n    public renderSelected(ctx: CanvasRenderingContext2D) {\n        ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n        ctx.lineWidth = 1;\n\n        const offset = 13 + Math.sin(this.host.t * 0.2);\n        ctx.beginPath();\n        ctx.moveTo(this.host.geometry.vsRect[0].x - offset, this.host.geometry.vsRect[0].y - offset);\n        ctx.lineTo(this.host.geometry.vsRect[0].x - offset, this.host.geometry.vsRect[0].y + offset);\n        ctx.lineTo(this.host.geometry.vsRect[0].x + offset, this.host.geometry.vsRect[0].y + offset);\n\n        ctx.moveTo(this.host.geometry.vsRect[1].x + offset, this.host.geometry.vsRect[1].y - offset);\n        ctx.lineTo(this.host.geometry.vsRect[1].x + offset, this.host.geometry.vsRect[1].y + offset);\n        ctx.lineTo(this.host.geometry.vsRect[1].x - offset, this.host.geometry.vsRect[1].y + offset);\n\n        ctx.moveTo(this.host.geometry.vsRect[2].x + offset, this.host.geometry.vsRect[2].y + offset);\n        ctx.lineTo(this.host.geometry.vsRect[2].x + offset, this.host.geometry.vsRect[2].y - offset);\n        ctx.lineTo(this.host.geometry.vsRect[2].x - offset, this.host.geometry.vsRect[2].y - offset);\n\n        ctx.moveTo(this.host.geometry.vsRect[3].x - offset, this.host.geometry.vsRect[3].y + offset);\n        ctx.lineTo(this.host.geometry.vsRect[3].x - offset, this.host.geometry.vsRect[3].y - offset);\n        ctx.lineTo(this.host.geometry.vsRect[3].x + offset, this.host.geometry.vsRect[3].y - offset);\n\n        ctx.stroke();\n\n        // ctx.beginPath();\n        // ctx.moveTo(this.host.geometry.vec.x, this.host.geometry.vec.y);\n        // ctx.lineTo(this.host.geometry.vsRect[1].x, this.host.geometry.vec.y);\n        // ctx.stroke();\n    }\n}\n","import { RVector3, } from '../../../../../lib';\nimport { Area } from '..';\n\nexport class Transform {\n    public host: Area;\n    public cVecGhost: RVector3[] = [];\n    constructor(host: Area) {\n        this.host = host;\n\n        const widthHalf = this.host.geometry.width * 0.5;\n        const heighthHalf = this.host.geometry.height * 0.5;\n\n        this.cVecGhost = [\n            new RVector3(this.host.vec.x - widthHalf, this.host.vec.y),\n            new RVector3(this.host.vec.x, this.host.vec.y + heighthHalf),\n            new RVector3(this.host.vec.x + widthHalf, this.host.vec.y),\n            new RVector3(this.host.vec.x, this.host.vec.y - heighthHalf),\n        ];\n    }\n    public translate(x: number, y: number): void {\n        this.host.captureNeeded = true;\n        \n        const preX = this.host.scene.solution.activeCommander.mp[0] - this.host.scene.solution.activeCommander.mpPre[0];\n        const preY = this.host.scene.solution.activeCommander.mp[1] - this.host.scene.solution.activeCommander.mpPre[1];\n\n        if (this.host.capturedVecId > -1) {\n\n            if (this.host.capturedVecId < this.host.geometry.vsRect.length) {\n                this.host.geometry.vsRect[this.host.capturedVecId].x += preX;\n                this.host.geometry.vsRect[this.host.capturedVecId].y += preY;\n            }\n            // console.log(this.host.capturedVecId);\n            // console.log(this.host.capturedVecId)\n            if (this.host.capturedVecId === 0) {\n                this.host.geometry.vsRect[3].x = this.host.geometry.vsRect[0].x;\n                this.host.geometry.vsRect[1].y = this.host.geometry.vsRect[0].y;\n\n            } else if (this.host.capturedVecId === 1) {\n                this.host.geometry.vsRect[2].x = this.host.geometry.vsRect[1].x;\n                this.host.geometry.vsRect[0].y = this.host.geometry.vsRect[1].y;\n\n            } else if (this.host.capturedVecId === 2) {\n                this.host.geometry.vsRect[1].x = this.host.geometry.vsRect[2].x;\n                this.host.geometry.vsRect[3].y = this.host.geometry.vsRect[2].y;\n\n            } else if (this.host.capturedVecId === 3) {\n                this.host.geometry.vsRect[0].x = this.host.geometry.vsRect[3].x;\n                this.host.geometry.vsRect[2].y = this.host.geometry.vsRect[3].y;\n                ////\n            } else if (this.host.capturedVecId === 4) {\n                this.host.geometry.vsRect[3].x += preX; this.host.geometry.vsRect[0].x += preX;\n            } else if (this.host.capturedVecId === 5) {\n                this.host.geometry.vsRect[1].y += preY; this.host.geometry.vsRect[0].y += preY;\n            } else if (this.host.capturedVecId === 6) {\n                this.host.geometry.vsRect[1].x += preX; this.host.geometry.vsRect[2].x += preX;\n            } else if (this.host.capturedVecId === 7) {\n                this.host.geometry.vsRect[2].y += preY; this.host.geometry.vsRect[3].y += preY;\n            }\n\n\n            this.host.geometry.width = Math.abs(this.host.geometry.vsRect[0].x - this.host.geometry.vsRect[2].x);\n            this.host.geometry.height = Math.abs(this.host.geometry.vsRect[0].y - this.host.geometry.vsRect[2].y);\n\n            this.host.updateGeoProjection();\n            this.host.updateScreenPosCircle();\n            this.updateGhostVecs();\n            return;\n        }\n\n        this.host.vec.x += preX;\n        this.host.vec.y += preY;\n        for (let i = 0; i < this.host.geometry.vsRect.length; ++i) {\n            this.host.geometry.vsRect[i].x += preX;\n            this.host.geometry.vsRect[i].y += preY;\n        }\n\n        this.host.updateGeoProjection();\n        this.host.updateScreenPosCircle();\n        this.updateGhostVecs();\n    }\n    public updateGhostVecs() {\n        const widthHalf = this.host.geometry.width * 0.5;\n        const heighthHalf = this.host.geometry.height * 0.5;\n        this.cVecGhost[0].x = this.host.vec.x - widthHalf;\n        this.cVecGhost[0].y = this.host.vec.y;\n        this.cVecGhost[1].x = this.host.vec.x;\n        this.cVecGhost[1].y = this.host.vec.y + heighthHalf;\n        this.cVecGhost[2].x = this.host.vec.x + widthHalf;\n        this.cVecGhost[2].y = this.host.vec.y;\n        this.cVecGhost[3].x = this.host.vec.x;\n        this.cVecGhost[3].y = this.host.vec.y - heighthHalf;\n    }\n}\n","\nimport { Scene } from '../../../../Scene';\nimport { GeometryBase } from '../Base/GeometryBase';\nimport { RVector3, distance, isInsideOfVecs, isInsideEllipse, TYPE_GEOMETRY } from '../../../../lib';\n\nimport { AreaGeometry } from './Geometry';\nimport { Renderer } from './Renderer';\nimport { Transform } from './Transform';\n\nimport * as turf from '@turf/turf';\n\nexport class Area extends GeometryBase {\n    public renderer: Renderer;\n    public transform: Transform;\n    public geometry: AreaGeometry;\n\n    public TYPE = TYPE_GEOMETRY.RECT;\n    \n    public vec: RVector3;\n\n    public cp: RVector3[] = [];\n\n\n    constructor(scene: Scene, lng: number, lat: number, width: number = 400, height: number = 400, TYPE = TYPE_GEOMETRY.RECT ) {\n        super(scene);\n        \n        this.TYPE = TYPE;\n        const mp = this.scene.common.toScreen(lng, lat);\n\n        this.vec = new RVector3(mp[0], mp[1]);\n        this.geometry = new AreaGeometry(this.vec, width, height);\n\n        this.renderer = new Renderer(this);\n        this.transform = new Transform(this);\n        this.updateGeoProjection();\n    }\n    public isInside(x: number, y: number) {\n        const mVec = new RVector3(x, y);\n        this.capturedVecId = -1;\n\n        for (let i = 0; i < this.transform.cVecGhost.length; ++i) {\n            if (distance(this.transform.cVecGhost[i], (mVec)) < 12) {\n                this.capturedVecId = i + 4;\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        for (let i = 0; i < this.geometry.vsRect.length; ++i) {\n            if (distance(this.geometry.vsRect[i], (mVec)) < 12) {\n                this.capturedVecId = i;\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n\n        if (this.TYPE === TYPE_GEOMETRY.CIRCLE) {\n            if (isInsideEllipse(this.vec, mVec, this.geometry.width * 0.5, this.geometry.height * 0.5)) {\n                this.isHovered = true;\n                return true;\n            }\n        } else {\n            if (isInsideOfVecs(mVec, this.geometry.vsRect)) {\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        this.isHovered = false;\n        return false;\n    }\n    public translate(x: number, y: number): void {\n        this.transform.translate(x, y);\n    }\n    public update() {\n        if (this.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n            this.updateScreenPos();\n            this.transform.updateGhostVecs();\n        }\n        \n    }\n    public shiftType() {\n        if(this.TYPE === TYPE_GEOMETRY.CIRCLE) {\n            this.TYPE = TYPE_GEOMETRY.RECT;\n        } else if(this.TYPE = TYPE_GEOMETRY.RECT) {\n            this.TYPE = TYPE_GEOMETRY.CIRCLE;\n        }\n        this.updateGeoProjection();\n    }\n    public onMouseUp() {\n\n        if (this.isHovered) {\n            this.capturedVecId = -1;\n            this.updateGeoProjection();\n            // if ()\n            // console.log(this.isSelected);\n            if (this.captureNeeded) {\n                this.scene.common.captureScene();\n                this.captureNeeded = false;\n            }\n        }\n    }\n    public onMouseClick() {\n        this.isSelected = !this.isSelected;\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.renderer.renderPost(ctx);\n\n        if (this.hasAnimation) {\n            this.t += 0.2;\n        }\n    }\n    public updateScreenPos() {\n        this.geometry.updateScreen(this.scene.common.toScreen);\n    }\n    public updateScreenPosCircle() {\n        this.geometry.updateScreenPosCircle();\n    }\n    public updateGeoProjection() {\n        this.geometry.updateProjection(this.scene.common.toMap);\n        this.updatePolygonTurf();\n        this.updateNeeded = true;\n    }\n    public toJson() {\n        return {\n            TYPE: this.TYPE,\n            vs: [{lng: this.geometry.vsRect[0].lng, lat: this.geometry.vsRect[0].lat}, { lng: this.geometry.vsRect[2].lng, lat: this.geometry.vsRect[2].lat}],\n        }\n    }\n    private updatePolygonTurf() {\n        const pts = [];\n\n        if (this.TYPE === TYPE_GEOMETRY.RECT) {\n            for (let i = 0; i < this.geometry.vsRect.length; i++) {\n                pts.push([this.geometry.vsRect[i].lng, this.geometry.vsRect[i].lat]);\n            }\n            pts.push([this.geometry.vsRect[0].lng, this.geometry.vsRect[0].lat]);\n        } else {\n            for (let i = 0; i < this.geometry.vsCircle.length; i++) {\n                pts.push([this.geometry.vsCircle[i].lng, this.geometry.vsCircle[i].lat]);\n            }\n            pts.push([this.geometry.vsCircle[0].lng, this.geometry.vsCircle[0].lat]);\n        }\n        // console.log(this.polygonTurfOriginal);\n        this.polygonTurfOriginal = turf.polygon([pts]);\n    }\n    public updateWidthHight(width: number, height: number) {\n        this.geometry.updateWidthHight(width, height);\n    }\n}\n","import { RVector3, closestPointOnLine } from '../../../../../lib';\n\nexport class AreaPolygonGeometry {\n\n    public vs: RVector3[] = [];\n    public cv: RVector3 = new RVector3(0, 0, 0);\n\n    public v0: RVector3 = new RVector3(Number.MAX_VALUE, Number.MAX_VALUE);\n    public v1: RVector3 = new RVector3(Number.MIN_VALUE, Number.MIN_VALUE);\n\n    constructor() {\n\n    }\n\n    public push(x: number, y: number, lng: number, lat: number) {\n        const v = new RVector3(x, y, 0);\n        v.lat = lat;\n        v.lng = lng;\n        this.vs.push(v);\n        // console.log(this.vs);\n\n    }\n    public removeLast() {\n        this.vs.pop();\n    }\n    public updateScreen(toScreen: (x: number, y: number) => number[]) {\n        // console.log('update screen pos');\n        let sp;\n        for (let i = 0; i < this.vs.length; ++i) {\n            sp = toScreen(this.vs[i].lng, this.vs[i].lat);\n            this.vs[i].x = sp[0];\n            this.vs[i].y = sp[1];\n        }\n        this.updateCenterVec();\n    }\n    private resetBoundary() {\n        this.v0.x = Number.MAX_VALUE; this.v0.y = Number.MAX_VALUE;\n        this.v1.x = Number.MIN_VALUE; this.v1.y = Number.MIN_VALUE;\n    }\n    public updateProjection(toMap: (x: number, y: number) => number[]) {\n        // console.log('update map pos');\n        let mp;\n        for (let i = 0; i < this.vs.length; ++i) {\n            mp = toMap(this.vs[i].x, this.vs[i].y);\n            this.vs[i].lng = mp[0];\n            this.vs[i].lat = mp[1];\n        }\n        this.updateCenterVec();\n    }\n    public updateCenterVec() {\n        this.resetBoundary();\n        let xSum = 0, ySum = 0;\n        for (let i = 0; i < this.vs.length; ++i) {\n            xSum += this.vs[i].x;\n            ySum += this.vs[i].y;\n\n            if (this.v0.x > this.vs[i].x) { this.v0.x = this.vs[i].x; }\n            if (this.v0.y > this.vs[i].y) { this.v0.y = this.vs[i].y; }\n            if (this.v1.x < this.vs[i].x) { this.v1.x = this.vs[i].x; }\n            if (this.v1.y < this.vs[i].y) { this.v1.y = this.vs[i].y; }\n        }\n        this.cv.x = xSum / this.vs.length;\n        this.cv.y = ySum / this.vs.length;\n    }\n    public removeVecByIndex(index: number) {\n        this.vs.splice(index, 1);\n    }\n    public insertVec(x: number, y: number) {\n        const mp = new RVector3(x, y);\n        const sel = { x: 0, y: 0, dis: Number.MAX_VALUE, id: -1 };\n\n        for(let i = 0 ; i < this.vs.length -1; ++i) {\n            const result = closestPointOnLine(mp, this.vs[i], this.vs[1+i]);\n            if (sel.dis > result.dis) {\n                sel.x = result.x; sel.y = result.y; sel.dis = result.dis; sel.id = i;\n            }\n        }\n        const result = closestPointOnLine(mp, this.vs[this.vs.length -1], this.vs[0]);\n        if (sel.dis > result.dis) {\n            sel.x = result.x; sel.y = result.y; sel.dis = result.dis; sel.id = this.vs.length -1;\n        }\n\n        if (sel.dis < 10) {\n            this.vs.splice(sel.id + 1, 0, new RVector3(sel.x, sel.y));\n            // console.log('insertPT');\n            return true;\n        }\n        return false;\n    }\n    public toJson() {\n        const vs = [];\n        for (let i = 0; i < this.vs.length; ++i) {\n            vs.push({ lng: this.vs[i].lng, lat: this.vs[i].lat });\n        }\n        return vs;\n    }\n}","import * as turf from '@turf/turf';\nimport { renderControlPoint, difference, computePathPolygon, LANDUSE_TYPE_MAPPING, getAngleByTwoVectorsRadian, RVector3, normalize } from '../../../../../lib';\nimport { AreaPolygon } from '..';\n\n\nexport class Renderer {\n    public host: AreaPolygon;\n    public pathCroppedArea: Path2D\n    constructor(host: AreaPolygon) {\n        this.host = host;\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        // console.log(this.host.capturedVecId, this.host.isSelected, this.host.isHovered);\n        if (this.host.geometry.vs.length > 0) {\n            this.renderCroppedArea(ctx);\n            this.renderProperties(ctx);\n        }\n\n\n        if (this.host.underConstruction || this.host.isHovered || this.host.isSelected) {\n            renderControlPoint(ctx, this.host.geometry.vs);\n            this.renderDim(ctx);\n            if (this.host.isSelected) {\n                this.renderSelected(ctx);\n            }\n        }\n\n\n        if (this.host.capturedVecId > -1) {\n            ctx.beginPath();\n            ctx.arc(this.host.geometry.vs[this.host.capturedVecId].x, this.host.geometry.vs[this.host.capturedVecId].y, 10, 0, Math.PI * 2.0);\n            ctx.closePath();\n            ctx.fill();\n        }\n\n    }\n    public renderCroppedArea(ctx: CanvasRenderingContext2D) {\n\n        if (this.host.geometry.vs.length < 3) {\n            this.pathCroppedArea = new Path2D();\n            this.pathCroppedArea.moveTo(this.host.geometry.vs[0].x, this.host.geometry.vs[0].y);\n            for (let i = 1; i < this.host.geometry.vs.length; ++i) {\n                this.pathCroppedArea.lineTo(this.host.geometry.vs[i].x, this.host.geometry.vs[i].y);\n            }\n            this.pathCroppedArea.closePath();\n            // console.log(this.host.geometry.vs.length);\n            this.host.updateNeeded = true;\n\n        } else {\n            if (this.host.updateNeeded || this.host.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n                const diff = difference(this.host.polygonTurfOriginal, this.host.scene.polygonsDifference, this.host.scene.ids);\n                this.host.polygonTurfSubtracted = diff;\n                this.pathCroppedArea = computePathPolygon(diff, this.host.scene.common.toScreen);\n                this.host.updateNeeded = false;\n                // console.log('updating');\n            }\n        }\n\n\n        ctx.setLineDash([5, 7]);\n        ctx.lineDashOffset = this.host.t;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#fff';\n\n        const op = 0.2 + Math.sin(this.host.t * 0.1) * 0.09;\n        ctx.fillStyle = `rgba(0, 255, 255, ${op} )`;\n\n        ctx.fill(this.pathCroppedArea, 'evenodd');\n        ctx.stroke(this.pathCroppedArea);\n        ctx.setLineDash([]);\n    }\n\n    public renderSelected(ctx: CanvasRenderingContext2D) {\n        ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n        ctx.lineWidth = 1;\n\n        const offset = 13 + Math.sin(this.host.t * 0.2);\n        ctx.beginPath();\n        ctx.moveTo(this.host.geometry.v0.x - offset, this.host.geometry.v0.y + offset);\n        ctx.lineTo(this.host.geometry.v0.x - offset, this.host.geometry.v0.y - offset);\n        ctx.lineTo(this.host.geometry.v0.x + offset, this.host.geometry.v0.y - offset);\n\n        ctx.moveTo(this.host.geometry.v1.x + offset, this.host.geometry.v0.y + offset);\n        ctx.lineTo(this.host.geometry.v1.x + offset, this.host.geometry.v0.y - offset);\n        ctx.lineTo(this.host.geometry.v1.x - offset, this.host.geometry.v0.y - offset);\n\n        ctx.moveTo(this.host.geometry.v1.x + offset, this.host.geometry.v1.y - offset);\n        ctx.lineTo(this.host.geometry.v1.x + offset, this.host.geometry.v1.y + offset);\n        ctx.lineTo(this.host.geometry.v1.x - offset, this.host.geometry.v1.y + offset);\n\n        ctx.moveTo(this.host.geometry.v0.x - offset, this.host.geometry.v1.y - offset);\n        ctx.lineTo(this.host.geometry.v0.x - offset, this.host.geometry.v1.y + offset);\n        ctx.lineTo(this.host.geometry.v0.x + offset, this.host.geometry.v1.y + offset);\n\n        ctx.stroke();\n\n        // ctx.beginPath();\n        // ctx.moveTo(this.host.geometry.vec.x, this.host.geometry.vec.y);\n        // ctx.lineTo(this.host.geometry.vsRect[1].x, this.host.geometry.vec.y);\n        // ctx.stroke();\n    }\n    private renderProperties(ctx: CanvasRenderingContext2D) {\n        if (this.host.geometry.vs.length < 3) { return; }\n        // console.log(this.host.geometry.vs, this.host.polygonTurfSubtracted)\n        // if (this.host.polygonTurfSubtracted === undefined) { return; }\n\n        const area = turf.convertArea(turf.area(this.host.polygonTurfSubtracted), 'meters', 'miles')\n        // console.log(area)\n        const x = this.host.geometry.v0.x + ((this.host.geometry.v1.x - this.host.geometry.v0.x) * 0.5);\n        const y = this.host.geometry.v0.y;\n\n        ctx.textAlign = 'center';\n        ctx.font = '18px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`ID: ${this.host.id.split('-')[0]}`, x, y - 90);\n\n        ctx.fillText(`Area in square miles: ${area.toFixed(5)}`, x, y - 60);\n        // console.log(this.host.cp.x, 50 - this.host.cp.y - this.host.geometry.height * 0.5);\n\n        const pts = turf.pointsWithinPolygon(this.host.scene.points, this.host.polygonTurfSubtracted)\n        // console.log(pts);\n        let r = 0, b = 0, other = 0;\n        for (let i = 0; i < pts.features.length; ++i) {\n            if (pts.features[i].properties['landuse'] === 'R') {\n                r += 1;\n            } else if (pts.features[i].properties['landuse'] === 'B') {\n                b += 1;\n            } else {\n                other += 1;\n            }\n        }\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.R.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.R.text}: ${r},`, x - 120, y - 25);\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.B.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.B.text}: ${b},`, x + 28, y - 25);\n\n        ctx.fillStyle = 'rgb(0, 128, 0)';\n        ctx.fillText(`Other: ${other}`, x + 140, y - 25);\n        // console.log(r, b, other)\n\n        // ctx.fillStyle = LANDUSE_TYPE_MAPPING.R.color\n        // ctx.fillText(`${LANDUSE_TYPE_MAPPING.R.text}: ${r},`, this.host.vec.x - 120, this.host.vec.y - 25 - this.host.geometry.height * 0.5);\n\n        // ctx.fillStyle = LANDUSE_TYPE_MAPPING.B.color\n        // ctx.fillText(`${LANDUSE_TYPE_MAPPING.B.text}: ${b},`, this.host.vec.x + 28, this.host.vec.y - 25 - this.host.geometry.height * 0.5);\n\n        // ctx.fillStyle = 'rgb(0, 128, 0)';\n        // ctx.fillText(`Other: ${other}`, this.host.vec.x + 140, this.host.vec.y - 25 - this.host.geometry.height * 0.5);\n    }\n    private renderDim(ctx: CanvasRenderingContext2D) {\n        ctx.textAlign = 'center';\n        ctx.font = '14px arial';\n        ctx.fillStyle = '#fff';\n\n        const vs = this.host.geometry.vs;\n\n        let v0 = new RVector3(1, 0, 0);\n\n        for (let i = 0; i < vs.length - 1; ++i) {\n\n            let line = turf.lineString([[vs[i].lng, vs[i].lat], [vs[1 + i].lng, vs[1 + i].lat]]);\n            let length = turf.length(line, { units: 'miles' });\n            let x = vs[i].x + ((vs[i + 1].x - vs[i].x) * 0.5);\n            let y = vs[i].y + ((vs[i + 1].y - vs[i].y) * 0.5);\n\n            let v1 = normalize(new RVector3(vs[i].x - vs[i + 1].x, vs[i].y - vs[i + 1].y, 0));\n            let deg = getAngleByTwoVectorsRadian(v0, v1);\n\n            if (vs[i].y < vs[i + 1].y) {\n                deg *= -1;\n            }\n            // console.log(deg)\n\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(deg);\n            ctx.fillText(`${length.toFixed(5)} mi`, 0, 0);\n            ctx.restore();\n        }\n\n        if (vs.length > 2) {\n            let line = turf.lineString([[vs[vs.length - 1].lng, vs[vs.length - 1].lat], [vs[0].lng, vs[0].lat]]);\n            let length = turf.length(line, { units: 'miles' });\n            let x = vs[vs.length - 1].x + ((vs[0].x - vs[vs.length - 1].x) * 0.5);\n            let y = vs[vs.length - 1].y + ((vs[0].y - vs[vs.length - 1].y) * 0.5);\n\n            let v1 = normalize(new RVector3(vs[vs.length - 1].x - vs[0].x, vs[vs.length - 1].y - vs[0].y, 0));\n            let deg = getAngleByTwoVectorsRadian(v0, v1);\n\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(deg);\n            ctx.fillText(`${length.toFixed(5)} mi`, 0, 0);\n            ctx.restore();\n        }\n    }\n}","import * as turf from '@turf/turf';\n\nimport { AreaPolygon } from '..';\n\n\nexport class Transform {\n    public host: AreaPolygon;\n    public pathCroppedArea: Path2D\n    constructor(host: AreaPolygon) {\n        this.host = host;\n    }\n    public translate(x: number, y: number): void {\n        this.host.captureNeeded = true;\n\n        const preX = this.host.scene.solution.activeCommander.mp[0] - this.host.scene.solution.activeCommander.mpPre[0];\n        const preY = this.host.scene.solution.activeCommander.mp[1] - this.host.scene.solution.activeCommander.mpPre[1];\n\n        if (this.host.capturedVecId > -1) {\n\n            // if (this.host.capturedVecId < this.host.geometry.vsRect.length) {\n            this.host.geometry.vs[this.host.capturedVecId].x += preX;\n            this.host.geometry.vs[this.host.capturedVecId].y += preY;\n            // }\n\n\n            this.host.updateGeoProjection();\n            return;\n        }\n\n        // this.host.vec.x += preX;\n        // this.host.vec.y += preY;\n        for (let i = 0; i < this.host.geometry.vs.length; ++i) {\n            this.host.geometry.vs[i].x += preX;\n            this.host.geometry.vs[i].y += preY;\n        }\n\n        this.host.updateGeoProjection();\n    }\n}","import * as turf from '@turf/turf';\n\nimport { TYPE_GEOMETRY } from 'njslab/Project/Project_15_Ready/01_ISP_inspector/lib';\nimport { Scene } from '../../../../Scene';\nimport { GeometryBase } from '../Base/GeometryBase';\nimport { AreaPolygonGeometry } from './Geometry';\nimport { Renderer } from './Renderer';\nimport { Transform } from './Transform';\nimport { isInsideOfVecs, distance, RVector3 } from '../../../../lib';\n\nexport class AreaPolygon extends GeometryBase {\n    public renderer: Renderer;\n    public transform: Transform;\n    public geometry: AreaPolygonGeometry;\n\n    public underConstruction = true;\n    constructor(scene: Scene, vs: RVector3[] | undefined = undefined) {\n        super(scene)\n\n        this.TYPE = TYPE_GEOMETRY.POLYGON;\n        this.geometry = new AreaPolygonGeometry();\n        this.renderer = new Renderer(this);\n        this.transform = new Transform(this);\n\n        if (vs !== undefined) {\n            this.fromJson(vs);\n        }\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.renderer.renderPost(ctx);\n\n        if (this.hasAnimation) {\n            this.t += 0.2;\n        }\n    }\n    public isInside(x: number, y: number) {\n        const mVec = new RVector3(x, y);\n        this.capturedVecId = -1;\n\n        for (let i = 0; i < this.geometry.vs.length; ++i) {\n            if (distance(this.geometry.vs[i], (mVec)) < 12) {\n                this.capturedVecId = i;\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        if (isInsideOfVecs(mVec, this.geometry.vs)) {\n            this.isHovered = true;\n            return true;\n        }\n\n        this.isHovered = false;\n        return false;\n    }\n    public translate(x: number, y: number): void {\n        this.transform.translate(x, y);\n    }\n    public update(): void {\n        if (this.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n            this.geometry.updateScreen(this.scene.common.toScreen);\n        }\n    }\n    public onMouseClick(e) {\n\n        if (this.underConstruction) {\n            if (this.geometry.vs.length === 0) {\n                this.geometry.push(e.point.x, e.point.y, e.lngLat.lng, e.lngLat.lat);\n                this.geometry.push(e.point.x, e.point.y, e.lngLat.lng, e.lngLat.lat);\n            } else {\n                this.geometry.push(e.point.x, e.point.y, e.lngLat.lng, e.lngLat.lat);\n            }\n            if (this.geometry.vs.length > 2) {\n                this.geometry.updateCenterVec();\n                this.updatePolygonTurf();\n            }\n        } else {\n\n            // console.log(this.capturedVecId);\n            if (this.capturedVecId > -1) {\n                this.isSelected = true;\n                return;\n            }\n\n            // if (this.isHovered) {\n                // this.isSelected = true;\n            if (this.insertPt(e.point.x, e.point.y)) {\n                this.isSelected = true;\n                return;\n            }\n            //     return;\n            // }\n\n            this.isSelected = !this.isSelected;\n\n\n        }\n    }\n    public insertPt(x: number, y: number) {\n        return this.geometry.insertVec(x, y);\n    }\n    public updateGhostPos(x: number, y: number) {\n        if (this.geometry.vs.length === 0) { return; }\n        this.geometry.vs[this.geometry.vs.length - 1].x = x;\n        this.geometry.vs[this.geometry.vs.length - 1].y = y;\n\n        const mp = this.scene.common.toMap(x, y);\n        this.geometry.vs[this.geometry.vs.length - 1].lng = mp[0];\n        this.geometry.vs[this.geometry.vs.length - 1].lat = mp[1];\n\n        if (this.geometry.vs.length > 2) {\n            this.geometry.updateCenterVec();\n            this.updatePolygonTurf();\n        }\n    }\n    public onMouseDoubleClick(e) {\n        this.removeVertexLastVertex();\n        this.removeVertexLastVertex();\n        this.updateGeoProjection();\n        this.underConstruction = false;\n        this.scene.captured = undefined;\n        this.scene.common.captureScene();\n    }\n    public onMouseUp() {\n\n        if (this.isHovered) {\n            this.capturedVecId = -1;\n            this.updateGeoProjection();\n            // if ()\n            // console.log(this.isSelected);\n            if (this.captureNeeded) {\n                this.scene.common.captureScene();\n                this.captureNeeded = false;\n            }\n        }\n    }\n\n    public removeVertexLastVertex(): void {\n        this.geometry.removeLast();\n        if (this.geometry.vs.length < 2) {\n            this.remove();\n        }\n        // console.log(this.geometry.cv);\n        this.updatePolygonTurf()\n    }\n    public updateGeoProjection() {\n        this.geometry.updateProjection(this.scene.common.toMap);\n        this.updatePolygonTurf();\n\n    }\n    private updatePolygonTurf() {\n        if (this.geometry.vs.length < 3) { return; }\n        const pts = [];\n        for (let i = 0; i < this.geometry.vs.length; i++) {\n            pts.push([this.geometry.vs[i].lng, this.geometry.vs[i].lat]);\n        }\n        pts.push([this.geometry.vs[0].lng, this.geometry.vs[0].lat]);\n\n\n        this.polygonTurfOriginal = turf.polygon([pts]);\n        this.updateNeeded = true;\n        // console.log('updatePolygonTurf')\n    }\n    public toJson() {\n        return {\n            TYPE: this.TYPE,\n            vs: this.geometry.toJson(),\n        };\n    }\n    public fromJson(vs: RVector3[]) {\n        for (let i = 0; i < vs.length; ++i) {\n            const sp = this.scene.common.toScreen(vs[i].lng, vs[i].lat);\n            const v = new RVector3(sp[0], sp[1], 0);\n            v.lng = vs[i].lng;\n            v.lat = vs[i].lat;\n            this.geometry.vs.push(v);\n        }\n        this.updatePolygonTurf();\n    }\n    public remove(): void {\n        if (this.capturedVecId > -1) {\n            this.geometry.removeVecByIndex(this.capturedVecId);\n            this.updateGeoProjection();\n            this.capturedVecId = -1;\n            return;\n        }\n        this.scene.remove(this);\n    }\n}","import { getJSONFromURL } from 'njscore';\nimport { GeometryBase } from '../RendererWrapper/CanvasCustom/Geometry/Base/GeometryBase';\nimport { Area, AreaPolygon } from '../RendererWrapper/CanvasCustom/Geometry';\nimport { TYPE_GEOMETRY } from '../lib'\nimport { Solution } from '../';\n\nexport class ACCommon {\n    public solution: Solution;\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n    public renderForceWithUpdate() {\n        this.solution.rendererWrapper.renderer.renderForce();\n\n        for (let i = 0; i < this.solution.scene.areas.length; ++i) {\n            this.solution.scene.areas[i].updateNeeded = true;\n        }\n    }\n    public downloadScreen() {\n        this.solution.rendererWrapper.downloadScreen();\n    }\n    public enablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.enable();\n    }\n    public disablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.disable();\n    }\n    public zoom = (z: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.zoom(z)\n    }\n    public flyTo = (lng: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.flyTo(lng, lat)\n    }\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.center(lng, lat);\n    }\n    public toMap = (x: number, y: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toMap(x, y);\n    }\n    public toScreen = (lon: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toScreen(lon, lat);\n    }\n    public async loadDataLocal(path = 'funded_census_blocks.geojson') {\n        return getJSONFromURL(process.env.PUBLIC_URL + '/static/dataDummyReady/' + path);\n    }\n\n    public addScatterLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addScatterLayer(data);\n    }\n    public addArcLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addArcLayer(data);\n    }\n    public addPolygonLayer(data: any, onClick: (info, event) => void) {\n        return this.solution.rendererWrapper.deckGL.addPolygonLayer(data, onClick);\n    }\n    public addShape(type = TYPE_GEOMETRY.RECT) {\n        this.renderForce();\n        if (type === TYPE_GEOMETRY.POLYGON) {\n            this.solution.scene.captured = new AreaPolygon(this.solution.scene);\n            this.solution.activeCommander.drawMode = true;\n\n        } else {\n            const mp = this.toMap(this.solution.rendererWrapper.renderer.canvas.width * 0.5, this.solution.rendererWrapper.renderer.canvas.height * 0.5);\n            new Area(this.solution.scene, mp[0], mp[1], 200, 200);\n        }\n        this.captureScene();\n    }\n    public shiftShapeType() {\n        if (this.solution.scene.areas.length > 0) {\n\n            for (let i = 0; i < this.solution.scene.areas.length; ++i) {\n                if (this.solution.scene.areas[i].TYPE !== TYPE_GEOMETRY.POLYGON && this.solution.scene.areas[i].isSelected) {\n                    this.solution.scene.areas[i].shiftType();\n                }\n            }\n\n            this.captureScene();\n        }\n    }\n    public toggleAnimation() {\n        // this.solution.scene.captured.hasAnimation = !this.solution.scene.captured.hasAnimation;\n        for (let i = 0; i < this.solution.scene.areas.length; ++i) {\n            if (this.solution.scene.areas[i].isSelected) {\n                this.solution.scene.areas[i].hasAnimation = !this.solution.scene.areas[i].hasAnimation;\n            }\n        }\n    }\n    public deSelectedAll() {\n        for (let i = 0; i < this.solution.scene.areas.length; ++i) {\n            this.solution.scene.areas[i].isSelected = false;\n        }\n    }\n    public removeSelected() {\n        for (let i = 0; i < this.solution.scene.areas.length; ++i) {\n            if (this.solution.scene.areas[i].isSelected) {\n                this.solution.scene.areas[i].remove();\n            }\n        }\n    }\n    public checkHoverArea(x: number, y: number): GeometryBase | undefined {\n\n        for (let i = 0; i < this.solution.scene.areas.length; ++i) {\n            if (this.solution.scene.areas[i].isInside(x, y)) {\n                return this.solution.scene.areas[i];\n            }\n        }\n        return undefined;\n    }\n    public pickObject(obj: any) {\n        // console.log('index', obj.index);\n        // console.log(obj);\n    }\n    public getViewState() {\n        return this.solution.rendererWrapper.mapBoxWrapper.getViewState();\n    }\n    public getData() {\n        let areas = [];\n        //  console.log(this.solution.scene.areas);\n\n        for (let i = 0; i < this.solution.scene.areas.length; ++i) {\n            areas.push(this.solution.scene.areas[i].toJson())\n        }\n\n        return {\n            areas: areas,\n            extent: this.getViewState()\n        }\n    }\n    public captureScene() {\n        return this.solution.scene.stateManager.captureState();\n    }\n    public onExtentDone() {\n        // this.captureScene();\n    }\n    public renderForce() {\n        this.solution.rendererWrapper.renderer.renderForce();\n    }\n    public undo() {\n        this.renderForce();\n        return this.solution.scene.stateManager.undo();\n    }\n    public redo() {\n        this.renderForce();\n        return this.solution.scene.stateManager.redo();\n    }\n    public populateArea(data: any) {\n        this.solution.scene.areas = []\n\n        for (let i = 0; i < data.areas.length; ++i) {\n\n            const area = data.areas[i];\n            if (area.TYPE !== TYPE_GEOMETRY.POLYGON) {\n                const p0 = this.toScreen(area.vs[0].lng, area.vs[0].lat);\n                const p1 = this.toScreen(area.vs[1].lng, area.vs[1].lat);\n\n                const width = Math.abs(p1[0] - p0[0]);\n                const height = Math.abs(p1[1] - p0[1]);\n\n                // // console.log(width, height)\n\n                const lng = (area.vs[0].lng + area.vs[1].lng) * 0.5;\n                const lat = (area.vs[0].lat + area.vs[1].lat) * 0.5;\n\n                new Area(this.solution.scene, lng, lat, width, height, TYPE_GEOMETRY[area.TYPE]);\n            } else {\n                const pg = new AreaPolygon(this.solution.scene, area.vs);\n                pg.underConstruction = false;\n\n            }\n        }\n        this.solution.activeCommander.drawMode = false;\n        this.solution.scene.captured = undefined;\n\n        if (data.extent) {\n            this.center(data.extent.center['lng'], data.extent.center['lat']);\n            this.zoom(data.extent.zoom);\n        }\n        // console.log(this);\n    }\n}","import { Solution } from '../'\n\nexport class ActiveCommander {\n    public solution: Solution;\n    public mp = [0, 0, 0, 0];\n    public mpPre = [0, 0, 0, 0];\n    public drawMode: boolean = false;\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n    private updateMousePos(e) {\n        this.mp[0] = e.point.x;\n        this.mp[1] = e.point.y;\n        this.mp[2] = e.lngLat.lng;\n        this.mp[3] = e.lngLat.lat;\n    }\n    public updateMousePrePos() {\n        this.mpPre[0] = this.mp[0];\n        this.mpPre[1] = this.mp[1];\n        this.mpPre[2] = this.mp[2];\n        this.mpPre[3] = this.mp[3];\n    }\n    public mouseDown = (e) => {\n        this.solution.common.renderForce();\n        this.updateMousePos(e);\n\n        if (this.drawMode) { return; }\n\n        this.solution.scene.captured = this.solution.common.checkHoverArea(this.mp[0], this.mp[1]);\n\n        if (this.solution.scene.captured) {\n            this.solution.common.disablePan();\n        }\n        // this.solution.scene.captured = this.solution.scene.areas;\n\n        // }\n        // TODO\n    }\n    public mouseUp = (e) => {\n        this.updateMousePos(e);\n        if (this.drawMode) { return; }\n\n        this.solution.common.enablePan();\n        this.solution.scene.captured?.onMouseUp();\n        this.solution.scene.captured = undefined;\n\n        // TODO\n    }\n    public mouseDClick = (e) => {\n        this.drawMode = false;\n        this.solution.scene.captured?.onMouseDoubleClick(e);\n        this.solution.rendererWrapper.mapBoxWrapper.map.doubleClickZoom.enable();\n\n    }\n    public mouseDrag = (e) => {\n        this.solution.common.renderForce();\n        this.updateMousePos(e);\n        if (this.solution.scene.captured) {\n            this.solution.scene.captured.translate(e.point.x, e.point.y);\n        }\n        // TODO\n        this.updateMousePrePos();\n    }\n    public mouseClick = (e) => {\n        this.updateMousePos(e);\n        if (this.drawMode) {\n            this.solution.scene.captured.onMouseClick(e);\n            this.solution.rendererWrapper.mapBoxWrapper.map.doubleClickZoom.disable();\n            // console.log('d', this.solution.rendererWrapper.mapBoxWrapper.map.doubleClickZoom.isEnabled());\n            return;\n        }\n\n\n        this.solution.scene.captured = this.solution.common.checkHoverArea(this.mp[0], this.mp[1]);\n\n        if (this.solution.scene.captured) {\n            // this.solution.scene.captured.isSelected = !this.solution.scene.captured.isSelected;\n            this.solution.scene.captured.onMouseClick(e);\n        } else {\n            this.solution.common.deSelectedAll();\n        }\n        // console.log(this.solution.scene.captured);\n        // TODO\n        // console.log(e);\n        // console.log(e['lngLat']);\n        this.solution.rendererWrapper.renderer.pts.push([e['lngLat']['lng'], e['lngLat']['lat']])\n        // this.renderer.pts.push([e.point.x, e.point.y])\n    }\n    public mouseMove = (e) => {\n        this.solution.common.renderForce();\n        this.updateMousePos(e);\n        if (this.drawMode && this.solution.scene.captured) {\n            this.solution.scene.captured.updateGhostPos(this.mp[0], this.mp[1]);\n\n            return;\n        }\n\n        this.solution.common.checkHoverArea(this.mp[0], this.mp[1]);\n\n        // console.log(e)\n\n        // TODO\n        this.updateMousePrePos();\n    }\n    public keyDown(k: KeyboardEvent) {\n        // TODO\n        // console.log(k);\n        switch (k.key) {\n            case 'Backspace':\n\n                if (this.drawMode && this.solution.scene.captured) {\n                    this.solution.scene.captured.removeVertexLastVertex();\n                    return;\n                }\n\n                this.solution.common.removeSelected();\n                this.solution.common.captureScene();\n                break;\n\n            default:\n                break;\n        }\n        this.solution.common.renderForce();\n    }\n}","import mapboxgl from \"mapbox-gl\";\r\nimport { RendererWrapper } from '../';\r\n\r\nimport { downloadImage } from '../../lib';\r\n\r\nexport class MapboxGLWrapper {\r\n    public rendererWrapper: RendererWrapper;\r\n    public map: mapboxgl.Map;\r\n    public canvasMapbox;\r\n    private isPressed: boolean = false;\r\n    constructor(rendererWrapper: RendererWrapper) {\r\n        this.rendererWrapper = rendererWrapper;\r\n\r\n        this.initMap(rendererWrapper.solution.divHost.id);\r\n    }\r\n    private initMap(id: string) {\r\n        // https://account.mapbox.com\r\n        mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        this.map = new mapboxgl.Map({\r\n            preserveDrawingBuffer: true,\r\n            container: id,\r\n            zoom: 3,\r\n            // pitch: 30,\r\n            // minZoom: 10,\r\n            // center: [-74.5, 40],\r\n            center: [-77.430815, 37.801833],\r\n            doubleClickZoom: false,\r\n            style: 'mapbox://styles/mapbox/dark-v10' // 'mapbox://styles/mapbox/streets-v11'\r\n\r\n        });\r\n        this.map.doubleClickZoom.disable();\r\n        this.map.dragRotate.disable();\r\n\r\n        this.map.on('moveend', () => { this.rendererWrapper.solution.common.onExtentDone(); });\r\n        this.map.on('zoom', () => { this.rendererWrapper.solution.common.renderForce(); });\r\n        this.map.on('click', 'polygon', (e: any) => { this.rendererWrapper.solution.common.pickObject(e) });\r\n\r\n        // https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent#type\r\n        this.map.on('mousemove', (e: mapboxgl.MapMouseEvent) => {\r\n            if (this.isPressed) {\r\n                this.mouseDrag(e);\r\n            } else {\r\n                this.mouseMove(e);\r\n            }\r\n        });\r\n        this.map.on('click', (e: mapboxgl.MapMouseEvent) => { this.mouseClick(e); });\r\n        this.map.on('mousedown', (e: mapboxgl.MapMouseEvent) => { this.isPressed = true; this.mouseDown(e); });\r\n        this.map.on('dblclick', (e: mapboxgl.MapMouseEvent) => { this.mouseDClick(e); });\r\n        this.map.on('mouseup', (e: mapboxgl.MapMouseEvent) => { this.isPressed = false; this.mouseUp(e); });\r\n        window.addEventListener('keydown', (k) => { this.keyDown(k) });\r\n\r\n        let div = document.getElementsByClassName('mapboxgl-canvas')[0] as HTMLDivElement;\r\n        div.style.position = 'absolute';\r\n\r\n        div = document.getElementsByClassName('mapboxgl-control-container')[0] as HTMLDivElement;\r\n        div.style.display = 'none';\r\n\r\n        this.map.on('load', () => { this.initPost(); });\r\n    }\r\n    public initPost() {\r\n        this.rendererWrapper.initPost();\r\n        this.canvasMapbox = this.map.getCanvas();\r\n    }\r\n\r\n    public initCustomCanvas() {\r\n        this.rendererWrapper.renderer.canvas.width = this.canvasMapbox.width;\r\n        this.rendererWrapper.renderer.canvas.height = this.canvasMapbox.height;\r\n\r\n        this.rendererWrapper.renderer.canvas.style.display = 'none';\r\n\r\n        const bound: any = this.map.getBounds();\r\n        // console.log(bound);\r\n\r\n        this.map.addSource('canvas-source', {\r\n            type: 'canvas',\r\n            canvas: this.rendererWrapper.renderer.canvas,\r\n            coordinates: [\r\n\r\n                // [ 180, 90],\r\n                // [ 180, -90],\r\n                // [ -180, -90], \r\n                // [ -180, 90]\r\n\r\n\r\n                // [bound._sw[0], bound._sw[1]],\r\n                // [bound._sw[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._sw[1]],\r\n\r\n                [-125.618336, 48.944262],\r\n                [-125.618336, 24.786775],\r\n                [-65.591812, 24.786775],\r\n                [-65.591812, 48.944262]\r\n\r\n                // [91.4461, 21.5006],\r\n                // [100.3541, 21.5006],\r\n                // [100.3541, 13.9706],\r\n                // [91.4461, 13.9706]\r\n            ],\r\n            // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\r\n            animate: true\r\n        });\r\n\r\n        this.map.addLayer({\r\n            id: 'canvas-layer',\r\n            type: 'raster',\r\n            source: 'canvas-source'\r\n        });\r\n\r\n    }\r\n    public zoom = (z: number) => {\r\n        // this.map.setZoom(z);\r\n        // return this.map.zoomTo(z, {animate:true} )\r\n        return this.map.zoomTo(z)\r\n    }\r\n    public flyTo = (lng: number, lat: number) => {\r\n        return this.map.flyTo({\r\n            center: [lng, lat],\r\n            // duration: 1200, // Animate over 12 seconds\r\n            // essential: true\r\n        });\r\n    }\r\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\r\n        // const v = new mapboxgl.LngLat(lng, lat);\r\n        // console.log(v);\r\n        return this.map.setCenter({ lat, lng })\r\n    }\r\n    public toMap = (x: number, y: number) => {\r\n        const p = this.map.unproject({ x, y } as any)\r\n        return [p.lng, p.lat];\r\n    }\r\n    public toScreen = (lon: number, lat: number) => {\r\n        try {\r\n            const p = this.map.project([lon, lat])\r\n            return [p.x, p.y];\r\n        } catch (error) {\r\n            // console.error(error)\r\n        }\r\n        return [-1, -1];\r\n    }\r\n    public downloadImage() {\r\n        const canvasMapbox = this.map.getCanvas();\r\n        return downloadImage(canvasMapbox, this.rendererWrapper.renderer.canvas);\r\n    }\r\n    public getViewState() {\r\n        const center = this.map.getCenter();\r\n        // console.log(center);\r\n        return {\r\n            zoom: this.map.getZoom(),\r\n            center: center,\r\n        };\r\n    }\r\n    public mouseDown = (e) => { }\r\n    public mouseUp = (e) => { }\r\n    public mouseMove = (e) => { }\r\n    public mouseDrag = (e) => { }\r\n    public mouseClick = (e) => { }\r\n    public mouseDClick = (e) => { }\r\n    public keyDown = (e) => { }\r\n}\r\n","export * from './util/ColorUtil';\nexport * from './util/VectorUtil';\nexport * from './util/Math'\nexport * from './util/TurfUtil'\nexport * from './DrawingPreest';\nexport * from './constant';\nexport * from './SceneManager';\n\nexport const downloadImage = (canvasMapbox, customCanvas, fileName = 'map.png') => {\n    let canvasOut = document.createElement(\"canvas\");\n    canvasOut.width = canvasMapbox.width;\n    canvasOut.height = canvasMapbox.height;\n    let context = canvasOut.getContext(\"2d\");\n\n    // context.globalAlpha = 1.0;\n    context.globalAlpha = 1.0;\n    // context.drawImage(this.deckLayer.deck.canvas, 0, 0);\n    context.drawImage(canvasMapbox, 0, 0);\n    // context.drawImage(this.solution.renderer.canvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n    context.drawImage(customCanvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n\n    let img = new Image();\n    img.width = canvasMapbox.width;\n    img.height = canvasMapbox.height;\n    img.src = canvasOut.toDataURL();\n\n    let link = document.createElement('a');\n    link.download = fileName;\n    link.href = canvasOut.toDataURL();\n    link.click();    \n};\n\n","import { MapboxLayer } from '@deck.gl/mapbox';\nimport { ScatterplotLayer, ArcLayer, PolygonLayer } from '@deck.gl/layers';\n\nimport { RendererWrapper } from '../';\n\nexport class DeckGL {\n    public rendererWrapper: RendererWrapper;\n    public map: mapboxgl.Map;\n    public layers: MapboxLayer[] = [];\n    constructor(rendererWrapper: RendererWrapper) {\n        this.rendererWrapper = rendererWrapper;\n        this.map = this.rendererWrapper.mapBoxWrapper.map;\n    }\n    public initPost() {\n        // TODO:\n    }\n    // [ {position: [-74.5, 40], size: 10000}, ]\n    public addScatterLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `scatter-${this.layers.length}`,\n            type: ScatterplotLayer,\n            data: data,\n            // @ts-ignore\n            getPosition: d => d.position,\n            getRadius: d => d.size,\n            getFillColor: d => {\n                if (d.color !== undefined) {\n                    return d.color;\n                } else {\n                    return [255, 255, 0];\n                }\n            },\n            getLineColor: d => [255, 255, 255],\n            onClick: (info, event) => console.log('Clicked:', info, event)\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    // https://deck.gl/docs/api-reference/layers/polygon-layer\n    public addPolygonLayer(data: any, onClick: (info, event) => void) {\n        const deckLayer = new MapboxLayer({\n            id: `polygon-${this.layers.length}`,\n            type: PolygonLayer,\n            data: data,\n            // @ts-ignore\n            pickable: true,\n            // @ts-ignore\n            stroked: true,\n            filled: true,\n            wireframe: true,\n            lineWidthMinPixels: 1,\n            getPolygon: d => d.contour,\n            getElevation: d => 1, //d.population / d.area / 10,\n            getFillColor: d => d.color, // [100, 100, 100], // [d.population / d.area / 60, 140, 0],\n            getLineColor: d => [0, 0, 0],\n            getLineWidth: 1,\n            onClick: (info, event) => {\n                // console.log('Clicked:', info, event)\n                // console.log(info.index)\n                onClick(info, event);\n            }\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    public addArcLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `arc-${this.layers.length}`,\n            type: ArcLayer,\n            data: data,\n            // @ts-ignore\n            getSourcePosition: d => d.pickup,\n            getTargetPosition: d => d.dropoff,\n            getSourceColor: d => [255, 128, 0],\n            getTargetColor: d => [0, 128, 255],\n            strokeWidth: 5\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    private addLayer(deckLayer: MapboxLayer, label: string = 'waterway-label') {\n        this.map.addLayer(deckLayer, label);\n        this.layers.push(deckLayer)\n    }\n    public pick() {\n        // this.map.getob\n    }\n}","export class Deltatime {\n    public now: number;\n    public delta: number;\n    public frameRate: number;\n\n    private last: number = 0;\n    private timeLastRender: number;\n    msLoop: number;\n    constructor() {\n        //\n    }\n    public UpdateFPS() {\n        this.now = window.performance.now();\n        this.msLoop = this.now - this.last;\n        this.last = this.now;\n\n        this.delta = this.delta + Math.min(1, (this.msLoop) / 1000);\n\n        if (this.delta > this.frameRate) { this.delta = this.delta - this.frameRate; }\n\n        this.delta = (Date.now() - this.timeLastRender) / 1000;\n        this.timeLastRender = Date.now();\n        this.frameRate = (1 / this.delta);\n\n    }\n    public get dt() {\n        return this.delta;\n    }\n}\n\nexport class RendererCanvasDynamicLight {\n    public divHost: HTMLDivElement;\n    public canvas: HTMLCanvasElement;\n    public ctx: CanvasRenderingContext2D;\n    public isDown: boolean = false;\n    public debugMode: boolean = false;\n    public isStatic: boolean = false;\n    public log: string = '';\n\n    private prevent: boolean = false;\n    private animation: boolean = false;\n    private delay: number = 90;\n\n    private frameNum = 1;\n    private timer: NodeJS.Timer | number;\n    private isDrag: boolean = false;\n\n    deltaTime: Deltatime;\n\n    constructor(div: HTMLDivElement) {\n        this.divHost = div;\n        this.deltaTime = new Deltatime();\n        const bounding = this.divHost.getBoundingClientRect();\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\n        // this.canvas.style.position = 'absolute';\n        this.canvas.width = bounding.width;\n        this.canvas.height = bounding.height;\n        this.divHost.appendChild(this.canvas);\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n        this.canvas.onclick = (e: MouseEvent) => {\n            this.timer = setTimeout(() => {\n                if (!this.prevent) {\n                    this.mouseClick(e.offsetX, e.offsetY);\n                }\n                this.isDrag = false;\n                this.prevent = false;\n            },\n                this.delay);\n        };\n        this.canvas.onwheel = (e: WheelEvent) => {\n            this.mouseWheel(e);\n        };\n        this.canvas.ondblclick = (e: MouseEvent) => {\n            clearTimeout(this.timer as number);\n            this.prevent = true;\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\n        };\n        this.canvas.onmousedown = (e: MouseEvent) => {\n            this.isDown = true;\n            this.mouseDown(e.offsetX, e.offsetY);\n        };\n        this.canvas.onmouseup = (e: MouseEvent) => {\n            this.isDown = false;\n            this.isDrag = false;\n            this.mouseUp(e.offsetX, e.offsetY);\n        };\n        this.canvas.onmousemove = (e: MouseEvent) => {\n            if (this.isDown) {\n                this.isDrag = true;\n                this.prevent = true;\n                this.mouseDrag(e.offsetX, e.offsetY);\n            } else {\n                this.mouseMove(e.offsetX, e.offsetY);\n            }\n        };\n        window.addEventListener('resize', this.resize);\n        // this.loop(this.ctx);\n    }\n    public start = () => {\n        this.loop(this.ctx);\n    }\n    private resize = () => {\n        const bounding = this.divHost.getBoundingClientRect();\n        this.canvas.width = bounding.width;\n        this.canvas.height = bounding.height;\n    }\n    public destroy() {\n        window.removeEventListener('resize', this.resize);\n        this.isStatic = true;\n        try {\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\n                this.divHost.removeChild(this.divHost.lastElementChild);\n            }\n        } catch (error) { }\n    }\n    public loop = (ctx: CanvasRenderingContext2D) => {\n        if (this.isStatic) { return; }\n        let before = performance.now();\n        requestAnimationFrame(() => { this.loop(ctx); });\n        \n        this.deltaTime.UpdateFPS();\n        if (this.frameNum++ < 300 || this.animation) {\n            this.renderPre(ctx);\n        }\n        let after = performance.now();\n        this.log = `total frames: ${this.frameNum++} (FPS: ${this.deltaTime.frameRate.toFixed(0)}), a loop took: ${(after - before).toFixed(2)} ms to execute.`;\n    }\n    public renderForce = () => {\n        this.frameNum = 0;\n    }\n    public renderPre(ctx: CanvasRenderingContext2D) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        this.render(ctx);\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        // Binding needed\n    }\n    public mouseClick(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('click'); }\n    }\n    public mouseDoubleClick(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('d-click'); }\n    }\n    public mouseDown(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('down'); }\n    }\n    public mouseUp(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('up'); }\n    }\n    public mouseMove(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('move'); }\n    }\n    public mouseDrag(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('drag'); }\n    }\n    public mouseWheel(v: WheelEvent) {\n        // Binding needed\n        if (this.debugMode) { console.log('wheel', v); }\n    }\n}","import { RendererCanvasDynamicLight } from './CanvasDynamic';\nimport { RendererWrapper } from '../';\n\nexport class Renderer extends RendererCanvasDynamicLight {\n    public rendererWrapper: RendererWrapper\n    public time: number = 0.0;\n    public pts: number[][] = [];\n    public isActive = false;\n\n    public log: string;\n    public needRenderLoop: boolean = true;\n    public loopNum: number = 0;\n    private loopNumMax = 90;\n\n    constructor(div: any, rendererWrapper: RendererWrapper) {\n        super(div);\n        this.rendererWrapper = rendererWrapper;\n        this.canvas.id = 'mapboxCustom'\n\n        // const dd = app.mapboxWrapper.map.getCanvas();\n\n        // this.canvas.width = dd.width;\n        // this.canvas.height = dd.height;\n        this.canvas.style.position = 'absolute';\n        // this.canvas.style.width = '100%';\n        // this.canvas.style.height = '100%';\n        this.canvas.style.pointerEvents = 'none';\n        // this.canvas.style.mixBlendMode = 'color-dodge'\n        \n        this.start();\n    }\n    public initPost() {\n        // this.ctx.globalCompositeOperation = 'color-dodge';\n        this.isActive = true;\n        // this.render(this.ctx);\n    }\n    public render(ctx: CanvasRenderingContext2D): void {\n        if (!this.isActive) { return; }\n        this.time += 0.1;\n\n        this.rendererWrapper.solution.scene.renderCanvas(ctx);\n\n        let pointRenderNeeded = false;\n        if (pointRenderNeeded) { this.renderPoint(ctx); }\n\n        // console.log(this.log);\n        this.renderLog(ctx);\n    }\n    public renderLog(ctx: CanvasRenderingContext2D) {\n        ctx.textAlign = 'center';\n        ctx.font = '14px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`Lat: ${this.rendererWrapper.solution.activeCommander.mp[1].toFixed(5)},  Lng: ${this.rendererWrapper.solution.activeCommander.mp[0].toFixed(5)}`, (this.canvas.width * 0.5), 50);\n        // ctx.stroke()\n    }\n    public renderPoint(ctx: CanvasRenderingContext2D) {\n        const z = this.rendererWrapper.mapBoxWrapper.map.getZoom();\n        const zoomFactor = Math.pow(2, z) * 0.1\n\n        for (let i = 0; i < this.pts.length; ++i) {\n            const pt = this.pts[i];\n            const p = this.rendererWrapper.mapBoxWrapper.toScreen(pt[0], pt[1]);\n            // const p = this.app.mapboxWrapper.map.unproject({x: 10, y: 10})\n\n            const size = 0.001 * zoomFactor;\n\n            ctx.beginPath();\n            ctx.arc(p[0], p[1], size + ((Math.sin(this.time + i) + 3) / zoomFactor), 0, Math.PI * 2);\n            // ctx.arc(p[0], p[1], size + (size * (Math.sin(this.time + i) + 3) * zoomFactor / 10 ), 0, Math.PI * 2);\n            ctx.closePath();\n            ctx.fillStyle = 'rgba(0, 255, 0, 0.7)';\n            ctx.fill();\n        }\n    }\n}","import { MapboxGLWrapper } from './MapboxGLWrapper';\nimport { DeckGL } from './DeckGL';\nimport { Renderer } from './CanvasCustom';\nimport { Solution } from '../';\n\nexport class RendererWrapper {\n    public solution: Solution;\n    public mapBoxWrapper: MapboxGLWrapper;\n    public deckGL: DeckGL\n    public renderer: Renderer;\n    constructor(solution: Solution) {\n        this.solution = solution;      \n\n        this.mapBoxWrapper = new MapboxGLWrapper(this);\n        this.mapBoxWrapper.mouseDown = (e) => { this.solution.activeCommander.mouseDown(e);}\n        this.mapBoxWrapper.mouseUp = (e) => { this.solution.activeCommander.mouseUp(e);}\n        this.mapBoxWrapper.mouseClick = (e) => { this.solution.activeCommander.mouseClick(e);}\n        this.mapBoxWrapper.mouseDClick = (e) => { this.solution.activeCommander.mouseDClick(e);}\n        this.mapBoxWrapper.mouseMove = (e) => { this.solution.activeCommander.mouseMove(e);}\n        this.mapBoxWrapper.mouseDrag = (e) => { this.solution.activeCommander.mouseDrag(e);}\n        this.mapBoxWrapper.keyDown = (k) => { this.solution.activeCommander.keyDown(k);}\n        \n        this.deckGL = new DeckGL(this);\n        this.renderer = new Renderer(this.solution.divHost, this);\n    }\n    public initPost() {\n        this.renderer.initPost();\n        this.deckGL.initPost();\n    }\n    public downloadScreen() {\n        return this.mapBoxWrapper.downloadImage();\n    }\n    public destroy() {\n        this.renderer.destroy();\n    }\n}","import { Solution } from '../';\n\nimport { TYPE_GEOMETRY } from '../lib';\n\nexport class UIWrapper {\n    public solution: Solution;\n    public divHost: HTMLElement;\n    public div: HTMLElement;\n    constructor(solution: Solution) {\n        this.solution = solution;\n\n        this.divHost = solution.divHost;\n        this.divHost.style.position = 'absolute';\n        const divMenu = document.createElement('div');\n        this.divHost.appendChild(divMenu);\n\n        this.div = document.createElement('div');\n        this.div.style.width = '150px';\n        this.div.style.height = '300px';\n        // this.div.style.backgroundColor = 'rgba(0, 0, 0, 1.0)';\n        this.divHost.appendChild(this.div);\n\n        this.initUI();\n    }\n    public async initUI() {\n\n        // const svg = await NJSLoader.LoadSVGFromHTTP(process.env.PUBLIC_URL + '/static/dataDummyReady/ready.svg');\n        // console.log(svg);\n\n        // const newElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path'); //Create a path in SVG's namespace\n        // newElement.setAttribute(\"d\",\"M 0 0 L 10 10\"); //Set path's data\n        // newElement.style.stroke = \"#000\"; //Set stroke colour\n        // newElement.style.strokeWidth = \"5px\"; //Set stroke width\n        // this.div.appendChild(newElement);\n\n        const img = new Image();\n        img.src = process.env.PUBLIC_URL + '/static/dataDummyReady/readyLabs.png';\n        img.style.position = 'relative';\n        img.style.width = '150px';\n        img.style.margin = '15px';\n        img.style.marginTop = '30px';\n        img.style.marginBottom = '0px';\n        let a = document.createElement('a');\n        a.href='https://ready.net/';\n        a.appendChild(img);\n        this.div.appendChild(a);\n\n        let div = document.createElement('div');\n        div.textContent = 'Capture Map';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.downloadScreen();\n        }\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Set Extent';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.flyTo(-112.188375, 35.267735);\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Draw Area';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.addShape(TYPE_GEOMETRY.POLYGON);\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Add Shape';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.addShape(TYPE_GEOMETRY.RECT);\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Shape Type';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.shiftShapeType();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Animation';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.toggleAnimation();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Undo';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.undo();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Redo';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.redo();\n        };\n        this.div.appendChild(div);\n    }\n}","import { Scene } from './';\nimport { SceneManager } from '../lib';\nexport class SceneState {\n    public scene: Scene;\n    private manager: SceneManager;\n    constructor(scene: Scene) {\n        this.scene = scene;\n        this.manager = new SceneManager();\n    }\n    public resetState() {\n        this.manager.reset();\n        this.captureState();\n    }\n    public captureState() {\n        this.manager.push(this.scene.common.getData());\n        const state = this.manager.getCurrentState();\n        // console.log(state);\n        return state;\n    }\n    public undo() {\n        const state = this.manager.undo();\n        this.scene.common.populateArea(state);\n    }\n    public redo() {\n        const state = this.manager.redo();\n        this.scene.common.populateArea(state);\n    }\n}","import * as turf from '@turf/turf';\n\nimport { Solution } from '../';\nimport { SceneState } from './SceneState';\nimport { ACCommon } from '../Common';\nimport { ActiveCommander } from '../ActiveCommander';\nimport { GeometryBase } from '../RendererWrapper/CanvasCustom/Geometry/Base/GeometryBase';\nimport { hex2RGB, drawingPoint } from '../lib'\nimport { LANDUSE_TYPE_MAPPING, FUNDING_STATUS_MAPPING } from '../lib/constant';\n\nexport class Scene {\n    public solution: Solution;\n    public ac: ActiveCommander;\n    public stateManager: SceneState;\n    public common: ACCommon;\n\n    public pts: number[] = [];\n\n    public areas: GeometryBase[] = [];\n    public captured: GeometryBase | undefined = undefined;\n\n    public points: any;\n    public polygonsDifference: any = [];\n    public ids: boolean[] =[];\n\n    constructor(solution: Solution) {\n        this.solution = solution;\n        this.stateManager =  new SceneState(this);\n        this.ac = solution.activeCommander;\n        this.common = solution.common;\n    }\n    public initPre() {\n        this.stateManager.captureState();\n    }\n    public push(g: GeometryBase) {\n        this.areas.push(g);\n    }\n    public remove(g: GeometryBase) {\n        this.areas.splice(this.areas.indexOf(g), 1);\n    }\n    public async init() {\n        this.common.center(-112.190375, 35.257177);\n        this.common.zoom(13);\n\n        const polygons = await this.common.loadDataLocal('funded_census_blocks.geojson');\n        const gons = [];\n        const ids = [];\n        const colDefault = hex2RGB(FUNDING_STATUS_MAPPING.default.color);\n        const colAssigned = hex2RGB(FUNDING_STATUS_MAPPING.assigned.color);\n        // console.log(polygons);\n        for (let i of polygons['features']) {\n            const p = (i['geometry']['coordinates']);\n            let color = undefined;\n            const grantStatus = (i['properties']['grant_long_status']);\n            // console.log(grantStatus)\n            if (grantStatus === 'default') { color = colDefault; }\n            else { color = colAssigned; }\n            // if (Math.random() < 0.3) { color = ColorUtility.GetRandomRGBArray(); }\n            // console.log(color)\n            gons.push({ contour: p[0], size: 15, color: color });\n            ids.push(false);\n        }\n        // console.log(gons)\n        this.ids = ids;\n        const onClickEvent = (info, event) => {\n            // console.log('!', info)\n            // console.log('!', info.index)\n            this.ids[info.index] = !this.ids[info.index];\n            this.common.renderForce();\n        }\n        this.common.addPolygonLayer(gons, onClickEvent);\n\n\n        const polygonsDiff = await this.common.loadDataLocal('funded_census_blocks.geojson');\n        this.polygonsDifference = []\n        for (let i of polygonsDiff['features']) {\n            const p = (i['geometry']['coordinates']);\n            // console.log(p[0])\n            this.polygonsDifference.push(turf.polygon(p[0]));\n        }\n\n        // dummy\n        let data = [\n            { position: [-74.5, 40], size: 10000 },\n            { position: [-74.5, 40.5], size: 5000 },\n            { position: [-74.6, 40.5], size: 5800 },\n            { position: [-74.7, 40.5], size: 100 },\n        ];\n        this.common.addScatterLayer(data);\n\n        let data2 = [\n            { pickup: [-122.42, 37.8], dropoff: [-74.5, 40.5] },\n            { pickup: [-122.43, 37.8], dropoff: [-122.42, 37.75] }\n        ];\n        this.common.addArcLayer(data2);\n\n\n        const points = await this.common.loadDataLocal('underserved_locations.geojson');\n        // console.log(d);\n        const colR = hex2RGB(LANDUSE_TYPE_MAPPING.R.color);\n        const colB = hex2RGB(LANDUSE_TYPE_MAPPING.B.color);\n        const pts = []\n        for (let i of points['features']) {\n            const p = (i['geometry']['coordinates']);\n            const landuse = (i['properties']['landuse']);\n\n            let color = undefined;\n            if (landuse === 'R') { color = colR; }\n            else if (landuse === 'B') { color = colB; }\n            else { color = [0, 128, 0]; }\n\n            pts.push({ position: [p[0], p[1]], size: 15, color: color });\n        }\n        this.common.addScatterLayer(pts);\n        this.points = points;\n    }\n    public renderCanvas(ctx: CanvasRenderingContext2D) {\n\n        for(let i = 0 ; i < this.areas.length; ++i) {\n            this.areas[i].render(ctx);\n        }\n\n        ctx.fillStyle = '#f00';\n        for (let i = 0; i < this.pts.length; ++i) {\n            const p = this.pts[i];\n            drawingPoint(ctx, p[0], p[1]);\n        }\n    }\n}\n\n","import { Solution } from '../';\nexport class ApiWrapper {\n    public solution: Solution;\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n}","import { ACCommon } from './Common';\r\nimport { ActiveCommander } from './ActiveCommander';\r\nimport { RendererWrapper } from './RendererWrapper';\r\nimport { UIWrapper } from './UI';\r\nimport { Scene } from './Scene';\r\nimport { ApiWrapper } from './ApiWrapper';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLDivElement;\r\n    public common: ACCommon;\r\n    public activeCommander: ActiveCommander;\r\n    public uiWrapper: UIWrapper;\r\n    public rendererWrapper: RendererWrapper;\r\n    public scene: Scene;\r\n    public api: ApiWrapper;\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        this.divHost.style.position = 'relative';\r\n        this.init();\r\n        this.initPost();\r\n    }\r\n    public init() {\r\n        this.common = new ACCommon(this);\r\n        this.activeCommander = new ActiveCommander(this);\r\n        this.scene = new Scene(this);\r\n        this.rendererWrapper = new RendererWrapper(this);\r\n        this.uiWrapper = new UIWrapper(this);\r\n        this.api = new ApiWrapper(this);\r\n    }\r\n    public destroy() {\r\n        this.rendererWrapper.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n    public async initPost() {\r\n        this.scene.initPre();\r\n        await this.scene.init();\r\n    }\r\n    \r\n}"],"names":["hex2RGB","hex","isGray","replace","r","parseInt","substring","g","b","v","distance","v0","v1","Math","sqrt","x","y","z","isInsideOfVecs","vecs","inside","i","j","length","xi","yi","xj","yj","closestPointOnLine","pt","p0","p1","A","B","C","dis","abs","getAngleByTwoVectorsRadian","acos","dotProduct","normalize","getCosAngleByTwoVectors","len","RVector3","v2","constructor","lng","lat","ele","this","difference","area","polygons","boolean","turf","computePathPolygon","object","projection","path","Path2D","pathOut","p","sp","moveTo","lineTo","closePath","addPath","drawingPoint","ctx","beginPath","arc","PI","fill","renderControlPoint","vs","fillColor","strokeColor","lineWidth","fillStyle","strokeStyle","forEach","stroke","LANDUSE_TYPE_MAPPING","text","color","FUNDING_STATUS_MAPPING","TYPE_GEOMETRY","RECT","CIRCLE","POLYGON","SceneManager","histories","currentIndex","reset","push","data","splice","getCurrentIndex","getHistoryLength","getCurrentState","historyNum","undo","redo","GeometryBase","scene","TYPE","t","id","capturedVecId","isHovered","hasAnimation","updateNeeded","captureNeeded","_isSelected","polygonTurfOriginal","polygonTurfSubtracted","d","Date","getTime","c","random","floor","toString","getUUID","isSelected","isInside","translate","removeVertexLastVertex","update","onMouseUp","onMouseClick","e","onMouseDoubleClick","shiftType","updateGeoProjection","updateGhostPos","render","renderPost","toJson","updateWidthHight","width","height","remove","AreaGeometry","vec","vsRect","segR","vsCircle","initRect","initCircleVec","widthHalf","heightHalf","cos","sin","updateScreen","toScreen","updateProjection","toMap","mp","updateCenterVec","xSum","ySum","updateScreenPosCircle","Renderer","host","pathCroppedArea","renderAreaBounding","renderCroppedArea","renderDim","renderSelected","renderCenterPoint","renderProperties","solution","rendererWrapper","mapBoxWrapper","map","isMoving","diff","polygonsDifference","ids","common","setLineDash","lineDashOffset","op","geometry","transform","cVecGhost","textAlign","font","line","units","fillText","toFixed","save","rotate","restore","ellipse","rect","split","pts","points","other","features","properties","offset","Transform","heighthHalf","preX","activeCommander","mpPre","preY","updateGhostVecs","Area","super","renderer","cp","mVec","cv","m","r0","r1","threshold","pow","isInsideEllipse","updateScreenPos","captureScene","updatePolygonTurf","AreaPolygonGeometry","Number","MAX_VALUE","MIN_VALUE","removeLast","pop","resetBoundary","removeVecByIndex","index","insertVec","sel","result","underConstruction","deg","AreaPolygon","undefined","fromJson","point","lngLat","insertPt","captured","ACCommon","zoom","flyTo","center","lon","renderForceWithUpdate","renderForce","areas","downloadScreen","enablePan","dragPan","enable","disablePan","disable","getJSONFromURL","process","addScatterLayer","deckGL","addArcLayer","addPolygonLayer","onClick","addShape","type","drawMode","canvas","shiftShapeType","toggleAnimation","deSelectedAll","removeSelected","checkHoverArea","pickObject","obj","getViewState","getData","extent","stateManager","captureState","onExtentDone","populateArea","ActiveCommander","mouseDown","updateMousePos","mouseUp","mouseDClick","doubleClickZoom","mouseDrag","updateMousePrePos","mouseClick","mouseMove","keyDown","k","key","MapboxGLWrapper","canvasMapbox","isPressed","zoomTo","setCenter","unproject","project","error","initMap","divHost","mapboxgl","preserveDrawingBuffer","container","style","dragRotate","on","window","addEventListener","div","document","getElementsByClassName","position","display","initPost","getCanvas","initCustomCanvas","getBounds","addSource","coordinates","animate","addLayer","source","downloadImage","customCanvas","fileName","canvasOut","createElement","context","getContext","globalAlpha","drawImage","img","Image","src","toDataURL","link","download","href","click","getCenter","getZoom","DeckGL","layers","deckLayer","MapboxLayer","ScatterplotLayer","getPosition","getRadius","size","getFillColor","getLineColor","info","event","console","log","PolygonLayer","pickable","stroked","filled","wireframe","lineWidthMinPixels","getPolygon","contour","getElevation","getLineWidth","ArcLayer","getSourcePosition","pickup","getTargetPosition","dropoff","getSourceColor","getTargetColor","strokeWidth","label","pick","Deltatime","now","delta","frameRate","last","timeLastRender","msLoop","UpdateFPS","performance","min","dt","RendererCanvasDynamicLight","isDown","debugMode","isStatic","prevent","animation","delay","frameNum","timer","isDrag","deltaTime","start","loop","resize","bounding","getBoundingClientRect","before","requestAnimationFrame","renderPre","after","appendChild","onclick","setTimeout","offsetX","offsetY","onwheel","mouseWheel","ondblclick","clearTimeout","mouseDoubleClick","onmousedown","onmouseup","onmousemove","destroy","removeEventListener","lastElementChild","removeChild","clearRect","time","isActive","needRenderLoop","loopNum","loopNumMax","pointerEvents","renderCanvas","renderLog","renderPoint","zoomFactor","RendererWrapper","UIWrapper","divMenu","initUI","margin","marginTop","marginBottom","a","textContent","SceneState","manager","resetState","state","Scene","ac","initPre","indexOf","loadDataLocal","gons","colDefault","colAssigned","polygonsDiff","colR","colB","landuse","ApiWrapper","Solution","uiWrapper","api","init"],"sourceRoot":""}