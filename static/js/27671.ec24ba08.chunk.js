"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[27671],{27671:(t,e,n)=>{n.r(e),n.d(e,{WebGPU:()=>a});class o{constructor(t){this.app=void 0,this.app=t,this.Init()}async Init(){const t=await navigator.gpu.requestAdapter(),e=await t.requestDevice({});const n=document.createElement("canvas").getContext("gpupresent");let o="using namespace metal;\n        // Rec 709 LUMA values for grayscale image conversion\n        constant float3 kRec709Luma = float3(0.2126, 0.7152, 0.0722);\n        struct Vertex {\n            float4 position [[position]];\n            float4 color;\n        };\n        vertex Vertex vertex_main(constant Vertex *vertices [[buffer(0)]],\n                                uint vid [[vertex_id]]) {\n            return vertices[vid];\n        }\n        fragment float4 fragment_main(Vertex vert [[stage_in]]) {\n            float3 inColor = float3(vert.color.x, vert.color.y, vert.color.z);\n            half gray = dot(kRec709Luma, inColor);\n            float4 outColor = float4(gray, gray, gray, 1);\n            return outColor;\n        }\n        ";console.log(e,n,o);let a=n.createLibrary(o),r=a.functionWithName("vertex_main"),i=a.functionWithName("fragment_main");console.log(r,i),console.log("webGPU init")}}class a{static Init(t){new a(t)}constructor(t){this.core=void 0,this.divHost=void 0;const e=document.getElementById(t);e&&(this.divHost=e),this.core=new o(this)}}}}]);
//# sourceMappingURL=27671.ec24ba08.chunk.js.map