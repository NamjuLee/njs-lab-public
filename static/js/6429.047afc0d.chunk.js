"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[6429],{16429:function(e,t,i){i.r(t),i.d(t,{Solution:function(){return r},vertex:function(){return n},vertexCount:function(){return o}});const n=new Float32Array([0,.5,0,-.5,-.5,0,.5,-.5,0]),o=3;class r{constructor(e){this.divHost=void 0,this.canvas=void 0,this.ctx=void 0,this.device=void 0,this.format=void 0,this.size=void 0,this.pipelineObj=void 0,this.divHost=document.getElementById(e),this.canvas=document.createElement("canvas"),this.divHost.appendChild(this.canvas),this.initWebGPU()}async initWebGPU(){if(!navigator.gpu)throw new Error("Not Support WebGPU");const e=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!e)throw new Error("No Adapter Found");const t=await e.requestDevice();this.ctx=this.canvas.getContext("webgpu");const i=navigator.gpu.getPreferredCanvasFormat?navigator.gpu.getPreferredCanvasFormat():this.ctx.getPreferredFormat(e);window.devicePixelRatio;this.canvas.width=this.divHost.clientWidth,this.canvas.height=this.divHost.clientHeight,this.ctx.configure({device:t,format:i,alphaMode:"opaque"}),this.size={width:this.canvas.width,height:this.canvas.height},this.device=t,this.format=i,this.initPipeline(this.device,this.format)}async initPipeline(e,t){const i=new Float32Array([-.5,-.5,0,1,0,0,.5,-.5,0,0,1,0,.5,.5,0,0,0,1,-.5,.5,0,1,1,0]),n=new Uint32Array([0,1,3,3,1,2]),o=function(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST;const n=e.createBuffer({size:t.byteLength,usage:i,mappedAtCreation:!0});return new Float32Array(n.getMappedRange()).set(t),n.unmap(),n}(this.device,i),r=function(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST;const n=e.createBuffer({size:t.byteLength,usage:i,mappedAtCreation:!0});return new Uint32Array(n.getMappedRange()).set(t),n.unmap(),n}(this.device,n),a={vertex:"\n        struct Output {\n            @builtin(position) Position : vec4<f32>,\n            @location(0) vColor : vec4<f32>,\n        };\n        @vertex\n        fn main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n            var output: Output;\n            output.Position = pos;\n            output.vColor = color;\n            return output;\n        }",fragment:"\n        @fragment\n        fn main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n            return vColor;\n        }"},s=this.device.createRenderPipeline({layout:"auto",vertex:{module:this.device.createShaderModule({code:a.vertex}),entryPoint:"main",buffers:[{arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}]},fragment:{module:this.device.createShaderModule({code:a.fragment}),entryPoint:"main",targets:[{format:this.format}]},primitive:{topology:"triangle-list"}}),c=e.createCommandEncoder(),d=this.ctx.getCurrentTexture().createView(),u=c.beginRenderPass({colorAttachments:[{view:d,clearValue:[0,0,0,1],loadOp:"clear",storeOp:"store"}]});u.setPipeline(s),u.setVertexBuffer(0,o),u.setIndexBuffer(r,"uint32"),u.drawIndexed(6),u.end(),e.queue.submit([c.finish()])}destroy(){for(this.device.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}}}]);
//# sourceMappingURL=6429.047afc0d.chunk.js.map