{"version":3,"file":"static/js/6076.afde9995.chunk.js","mappings":"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","sources":["njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/Base/GeometryBase.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/ColorUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/util/VectorUtil.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/DrawingPreest.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/constant.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/Renderer/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/Transform/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/Geometry/GeometryArea/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Common/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/ActiveCommander/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/MapboxGLWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/lib/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/DeckGL/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/CanvasCustom/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/RendererWrapper/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/UI/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/Scene/index.ts","njslab/Project/Project_15_Ready/01_ISP_inspector/index.ts"],"sourcesContent":["import { Scene } from '../../../../Scene';\nexport class GeometryBase {\n    public scene: Scene;\n    public isHovered: boolean = false;\n    public type: string;\n    public hasAnimation: boolean = false;\n    constructor(scene: Scene) {\n        this.scene = scene;\n\n        this.scene.area = this;\n    }\n    public isInside(x: number, y: number) {\n        return false;\n    }\n    public translate(x: number, y: number) {\n        \n    }\n    public update() {\n\n    }\n    public onMouseUp() {\n        \n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        this.update();\n        this.renderPost(ctx);\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n\n    }\n}","export const hex2RGB = (hex: string, isGray: boolean = false) => {\n    hex = hex.replace('#', '');\n    let r = parseInt(hex.substring(0, 2), 16);\n    let g = parseInt(hex.substring(2, 4), 16);\n    let b = parseInt(hex.substring(4, 6), 16);\n    if (isGray) {\n        let v = (0.58 * r) + (0.17 * g) + (0.8 * b);\n        return [v, v, v];\n    } else {\n        return [r, g, b];\n    }\n}","export const distance = (v0: RVector3, v1: RVector3): number => {\n    return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n};\nexport const isInsideOfVecs = (v: RVector3, vecs: RVector3[]): boolean => {\n    // ray-casting algorithm based on https://github.com/substack/point-in-polygon\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n    let x = v.x, y = v.y;\n    let inside = false;\n    for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\n        let xi = vecs[i].x, yi = vecs[i].y;\n        let xj = vecs[j].x, yj = vecs[j].y;\n        let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n    return inside;\n};\nexport const isInsideEllipse = (cv: RVector3, m: RVector3, r0: number, r1: number, threshold: number = 5) => {\n    const x = Math.pow((m.x - cv.x), 2) / Math.pow(threshold + r0, 2);\n    const y = Math.pow((m.y - cv.y), 2) / Math.pow(threshold + r1, 2);\n    if (x + y <= 1) {\n        return true;\n    }\n    return false;\n};\nexport class RVector3 {\n    x: number = 0.0;\n    y: number = 0.0;\n    z: number = 0.0;\n    lng: number = 0.0;\n    lat: number = 0.0;\n    ele: number = 0.0;\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}","export const drawingPoint = (ctx: CanvasRenderingContext2D, x: number, y: number) => {\n    ctx.beginPath();\n    ctx.arc(x, y, 10, 0, Math.PI * 2.0);\n    ctx.closePath();\n    ctx.fill();\n};","export const LANDUSE_TYPE_MAPPING = {\n    R: { text: 'Residential', color: '#ffff6e' },\n    B: { text: 'Business', color: '#f59700' },\n    X: { text: 'Residential & Business', color: '#FFC25F' },\n    A: { text: 'Agriculture', color: '#9EFF99' },\n    LIBRARY: { text: 'Library', color: '#04E762' },\n    SCHOOL: { text: 'School', color: '#95E06C' },\n    GOVERNMENT: { text: 'Government', color: '#D741A7' },\n    HEALTH: { text: 'Health', color: '#008BF8' },\n    COMMUNITY: { text: 'Community', color: '#00CECB' },\n    RELIGION: { text: 'Religion', color: '#9BFFFD' },\n    C: { text: 'Other CAI', color: '#D544CC' },\n    O: { text: 'Other BSLs', color: 'gray' }\n}\nexport const FUNDING_STATUS_MAPPING = {\n    None: {\n      text: 'Not assigned',\n      color: 'gray'\n    },\n    default: {\n      text: 'Default',\n      color: '#5287E6'\n    },\n    pending: {\n      text: 'Pending',\n      color: '#746CDD'\n    },\n    assigned: {\n      text: 'Assigned',\n      color: '#A355D4'\n    }\n  }","import * as turf from '@turf/turf';\n\nimport { Area } from '..';\n\nimport { LANDUSE_TYPE_MAPPING } from '../../../../../lib';\n\nexport class Renderer {\n    public host: Area;\n    public pathCroppedArea: Path2D\n    constructor(host: Area) {\n        this.host = host;\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.renderAreaBounding(ctx);\n        this.renderCroppedArea(ctx);\n        this.renderProperties(ctx);\n\n        if (this.host.isHovered) {\n            this.renderControlPoint(ctx);\n        }\n\n    }\n    private renderCroppedArea(ctx: CanvasRenderingContext2D) {\n        if (this.host.updateNeeded || this.host.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n            const diff = difference(this.host.polygonTurfOriginal, this.host.scene.polygonsDifference, this.host.scene.ids);\n            this.host.polygonTurfSubtracted = diff;\n            this.pathCroppedArea = computePathPolygon(diff, this.host.scene.common.toScreen);\n            this.host.updateNeeded = false;\n            // console.log('updating');\n        }\n\n\n        ctx.setLineDash([5, 7]);\n        ctx.lineDashOffset = this.host.t;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#fff';\n        const op = 0.2 + Math.sin(this.host.t * 0.1) * 0.09;\n        // console.log(op)\n        ctx.fillStyle = `rgba(0, 255, 255, ${op} )`;\n        ctx.fill(this.pathCroppedArea, 'evenodd');\n        ctx.stroke(this.pathCroppedArea);\n\n        ctx.setLineDash([]);\n    }\n    private renderControlPoint(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'rgba(200, 200, 200, 1.0)';\n        ctx.strokeStyle = 'rgba(50, 50, 50, 1.0)';\n        ctx.lineWidth = 3;\n        this.host.pts.forEach(v => {\n            ctx.beginPath();\n            ctx.arc(v.x, v.y, 8, 0, Math.PI * 2.0);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n        });\n    }\n    private renderAreaBounding(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        if (this.host.type === 'circle') {\n            ctx.ellipse(this.host.cv.x, this.host.cv.y, this.host.width * 0.5, this.host.height * 0.5, 0.0, 0.0, Math.PI * 2.0);\n        } else if (this.host.type === 'rect') {\n            ctx.rect(this.host.pts[3].x, this.host.pts[3].y, this.host.width, this.host.height);\n        }\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.9)';\n        ctx.stroke();\n    }\n    private renderProperties(ctx: CanvasRenderingContext2D) {\n        const area = turf.convertArea(turf.area(this.host.polygonTurfSubtracted), 'meters', 'miles')\n        ctx.textAlign = 'center';\n        ctx.font = '18px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`Area in square miles: ${area.toFixed(5)}`, this.host.cv.x, this.host.cv.y - 60 - this.host.height * 0.5);\n        // console.log(this.host.cp.x, 50 - this.host.cp.y - this.host.height * 0.5);\n\n        const pts = turf.pointsWithinPolygon(this.host.scene.points, this.host.polygonTurfSubtracted)\n        // console.log(pts);\n        let r = 0, b = 0, other = 0;\n        for (let i = 0; i < pts.features.length; ++i) {\n            if (pts.features[i].properties['landuse'] === 'R') {\n                r += 1;\n            } else if (pts.features[i].properties['landuse'] === 'B') {\n                b += 1;\n            } else {\n                other += 1;\n            }\n        }\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.R.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.R.text}: ${r},`, this.host.cv.x - 120, this.host.cv.y - 25 - this.host.height * 0.5);\n\n        ctx.fillStyle = LANDUSE_TYPE_MAPPING.B.color\n        ctx.fillText(`${LANDUSE_TYPE_MAPPING.B.text}: ${b},`, this.host.cv.x + 28, this.host.cv.y - 25 - this.host.height * 0.5);\n\n        ctx.fillStyle = 'rgb(0, 128, 0)';\n        ctx.fillText(`Other: ${other}`, this.host.cv.x + 140, this.host.cv.y - 25 - this.host.height * 0.5);\n        // console.log(r, b, other)\n    }\n}\n\nconst difference = (area: turf.Polygon | any, polygons: turf.Polygon[] , boolean) => {\n    for (let i = 0; i < polygons.length; ++i) {\n        if (boolean[i]) {\n            area = turf.difference(area, polygons[i]);\n        }\n    };\n    return area;\n};\n\nconst computePathPolygon = (object: turf.Polygon, projection: (lon: number, lat: number) => number[]): Path2D => {\n    const path = new Path2D();\n    let x, y;\n    for (let j = 0; j < object['geometry']['coordinates'].length; ++j) {\n        // if (j === 0) {\n        const pathOut = new Path2D();\n        for (let i = object['geometry']['coordinates'][j].length - 1; i > -1; --i) {\n\n            const p = object['geometry']['coordinates'][j][i];\n            if (i === object['geometry']['coordinates'][j].length - 1) {\n                const sp = projection(p[0], p[1])\n                pathOut.moveTo(sp[0], sp[1]);\n            } else {\n                const sp = projection(p[0], p[1])\n                pathOut.lineTo(sp[0], sp[1]);\n            }\n        }\n        pathOut.closePath();\n        path.addPath(pathOut);\n    }\n    return path;\n};","import { Area } from '..';\n\nexport class Transform {\n    public host: Area;\n    constructor(host: Area) {\n        this.host = host;\n    }\n    public translate(x: number, y: number): void {\n        const preX = this.host.scene.solution.activeCommander.mp[0] - this.host.scene.solution.activeCommander.mpPre[0];\n        const preY = this.host.scene.solution.activeCommander.mp[1] - this.host.scene.solution.activeCommander.mpPre[1];\n\n        if (this.host.capturedVecId > -1) {\n            this.host.pts[this.host.capturedVecId].x += preX;\n            this.host.pts[this.host.capturedVecId].y += preY;\n            // console.log(this.host.capturedVecId)\n            if (this.host.capturedVecId === 0) {\n                this.host.pts[3].x = this.host.pts[0].x;\n                this.host.pts[1].y = this.host.pts[0].y;\n\n            } else if (this.host.capturedVecId === 1) {\n                this.host.pts[2].x = this.host.pts[1].x;\n                this.host.pts[0].y = this.host.pts[1].y;\n\n            } else if (this.host.capturedVecId === 2) {\n                this.host.pts[1].x = this.host.pts[2].x;\n                this.host.pts[3].y = this.host.pts[2].y;\n\n            } else if (this.host.capturedVecId === 3) {\n                this.host.pts[0].x = this.host.pts[3].x;\n                this.host.pts[2].y = this.host.pts[3].y;\n            }\n\n            this.updateCenterVec();\n            this.updateProjection();\n            return;\n        }\n\n        this.host.cv.x += preX;\n        this.host.cv.y += preY;\n        for (let i = 0; i < this.host.pts.length; ++i) {\n            this.host.pts[i].x += preX;\n            this.host.pts[i].y += preY;\n        }\n        this.updateProjection();\n    }\n    public updateCenterVec() {\n        let xSum = 0;\n        let ySum = 0;\n        for (let i = 0; i < this.host.pts.length; ++i) {\n            xSum += this.host.pts[i].x;\n            ySum += this.host.pts[i].y;\n        }\n        this.host.cv.x = xSum / this.host.pts.length;\n        this.host.cv.y = ySum / this.host.pts.length;\n    }\n    public updateProjection() {\n        const mp = this.host.scene.common.toMap(this.host.cv.x, this.host.cv.y);\n        this.host.cv.lng = mp[0];\n        this.host.cv.lat = mp[1];\n        for (let i = 0; i < this.host.pts.length; ++i) {\n            let mp = this.host.scene.common.toMap(this.host.pts[i].x, this.host.pts[i].y);\n            this.host.pts[i].lng = mp[0];\n            this.host.pts[i].lat = mp[1];\n        }\n\n        this.host.updatePolygonTurf()\n        this.host.updateNeeded = true;\n    }\n}","\nimport { Scene } from '../../../../Scene';\nimport { GeometryBase } from '../Base/GeometryBase';\nimport { RVector3, distance, isInsideOfVecs, isInsideEllipse, } from '../../../../lib';\n\nimport { Renderer } from './Renderer';\nimport { Transform } from './Transform';\n\nimport * as turf from '@turf/turf';\n\nexport class Area extends GeometryBase {\n    public renderer: Renderer;\n    public transform: Transform;\n    public cv: RVector3;\n    public pts: RVector3[] = [];\n    public width = 200;\n    public height = 200;\n    public capturedVecId: number = -1;\n    public polygonTurfOriginal: turf.Polygon | any;\n    public polygonTurfSubtracted: turf.Polygon;\n    public t = 0.1;\n    public updateNeeded: boolean = false;\n    constructor(scene: Scene) {\n        super(scene);\n        this.renderer = new Renderer(this);\n        this.transform = new Transform(this);\n\n        this.type = 'rect';\n\n        this.cv = new RVector3(scene.solution.rendererWrapper.renderer.canvas.width * 0.5, scene.solution.rendererWrapper.renderer.canvas.height * 0.5)\n\n        const widthHalf = this.width * 0.5;\n        const heightHalf = this.height * 0.5;\n\n        this.pts.push(new RVector3(this.cv.x - widthHalf, this.cv.y + heightHalf));\n        this.pts.push(new RVector3(this.cv.x + widthHalf, this.cv.y + heightHalf));\n        this.pts.push(new RVector3(this.cv.x + widthHalf, this.cv.y - heightHalf));\n        this.pts.push(new RVector3(this.cv.x - widthHalf, this.cv.y - heightHalf));\n\n        this.transform.updateProjection();\n\n        // const diff = difference(this.getArray(), this.scene.polygonsDifference[0]);\n        // console.log(diff);\n    }\n\n    public isInside(x: number, y: number) {\n        const mVec = new RVector3(x, y);\n        this.capturedVecId = -1;\n\n        for (let i = 0; i < this.pts.length; ++i) {\n            if (distance(this.pts[i],(mVec)) < 12) {\n                this.capturedVecId = i;\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        if (this.type === 'circle') {\n            if (isInsideEllipse(this.cv, mVec, this.width * 0.5, this.height * 0.5)) {\n                this.isHovered = true;\n                return true;\n            }\n        } else {\n            if (isInsideOfVecs(mVec, this.pts)) {\n                this.isHovered = true;\n                return true;\n            }\n        }\n\n        this.isHovered = false;\n        return false;\n    }\n    public translate(x: number, y: number): void {\n        const preX = this.scene.solution.activeCommander.mp[0] - this.scene.solution.activeCommander.mpPre[0];\n        const preY = this.scene.solution.activeCommander.mp[1] - this.scene.solution.activeCommander.mpPre[1];\n\n        if (this.capturedVecId > -1) {\n            this.pts[this.capturedVecId].x += preX;\n            this.pts[this.capturedVecId].y += preY;\n            // console.log(this.capturedVecId)\n            if (this.capturedVecId === 0) {\n                this.pts[3].x = this.pts[0].x;\n                this.pts[1].y = this.pts[0].y;\n\n            } else if (this.capturedVecId === 1) {\n                this.pts[2].x = this.pts[1].x;\n                this.pts[0].y = this.pts[1].y;\n\n            } else if (this.capturedVecId === 2) {\n                this.pts[1].x = this.pts[2].x;\n                this.pts[3].y = this.pts[2].y;\n\n            } else if (this.capturedVecId === 3) {\n                this.pts[0].x = this.pts[3].x;\n                this.pts[2].y = this.pts[3].y;\n            }\n\n            this.transform.updateCenterVec();\n            this.transform.updateProjection();\n            return;\n        }\n\n\n        this.cv.x += preX;\n        this.cv.y += preY;\n        for (let i = 0; i < this.pts.length; ++i) {\n            this.pts[i].x += preX;\n            this.pts[i].y += preY;\n        }\n        this.transform.updateProjection();\n    }\n\n    public update() {\n        if (this.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()) {\n            let sp = this.scene.common.toScreen(this.cv.lng, this.cv.lat);\n            this.cv.x = sp[0];\n            this.cv.y = sp[1];\n\n            for (let i = 0; i < this.pts.length; ++i) {\n                sp = this.scene.common.toScreen(this.pts[i].lng, this.pts[i].lat);\n                this.pts[i].x = sp[0];\n                this.pts[i].y = sp[1];\n            }\n        }\n        // console.log('not moving');\n    }\n    public onMouseUp() {\n        this.capturedVecId = -1;\n        this.transform.updateProjection();\n    }\n    public renderPost(ctx: CanvasRenderingContext2D) {\n        this.width = Math.abs(this.pts[0].x - this.pts[2].x);\n        this.height = Math.abs(this.pts[0].y - this.pts[2].y);\n\n        this.renderer.renderPost(ctx);\n        \n        if (this.hasAnimation) {\n            this.t += 0.2;\n        }\n    }\n    public updatePolygonTurf() {\n        const pts = [];\n        for (let i = 0; i < this.pts.length; i++) {\n            pts.push([this.pts[i].lng, this.pts[i].lat]);\n        }\n        pts.push([this.pts[0].lng, this.pts[0].lat]);\n        this.polygonTurfOriginal = turf.polygon([pts]);\n    }\n}\n","import { getJSONFromURL } from 'njscore';\n\nimport { Area } from '../RendererWrapper/CanvasCustom/Geometry';\n\nimport { Solution } from '../';\n\nexport class ACCommon {\n    public solution: Solution;\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n    public downloadScreen() {\n        this.solution.rendererWrapper.downloadScreen();\n    }\n    public enablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.enable();\n    }\n    public disablePan() {\n        this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.disable();\n    }\n    public zoom = (z: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.zoom(z)\n    }\n    public flyTo = (lng: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.flyTo(lng, lat)\n    }\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.center(lng, lat);\n    }\n    public toMap = (x: number, y: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toMap(x, y);\n    }\n    public toScreen = (lon: number, lat: number) => {\n        return this.solution.rendererWrapper.mapBoxWrapper.toScreen(lon, lat);\n    }\n    public async loadDataLocal(path = 'funded_census_blocks.geojson') {\n        return getJSONFromURL(process.env.PUBLIC_URL + '/static/dataDummyReady/' + path);\n    }\n\n    public addScatterLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addScatterLayer(data);\n    }\n    public addArcLayer(data: any) {\n        return this.solution.rendererWrapper.deckGL.addArcLayer(data);\n    }\n    public addPolygonLayer(data: any, onClick: (info, event) => void) {\n        return this.solution.rendererWrapper.deckGL.addPolygonLayer(data, onClick);\n    }\n    public addShape() {\n        new Area(this.solution.scene);\n    }\n    public shiftShapeType() {\n        if (this.solution.scene.area) {\n            if(this.solution.scene.area.type === 'circle') {\n                this.solution.scene.area.type = 'rect';\n            } else if(this.solution.scene.area.type === 'rect') {\n                this.solution.scene.area.type = 'circle';\n            } \n        }\n    }\n    public toggleAnimation() {\n        this.solution.scene.area.hasAnimation = !this.solution.scene.area.hasAnimation;\n    }\n    public checkHoverArea(x: number, y: number) {\n        return this.solution.scene.area?.isInside(x, y);\n    }\n    public pickObject(obj: any) {\n        console.log('index', obj.index);\n        console.log(obj);\n    }\n}","import { Solution } from '../'\n\nexport class ActiveCommander {\n    public solution: Solution;\n    public mp = [0, 0, 0, 0];\n    public mpPre = [0, 0, 0, 0];\n\n    constructor(solution: Solution) {\n        this.solution = solution;\n    }\n    private updateMousePos(e) {\n        this.mp[0] = e.point.x;\n        this.mp[1] = e.point.y;\n        this.mp[2] = e.lngLat.lng;\n        this.mp[3] = e.lngLat.lat;\n    }\n    public updateMousePrePos() {\n        this.mpPre[0] = this.mp[0];\n        this.mpPre[1] = this.mp[1];\n        this.mpPre[2] = this.mp[2];\n        this.mpPre[3] = this.mp[3];\n    }\n    public mouseDown = (e) => {\n        this.updateMousePos(e);\n        if (this.solution.common.checkHoverArea(this.mp[0], this.mp[1])) {\n            this.solution.common.disablePan();\n            this.solution.scene.captured = this.solution.scene.area;\n\n        }\n        // TODO\n    }\n    public mouseUp = (e) => {\n        this.updateMousePos(e);\n        this.solution.common.enablePan();\n        this.solution.scene.captured = undefined;\n\n        this.solution.scene.area?.onMouseUp();\n        // TODO\n    }\n    public mouseDrag = (e) => {\n        this.updateMousePos(e);\n        if (this.solution.scene.captured) {\n            this.solution.scene.captured.translate(e.point.x ,e.point.y);\n        }\n        // TODO\n        this.updateMousePrePos();\n    }\n    public mouseClick = (e) => {\n        this.updateMousePos(e);\n        // TODO\n        // console.log(e);\n        // console.log(e['lngLat']);\n        this.solution.rendererWrapper.renderer.pts.push([e['lngLat']['lng'], e['lngLat']['lat']])\n        // this.renderer.pts.push([e.point.x, e.point.y])\n    }\n    public mouseMove = (e) => {\n        this.updateMousePos(e);\n        this.solution.common.checkHoverArea(this.mp[0], this.mp[1]);\n\n        // console.log(e)\n\n        // TODO\n        this.updateMousePrePos();\n    }\n    public keyDown(k: KeyboardEvent) {\n        // TODO\n        // console.log(k);\n        if (k.key.toLocaleLowerCase() === 'c') {\n            if (this.solution.scene.captured) {\n                this.solution.scene.captured.type = 'circle'\n            }\n\n        }\n        if (k.key.toLowerCase() === 'r') {\n            if (this.solution.scene.captured) {\n                this.solution.scene.captured.type = 'rect'\n            }\n\n        }\n    }\n}","import mapboxgl from \"mapbox-gl\";\r\nimport { RendererWrapper } from '../';\r\n\r\nimport { downloadImage } from '../../lib';\r\n\r\nexport class MapboxGLWrapper {\r\n    public rendererWrapper: RendererWrapper;\r\n    public map: mapboxgl.Map;\r\n    public canvasMapbox;\r\n    private isPressed: boolean = false;\r\n    constructor(rendererWrapper: RendererWrapper) {\r\n        this.rendererWrapper = rendererWrapper;\r\n\r\n        this.initMap(rendererWrapper.solution.divHost.id);\r\n    }\r\n    private initMap(id: string) {\r\n        // https://account.mapbox.com\r\n        mapboxgl.accessToken = process.env.REACT_APP_MAPBOX;\r\n        this.map = new mapboxgl.Map({\r\n            preserveDrawingBuffer: true,\r\n            container: id,\r\n            zoom: 3,\r\n            // pitch: 30,\r\n            // minZoom: 10,\r\n            // center: [-74.5, 40],\r\n            center: [-77.430815, 37.801833],\r\n            style: 'mapbox://styles/mapbox/dark-v10' // 'mapbox://styles/mapbox/streets-v11'\r\n            \r\n        });\r\n        this.map.dragRotate.disable();\r\n\r\n        this.map.on('click', 'polygon', (e: any) => { this.rendererWrapper.solution.common.pickObject(e) });\r\n\r\n        // https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent#type\r\n        this.map.on('mousemove', (e: mapboxgl.MapMouseEvent) => { \r\n            if (this.isPressed) {\r\n                this.mouseDrag(e);\r\n            } else {\r\n                this.mouseMove(e); \r\n            }\r\n        });\r\n        this.map.on('click', (e: mapboxgl.MapMouseEvent) => { this.mouseClick(e); });\r\n        this.map.on('mousedown', (e: mapboxgl.MapMouseEvent) => { this.isPressed = true; this.mouseDown(e); });\r\n        this.map.on('dblclick', (e: mapboxgl.MapMouseEvent) => { this.mouseDClick(e); });\r\n        this.map.on('mouseup', (e: mapboxgl.MapMouseEvent) => { this.isPressed = false; this.mouseUp(e); });\r\n        window.addEventListener('keydown', (k) => { this.keyDown(k) });\r\n\r\n        let div = document.getElementsByClassName('mapboxgl-canvas')[0] as HTMLDivElement;\r\n        div.style.position = 'absolute';\r\n        \r\n        div = document.getElementsByClassName('mapboxgl-control-container')[0] as HTMLDivElement;\r\n        div.style.display = 'none';\r\n\r\n        this.map.on('load', () => { this.initPost(); });\r\n    }\r\n    public initPost(){\r\n        this.rendererWrapper.initPost();\r\n        this.canvasMapbox = this.map.getCanvas();\r\n    }\r\n    public initCustomCanvas(){\r\n        this.rendererWrapper.renderer.canvas.width = this.canvasMapbox.width ;\r\n        this.rendererWrapper.renderer.canvas.height = this.canvasMapbox.height ;\r\n\r\n        this.rendererWrapper.renderer.canvas.style.display = 'none';\r\n\r\n       const bound: any = this.map.getBounds();\r\n        // console.log(bound);\r\n\r\n       this.map.addSource('canvas-source', {\r\n            type: 'canvas',\r\n            canvas: this.rendererWrapper.renderer.canvas,\r\n            coordinates: [\r\n\r\n                // [ 180, 90],\r\n                // [ 180, -90],\r\n                // [ -180, -90], \r\n                // [ -180, 90]\r\n\r\n                \r\n                // [bound._sw[0], bound._sw[1]],\r\n                // [bound._sw[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._ne[1]],\r\n                // [bound._ne[0], bound._sw[1]],\r\n\r\n               [ -125.618336, 48.944262], \r\n               [ -125.618336, 24.786775], \r\n               [ -65.591812, 24.786775],\r\n               [ -65.591812, 48.944262]\r\n\r\n                // [91.4461, 21.5006],\r\n                // [100.3541, 21.5006],\r\n                // [100.3541, 13.9706],\r\n                // [91.4461, 13.9706]\r\n            ],\r\n            // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\r\n            animate: true\r\n            });\r\n             \r\n        this.map.addLayer({\r\n            id: 'canvas-layer',\r\n            type: 'raster',\r\n            source: 'canvas-source'\r\n            });\r\n\r\n    }\r\n    public zoom = (z: number) => {\r\n        // this.map.setZoom(z);\r\n        // return this.map.zoomTo(z, {animate:true} )\r\n        return this.map.zoomTo(z)\r\n    }\r\n    public flyTo = (lng: number, lat: number) => {\r\n        return this.map.flyTo({\r\n            center: [lng, lat],\r\n            // duration: 1200, // Animate over 12 seconds\r\n            // essential: true\r\n        });\r\n    }\r\n    public center = (lng: number = -99.292649, lat: number = 39.043903) => {\r\n        // const v = new mapboxgl.LngLat(lng, lat);\r\n        // console.log(v);\r\n        return this.map.setCenter({ lat, lng })\r\n    }\r\n    public toMap = (x: number, y: number) => {\r\n        const p = this.map.unproject({x, y} as any)\r\n        return [p.lng, p.lat];\r\n    }\r\n    public toScreen = (lon: number, lat: number) => {\r\n        try {\r\n            const p = this.map.project([lon, lat])\r\n            return [p.x, p.y];\r\n        } catch (error) {\r\n            // console.error(error)\r\n        }\r\n        return [-1, -1];\r\n    }\r\n    public downloadImage() {\r\n        const canvasMapbox = this.map.getCanvas();\r\n        return downloadImage(canvasMapbox, this.rendererWrapper.renderer.canvas);\r\n    }\r\n    public mouseDown = (e) => { }\r\n    public mouseUp = (e) => { }\r\n    public mouseMove = (e) => { }\r\n    public mouseDrag = (e) => { }\r\n    public mouseClick = (e) => { }\r\n    public mouseDClick = (e) => { }\r\n    public keyDown = (e) => { }\r\n}\r\n","export * from './util/ColorUtil';\nexport * from './util/VectorUtil';\nexport * from './DrawingPreest';\nexport * from './constant';\n\nexport const downloadImage = (canvasMapbox, customCanvas, fileName = 'map.png') => {\n    let canvasOut = document.createElement(\"canvas\");\n    canvasOut.width = canvasMapbox.width;\n    canvasOut.height = canvasMapbox.height;\n    let context = canvasOut.getContext(\"2d\");\n\n    // context.globalAlpha = 1.0;\n    context.globalAlpha = 1.0;\n    // context.drawImage(this.deckLayer.deck.canvas, 0, 0);\n    context.drawImage(canvasMapbox, 0, 0);\n    // context.drawImage(this.solution.renderer.canvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n    context.drawImage(customCanvas, 0, 0, canvasMapbox.width, canvasMapbox.height);\n\n    let img = new Image();\n    img.width = canvasMapbox.width;\n    img.height = canvasMapbox.height;\n    img.src = canvasOut.toDataURL();\n\n    let link = document.createElement('a');\n    link.download = fileName;\n    link.href = canvasOut.toDataURL();\n    link.click();    \n};\n","import { MapboxLayer } from '@deck.gl/mapbox';\nimport { ScatterplotLayer, ArcLayer, PolygonLayer } from '@deck.gl/layers';\n\nimport { RendererWrapper } from '../';\n\nexport class DeckGL {\n    public rendererWrapper: RendererWrapper;\n    public map: mapboxgl.Map;\n    public layers: MapboxLayer[] = [];\n    constructor(rendererWrapper: RendererWrapper) {\n        this.rendererWrapper = rendererWrapper;\n        this.map = this.rendererWrapper.mapBoxWrapper.map;\n    }\n    public initPost() {\n        // TODO:\n    }\n    // [ {position: [-74.5, 40], size: 10000}, ]\n    public addScatterLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `scatter-${this.layers.length}`,\n            type: ScatterplotLayer,\n            data: data,\n            // @ts-ignore\n            getPosition: d => d.position,\n            getRadius: d => d.size,\n            getFillColor: d => {\n                if (d.color !== undefined) {\n                    return d.color;\n                } else {\n                    return [255, 255, 0];\n                }\n            },\n            getLineColor: d => [255, 255, 255],\n            onClick: (info, event) => console.log('Clicked:', info, event)\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    // https://deck.gl/docs/api-reference/layers/polygon-layer\n    public addPolygonLayer(data: any, onClick: (info, event) => void) {\n        const deckLayer = new MapboxLayer({\n            id: `polygon-${this.layers.length}`,\n            type: PolygonLayer,\n            data: data,\n            // @ts-ignore\n            pickable: true,\n            // @ts-ignore\n            stroked: true,\n            filled: true,\n            wireframe: true,\n            lineWidthMinPixels: 1,\n            getPolygon: d => d.contour,\n            getElevation: d => 1, //d.population / d.area / 10,\n            getFillColor: d => d.color, // [100, 100, 100], // [d.population / d.area / 60, 140, 0],\n            getLineColor: d => [0, 0, 0],\n            getLineWidth: 1,\n            onClick: (info, event) => {\n                // console.log('Clicked:', info, event)\n                // console.log(info.index)\n                onClick(info, event);\n            }\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    public addArcLayer(data: any) {\n        const deckLayer = new MapboxLayer({\n            id: `arc-${this.layers.length}`,\n            type: ArcLayer,\n            data: data,\n            // @ts-ignore\n            getSourcePosition: d => d.pickup,\n            getTargetPosition: d => d.dropoff,\n            getSourceColor: d => [255, 128, 0],\n            getTargetColor: d => [0, 128, 255],\n            strokeWidth: 5\n        });\n        this.addLayer(deckLayer, 'waterway-label');\n    }\n    private addLayer(deckLayer: MapboxLayer, label: string = 'waterway-label') {\n        this.map.addLayer(deckLayer, label);\n        this.layers.push(deckLayer)\n    }\n    public pick() {\n        // this.map.getob\n    }\n}","import { RendererCanvas } from 'njscore';\nimport { RendererWrapper } from '../';\n\nexport class Renderer extends RendererCanvas {\n    public rendererWrapper: RendererWrapper\n    public time: number = 0.0;\n    public pts: number[][] = [];\n    public isActive = false;\n    constructor(div: any, rendererWrapper: RendererWrapper) {\n        super(div);\n        this.rendererWrapper = rendererWrapper;\n        this.canvas.id = 'mapboxCustom'\n\n        // const dd = app.mapboxWrapper.map.getCanvas();\n\n        // this.canvas.width = dd.width;\n        // this.canvas.height = dd.height;\n        this.canvas.style.position = 'absolute';\n        // this.canvas.style.width = '100%';\n        // this.canvas.style.height = '100%';\n        this.canvas.style.pointerEvents = 'none';\n        // this.canvas.style.mixBlendMode = 'color-dodge'\n        this.start();\n    }\n    public initPost() {\n        // this.ctx.globalCompositeOperation = 'color-dodge';\n        this.isActive = true;\n    }\n    public render(ctx: CanvasRenderingContext2D): void {\n        if (!this.isActive) { return; }\n        this.time += 0.1;\n\n        const z = this.rendererWrapper.mapBoxWrapper.map.getZoom();\n        const zoomFactor = Math.pow(2, z) * 0.1\n        \n        for(let i = 0 ; i < this.pts.length; ++i) {\n            const pt = this.pts[i];\n            const p = this.rendererWrapper.mapBoxWrapper.toScreen(pt[0], pt[1]);\n            // const p = this.app.mapboxWrapper.map.unproject({x: 10, y: 10})\n\n            const size = 0.001 * zoomFactor;\n\n            ctx.beginPath();\n            ctx.arc(p[0], p[1], size + ((Math.sin(this.time + i) + 3) / zoomFactor  ), 0, Math.PI * 2);\n            // ctx.arc(p[0], p[1], size + (size * (Math.sin(this.time + i) + 3) * zoomFactor / 10 ), 0, Math.PI * 2);\n            ctx.closePath();\n            ctx.fillStyle = 'rgba(0, 255, 0, 0.7)';\n            ctx.fill();\n        }\n\n        this.rendererWrapper.solution.scene.renderCanvas(ctx);\n\n        ctx.textAlign = 'center';\n        ctx.font = '14px arial';\n        ctx.fillStyle = '#fff';\n        // ctx.globalCompositeOperation = 'source-over';\n        ctx.fillText(`Lat: ${this.rendererWrapper.solution.activeCommander.mp[1].toFixed(5)},  Lng: ${this.rendererWrapper.solution.activeCommander.mp[0].toFixed(5)}`, (this.canvas.width *  0.5), 50);\n        // ctx.stroke()\n    }\n}","import { MapboxGLWrapper } from './MapboxGLWrapper';\nimport { DeckGL } from './DeckGL';\nimport { Renderer } from './CanvasCustom';\nimport { Solution } from '../';\n\nexport class RendererWrapper {\n    public solution: Solution;\n    public mapBoxWrapper: MapboxGLWrapper;\n    public deckGL: DeckGL\n    public renderer: Renderer;\n    constructor(solution: Solution) {\n        this.solution = solution;      \n\n        this.mapBoxWrapper = new MapboxGLWrapper(this);\n        this.mapBoxWrapper.mouseDown = (e) => { this.solution.activeCommander.mouseDown(e);}\n        this.mapBoxWrapper.mouseUp = (e) => { this.solution.activeCommander.mouseUp(e);}\n        this.mapBoxWrapper.mouseClick = (e) => { this.solution.activeCommander.mouseClick(e);}\n        this.mapBoxWrapper.mouseMove = (e) => { this.solution.activeCommander.mouseMove(e);}\n        this.mapBoxWrapper.mouseDrag = (e) => { this.solution.activeCommander.mouseDrag(e);}\n        this.mapBoxWrapper.keyDown = (k) => { this.solution.activeCommander.keyDown(k);}\n        \n        this.deckGL = new DeckGL(this);\n        this.renderer = new Renderer(this.solution.divHost, this);\n    }\n    public initPost() {\n        this.renderer.initPost();\n        this.deckGL.initPost();\n    }\n    public downloadScreen() {\n        return this.mapBoxWrapper.downloadImage();\n    }\n    public destroy() {\n        this.renderer.destroy();\n    }\n}","import { Solution } from '../';\n\nexport class UIWrapper {\n    public solution: Solution;\n    public divHost: HTMLElement;\n    public div: HTMLElement;\n    constructor(solution: Solution) {\n        this.solution = solution;\n\n        this.divHost = solution.divHost;\n        this.divHost.style.position = 'absolute';\n        const divMenu = document.createElement('div');\n        this.divHost.appendChild(divMenu);\n\n        this.div = document.createElement('div');\n        this.div.style.width = '150px';\n        this.div.style.height = '300px';\n        // this.div.style.backgroundColor = 'rgba(0, 0, 0, 1.0)';\n        this.divHost.appendChild(this.div);\n\n        this.initUI();\n    }\n    public async initUI() {\n\n        // const svg = await NJSLoader.LoadSVGFromHTTP(process.env.PUBLIC_URL + '/static/dataDummyReady/ready.svg');\n        // console.log(svg);\n\n        // const newElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path'); //Create a path in SVG's namespace\n        // newElement.setAttribute(\"d\",\"M 0 0 L 10 10\"); //Set path's data\n        // newElement.style.stroke = \"#000\"; //Set stroke colour\n        // newElement.style.strokeWidth = \"5px\"; //Set stroke width\n        // this.div.appendChild(newElement);\n\n        const img = new Image();\n        img.src = process.env.PUBLIC_URL + '/static/dataDummyReady/readyLabs.png';\n        img.style.position = 'relative';\n        img.style.width = '150px';\n        img.style.margin = '15px';\n        img.style.marginTop = '30px';\n        img.style.marginBottom = '0px';\n        let a = document.createElement('a');\n        a.href='https://ready.net/';\n        a.appendChild(img);\n        this.div.appendChild(a);\n\n        let div = document.createElement('div');\n        div.textContent = 'Capture Map';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.downloadScreen();\n        }\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Set Extent';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.flyTo(-112.188375, 35.267735);\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Add Shape';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.addShape();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Shape Type';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.shiftShapeType();\n        };\n        this.div.appendChild(div);\n\n        div = document.createElement('div');\n        div.textContent = 'Animation';\n        div.style.color = '#fff';\n        // div.style.width = '100px';\n        div.style.position = 'relative';\n        div.style.margin = '20px';\n        div.onclick = () => {\n            this.solution.common.toggleAnimation();\n        };\n        this.div.appendChild(div);\n    }\n}","import * as turf from '@turf/turf';\n\nimport { Solution } from '../';\nimport { ACCommon } from '../Common';\nimport { ActiveCommander } from '../ActiveCommander';\nimport { GeometryBase } from '../RendererWrapper/CanvasCustom/Geometry/Base/GeometryBase';\nimport { hex2RGB, drawingPoint } from '../lib'\nimport { LANDUSE_TYPE_MAPPING, FUNDING_STATUS_MAPPING } from '../lib/constant';\n\nexport class Scene {\n    public solution: Solution;\n    public ac: ActiveCommander;\n    public common: ACCommon;\n\n    public pts: number[] = [];\n\n    public area: GeometryBase | undefined = undefined;\n    public captured: GeometryBase | undefined = undefined;\n\n    public points: any;\n    public polygonsDifference: any = [];\n    public ids: boolean[] =[];\n\n    constructor(solution: Solution) {\n        this.solution = solution;\n        this.ac = solution.activeCommander;\n        this.common = solution.common;\n    }\n    public async init() {\n        this.common.center(-112.190375, 35.257177);\n        this.common.zoom(13);\n\n        const polygons = await this.common.loadDataLocal('funded_census_blocks.geojson');\n        const gons = [];\n        const ids = [];\n        const colDefault = hex2RGB(FUNDING_STATUS_MAPPING.default.color);\n        const colAssigned = hex2RGB(FUNDING_STATUS_MAPPING.assigned.color);\n        // console.log(polygons);\n        for (let i of polygons['features']) {\n            const p = (i['geometry']['coordinates']);\n            let color = undefined;\n            const grantStatus = (i['properties']['grant_long_status']);\n            // console.log(grantStatus)\n            if (grantStatus === 'default') { color = colDefault; }\n            else { color = colAssigned; }\n            // if (Math.random() < 0.3) { color = ColorUtility.GetRandomRGBArray(); }\n            // console.log(color)\n            gons.push({ contour: p[0], size: 15, color: color });\n            ids.push(false);\n        }\n        // console.log(gons)\n        this.ids = ids;\n        const onClickEvent = (info, event) => {\n            // console.log('!', info)\n            // console.log('!', info.index)\n            this.ids[info.index] = !this.ids[info.index];\n            // console.log(this.ids)\n        }\n        this.common.addPolygonLayer(gons, onClickEvent);\n\n\n        const polygonsDiff = await this.common.loadDataLocal('funded_census_blocks.geojson');\n        this.polygonsDifference = []\n        for (let i of polygonsDiff['features']) {\n            const p = (i['geometry']['coordinates']);\n            // console.log(p[0])\n            this.polygonsDifference.push(turf.polygon(p[0]));\n        }\n\n        // dummy\n        let data = [\n            { position: [-74.5, 40], size: 10000 },\n            { position: [-74.5, 40.5], size: 5000 },\n            { position: [-74.6, 40.5], size: 5800 },\n            { position: [-74.7, 40.5], size: 100 },\n        ];\n        this.common.addScatterLayer(data);\n\n        let data2 = [\n            { pickup: [-122.42, 37.8], dropoff: [-74.5, 40.5] },\n            { pickup: [-122.43, 37.8], dropoff: [-122.42, 37.75] }\n        ];\n        this.common.addArcLayer(data2);\n\n\n        const points = await this.common.loadDataLocal('underserved_locations.geojson');\n        // console.log(d);\n        const colR = hex2RGB(LANDUSE_TYPE_MAPPING.R.color);\n        const colB = hex2RGB(LANDUSE_TYPE_MAPPING.B.color);\n        const pts = []\n        for (let i of points['features']) {\n            const p = (i['geometry']['coordinates']);\n            const landuse = (i['properties']['landuse']);\n\n            let color = undefined;\n            if (landuse === 'R') { color = colR; }\n            else if (landuse === 'B') { color = colB; }\n            else { color = [0, 128, 0]; }\n\n            pts.push({ position: [p[0], p[1]], size: 15, color: color });\n        }\n        this.common.addScatterLayer(pts);\n        this.points = points;\n    }\n    public renderCanvas(ctx: CanvasRenderingContext2D) {\n        if (this.area) { this.area.render(ctx); }\n\n        ctx.fillStyle = '#f00';\n        for (let i = 0; i < this.pts.length; ++i) {\n            const p = this.pts[i];\n            drawingPoint(ctx, p[0], p[1]);\n        }\n    }\n}\n\n","import { ACCommon } from './Common';\r\nimport { ActiveCommander } from './ActiveCommander';\r\nimport { RendererWrapper } from './RendererWrapper';\r\nimport { UIWrapper } from './UI';\r\nimport { Scene } from './Scene';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLDivElement;\r\n    public common: ACCommon;\r\n    public activeCommander: ActiveCommander;\r\n    public uiWrapper: UIWrapper;\r\n    public rendererWrapper: RendererWrapper;\r\n    public scene: Scene;\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        this.divHost.style.position = 'relative';\r\n        this.init();\r\n        this.initPost();\r\n    }\r\n    public init() {\r\n        this.common = new ACCommon(this);\r\n        this.activeCommander = new ActiveCommander(this);\r\n        this.scene = new Scene(this);\r\n        this.rendererWrapper = new RendererWrapper(this);\r\n        this.uiWrapper = new UIWrapper(this);\r\n    }\r\n    public destroy() {\r\n        this.rendererWrapper.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n    public async initPost() {\r\n        await this.scene.init();\r\n    }\r\n}"],"names":["GeometryBase","constructor","scene","isHovered","type","hasAnimation","this","area","isInside","x","y","translate","update","onMouseUp","render","ctx","renderPost","hex2RGB","hex","isGray","replace","r","parseInt","substring","g","b","v","RVector3","z","lng","lat","ele","drawingPoint","beginPath","arc","Math","PI","closePath","fill","LANDUSE_TYPE_MAPPING","text","color","FUNDING_STATUS_MAPPING","Renderer","host","pathCroppedArea","renderAreaBounding","renderCroppedArea","renderProperties","renderControlPoint","updateNeeded","solution","rendererWrapper","mapBoxWrapper","map","isMoving","diff","difference","polygonTurfOriginal","polygonsDifference","ids","polygonTurfSubtracted","computePathPolygon","common","toScreen","setLineDash","lineDashOffset","t","lineWidth","strokeStyle","op","sin","fillStyle","stroke","pts","forEach","ellipse","cv","width","height","rect","turf","textAlign","font","fillText","toFixed","points","other","i","features","length","properties","polygons","boolean","object","projection","path","Path2D","j","pathOut","p","sp","moveTo","lineTo","addPath","Transform","preX","activeCommander","mp","mpPre","preY","capturedVecId","updateCenterVec","updateProjection","xSum","ySum","toMap","updatePolygonTurf","Area","super","renderer","transform","canvas","widthHalf","heightHalf","push","mVec","v0","v1","sqrt","m","r0","r1","threshold","pow","isInsideEllipse","vecs","inside","xi","yi","xj","yj","isInsideOfVecs","abs","ACCommon","zoom","flyTo","center","lon","downloadScreen","enablePan","dragPan","enable","disablePan","disable","getJSONFromURL","process","addScatterLayer","data","deckGL","addArcLayer","addPolygonLayer","onClick","addShape","shiftShapeType","toggleAnimation","checkHoverArea","pickObject","obj","console","log","index","ActiveCommander","mouseDown","e","updateMousePos","captured","mouseUp","undefined","mouseDrag","point","updateMousePrePos","mouseClick","mouseMove","lngLat","keyDown","k","key","toLocaleLowerCase","toLowerCase","MapboxGLWrapper","canvasMapbox","isPressed","zoomTo","setCenter","unproject","project","error","mouseDClick","initMap","divHost","id","mapboxgl","preserveDrawingBuffer","container","style","dragRotate","on","window","addEventListener","div","document","getElementsByClassName","position","display","initPost","getCanvas","initCustomCanvas","getBounds","addSource","coordinates","animate","addLayer","source","downloadImage","customCanvas","fileName","canvasOut","createElement","context","getContext","globalAlpha","drawImage","img","Image","src","toDataURL","link","download","href","click","DeckGL","layers","deckLayer","MapboxLayer","ScatterplotLayer","getPosition","d","getRadius","size","getFillColor","getLineColor","info","event","PolygonLayer","pickable","stroked","filled","wireframe","lineWidthMinPixels","getPolygon","contour","getElevation","getLineWidth","ArcLayer","getSourcePosition","pickup","getTargetPosition","dropoff","getSourceColor","getTargetColor","strokeWidth","label","pick","RendererCanvas","time","isActive","pointerEvents","start","getZoom","zoomFactor","pt","renderCanvas","RendererWrapper","destroy","UIWrapper","divMenu","appendChild","initUI","margin","marginTop","marginBottom","a","textContent","onclick","Scene","ac","loadDataLocal","gons","colDefault","colAssigned","polygonsDiff","colR","colB","landuse","Solution","uiWrapper","init","lastElementChild","removeChild"],"sourceRoot":""}