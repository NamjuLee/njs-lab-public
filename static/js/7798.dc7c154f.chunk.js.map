{"version":3,"file":"static/js/7798.dc7c154f.chunk.js","mappings":"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","sources":["njslab/Lab/image-dithering/index.ts"],"sourcesContent":["import { RendererCanvas, getImgFromURL, TypeDithering, dithering4_4, ditheringFloydSteinberg } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n    img: HTMLImageElement | undefined = undefined\r\n    rotation = 0.0;\r\n    m: number[] = [0, 0];\r\n\r\n    switch = true;\r\n\r\n    typeDithering: TypeDithering;\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n        // getImgFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/img/person/HaminHaram.jpg').then( (img: HTMLImageElement) => {\r\n        getImgFromURL('https://www.glenstone.org/wp-content/uploads/2018/07/AV_Landscape-Hero-Contour-2993-1276x800.jpg').then((img: HTMLImageElement) => {\r\n            this.img = img;\r\n            this.img.onload = (ev) => {\r\n                this.canvas.width = this.img.width;\r\n                this.canvas.height = this.img.height;\r\n                this.render(this.ctx, this.typeDithering);\r\n            }\r\n        });\r\n        const divInput = document.createElement('input');\r\n        divInput.value = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/person/HaminHaram.jpg';\r\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\r\n            if (e.code === 'Enter') {\r\n                getImgFromURL(divInput.value).then((img: HTMLImageElement) => {\r\n                    //     console.log(img)\r\n                    this.img = img;\r\n                    this.img.onload = (ev) => {\r\n                        this.canvas.width = this.img.width;\r\n                        this.canvas.height = this.img.height;\r\n                        this.render(this.ctx, this.typeDithering);\r\n                    }\r\n                });\r\n            }\r\n\r\n        })\r\n        this.divHost.appendChild(divInput);\r\n\r\n        const divMain_01 = document.createElement('div');\r\n        divMain_01.style.display = 'flex';\r\n        divMain_01.style.marginTop = '15px';\r\n        this.divHost.appendChild(divMain_01);\r\n\r\n   \r\n\r\n        // const divDark = document.createElement('div');\r\n        // divMain_01.appendChild(divDark);\r\n        // divDark.style.paddingRight = '100px';\r\n        // divDark.textContent = 'Darken';\r\n        // // divDark.style.position = 'absolute';\r\n        // divDark.style.color = 'aqua';\r\n        // divDark.onclick = () => {\r\n        //     // this.tints.push(new LocalTintCanvas(this, this.divHost.clientWidth * 0.5, this.divHost.clientHeight * 0.5, COLOR_BLENDING.OVERLAY, [0, 0, 0]))\r\n        // };\r\n\r\n        // const divswitch = document.createElement('div');\r\n        // divMain_01.appendChild(divswitch);\r\n        // divswitch.textContent = 'Toggle';\r\n        // // divswitch.style.position = 'absolute';\r\n        // divswitch.style.color = 'aqua';\r\n        // divswitch.onclick = () => {\r\n        //     this.switch = !this.switch;\r\n        // };\r\n        // \r\n\r\n\r\n        // const divMain_02 = document.createElement('div');\r\n        // divMain_02.style.display = 'flex';\r\n        // this.divHost.appendChild(divMain_02);\r\n\r\n        // const sl0 = getSlider('R1', 20, 400);\r\n        // divMain_02.appendChild(sl0.div);\r\n        // sl0.slider.oninput = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.radiusX = +sl0.slider.value;\r\n        //     // }\r\n        // };\r\n\r\n        // const sl1 = getSlider('R2', 20, 400);\r\n        // divMain_02.appendChild(sl1.div);\r\n        // sl1.slider.oninput = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.radiusY = +sl1.slider.value;\r\n        //     // }\r\n        // };\r\n\r\n\r\n        // const sl2 = getSlider('Feather', 4, 50);\r\n        // this.divHost.appendChild(sl2.div);\r\n        // sl2.slider.oninput = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.blur = +sl2.slider.value;\r\n        //     // }\r\n        // };\r\n\r\n        const slType = getSlider(TypeDithering.BayerOrderedDithering, 0, 1);\r\n        this.divHost.appendChild(slType.div);\r\n        slType.slider.oninput = () => {\r\n            const value = parseInt(slType.slider.value);\r\n\r\n            if (value === 0) {\r\n                this.typeDithering = TypeDithering.FloydSteinberg;\r\n                slType.text.textContent = TypeDithering.FloydSteinberg;\r\n            } else {\r\n                this.typeDithering = TypeDithering.BayerOrderedDithering;\r\n                slType.text.textContent = TypeDithering.BayerOrderedDithering;\r\n            }\r\n            // if (this.capture) {\r\n            //     this.capture.opacity = +sl3.slider.value * 0.01;\r\n            // }\r\n\r\n            this.render(this.ctx, this.typeDithering);\r\n        };\r\n\r\n        // const divInputColor = document.createElement('input');\r\n        // divInputColor.type = 'color';\r\n        // divInputColor.addEventListener('input', () => {\r\n        //     //     console.log(divInputColor.value)\r\n        //     // if (this.capture) {\r\n        //     //     const colArray = hex2RGBA(divInputColor.value)\r\n        //     //     // this.capture.opacity = +sl3.slider.value * 0.01;\r\n        //     //     this.capture.rgb = colArray;\r\n        //     // //     console.log(colArray)\r\n        //     // }\r\n        // });\r\n        // this.divHost.appendChild(divInputColor);\r\n\r\n        // const divInputFilterName = document.createElement('input');\r\n        // divInputFilterName.onchange = () => {\r\n        //     // if (this.capture) {\r\n        //     //     this.capture.globalCompositeOperation = divInputFilterName.value as GlobalCompositeOperation;\r\n        //     // }\r\n        // }\r\n        // this.divHost.appendChild(divInputFilterName);\r\n\r\n        const inputFile = document.createElement('input');\r\n        inputFile.type = 'file';\r\n        inputFile.onchange = (e) => {\r\n\r\n            //@ts-ignore\r\n            if (e.target.files) {\r\n                //@ts-ignore\r\n                let imageFile = e.target.files[0]; //here we get the image file\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(imageFile);\r\n                reader.onloadend = (e) => {\r\n\r\n                    console.log(e.target.result);\r\n\r\n                    const img = new Image(); // Creates image object\r\n                    //@ts-ignore\r\n                    img.src = e.target.result; // Assigns converted image to image object\r\n                    img.onload = (ev) => {\r\n                        this.img = img;\r\n                        this.canvas.width = this.img.width;\r\n                        this.canvas.height = this.img.height;\r\n                        this.render(this.ctx, this.typeDithering);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        divMain_01.appendChild(inputFile);\r\n\r\n        const divLight = document.createElement('div');\r\n        divMain_01.appendChild(divLight);\r\n        divLight.textContent = 'Base64';\r\n        divLight.style.paddingRight = '50px';\r\n        // divLight.style.position = 'absolute';\r\n        // divLight.style.color = 'aqua';\r\n        divLight.onclick = () => {\r\n            const base64 = this.ctx.canvas.toDataURL();\r\n            console.log(base64);\r\n        }\r\n\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, typeDitheringType?: TypeDithering): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        if (this.img) {\r\n            this.ctx.drawImage(this.img, 0, 0);\r\n        }\r\n        this.ctx.restore();\r\n\r\n        switch (typeDitheringType) {\r\n            case TypeDithering.FloydSteinberg:\r\n                ditheringFloydSteinberg(ctx);\r\n                break;\r\n            default:\r\n                dithering4_4(ctx);\r\n                break;\r\n        }\r\n\r\n        // !! can stop render after this frame.\r\n        this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        this.m = [x, y];\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        this.m = [x, y];\r\n\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        this.m = [x, y];\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        this.m = [x, y];\r\n    }\r\n    public keyDown(k: KeyboardEvent): void {\r\n        // TODO\r\n    }\r\n}\r\n\r\nexport const getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n    return {\r\n        div, slider, text\r\n    }\r\n};\r\n"],"names":["Solution","constructor","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","img","undefined","rotation","m","switch","typeDithering","canvas","position","getImgFromURL","then","onload","ev","render","ctx","divInput","value","addEventListener","e","code","divMain_01","marginTop","slType","getSlider","TypeDithering","slider","oninput","parseInt","text","textContent","inputFile","type","onchange","target","files","imageFile","reader","FileReader","readAsDataURL","onloadend","console","log","result","Image","src","divLight","paddingRight","onclick","base64","toDataURL","start","typeDitheringType","drawImage","restore","ditheringFloydSteinberg","dithering4_4","isStatic","mouseDown","x","y","mouseUp","mouseDrag","mouseClick","mouseMove","keyDown","k","title","min","max","color"],"sourceRoot":""}