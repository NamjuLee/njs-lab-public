{"version":3,"file":"static/js/36329.0673de35.chunk.js","mappings":"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","sources":["../node_modules/d3-geo/node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/stream.js"],"sourcesContent":["// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","export default x => x;\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n"],"names":["Adder","constructor","this","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","Math","abs","valueOf","n","a","b","compose","invert","range","start","stop","step","arguments","length","max","ceil","Array","graticuleX","y0","y1","dy","epsilon","concat","map","graticuleY","x0","x1","dx","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","precision","type","coordinates","lines","filter","outline","slice","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","log","floor","hypot","pow","sin","sign","sqrt","tan","acos","asin","noop","Infinity","point","lineStart","lineEnd","polygonStart","polygonEnd","result","bounds","x00","y00","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","NaN","centroidPointFirstLine","centroidPointLine","z","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","prototype","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","arc","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","d","RangeError","k","strings","round","appendRound","r","s","projection","projectionStream","contextStream","path","object","apply","stream","pathArea","measure","pathMeasure","pathBounds","pathCentroid","identity","conicProjection","projectAt","phi0","phi1","m","projectionMutator","parallels","conicEqualAreaRaw","sy0","cosPhi0","forward","lambda","phi","cylindricalEqualAreaRaw","c","r0","project","r0y","l","scale","center","fit","fitBounds","clip","clipExtent","translate","geoStream","boundsStream","fitExtent","w","h","min","fitSize","size","fitWidth","width","fitHeight","height","line","push","rejoin","pop","shift","Intersection","points","other","entry","o","e","v","segments","compareIntersection","startInside","interpolate","subject","forEach","segment","p0","p1","pointEqual","sort","link","current","isSubject","array","spherical","cartesian","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","longitude","merge","arrays","from","flatten","pointVisible","clipLine","sink","polygon","ring","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","sinPhi","normal","angle","winding","sum","point0","lambda0","sinPhi0","lambda1","sinPhi1","cosPhi1","point1","delta","absDelta","antimeridian","intersection","phiArc","polygonContains","clipRejoin","sphere","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","circleRadius","t","clipMax","clipMin","clipRectangle","visible","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","ax","ay","transformer","methods","TransformStream","key","maxDepth","cosMinDistance","delta2","resampleLineTo","c0","c1","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","deltaLambda","deltaPhi","deltaGamma","theta","preclip","clipAntimeridian","postclip","recenter","rotateRadians","reset","transformRotate","undefined","clipAngle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","A","u","uu","t2","q","polar","q1","code","v0","v00","point2","clipCircle","reflectX","reflectY","rotationIdentity","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","streamGeometry","geometry","streamGeometryType","hasOwnProperty","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate"],"sourceRoot":""}