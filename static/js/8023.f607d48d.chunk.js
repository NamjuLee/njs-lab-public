"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[8023],{28023:function(e,t,s){s.r(t),s.d(t,{execute:function(){return o}});var a=s(10064),r=s(92026);let n;function o(e,t){let s=t.responseType;s?"array-buffer"!==s&&"blob"!==s&&"json"!==s&&"native"!==s&&"native-request-init"!==s&&"text"!==s&&(s="text"):s="json",t.responseType=s;const o=(0,r.Wg)(t.signal);return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:o}).then((async r=>{let i,l,u,c,b;if(r.data)if(r.data instanceof ArrayBuffer){if(!("json"!==s&&"text"!==s&&"blob"!==s||(i=new Blob([r.data]),"json"!==s&&"text"!==s||(n||(n=new FileReaderSync),c=n.readAsText(i),"json"!==s)))){try{l=JSON.parse(c||null)}catch(f){const s={...f,url:e,requestOptions:t};throw new a.Z("request:server",f.message,s)}if(l.error){const s={...l.error,url:e,requestOptions:t};throw new a.Z("request:server",l.error.message,s)}}}else"native"===s&&(r.data.signal=o,u=await fetch(r.data.url,r.data));switch(s){case"blob":b=i;break;case"json":b=l;break;case"native":b=u;break;case"text":b=c;break;default:b=r.data}return{data:b,requestOptions:t,ssl:r.ssl,url:e}}))}}}]);
//# sourceMappingURL=8023.f607d48d.chunk.js.map