"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[4021],{89739:function(e,t,i){i.d(t,{Du:function(){return o}});const o=(e,t,i)=>{const o=document.createElement("div");o.style.display="flex";const n=document.createElement("input");n.type="range",n.min="".concat(t),n.max="".concat(i);const s=document.createElement("div");return s.textContent=e,s.style.color="#aaa",o.appendChild(n),o.appendChild(s),{div:o,slider:n,text:s}}},74021:function(e,t,i){i.r(t),i.d(t,{Solution:function(){return s}});var o=i(89739);class n{constructor(e){this.divHost=void 0,this.solution=void 0,this.divColor=void 0,this.divRange=void 0,this.solution=e,this.divHost=e.divHost,this.divColor=document.createElement("input"),this.divColor.type="color",this.divColor.defaultValue="#ff0000",this.divHost.appendChild(this.divColor),this.divRange=(0,o.Du)("size",0,100),this.divHost.appendChild(this.divRange.div),this.appendEvent()}appendEvent(){this.divColor.addEventListener("input",(e=>{const t=e.target.value,i=+("0x"+t.slice(1,3))/255,o=+("0x"+t.slice(3,5))/255,n=+("0x"+t.slice(5,7))/255;this.solution.device.queue.writeBuffer(this.solution.pipelineObj.colorBuffer,0,new Float32Array([i,o,n,1])),this.solution.run()})),this.divRange.slider.addEventListener("input",(e=>{const t=+e.target.value;this.solution.vertex[0]=0,this.solution.vertex[3]=-.01*t-.5,this.solution.vertex[6]=.5+.01*t,this.solution.device.queue.writeBuffer(this.solution.pipelineObj.vertexBuffer,0,this.solution.vertex),this.solution.run()})),window.addEventListener("resize",(()=>{this.solution.canvas.width=this.solution.divHost.clientWidth,this.solution.canvas.height=this.solution.divHost.clientHeight,this.solution.run()}))}}class s{constructor(e){this.divHost=void 0,this.canvas=void 0,this.ctx=void 0,this.device=void 0,this.format=void 0,this.size=void 0,this.pipelineObj=void 0,this.ui=void 0,this.vertex=new Float32Array([0,.5,0,-.5,-.5,0,.5,-.5,0]),this.vertexCount=3,this.divHost=document.getElementById(e),this.canvas=document.createElement("canvas"),this.divHost.appendChild(this.canvas),this.ui=new n(this),this.initWebGPU()}async initWebGPU(){if(!navigator.gpu)throw new Error("Not Support WebGPU");const e=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!e)throw new Error("No Adapter Found");const t=await e.requestDevice();this.ctx=this.canvas.getContext("webgpu");const i=navigator.gpu.getPreferredCanvasFormat?navigator.gpu.getPreferredCanvasFormat():this.ctx.getPreferredFormat(e);window.devicePixelRatio;this.canvas.width=this.divHost.clientWidth,this.canvas.height=this.divHost.clientHeight,this.ctx.configure({device:t,format:i,alphaMode:"opaque"}),this.size={width:this.canvas.width,height:this.canvas.height},this.device=t,this.format=i,this.initPipeline(this.device,this.format)}async initPipeline(e,t){const i=await e.createRenderPipelineAsync({label:"Basic Pipline",layout:"auto",vertex:{module:e.createShaderModule({code:"\n@vertex\nfn main(@location(0) position : vec3<f32>) -> @builtin(position) vec4<f32> {\n    return vec4<f32>(position, 1.0);\n}\n"}),entryPoint:"main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,offset:0,format:"float32x3"}]}]},fragment:{module:e.createShaderModule({code:"\n@group(0) @binding(0) var<uniform> color : vec4<f32>;\n\n@fragment\nfn main() -> @location(0) vec4<f32> {\n    return color;\n}\n"}),entryPoint:"main",targets:[{format:t}]},primitive:{topology:"triangle-list"}}),o=e.createBuffer({label:"GPUBuffer store vertex",size:this.vertex.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(o,0,this.vertex);const n=e.createBuffer({label:"GPUBuffer store rgba color",size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(n,0,new Float32Array([1,0,0,1]));const s=e.createBindGroup({label:"Uniform Group with colorBuffer",layout:i.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:n}}]});this.pipelineObj={pipeline:i,vertexBuffer:o,colorBuffer:n,uniformGroup:s},this.run()}run(){this.draw(this.device,this.ctx,this.pipelineObj)}draw(e,t,i){const o=e.createCommandEncoder(),n={colorAttachments:[{view:t.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]},s=o.beginRenderPass(n);s.setPipeline(i.pipeline),s.setBindGroup(0,i.uniformGroup),s.setVertexBuffer(0,i.vertexBuffer),s.draw(this.vertexCount),s.end(),e.queue.submit([o.finish()])}destroy(){for(this.device.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}}}]);
//# sourceMappingURL=4021.d44f6277.chunk.js.map