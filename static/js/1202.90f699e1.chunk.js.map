{"version":3,"file":"static/js/1202.90f699e1.chunk.js","mappings":"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","sources":["njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Core/ActiveCommandController.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Core/GeometryCommon.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Core/DefinitionIndeCanvasCore.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BallBounce.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BallBounceClass.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/CircleGrid.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/CircleGridAttractors1.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/CircleGridAttractors2.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/DefinitionLine.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/DefinitionLine2.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BPath.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BoidContoller1.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystem01.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BoidContollerWander0.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystemWander0.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BoidContollerWander1.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystemWander1.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystem04.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/Dynamics/DynamicSystem/Core/DNode.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/Dynamics/DynamicSystem/Matter/MBox.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/Dynamics/DynamicSystem/DynamicSystem01.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/Dynamics/Dynamic01.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/Dynamics/Dynamic02.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/Dynamics/Dynamic03.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/MatterSandbox/MGeometry/Base/MGeometryBase.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/MatterSandbox/MGeometry/MBox.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/MatterSandbox/MGeometry/MCircle.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/MatterSandbox/Scene/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/MatterSandbox/Core/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/MatterSandbox/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/OOP/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/FluidSimulation/Core/Utility.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/FluidSimulation/Core/Fluid.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/FluidSimulation/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/PerlinHeatmap/Core/Perlin.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/PerlinHeatmap/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/ColorPicker/Core/ColorPicker.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/ColorPicker/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmMazeExit.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmCabbage.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmBaconsLaw.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmFireExit.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmNumOfArea.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmComputerFinder.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmKoze.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmUnitMoving.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmTile.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmOKVIRI.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmDFSBFS.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/AlgorithmBuilding.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/GridOpti/GridOptiA.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/CustomDynamicBin/index.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/Definition/Blank.ts","njslab/app-legacy/Implementation/Envs/AppCanvasEnv/Implementation/SceneCreativeCoding/index.ts","njslab/app-legacy/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas.ts"],"sourcesContent":["import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: SceneCreativeCoding;\r\n\r\n    constructor(scene: SceneCreativeCoding) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { SceneCreativeCoding } from '..';\r\n\r\nexport class GeomeetryCommon {\r\n\r\n    scene: SceneCreativeCoding;\r\n\r\n    constructor(scene: SceneCreativeCoding) {\r\n        this.scene = scene;\r\n    }\r\n\r\n}","import { IndependentPanelCanvas } from '../../../../../../NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\n\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: SceneCreativeCoding;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        this.scene = SceneCreativeCoding;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas();\r\n    }\r\n    InitIndeCanvas() {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, 650, 350, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, 650, 450, true);\r\n        }\r\n        this.indeCanvas.title = 'Circle Grid with Attractors 2';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class BallBounce extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n    }\r\n    init() {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        // Update the position of the shape\r\n        this.xpos = this.xpos + (this.xspeed * this.xdirection);\r\n        this.ypos = this.ypos + (this.yspeed * this.ydirection);\r\n\r\n        // Test to see if the shape exceeds the boundaries of the screen\r\n        // If it does, reverse its direction by multiplying by -1\r\n        if (this.xpos > this.width - this.rad || this.xpos < this.rad) {\r\n            this.xdirection *= -1;\r\n        }\r\n        if (this.ypos > this.height - this.rad || this.ypos < this.rad) {\r\n            this.ydirection *= -1;\r\n        }\r\n\r\n        // Draw the shape\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.xpos, this.ypos, this.rad, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class BallBounceClass extends DefinitionIndeCanvasCore {\r\n\r\n    Balls: Ball[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.Balls.push(new Ball(this, 50, 50));\r\n        this.Balls.push(new Ball(this, 100, 100));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        for (let b of this.Balls) { b.Render(ctx); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.Balls.push(new Ball(this, x, y));\r\n    }\r\n}\r\n\r\nclass Ball {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n\r\n    BallBounceClass: BallBounceClass;\r\n\r\n    color: string;\r\n\r\n    static GetRandomHex() {\r\n        return this.RGBToHex(Math.round(Math.random() * 255), Math.round(Math.random() * 255), Math.round(Math.random() * 255));\r\n    }\r\n    static RGBToHex(r: number, g: number, b: number) {\r\n        return '#' + [Math.round(r), Math.round(g), Math.round(b)].map(x => {\r\n            const hex = x.toString(16);\r\n            return hex.length === 1 ? '0' + hex : hex;\r\n        }).join('');\r\n    }\r\n    constructor(BallBounceClass: BallBounceClass, x: number, y: number) {\r\n        this.BallBounceClass = BallBounceClass;\r\n        this.xpos = x;\r\n        this.ypos = y;\r\n        this.xdirection = (Math.random() * 2) - 1;\r\n        this.ydirection = (Math.random() * 2) - 1;\r\n        this.rad = (Math.random() * 50) + 10;\r\n        this.color = Ball.GetRandomHex();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.xpos = this.xpos + (this.xspeed * this.xdirection);\r\n        this.ypos = this.ypos + (this.yspeed * this.ydirection);\r\n        if (this.xpos > this.BallBounceClass.width - this.rad || this.xpos < this.rad) {\r\n            this.xdirection *= -1;\r\n        }\r\n        if (this.ypos > this.BallBounceClass.height - this.rad || this.ypos < this.rad) {\r\n            this.ydirection *= -1;\r\n        }\r\n\r\n        // Draw the shape\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(this.xpos, this.ypos, this.rad, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class CircleGrid extends DefinitionIndeCanvasCore {\r\n\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.mouse = [0, 0];\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.pts = [];\r\n        let xInterval = 40;\r\n        let yInterval = 40;\r\n\r\n        let xDis = this.width / xInterval;\r\n        let yDis = this.height / yInterval;\r\n\r\n        for (let j = 0; j < yInterval; j += 1) {\r\n            for (let i = 0; i < xInterval; i += 1) {\r\n                this.pts.push([i * xDis, j * yDis]);\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        for (let p of this.pts) {\r\n            if (i % 2 === 0) {\r\n                let col = [50, 50, 50, 1];\r\n                let dis = this.Distance(p[0], p[1], this.mouse[0], this.mouse[1]);\r\n                col[0] = dis;\r\n                ctx.strokeStyle = `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(p[0], p[1], dis / 10, 0, 3.14 * 2);\r\n                ctx.stroke();\r\n            }\r\n            i++;\r\n        }\r\n\r\n    }\r\n    Distance(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class CircleGridAttractors1 extends DefinitionIndeCanvasCore {\r\n\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n\r\n    attrs: number[][] = [[0, 0]];\r\n    strength: number = 50;\r\n    falloff: number = 0.00005;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.mouse = [0, 0];\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.pts = [];\r\n        let xInterval = 60;\r\n        let yInterval = 40;\r\n\r\n        let xDis = this.width / xInterval;\r\n        let yDis = this.height / yInterval;\r\n\r\n        for (let j = 0; j < yInterval; j += 1) {\r\n            for (let i = 0; i < xInterval; i += 1) {\r\n                this.pts.push([i * xDis, j * yDis]);\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        for (let p of this.pts) {\r\n            if (i % 2 === 0) {\r\n                let col = [50, 255, 0, 1];\r\n\r\n                let dis = 0;\r\n                for (let j of this.attrs) {\r\n                    let distance = this.Attractor(p, j, this.strength, this.falloff);\r\n                    if (dis < distance) { dis = distance; }\r\n                }\r\n\r\n                col[2] += dis * 3;\r\n                ctx.strokeStyle = `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(p[0], p[1], 10 + dis, 0, 3.14 * 2);\r\n                ctx.stroke();\r\n            }\r\n            i++;\r\n        }\r\n\r\n    }\r\n    Attractor(pt: number[], attractor: number[], strength: number, falloff: number): number {\r\n        let v = this.Sub(pt, attractor);\r\n        let dist = this.Length(v);\r\n        let result = strength * Math.exp(-falloff * dist * dist);\r\n        return result;\r\n    }\r\n    Sub(v0: number[], v1: number[]): number[] {\r\n        return [v0[0] - v1[0], v0[1] - v1[1]];\r\n    }\r\n    Unitize(v: number[]): number[] {\r\n        let len = this.Length(v);\r\n        return [v[0] / len, v[1] / len];\r\n    }\r\n    Length(v: number[]) {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.attrs[this.attrs.length - 1] = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.attrs.push([x, y]);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        this.falloff += v * 0.0000001;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class CircleGridAttractors2 extends DefinitionIndeCanvasCore {\r\n\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n\r\n    attrs: number[][] = [[0, 0]];\r\n    strength: number = 50;\r\n    falloff: number = 0.00005;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.mouse = [0, 0];\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.pts = [];\r\n\r\n        let xInterval = 50;\r\n        let yInterval = 20;\r\n\r\n        let xDis = this.width / xInterval;\r\n        let yDis = this.height / yInterval;\r\n        // let xDis = this.scene.width / xInterval;\r\n        // let yDis = this.scene.height / yInterval;\r\n\r\n        for (let j = 0; j < yInterval; j += 1) {\r\n            for (let i = 0; i < xInterval; i += 1) {\r\n                this.pts.push([i * xDis, j * yDis]);\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        for (let p of this.pts) {\r\n            if (i % 2 === 0) {\r\n                let col = [0, 20, 0, 1];\r\n\r\n                let dis = 0;\r\n                for (let j of this.attrs) {\r\n                    let distance = this.Attractor(p, j, this.strength, this.falloff);\r\n                    if (dis < distance) { dis = distance; }\r\n                }\r\n\r\n                col[2] += dis * 3;\r\n                ctx.strokeStyle = `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(p[0], p[1], 10 + dis, 0, 3.14 * 2);\r\n                ctx.stroke();\r\n            }\r\n            i++;\r\n        }\r\n\r\n    }\r\n    Attractor(pt: number[], attractor: number[], strength: number, falloff: number): number {\r\n        let v = this.Sub(pt, attractor);\r\n        let dist = this.Length(v);\r\n        let result = strength * Math.exp(-falloff * dist * dist);\r\n        return result;\r\n    }\r\n    Sub(v0: number[], v1: number[]): number[] {\r\n        return [v0[0] - v1[0], v0[1] - v1[1]];\r\n    }\r\n    Unitize(v: number[]): number[] {\r\n        let len = this.Length(v);\r\n        return [v[0] / len, v[1] / len];\r\n    }\r\n    Length(v: number[]) {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.attrs[this.attrs.length - 1] = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.attrs.push([x, y]);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        this.falloff += v * 0.0000001;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class DefinitionLine extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    lines: Line[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Line';\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        for (let l of this.lines) {\r\n            l.Render(ctx);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        const p1 = this.lines[this.lines.length - 1].p1;\r\n        this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1]));\r\n    }\r\n\r\n}\r\n\r\nclass Line {\r\n    p0: number[];\r\n    p1: number[];\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        this.p0 = [x0, y0];\r\n        this.p1 = [x1, y1];\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = 'red';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0[0], this.p0[1]);\r\n        ctx.lineTo(this.p1[0], this.p1[1]);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class DefinitionLine2 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    lines: Line[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Line';\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        for (let l of this.lines) {\r\n            l.Render(ctx);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        if (this.lines.length > 5) { this.lines.shift(); }\r\n        const p1 = this.lines[this.lines.length - 1].p1;\r\n        this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1]));\r\n    }\r\n}\r\n\r\nclass Line {\r\n    p0: number[];\r\n    p1: number[];\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        this.p0 = [x0, y0];\r\n        this.p1 = [x1, y1];\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = 'red';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0[0], this.p0[1]);\r\n        ctx.lineTo(this.p1[0], this.p1[1]);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}","import { NVector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BPath {\r\n\r\n    static GetRandomPath(xMin: number, yMin: number, xMax: number, yMax: number, num: number = 10) {\r\n        let vs = [];\r\n        for (let i = 0; i < num; ++i) {\r\n            let x = MathUtility.GetRandomIntInclusive(xMin, xMax);\r\n            let y = MathUtility.GetRandomIntInclusive(yMin, yMax);\r\n            vs.push(new NVector3(x, y, 0));\r\n        }\r\n        return vs;\r\n    }\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { NVector3 } from '../../../../../lib';\r\n/*\r\nif (reset) {\r\n    num = 0;\r\n\r\n    bs = new BoidSystem(p0, p1);\r\n    // bs.InitTarget(p1);\r\n  }\r\n\r\n  num++;\r\n  A = num;\r\n\r\n  if(bs != null) {\r\n    exitBool = exit;\r\n    bs.Update();\r\n    p = bs.GetPoint();\r\n    // Print(bs.targetID.ToString());\r\n  }\r\n\r\n}\r\n\r\npublic BoidSystem bs;\r\n\r\npublic int num = 0;\r\n\r\npublic static bool exitBool = false;\r\n*/\r\n\r\nexport class BoidContoller1 {\r\n\r\n  boids: Boid[] = [];\r\n  targets: NVector3[];\r\n\r\n  constructor(targets: NVector3[]) {\r\n    this.boids = [];\r\n    this.targets = targets;\r\n\r\n    // for (let j = 0; j < p0.length; ++j ) {\r\n    //   for (let i = 0; i < 10; ++i ) {\r\n    //     let boid = new Boid(p0[j]);\r\n    //     boid.InitTarget(targets);\r\n    //     this.boids.push(boid);\r\n    //   }\r\n    // }\r\n\r\n  }\r\n  public AddAgent(x: number, y: number) {\r\n    let boid = new Boid(new NVector3(x, y));\r\n    boid.InitTarget(this.targets);\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    this.Col();\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public Col() {\r\n    for (let b of this.boids) {\r\n      b.col = false;\r\n    }\r\n\r\n    for (let j = 0; j < this.boids.length; ++j) {\r\n      let b0 = this.boids[j];\r\n      if (!b0.isRenderable) {\r\n        break;\r\n      }\r\n      for (let i = j + 1; i < this.boids.length; ++i) {\r\n        let b1 = this.boids[i];\r\n        let dis = b0.p.Distance(b1.p);\r\n        if (dis < 30) {\r\n          b1.col = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  public GetPoint() {\r\n    let pts: NVector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 5; // 1; // 5;\r\n  maxVelocity = 5; // 1; // 8;\r\n  maxSpeed = 5; // 1; // 13.0;\r\n  mass = 10.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: NVector3;\r\n  targets: NVector3[];\r\n  target: NVector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: NVector3;\r\n  steering: NVector3;\r\n  velocity: NVector3 = new NVector3(0, 0, 0);\r\n\r\n  constructor(p: NVector3) {\r\n    this.p = p;\r\n    this.target = new NVector3(p.x, p.y, p.z);\r\n  }\r\n  public InitTarget(targets: NVector3[]) {\r\n    // Boid.list.Add(this);\r\n    this.targets = targets;\r\n    this.target = this.targets[this.targetID];\r\n  }\r\n  public Update() {\r\n    this.UpdateTarget();\r\n    // this.UpdateVec0();\r\n    // this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  UpdateTarget() {\r\n    if (this.p.Distance(this.target) < 9) {\r\n      this.targetID++;\r\n      if (this.targetID < this.targets.length) {\r\n        this.target = this.targets[this.targetID];\r\n        if (this.targetID === this.targets.length - 1) {\r\n\r\n          // if (exitBool) {\r\n          //     this.isRenderable = false;\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  UpdateVec0() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x;\r\n      this.p.y += this.velocity.y;\r\n      this.p.z += this.velocity.z;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n\r\n    }\r\n  }\r\n  UpdateVec1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity = new NVector3(this.p.x - this.target.x , this.p.y - this.target.y ,  this.p.x - this.target.z );\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x); // < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y); //  < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z); // < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x;\r\n      this.p.y += this.velocity.y;\r\n      this.p.z += this.velocity.z;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n\r\n    }\r\n  }\r\n  UpdateVecSlowDown1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity = new NVector3(this.p.x - this.target.x , this.p.y - this.target.y ,  this.p.x - this.target.z );\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x); // < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y); //  < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z); // < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n\r\n      let i = this.maxSpeed / this.velocity.Length();\r\n      i = (i < 1.0) ? i : 1.0;\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x * i;\r\n      this.p.y += this.velocity.y * i;\r\n      this.p.z += this.velocity.z * i;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n    }\r\n  }\r\n  UpdateVecSlowDown2() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity = new NVector3(this.p.x - this.target.x , this.p.y - this.target.y ,  this.p.x - this.target.z );\r\n\r\n    let slowingRadius = 150;\r\n    let distance = this.desiredVelocity.Length();\r\n    // Check the distance to detect whether the character\r\n    // is inside the slowing area\r\n    if (distance < slowingRadius) {\r\n      // Inside the slowing area\r\n      // desired_velocity = normalize(desired_velocity) * max_velocity * (distance / slowingRadius)\r\n      this.desiredVelocity.Unitize();\r\n      this.desiredVelocity.x *= this.maxVelocity * (distance / slowingRadius);\r\n      this.desiredVelocity.y *= this.maxVelocity * (distance / slowingRadius);\r\n      this.desiredVelocity.z *= this.maxVelocity * (distance / slowingRadius);\r\n    } else {\r\n      // Outside the slowing area.\r\n      // desired_velocity = normalize(desired_velocity) * max_velocity\r\n      this.desiredVelocity.Unitize();\r\n      this.desiredVelocity.x *= this.maxVelocity;\r\n      this.desiredVelocity.y *= this.maxVelocity;\r\n      this.desiredVelocity.z *= this.maxVelocity;\r\n    }\r\n    // Set the steering based on this\r\n    // steering = desired_velocity - velocity\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x); // < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y); //  < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z); // < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    // this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n    this.steering = new NVector3(x, y, z);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n\r\n      let i = this.maxSpeed / this.velocity.Length();\r\n      i = (i < 1.0) ? i : 1.0;\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x * i;\r\n      this.p.y += this.velocity.y * i;\r\n      this.p.z += this.velocity.z * i;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n\r\n    }\r\n  }\r\n  // .......................................................................................................................\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.RenderDesiredVelocity(ctx);\r\n    this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    let scale = 20;\r\n    ctx.lineWidth = 0.5;\r\n    ctx.strokeStyle = '#00ff00';\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.p.x, this.p.y);\r\n    ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  }\r\n  RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    let scale = 20;\r\n    ctx.lineWidth = 0.5;\r\n    ctx.strokeStyle = '#ff0000';\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.p.x, this.p.y);\r\n    ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  }\r\n  RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.targets[0].x, this.targets[0].y);\r\n    for (let i = 1; i < this.targets.length; ++i) {\r\n      ctx.lineTo(this.targets[i].x, this.targets[i].y);\r\n    }\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :NVector3 {\r\n  var v :NVector3 = velocity.clone();\r\n  var brake :NVector3 = new NVector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { BPath } from './BoidCore/BPath';\r\nimport { BoidContoller1 } from './BoidCore/BoidContoller1';\r\n\r\n// import { MathUtility } from '../../../../lib';\r\n// https://cs.stanford.edu/people/eroberts/courses/soco/projects/2008-09/modeling-natural-systems/boids.html\r\n// http://www.red3d.com/cwr/steer/\r\n\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-path-following--Flockdev-8769\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-leader-following--Flockdev-10810\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-queue--Flockdev-14365\r\n\r\n// https://gamedevelopment.tutsplus.com/series/understanding-steering-behaviors--gamedev-12732\r\n\r\nexport class BoidSystem01 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    BoidContoller1: BoidContoller1;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem01';\r\n        this.init();\r\n    }\r\n    init() {\r\n        let path = BPath.GetRandomPath(0, 0, this.width, this.height);\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.BoidContoller1 = new BoidContoller1(path);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.BoidContoller1.Update();\r\n        this.BoidContoller1.Render(ctx);\r\n        this.Circle(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        this.BoidContoller1.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n    Circle(ctx: CanvasRenderingContext2D) {\r\n        let radius = 50;\r\n\r\n        // for (let i = 0; i < 360; i += 10) {\r\n        //     let x = Math.cos( MathUtility.Radians(i) ) + r  ;\r\n        //     let y = Math.sin( MathUtility.Radians(i) ) + r  ;\r\n        //     // let z =\r\n        //     console.log(x, y);\r\n        //     ctx.beginPath();\r\n        //     ctx.arc(x , y, 2, 0, 3.14 * 2.0  );\r\n        //     ctx.closePath();\r\n        //     ctx.fill();\r\n        // }\r\n\r\n        for (let x = 0; x < 3.14 * 2; x += 0.5) {\r\n            for (let y = 0; y < 3.14; y += 0.5) {\r\n                let xx = radius * Math.cos(x) * Math.sin(y);\r\n                let yy = radius * Math.sin(x) * Math.sin(y);\r\n                // let zz = radius * Math.cos(y);\r\n                // pts.push(xx, yy, zz);\r\n                ctx.beginPath();\r\n                ctx.arc(xx, yy, 2, 0, 3.14 * 2.0);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n}","import { NVector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BoidContollerWander0 {\r\n\r\n  boids: Boid[] = [];\r\n\r\n  constructor() {\r\n    this.boids = [];\r\n  }\r\n  public AddAgent(x: number, y: number, w: number, h: number) {\r\n    let boid = new Boid(new NVector3(x, y), new NVector3(0, 0), new NVector3(w, h));\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public GetPoint() {\r\n    let pts: NVector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 2; // 1; // 5;\r\n  maxVelocity = 2; // 1; // 8;\r\n  maxSpeed = 0.9; // 1; // 13.0;\r\n  mass = 100.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: NVector3;\r\n  p0: NVector3;\r\n  p1: NVector3;\r\n  targets: NVector3[];\r\n  target: NVector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: NVector3;\r\n  steering: NVector3;\r\n  velocity: NVector3 = new NVector3(0, 0, 0);\r\n\r\n  // .......................\r\n  wanderAngle: number = 0;\r\n  CIRCLE_DISTANCE = 50;\r\n  CIRCLE_RADIUS = 50;\r\n  ANGLE_CHANGE = 15;\r\n\r\n  t: number = 0.0;\r\n\r\n  MAX_QUEUE_AHEAD = 15;\r\n  MAX_QUEUE_RADIUS = 10;\r\n  trajectory: NVector3[] = [];\r\n  timerTrajectory = 0.0;\r\n\r\n  constructor(p: NVector3, p0: NVector3, p1: NVector3) {\r\n    Boid.list.push(this);\r\n    this.p = p;\r\n    this.p0 = p0;\r\n    this.p1 = p1;\r\n    this.UpdateTarget();\r\n  }\r\n  public Update() {\r\n    // this.UpdateVec0();\r\n    this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    // this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  UpdateTarget() {\r\n    let x = MathUtility.GetRandomInt(this.p0.x, this.p1.x);\r\n    let y = MathUtility.GetRandomInt(this.p0.y, this.p1.y);\r\n    this.target = new NVector3(x, y);\r\n  }\r\n  UpdateVec1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    this.Queue();\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n    this.t += 0.01;\r\n    if (this.t > 3) {\r\n      this.t = 0.0;\r\n      this.UpdateTarget();\r\n    }\r\n  }\r\n  UpdateVec0() {\r\n    // this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity.Unitize();\r\n    // this.desiredVelocity.x *= this.maxVelocity;\r\n    // this.desiredVelocity.y *= this.maxVelocity;\r\n    // this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    // let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    // let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    // let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    // this.steering = ;\r\n\r\n    this.steering = this.Wander(new NVector3(this.velocity.x, this.velocity.y, this.velocity.z));\r\n\r\n    this.steering.x = this.steering.x < this.maxForce ? this.steering.x : this.maxForce;\r\n    this.steering.y = this.steering.y < this.maxForce ? this.steering.y : this.maxForce;\r\n    this.steering.z = this.steering.z < this.maxForce ? this.steering.z : this.maxForce;\r\n\r\n    this.steering.x /= this.mass;\r\n    this.steering.y /= this.mass;\r\n    this.steering.z /= this.mass;\r\n\r\n    if (this.velocity.x + this.steering.x < this.maxSpeed) {\r\n      this.velocity.x = this.velocity.x + this.steering.x;\r\n    } else {\r\n      this.velocity.x = this.maxSpeed;\r\n    }\r\n    if (this.velocity.y + this.steering.y < this.maxSpeed) {\r\n      this.velocity.y = this.velocity.y + this.steering.y;\r\n    } else {\r\n      this.velocity.y = this.maxSpeed;\r\n    }\r\n    if (this.velocity.z + this.steering.z < this.maxSpeed) {\r\n      this.velocity.z = this.velocity.z + this.steering.z;\r\n    } else {\r\n      this.velocity.z = this.maxSpeed;\r\n    }\r\n    // this.velocity.x = this.velocity.x + this.steering.x < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    // this.velocity.y = this.velocity.y + this.steering.y < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    // this.velocity.z = this.velocity.z + this.steering.z < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    // steering = wander()\r\n    // steering = truncate (steering, max_force)\r\n    // steering = steering / mass\r\n    // velocity = truncate (velocity + steering , max_speed)\r\n    // position = position + velocity\r\n    this.Queue();\r\n\r\n    console.log(this.maxSpeed);\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n\r\n  }\r\n  Wander(velocity: NVector3) {\r\n    // Calculate the circle center\r\n    let circleCenter = new NVector3(velocity.x, velocity.y, velocity.z);\r\n    circleCenter.Normalize();\r\n    circleCenter.Scale(this.CIRCLE_DISTANCE);\r\n    //\r\n    // Calculate the displacement force\r\n    let displacement = new NVector3(0, -1);\r\n    displacement.Scale(this.CIRCLE_RADIUS);\r\n    //\r\n    // Randomly change the vector direction\r\n    // by making it change its current angle\r\n    displacement = this.SetAngle(displacement, this.wanderAngle);\r\n    //\r\n    // Change wanderAngle just a bit, so it\r\n    // won't have the same value in the\r\n    // next game frame.\r\n    this.wanderAngle += Math.random() * this.ANGLE_CHANGE - this.ANGLE_CHANGE * .5;\r\n    //\r\n    // Finally calculate and return the wander force\r\n    var wanderForce: NVector3;\r\n    wanderForce = circleCenter.Add(displacement);\r\n    return wanderForce;\r\n  }\r\n  SetAngle(v: NVector3, value: number) {\r\n    let len: number = v.Length();\r\n    v.x = Math.cos(value) * len;\r\n    v.y = Math.sin(value) * len;\r\n    return v;\r\n  }\r\n  GetNeighborAhead() {\r\n    // var i:int;\r\n    var ret: Boid | undefined = undefined;\r\n    var qa: NVector3 = this.velocity.Clone();\r\n\r\n    qa.Normalize();\r\n    qa.Scale(this.MAX_QUEUE_AHEAD);\r\n\r\n    let ahead = this.p.Clone().Add(qa);\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let neighbor: Boid = Boid.list[i];\r\n      let d = NVector3.Distance(ahead, neighbor.p);\r\n      if (neighbor !== this && d <= this.MAX_QUEUE_RADIUS) {\r\n        ret = neighbor;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  Queue() {\r\n    var neighbor = this.GetNeighborAhead();\r\n\r\n    if (neighbor !== undefined) {\r\n      this.velocity.Scale(0.3);\r\n    }\r\n\r\n    return new NVector3(0, 0);\r\n  }\r\n\r\n  // .......................................................................................................................\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    // this.RenderDesiredVelocity(ctx);\r\n    // this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#00ff00';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#ff0000';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    this.timerTrajectory += 1;\r\n    if (this.timerTrajectory % 5 === 0) {\r\n      if (this.trajectory.length > 30) {\r\n        this.trajectory.shift();\r\n      }\r\n      this.trajectory.push(new NVector3(this.p.x, this.p.y));\r\n\r\n      this.timerTrajectory = 0;\r\n    }\r\n    for (let i = 0; i < this.trajectory.length; ++i) {\r\n      ctx.fillStyle = 'rgba(100, 100, 100 ,0.1)';\r\n      ctx.beginPath();\r\n      ctx.arc(this.trajectory[i].x, this.trajectory[i].y, (i) * 0.2, 0, 3.14 * 2);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    }\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.targets[0].x , this.targets[0].y);\r\n    // for (let i = 1 ; i < this.targets.length; ++i) {\r\n    //   ctx.lineTo(this.targets[i].x , this.targets[i].y);\r\n    // }\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n\r\n    ctx.fillStyle = '#000000';\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 2.5, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :NVector3 {\r\n  var v :NVector3 = velocity.clone();\r\n  var brake :NVector3 = new NVector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { BoidContollerWander0 } from './BoidCore/BoidContollerWander0';\r\n\r\nexport class BoidSystemWander0 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    BoidContoller: BoidContollerWander0;\r\n    dragTime = 0;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem01';\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.BoidContoller = new BoidContollerWander0();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.BoidContoller.Update();\r\n        this.BoidContoller.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        this.BoidContoller.AddAgent(this.mouse[0], this.mouse[1], this.width, this.height);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.dragTime > 5) {\r\n            this.BoidContoller.AddAgent(x, y, this.width, this.height);\r\n            this.dragTime = 0;\r\n        }\r\n        this.dragTime++;\r\n    }\r\n\r\n}","import { NVector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BoidContollerWander1 {\r\n\r\n  boids: Boid[] = [];\r\n\r\n  constructor() {\r\n    this.boids = [];\r\n  }\r\n  public AddAgent(x: number, y: number, w: number, h: number) {\r\n    let boid = new Boid(new NVector3(x, y), new NVector3(0, 0), new NVector3(w, h));\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public UpdateTarget(x: number, y: number) {\r\n    for (let b of this.boids) {\r\n      b.target.x = x;\r\n      b.target.y = y;\r\n    }\r\n  }\r\n  public GetPoint() {\r\n    let pts: NVector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 2; // 1; // 5;\r\n  maxVelocity = 2; // 1; // 8;\r\n  maxSpeed = 0.9; // 1; // 13.0;\r\n  mass = 100.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: NVector3;\r\n  p0: NVector3;\r\n  p1: NVector3;\r\n  targets: NVector3[];\r\n  target: NVector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: NVector3;\r\n  steering: NVector3;\r\n  velocity: NVector3 = new NVector3(0, 0, 0);\r\n\r\n  // .......................\r\n  wanderAngle: number = 0;\r\n  CIRCLE_DISTANCE = 50;\r\n  CIRCLE_RADIUS = 50;\r\n  ANGLE_CHANGE = 15;\r\n\r\n  t: number = 0.0;\r\n\r\n  MAX_QUEUE_AHEAD = 15;\r\n  MAX_QUEUE_RADIUS = 15;\r\n\r\n  SEPARATION_RADIUS = 10;\r\n  MAX_SEPARATION = 0.5;\r\n  // MAX_QUEUE_RADIUS = 10;\r\n\r\n  constructor(p: NVector3, p0: NVector3, p1: NVector3) {\r\n    Boid.list.push(this);\r\n    this.p = p;\r\n    this.p0 = p0;\r\n    this.p1 = p1;\r\n    this.UpdateTarget();\r\n  }\r\n  public Update() {\r\n    // this.UpdateVec0();\r\n    this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    // this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  UpdateTarget() {\r\n    let x = MathUtility.GetRandomInt(this.p0.x, this.p1.x);\r\n    let y = MathUtility.GetRandomInt(this.p0.y, this.p1.y);\r\n    this.target = new NVector3(x, y);\r\n  }\r\n  UpdateVec1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    this.Queue();\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n    this.t += 0.01;\r\n    if (this.t > 3) {\r\n      this.t = 0.0;\r\n      // this.UpdateTarget();\r\n    }\r\n  }\r\n  Queue() {\r\n    var neighbor = this.GetNeighborAhead();\r\n\r\n    if (neighbor !== undefined) {\r\n      // this.HardStop();\r\n      // this.BrakingForce();\r\n      this.BrakingForceOverlap(neighbor);\r\n    }\r\n    return new NVector3(0, 0);\r\n  }\r\n  BrakingForceOverlap(neighbor: Boid) {\r\n    let brake = new NVector3(0, 0);\r\n    brake.x = -this.steering.x * 0.8;\r\n    brake.y = -this.steering.y * 0.8;\r\n\r\n    this.velocity.Scale(-1);\r\n    brake = brake.Add(this.velocity);\r\n\r\n    // ................................... seperation!!!!\r\n    // brake = brake.Add(this.Separation());\r\n    // ...................................  end seperation!!!!\r\n\r\n    if (NVector3.Distance(this.p, neighbor.p) <= this.MAX_QUEUE_RADIUS) {\r\n      this.velocity.Scale(0.3);\r\n      return;\r\n    }\r\n    this.velocity = brake;\r\n  }\r\n  HardStop() {\r\n    this.velocity.Scale(0.3);\r\n  }\r\n  BrakingForce() {\r\n    let brake = new NVector3(0, 0);\r\n    brake.x = -this.steering.x * 0.8;\r\n    brake.y = -this.steering.y * 0.8;\r\n\r\n    this.velocity.Scale(-1);\r\n    brake = brake.Add(this.velocity);\r\n\r\n    this.velocity = brake;\r\n  }\r\n\r\n  GetNeighborAhead() {\r\n    // var i:int;\r\n    var ret: Boid | undefined = undefined;\r\n    var qa: NVector3 = this.velocity.Clone();\r\n\r\n    qa.Normalize();\r\n    qa.Scale(this.MAX_QUEUE_AHEAD);\r\n\r\n    let ahead = this.p.Clone().Add(qa);\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let neighbor: Boid = Boid.list[i];\r\n      let d = NVector3.Distance(ahead, neighbor.p);\r\n      if (neighbor !== this && d <= this.MAX_QUEUE_RADIUS) {\r\n        ret = neighbor;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  Separation(): NVector3 {\r\n    let force: NVector3 = new NVector3(0, 0);\r\n    let neighborCount: number = 0;\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let b: Boid = Boid.list[i];\r\n\r\n      if (b !== this && NVector3.Distance(b.p, this.p) <= this.SEPARATION_RADIUS) {\r\n        force.x += b.p.x - this.p.x;\r\n        force.y += b.p.y - this.p.y;\r\n        force.z += b.p.z - this.p.z;\r\n        neighborCount++;\r\n      }\r\n    }\r\n\r\n    if (neighborCount !== 0) {\r\n      force.x /= neighborCount;\r\n      force.y /= neighborCount;\r\n      force.z /= neighborCount;\r\n\r\n      force.Scale(-1);\r\n    }\r\n\r\n    force.Normalize();\r\n    force.Scale(this.MAX_SEPARATION);\r\n\r\n    return force;\r\n  }\r\n  // .......................................................................................................................\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    // this.RenderDesiredVelocity(ctx);\r\n    // this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#00ff00';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#ff0000';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.targets[0].x , this.targets[0].y);\r\n    // for (let i = 1 ; i < this.targets.length; ++i) {\r\n    //   ctx.lineTo(this.targets[i].x , this.targets[i].y);\r\n    // }\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :NVector3 {\r\n  var v :NVector3 = velocity.clone();\r\n  var brake :NVector3 = new NVector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { BoidContollerWander1 } from './BoidCore/BoidContollerWander1';\r\n\r\nexport class BoidSystemWander1 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    BoidContoller: BoidContollerWander1;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem01';\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.BoidContoller = new BoidContollerWander1();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.BoidContoller.Update();\r\n        this.BoidContoller.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n        this.BoidContoller.UpdateTarget(x, y);\r\n    }\r\n    MouseDown() {\r\n        this.BoidContoller.AddAgent(this.mouse[0], this.mouse[1], this.width, this.height);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\nexport class BoidSystem04 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    lines: Line[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem04';\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        for (let l of this.lines) {\r\n            l.Render(ctx);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        if (this.lines.length > 5) { this.lines.shift(); }\r\n        const p1 = this.lines[this.lines.length - 1].p1;\r\n        this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1]));\r\n    }\r\n\r\n}\r\n\r\nclass Line {\r\n    p0: number[];\r\n    p1: number[];\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        this.p0 = [x0, y0];\r\n        this.p1 = [x1, y1];\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = 'red';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0[0], this.p0[1]);\r\n        ctx.lineTo(this.p1[0], this.p1[1]);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}","\r\nimport { NVector3 } from '../../../../../../lib';\r\n\r\nexport class DNode {\r\n\r\n    velocity: NVector3 = new NVector3(0.0, 0.0, 0.0);\r\n    force: NVector3 = new NVector3(0.0, 0.01, 0.0);\r\n    gravity: NVector3 = new NVector3(0, 0.95, 0);\r\n\r\n    v: NVector3 = new NVector3(0, 0, 0);\r\n    r: number = 10.;\r\n    m: number = 0.1;\r\n\r\n    constructor(x: number, y: number, z: number, mass: number = 1.0) {\r\n        this.v = new NVector3(x, y, 0);\r\n        this.m = mass;\r\n    }\r\n    Update(width: number, height: number, dt: number, damping: number) {\r\n        // this.velocity = new NVector3(0.0, 0.0, 0.0);\r\n        this.velocity.Add(this.gravity);\r\n        this.velocity.Mult(damping);\r\n        this.force.Mult(dt / this.m);\r\n        this.velocity.Add(this.force);\r\n\r\n        this.v.x += this.velocity.x * dt;\r\n        this.v.y += this.velocity.y * dt;\r\n        this.v.z += this.velocity.z * dt;\r\n\r\n        // console.log(this.velocity.x, this.velocity.y);\r\n        // this.v.Add(this.velocity); // Add velocity to the location.\r\n        // this.velocity.Add(this.gravity); // Add gravity to velocity\r\n\r\n        // this.velocity.y += 0.95;\r\n\r\n        this.UpdateEdge(width, height);\r\n    }\r\n    UpdateEdge(width: number, height: number) {\r\n        if ((this.v.x > width) || (this.v.x < 0)) { // Bounce off edges\r\n            this.velocity.x = this.velocity.x * -1;\r\n        }\r\n        if (this.v.y > height) {\r\n            // We're reducing this.velocity ever so slightly\r\n            // when it hits the bottom of the window\r\n            this.velocity.y = this.velocity.y * -0.95;\r\n            this.v.y = height;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { Bodies, World, Vector } from 'matter-js';\r\nimport { DynamicSystem01 } from '../DynamicSystem01';\r\nexport class MBox {\r\n    body: Matter.Body;\r\n    scene: DynamicSystem01;\r\n    angle: number;\r\n    position: Vector;\r\n    width: number;\r\n    height: number;\r\n    constructor(scene: DynamicSystem01, x: number, y: number, width: number, height: number, isStatic: boolean = false) {\r\n        this.scene = scene;\r\n        this.width = width;\r\n        this.height = height;\r\n        const restitution = 0.5;\r\n        const friction = 0.5;\r\n        this.body = Bodies.rectangle(x, y, width, height, { isStatic: isStatic, restitution: restitution, friction: friction });\r\n        World.add(this.scene.world, this.body);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.angle = this.body.angle;\r\n        this.position = this.body.position;\r\n\r\n        this.DrawRectByCen(ctx, this.position.x, this.position.y, this.width, this.height, this.angle);\r\n    }\r\n    public DrawRectByCen(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, angle: number) {\r\n        const xOff = width * 0.5;\r\n        const yOff = height * 0.5;\r\n        ctx.save();\r\n        ctx.translate(this.position.x, this.position.y);\r\n        ctx.rotate(angle);\r\n        ctx.beginPath();\r\n        ctx.rect(-xOff, -yOff, this.width, this.height);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n}","import { DNode } from './Core/DNode';\r\n\r\nimport { Dynamic01 } from '../Dynamic01';\r\nimport { MBox } from './Matter/MBox';\r\nimport * as Matter from 'matter-js';\r\n// https://github.com/liabru/matter-js\r\n// https://brm.io/matter-js/\r\n\r\nexport class DynamicSystem01 {\r\n    Dynamic01: Dynamic01;\r\n\r\n    dNode: DNode;\r\n\r\n    t: number = 0.0;\r\n    engine: Matter.Engine;\r\n    world: Matter.World;\r\n\r\n    MBoxes: MBox[] = [];\r\n\r\n    ground: Matter.Body;\r\n\r\n    constructor(Dynamic01: Dynamic01) {\r\n        this.Dynamic01 = Dynamic01;\r\n        this.dNode = new DNode(100, 100, 0);\r\n        this.InitMatter();\r\n    }\r\n    public InitMatter() {\r\n\r\n        this.engine = Matter.Engine.create();\r\n        this.world = this.engine.world;\r\n        Matter.Engine.run(this.engine);\r\n\r\n        this.MBoxes.push(new MBox(this, 0, 400, 500, 50, true)); // ground\r\n        this.MBoxes.push(new MBox(this, 100, 100, 50, 50));\r\n        setInterval(() => {\r\n            this.MouseDown(100 + ((Math.random() - 0.5) * 10), 0);\r\n        }, 1000);\r\n    }\r\n    public Update() {\r\n        this.dNode.Update(this.Dynamic01.width, this.Dynamic01.height, this.t, 0.9);\r\n        this.t += 0.1;\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.MBoxes.push(new MBox(this, x, y, Math.random() * 100, Math.random() * 100));\r\n    }\r\n    public MouseDrag(x: number, y: number) {\r\n        this.MBoxes.push(new MBox(this, x, y, Math.random() * 100, Math.random() * 100));\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.dNode.Render(ctx);\r\n\r\n\r\n\r\n        for (let i = 0; i < this.MBoxes.length; ++i) {\r\n            this.MBoxes[i].Render(ctx);\r\n        }\r\n\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\n// import { NVector3 } from '../../../../lib';\r\n\r\nimport { DynamicSystem01 } from './DynamicSystem/DynamicSystem01';\r\n\r\nexport class Dynamic01 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    DynamicSystem: DynamicSystem01;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Dynamic01';\r\n        console.log('init Dynamic01 ,');\r\n        this.init();\r\n    }\r\n    init() {\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.DynamicSystem = new DynamicSystem01(this);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.DynamicSystem.Update();\r\n        this.DynamicSystem.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        this.DynamicSystem.MouseDrag(x, y);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.DynamicSystem.MouseDown(x, y);\r\n        // console.log(this.mouse);\r\n        // this.DynamicSystem.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\n// import { NVector3 } from '../../../../lib';\r\n\r\nimport { DynamicSystem01 } from './DynamicSystem/DynamicSystem01';\r\n\r\nexport class Dynamic02 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    DynamicSystem: DynamicSystem01;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Dynamic02';\r\n        console.log('init Dynamic02');\r\n        this.init();\r\n    }\r\n    init() {\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.DynamicSystem = new DynamicSystem01(this);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.DynamicSystem.Update();\r\n        this.DynamicSystem.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        // this.DynamicSystem.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\n// import { NVector3 } from '../../../../lib';\r\n\r\nimport { DynamicSystem01 } from './DynamicSystem/DynamicSystem01';\r\n// import * as m from '';\r\n// import {d} from 'matter-js'\r\n// import {d } from 'matter-js'\r\nexport class Dynamic03 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    DynamicSystem: DynamicSystem01;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Dynamic03';\r\n        console.log('init Dynamic03');\r\n        this.init();\r\n    }\r\n    init() {\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.DynamicSystem = new DynamicSystem01(this);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.DynamicSystem.Update();\r\n        this.DynamicSystem.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        // this.DynamicSystem.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}\r\n","import { Scene } from '../../Scene';\r\nexport class MGeometryBase {\r\n    scene: Scene;\r\n\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // TOO\r\n    }\r\n}","import { Bodies, World, Vector } from 'matter-js';\r\nimport { Scene } from '../Scene';\r\nimport { MGeometryBase } from './Base/MGeometryBase';\r\nexport class MBox extends MGeometryBase {\r\n    body: Matter.Body;\r\n    scene: Scene;\r\n    angle: number;\r\n    position: Vector;\r\n    width: number;\r\n    height: number;\r\n    constructor(scene: Scene, x: number, y: number, width: number, height: number, isStatic: boolean = false) {\r\n        super(scene);\r\n        this.width = width;\r\n        this.height = height;\r\n        const restitution = 0.5;\r\n        const friction = 0.5;\r\n        this.body = Bodies.rectangle(x, y, width, height, { isStatic: isStatic, restitution: restitution, friction: friction });\r\n        World.add(this.scene.world, this.body);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.angle = this.body.angle;\r\n        this.position = this.body.position;\r\n\r\n        this.DrawRectByCen(ctx, this.position.x, this.position.y, this.width, this.height, this.angle);\r\n    }\r\n    public DrawRectByCen(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, angle: number) {\r\n        const xOff = width * 0.5;\r\n        const yOff = height * 0.5;\r\n        ctx.save();\r\n        ctx.translate(this.position.x, this.position.y);\r\n        ctx.rotate(angle);\r\n        ctx.beginPath();\r\n        ctx.rect(-xOff, -yOff, this.width, this.height);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n}","import { Bodies, World, Vector } from 'matter-js';\r\nimport { Scene } from '../Scene';\r\nimport { MGeometryBase } from './Base/MGeometryBase';\r\nexport class MCircle extends MGeometryBase {\r\n    body: Matter.Body;\r\n    scene: Scene;\r\n    angle: number;\r\n    position: Vector;\r\n    // width: number;\r\n    radius: number;\r\n    constructor(scene: Scene, x: number, y: number, radius: number, isStatic: boolean = false) {\r\n        super(scene);\r\n        // this.width = width;\r\n        this.radius = radius;\r\n        const restitution = 0.5;\r\n        const friction = 0.5;\r\n        this.body = Bodies.circle(x, y, this.radius, { isStatic: isStatic, restitution: restitution, friction: friction });\r\n        World.add(this.scene.world, this.body);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.angle = this.body.angle;\r\n        this.position = this.body.position;\r\n\r\n        this.DrawCircle(ctx, this.position.x, this.position.y, this.radius, this.angle);\r\n    }\r\n    public DrawCircle(ctx: CanvasRenderingContext2D, x: number, y: number, radius: number, angle: number) {\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.rotate(angle);\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, this.radius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n}","// import { Dynamic01 } from '../Dynamic01';\r\nimport { MGeometryBase } from '../MGeometry/Base/MGeometryBase';\r\nimport { MBox } from '../MGeometry/MBox';\r\nimport { MCircle } from '../MGeometry/MCircle';\r\nimport * as Matter from 'matter-js';\r\n// https://github.com/liabru/matter-js\r\n// https://brm.io/matter-js/\r\nimport { MatterSandbox } from '..';\r\n\r\nexport class Scene {\r\n    MatterSandbox: MatterSandbox;\r\n\r\n    t: number = 0.0;\r\n    engine: Matter.Engine;\r\n    world: Matter.World;\r\n\r\n    MBoxes: MGeometryBase[] = [];\r\n\r\n    ground: Matter.Body;\r\n\r\n    constructor(MatterSandbox: MatterSandbox) {\r\n        this.MatterSandbox = MatterSandbox;\r\n        this.InitMatter();\r\n    }\r\n    public InitMatter() {\r\n\r\n        this.engine = Matter.Engine.create();\r\n        this.world = this.engine.world;\r\n        Matter.Engine.run(this.engine);\r\n\r\n        this.MBoxes.push(new MBox(this, 0, 400, 500, 50, true)); // ground\r\n        this.MBoxes.push(new MBox(this, 100, 100, 50, 50));\r\n        setInterval(() => {\r\n            this.MouseDown(100 + ((Math.random() - 0.5) * 10), 0);\r\n        }, 1000);\r\n    }\r\n    public Update() {\r\n        // this.dNode.Update(this.Dynamic01.width, this.Dynamic01.height, this.t, 0.9);\r\n        // this.t += 0.1;\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.MBoxes.push(new MCircle(this, x, y, Math.random() * 100));\r\n    }\r\n    public MouseDrag(x: number, y: number) {\r\n        this.MBoxes.push(new MBox(this, x, y, Math.random() * 100, Math.random() * 100));\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n\r\n        for (let i = 0; i < this.MBoxes.length; ++i) {\r\n            this.MBoxes[i].Render(ctx);\r\n        }\r\n\r\n    }\r\n}","import { MatterSandbox } from '..';\r\nexport class Core {\r\n    MatterSandbox: MatterSandbox;\r\n    constructor(MatterSandbox: MatterSandbox) {\r\n        this.MatterSandbox = MatterSandbox;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\n// import { NVector3 } from '../../../../lib';\r\nimport { Scene } from './Scene';\r\nimport { Core } from './Core';\r\n\r\nexport class MatterSandbox extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    sceneMatter: Scene;\r\n    core: Core;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'MatterSandbox';\r\n        console.log('init MatterSandbox');\r\n        this.core = new Core(this);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.sceneMatter = new Scene(this);\r\n    }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.sceneMatter.Update();\r\n        this.sceneMatter.Render(ctx);\r\n    }\r\n    public MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    public MouseDrag(x: number, y: number) {\r\n        this.sceneMatter.MouseDrag(x, y);\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.sceneMatter.MouseDown(x, y);\r\n    }\r\n\r\n}\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\nexport class OOP extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    p: Point;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'OOP';\r\n        this.init();\r\n    }\r\n    init() {\r\n\r\n        this.p = new Point(100, 100, 10);\r\n        console.log('oop init');\r\n        // this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        console.log('oop loop');\r\n        // for (let l of this.lines) {\r\n        //     l.Render(ctx);\r\n        // }\r\n\r\n        this.p.Render(ctx);\r\n        console.log(this.p.age);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n}\r\n\r\nclass Point {\r\n\r\n    age: number;\r\n    height: number;\r\n    weight: number;\r\n\r\n    // money: ComputeData;\r\n\r\n    constructor(age: number, height: number, weight: number) {\r\n        this.age = age;\r\n        this.height = height;\r\n        this.weight = weight;\r\n        // this.money = new ComputeData();\r\n\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.age, this.height, this.weight, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        this.age += 0.01;\r\n\r\n        if (this.age > 102) { this.Compute(); }\r\n    }\r\n    Compute() {\r\n        this.height += 0.1;\r\n    }\r\n\r\n}\r\n\r\n// class ComputeData {\r\n//     total: number;\r\n//     constructor() {\r\n//         //\r\n//     }\r\n//     AddMoney() {\r\n\r\n//     }\r\n//     RemoveMoney() {\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// class Bank() {\r\n\r\n// }","// let N = 25;\r\n// let iter = 16;\r\n// let SCALE = 4;\r\n// let t = 0;\r\n\r\n\r\n/*\r\n    Function of diffuse\r\n    - b : int\r\n    - x : float[]\r\n    - x0 : float[]\r\n    - diff : float\r\n    - dt : flaot\r\n*/\r\nexport const diffuse = (b: number, x: Float32Array, x0: Float32Array, diff: number, dt: number, N: number, iter: number, ids: number[][]) => {\r\n    let a = dt * diff * (N - 2) * (N - 2);\r\n    lin_solve(b, x, x0, a, 1 + 6 * a, N, iter, ids);\r\n  };\r\n\r\n  /*\r\n      Function of solving linear differential equation\r\n      - b : int\r\n      - x : float[]\r\n      - x0 : float[]\r\n      - a : float\r\n      - c : float\r\n  */\r\nexport const lin_solve = (b: number, x: Float32Array, x0: Float32Array, a: number, c: number, N: number, iter: number, ids: number[][]) => {\r\n    let cRecip = 1.0 / c;\r\n    for (let t = 0; t < iter; t++) {\r\n      for (let j = 1; j < N - 1; j++) {\r\n        for (let i = 1; i < N - 1; i++) {\r\n          x[IX(i, j, N)] = (x0[IX(i, j, N)] + a * (x[IX(i + 1, j, N)] + x[IX(i - 1, j, N)] + x[IX(i, j + 1, N)] + x[IX(i, j - 1, N)])) * cRecip;\r\n        }\r\n      }\r\n      set_bnd(b, x, N, ids);\r\n    }\r\n};\r\n  // function to use 1D array and fake the extra two dimensions --> 3D\r\nexport const IX = (x: number, y: number, N: number) => {\r\n    return x + y * N;\r\n};\r\n  /*\r\n      Function of project : This operation runs through all the cells and fixes them up so everything is in equilibrium.\r\n      - velocX : float[]\r\n      - velocY : float[]\r\n      = p : float[]\r\n      - div : float[]\r\n  */\r\nexport const project = (velocX: Float32Array, velocY: Float32Array, p: Float32Array, div: Float32Array, N: number, iter: number, ids: number[][]) => {\r\n    for (let j = 1; j < N - 1; j++) {\r\n      for (let i = 1; i < N - 1; i++) {\r\n        div[IX(i, j, N)] = (-0.5 * (velocX[IX(i + 1, j, N)] - velocX[IX(i - 1, j, N)] + velocY[IX(i, j + 1, N)] - velocY[IX(i, j - 1, N)])) / N;\r\n        p[IX(i, j, N)] = 0;\r\n      }\r\n    }\r\n\r\n    set_bnd(0, div, N, ids);\r\n    set_bnd(0, p, N, ids);\r\n    lin_solve(0, p, div, 1, 6, N, iter, ids);\r\n\r\n    for (let j = 1; j < N - 1; j++) {\r\n      for (let i = 1; i < N - 1; i++) {\r\n        velocX[IX(i, j, N)] -= 0.5 * (p[IX(i + 1, j, N)] - p[IX(i - 1, j, N)]) * N;\r\n        velocY[IX(i, j, N)] -= 0.5 * (p[IX(i, j + 1, N)] - p[IX(i, j - 1, N)]) * N;\r\n      }\r\n    }\r\n\r\n    set_bnd(1, velocX, N, ids);\r\n    set_bnd(2, velocY, N, ids);\r\n};\r\n\r\n  /*\r\n      Function of advect: responsible for actually moving things around\r\n      - b : int\r\n      - d : float[]\r\n      - d0 : float[]\r\n      - velocX : float[]\r\n      - velocY : float[]\r\n      - velocZ : float[]\r\n      - dt : float[]\r\n  */\r\nexport const advect = (b: number, d: Float32Array, d0: Float32Array, velocX: Float32Array, velocY: Float32Array, dt: number, N: number, ids: number[][]) => {\r\n    let i0, i1, j0, j1;\r\n\r\n    let dtx = dt * (N - 2);\r\n    let dty = dt * (N - 2);\r\n\r\n    let s0, s1, t0, t1;\r\n    let tmp1, tmp2, x, y;\r\n\r\n    let Nfloat = N - 2;\r\n    let ifloat, jfloat;\r\n    let i, j;\r\n    // let temp3, k;\r\n\r\n    for (j = 1, jfloat = 1; j < N - 1; j++, jfloat++) {\r\n      for (i = 1, ifloat = 1; i < N - 1; i++, ifloat++) {\r\n        tmp1 = dtx * velocX[IX(i, j, N)];\r\n        tmp2 = dty * velocY[IX(i, j, N)];\r\n        x = ifloat - tmp1;\r\n        y = jfloat - tmp2;\r\n\r\n        if (x < 0.5) x = 0.5;\r\n        if (x > Nfloat + 0.5) x = Nfloat + 0.5;\r\n        i0 = Math.floor(x);\r\n        i1 = i0 + 1.0;\r\n        if (y < 0.5) y = 0.5;\r\n        if (y > Nfloat + 0.5) y = Nfloat + 0.5;\r\n        j0 = Math.floor(y);\r\n        j1 = j0 + 1.0;\r\n\r\n        s1 = x - i0;\r\n        s0 = 1.0 - s1;\r\n        t1 = y - j0;\r\n        t0 = 1.0 - t1;\r\n\r\n        let i0i = i0; // parseInt(i0);\r\n        let i1i = i1; // parseInt(i1);\r\n        let j0i = j0; // parseInt(j0);\r\n        let j1i = j1; // parseInt(j1);\r\n\r\n        d[IX(i, j, N)] = s0 * (t0 * d0[IX(i0i, j0i, N)] + t1 * d0[IX(i0i, j1i, N)]) + s1 * (t0 * d0[IX(i1i, j0i, N)] + t1 * d0[IX(i1i, j1i, N)]);\r\n      }\r\n    }\r\n\r\n    set_bnd(b, d, N, ids);\r\n};\r\n  /*\r\n      Function of dealing with situation with boundary cells.\r\n      - b : int\r\n      - x : float[]\r\n  */\r\nexport const set_bnd = (b: number, x: Float32Array, N: number, ids: number[][]) => {\r\n    for (let i = 1; i < N - 1; i++) {\r\n      x[IX(i, 0, N)] = b === 2 ? -x[IX(i, 1, N)] : x[IX(i, 1, N)];\r\n      x[IX(i, N - 1, N)] = b === 2 ? -x[IX(i, N - 2, N)] : x[IX(i, N - 2, N)];\r\n    }\r\n    for (let j = 1; j < N - 1; j++) {\r\n      x[IX(0, j, N)] = b === 1 ? -x[IX(1, j, N)] : x[IX(1, j, N)];\r\n      x[IX(N - 1, j, N)] = b === 1 ? -x[IX(N - 2, j, N)] : x[IX(N - 2, j, N)];\r\n    }\r\n\r\n    x[IX(0, 0, N)] = 0.5 * (x[IX(1, 0, N)] + x[IX(0, 1, N)]);\r\n    x[IX(0, N - 1, N)] = 0.5 * (x[IX(1, N - 1, N)] + x[IX(0, N - 2, N)]);\r\n    x[IX(N - 1, 0, N)] = 0.5 * (x[IX(N - 2, 0, N)] + x[IX(N - 1, 1, N)]);\r\n    x[IX(N - 1, N - 1, N)] = 0.5 * (x[IX(N - 2, N - 1, N)] + x[IX(N - 1, N - 2, N)]);\r\n\r\n    x[IX(Math.floor(N * 0.5), 0, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), 1, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), 2, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), 3, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), 4, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), 5, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), 6, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), 7, N)] = 0;\r\n\r\n    x[IX(Math.floor(N * 0.5), N - 1, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), N - 2, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), N - 3, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), N - 4, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), N - 5, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), N - 6, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), N - 7, N)] = 0;\r\n    x[IX(Math.floor(N * 0.5), N - 8, N)] = 0;\r\n\r\n    for (let i = 0 ; i < ids.length; ++i) {\r\n      x[IX(ids[i][0], ids[i][1], N)] = 0;\r\n    }\r\n};","import { diffuse, project, advect, IX } from './Utility';\r\n\r\nimport { getFalseColor } from '../../../../../../../../NJSCore/Core/NColor/Utility/ColorUtility';\r\n// Fluid cube class\r\nexport class Fluid {\r\n\r\n  public N = 100;\r\n  public iter = 16;\r\n  public SCALE = 4;\r\n  public t = 0;\r\n\r\n  public visScale = 0.01;\r\n\r\n  // size: number;\r\n  public dt: number;\r\n  public diff: number;\r\n  public visc: number;\r\n\r\n  public s: Float32Array;\r\n  public density: Float32Array;\r\n  public Vx: Float32Array;\r\n  public Vy: Float32Array;\r\n  public Vx0: Float32Array;\r\n  public Vy0: Float32Array;\r\n\r\n  public cellFixed: number[][] = [];\r\n\r\n  constructor(dt: number, diffusion: number, viscosity: number) {\r\n    // this.size = this.SCALE;\r\n    this.dt = dt;\r\n    this.diff = diffusion;\r\n    this.visc = viscosity;\r\n\r\n    this.s = new Float32Array(this.N * this.N).fill(0);\r\n    this.density = new Float32Array(this.N * this.N).fill(0.01);\r\n\r\n    this.Vx = new Float32Array(this.N * this.N).fill(0);\r\n    this.Vx0 = new Float32Array(this.N * this.N).fill(0);\r\n\r\n    this.Vy = new Float32Array(this.N * this.N).fill(0);\r\n    this.Vy0 = new Float32Array(this.N * this.N).fill(0);\r\n  }\r\n  // step method\r\n  public step() {\r\n    // let N = this.size;\r\n    let visc = this.visc;\r\n    let diff = this.diff;\r\n    let dt = this.dt;\r\n    let Vx = this.Vx;\r\n    let Vy = this.Vy;\r\n    let Vx0 = this.Vx0;\r\n    let Vy0 = this.Vy0;\r\n    let s = this.s;\r\n    let density = this.density;\r\n\r\n    diffuse(1, Vx0, Vx, visc, dt, this.N, this.iter, this.cellFixed);\r\n    diffuse(2, Vy0, Vy, visc, dt, this.N, this.iter, this.cellFixed);\r\n\r\n    project(Vx0, Vy0, Vx, Vy, this.N, this.iter, this.cellFixed);\r\n\r\n    advect(1, Vx, Vx0, Vx0, Vy0, dt, this.N, this.cellFixed);\r\n    advect(2, Vy, Vy0, Vx0, Vy0, dt, this.N, this.cellFixed);\r\n\r\n    project(Vx, Vy, Vx0, Vy0, this.N, this.iter, this.cellFixed);\r\n    diffuse(0, s, density, diff, dt, this.N, this.iter, this.cellFixed);\r\n    advect(0, density, s, Vx, Vy, dt, this.N, this.cellFixed);\r\n\r\n  }\r\n\r\n  // method to add density\r\n  public addDensity(x: number, y: number, amount: number) {\r\n    let index = IX(x, y, this.N);\r\n    this.density[index] += amount;\r\n  }\r\n  // method to add velocity\r\n  public addVelocity(x: number, y: number, amountX: number, amountY: number) {\r\n    let index = IX(x, y, this.N);\r\n    this.Vx[index] += amountX;\r\n    this.Vy[index] += amountY;\r\n  }\r\n  // function to render density\r\n  public renderD(ctx: CanvasRenderingContext2D) {\r\n    for (let i = 0; i < this.N; i++) {\r\n      for (let j = 0; j < this.N; j++) {\r\n        let x = i * this.SCALE;\r\n        let y = j * this.SCALE;\r\n        let d = this.density[IX(i, j, this.N)];\r\n\r\n        // let col = `rgb(${(d + 50) % 255}, 200,${d})`;\r\n        // console.log('ddd', `${(d + 50) % 255}, 200,${d}`);\r\n        // console.log(this.density);\r\n        // fill(d);\r\n        // noStroke();\r\n        // rect(x, y, this.SCALE, this.SCALE);\r\n        // console.log(d);\r\n        if (d === 0) {\r\n          ctx.fillStyle = `rgb(255, 255, 255)`;\r\n        } else {\r\n          const col = getFalseColor(d * this.visScale);\r\n          ctx.fillStyle = `rgb(${col[0]}, ${col[1]},${col[2]})`;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.rect(x, y, this.SCALE, this.SCALE);\r\n        ctx.fill();\r\n        ctx.lineWidth = 0.2;\r\n        ctx.strokeStyle = '#ff0000';\r\n        // ctx.stroke()\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to render velocity\r\n  public renderV(ctx: CanvasRenderingContext2D) {\r\n    for (let i = 0; i < this.N; i++) {\r\n      for (let j = 0; j < this.N; j++) {\r\n        let x = i * this.SCALE;\r\n        let y = j * this.SCALE;\r\n        // let vx = this.Vx[IX(i, j, k)];\r\n        // let vy = this.Vy[IX(i, j, k)];\r\n        let vx = this.Vx[IX(i, j, this.N)];\r\n        let vy = this.Vy[IX(i, j, this.N)];\r\n        // this.canvas.stroke(0);\r\n\r\n        if (!(Math.abs(vx) < 0.1 && Math.abs(vy) <= 0.1)) {\r\n          ctx.lineWidth = 2;\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, y);\r\n          ctx.lineTo(x + vx * this.SCALE, y + vy * this.SCALE);\r\n          ctx.stroke();\r\n        //   line(x, y, x + vx * this.SCALE, y + vy * this.SCALE);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { Fluid } from './Core/Fluid';\r\n\r\nexport class FluidSimulation extends DefinitionIndeCanvasCore {\r\n\r\n  public divText: HTMLElement;\r\n\r\n  public mouse: number[];\r\n  public pts: number[][];\r\n\r\n  public fluid: Fluid;\r\n\r\n  public t = 0.0;\r\n\r\n  public vecs: number[][] = [];\r\n\r\n  public emmiters: number[][] = [];\r\n  public xx = 1;\r\n  public yy = 1;\r\n\r\n  public img: HTMLImageElement;\r\n\r\n  constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n      super(SceneCreativeCoding);\r\n      this.init();\r\n      this.initUI();\r\n\r\n      const img = new Image();\r\n      // img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint_01.jpg';\r\n      // img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint.png';\r\n      // img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint.jpg';\r\n      // img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint_02.jpg';\r\n      // img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint_03.jpg';\r\n      // img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint_04.jpg';\r\n      // img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/Boston.jpg'\r\n      img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/Boston_02.jpg';\r\n      img.setAttribute('crossOrigin', '');\r\n      // this.indeCanvas.bodyDiv.divHost.appendChild(img);\r\n\r\n      img.onload = () => {\r\n        this.img = img;\r\n\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        if (ctx) {\r\n          ctx.drawImage(img, 0, 0, this.fluid.N, this.fluid.N);\r\n\r\n          const data: ImageData | undefined = ctx.getImageData(0, 0, this.fluid.N, this.fluid.N);\r\n          // const width = ctx.canvas.width;\r\n\r\n          if (data) {\r\n\r\n            for (let y = 0; y < this.fluid.N; ++y) {\r\n              for (let x = 0; x < this.fluid.N; ++x) {\r\n                const d = data.data[ (x + (this.fluid.N * y)) * 4 ];\r\n                if (d < 200) {\r\n\r\n                  this.fluid.cellFixed.push([x, y]);\r\n                }\r\n\r\n              }\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      };\r\n\r\n  }\r\n  public initUI() {\r\n    let divHost = document.createElement('div');\r\n    divHost.style.position = 'absolute';\r\n    divHost.style.left = '450px';\r\n    divHost.style.height = '50px';\r\n    this.indeCanvas.bodyDiv.divHost.appendChild(divHost);\r\n\r\n    let divBtn = document.createElement('button');\r\n    divBtn.textContent = 'Reset';\r\n    divBtn.style.width = '60px';\r\n    divBtn.style.height = '20px';\r\n    divBtn.onclick = () => {\r\n      this.init();\r\n    };\r\n    divHost.appendChild(divBtn);\r\n\r\n    let div5 = document.createElement('div');\r\n    div5.innerHTML = 'time';\r\n    div5.style.height = '50px';\r\n    div5.style.width = '100px';\r\n    divHost.appendChild(div5);\r\n\r\n    let sliderD = document.createElement('input');\r\n    sliderD.type = 'range';\r\n    sliderD.min = '0.0001';\r\n    sliderD.max = '0.7';\r\n    sliderD.step = '0.0001';\r\n    sliderD.oninput = () => {\r\n        const val = +sliderD.value as number;\r\n        this.fluid.dt = val;\r\n        console.log('this.fluid.visScale', this.fluid.visScale);\r\n    };\r\n    div5.appendChild(sliderD);\r\n\r\n    let div = document.createElement('div');\r\n    div.innerHTML = 'Vis Scale';\r\n    div.style.height = '50px';\r\n    div.style.width = '100px';\r\n    divHost.appendChild(div);\r\n\r\n    let sliderA = document.createElement('input');\r\n    sliderA.type = 'range';\r\n    sliderA.min = '0.000001';\r\n    sliderA.max = '0.8';\r\n    sliderA.step = '0.00001';\r\n    sliderA.oninput = () => {\r\n        const val = +sliderA.value as number;\r\n        this.fluid.visScale = val;\r\n        console.log('this.fluid.visScale', this.fluid.visScale);\r\n    };\r\n    div.appendChild(sliderA);\r\n\r\n    const div2 = document.createElement('div');\r\n    div2.innerHTML = 'Viscosity';\r\n    // div2.style.backgroundColor = '#ff0000';\r\n    div2.style.height = '50px';\r\n    div2.style.width = '100px';\r\n\r\n    divHost.appendChild(div2);\r\n\r\n    const sliderB = document.createElement('input');\r\n    sliderB.type = 'range';\r\n    sliderB.min = '0.000000';\r\n    sliderB.max = '0.0001';\r\n    sliderB.step = '0.0000001';\r\n    sliderB.oninput = () => {\r\n        const val = +sliderB.value as number;\r\n        this.fluid.visc = val;\r\n        console.log('this.fluid.visScale', this.fluid.visScale);\r\n    };\r\n    div2.appendChild(sliderB);\r\n\r\n    const div3 = document.createElement('div');\r\n    div3.innerHTML = 'rotation';\r\n    // div3.style.backgroundColor = '#ff0000';\r\n    div3.style.height = '50px';\r\n    div3.style.width = '100px';\r\n\r\n    divHost.appendChild(div3);\r\n\r\n    const sliderC = document.createElement('input');\r\n    sliderC.type = 'range';\r\n    sliderC.min = '0.000000';\r\n    sliderC.max = '360';\r\n    sliderC.step = '0.0000001';\r\n    sliderC.oninput = () => {\r\n        const val = +sliderC.value as number;\r\n        this.rotation(val);\r\n        console.log('val', val);\r\n    };\r\n    div3.appendChild(sliderC);\r\n\r\n    const divText = document.createElement('div');\r\n    divText.innerHTML = 'rotation';\r\n    // divText.style.backgroundColor = '#ff0000';\r\n    divText.style.height = '50px';\r\n    divText.style.width = '100px';\r\n    this.divText = divText;\r\n    divHost.appendChild(divText);\r\n\r\n    const divRefer = document.createElement('div');\r\n    divRefer.innerHTML = 'Ref:<br>Fluid Simulation <br>By Daniel Shiffman';\r\n    // divRefer.style.backgroundColor = '#ff0000';\r\n    divRefer.style.height = '50px';\r\n    divRefer.style.width = '300px';\r\n    divRefer.style.fontSize = '14px';\r\n    divHost.appendChild(divRefer);\r\n\r\n    this.emmiters.push([Math.floor( 0.5 * this.fluid.N), Math.floor( 0.5 * this.fluid.N)]);\r\n  }\r\n  public init() {\r\n      this.fluid = new Fluid(0.02, 0, 0.0000001);\r\n      this.emmiters = [];\r\n      this.emmiters.push([Math.floor( 0.5 * this.fluid.N), Math.floor( 0.5 * this.fluid.N)]);\r\n  }\r\n  public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n      // console.log('cx, cy', cx, cy)\r\n\r\n      for (let k = 0 ; k < this.emmiters.length; ++k) {\r\n        let cx = this.emmiters[k][0];\r\n        let cy = this.emmiters[k][1];\r\n        for (let i = -1; i <= 1; i++) {\r\n          for (let j = -1; j <= 1; j++) {\r\n            // this.fluid.addDensity(cx + i, cy + j, random(50, 150));\r\n            // console.log((Math.random() * 100) + 50)\r\n            this.fluid.addDensity(cx + i, cy + j, (Math.random() * 5) );\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let k = 0 ; k < this.emmiters.length; ++k) {\r\n        let cx = this.emmiters[k][0];\r\n        let cy = this.emmiters[k][1];\r\n        for (let i = 0; i < 2; i++) {\r\n          // let angle = noise(t) * Math.PI * 2;\r\n          // let v = p5.Vector.fromAngle(angle);\r\n          // v.mult(0.2);\r\n          // this.t += 0.01;\r\n          // this.fluid.addVelocity(cx, cy, v.x, v.y);\r\n          this.fluid.addVelocity(cx, cy, this.xx, this.yy);\r\n          // this.fluid.addVelocity(cx, cy, 1 , 1);\r\n        }\r\n      }\r\n\r\n      this.fluid.step();\r\n      this.fluid.renderD(ctx);\r\n      // this.fluid.renderV(ctx);\r\n\r\n      // if (this.img) {\r\n      //   ctx.drawImage(this.img, 0, 0);\r\n      // }\r\n  }\r\n  public MouseLeftClick(x: number, y: number) {\r\n    const xx = Math.floor(x / this.fluid.SCALE);\r\n    const yy = Math.floor(y / this.fluid.SCALE);\r\n    this.emmiters.push([xx, yy]);\r\n  }\r\n  public MouseDrag(x: number, y: number) {\r\n    const xx = Math.floor(x / this.fluid.SCALE);\r\n    const yy = Math.floor(y / this.fluid.SCALE);\r\n    this.fluid.cellFixed.push([xx, yy]);\r\n  }\r\n  public rotation(angle: number) {\r\n    const theta = angle * Math.PI / 180;\r\n    this.xx = Math.cos(theta);\r\n    this.yy = Math.sin(theta);\r\n  }\r\n  public MouseMove(x: number, y: number) {\r\n    const xx = Math.floor(x / this.fluid.SCALE);\r\n    const yy = Math.floor(y / this.fluid.SCALE);\r\n    const d = this.fluid.density[xx + yy * this.fluid.N];\r\n    if (d) {\r\n      this.divText.innerHTML = `${d}`;\r\n    }\r\n  }\r\n}","/*\r\n * A speed-improved perlin and simplex noise algorithms for 2D.\r\n *\r\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\r\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\r\n * Better rank ordering method by Stefan Gustavson in 2012.\r\n * Converted to Javascript by Joseph Gentle.\r\n *\r\n * Version 2012-03-09\r\n *\r\n * This code was placed in the public domain by its original author,\r\n * Stefan Gustavson. You may use it as you see fit, but\r\n * attribution is appreciated.\r\n *\r\n */\r\n// https://codepen.io/Mamboleoo/pen/rrGgLW?editors=0010\r\n\r\nconst fade = (t: number) => {\r\n  return t * t * t * (t * (t * 6 - 15) + 10);\r\n};\r\n\r\nconst lerp = (a: number, b: number, t: number) => {\r\n  return (1 - t) * a + t * b;\r\n};\r\n\r\nclass Grad {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  constructor(x: number, y: number, z: number) {\r\n    this.x = x; this.y = y; this.z = z;\r\n  }\r\n  public dot2(x: number, y: number) {\r\n    return this.x * x + this.y * y;\r\n  }\r\n  public dot3(x: number, y: number, z: number) {\r\n    return this.x * x + this.y * y + this.z * z;\r\n  }\r\n}\r\n\r\nconst grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0),\r\n  new Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1),\r\n  new Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\r\n\r\nconst p = [151, 160, 137, 91, 90, 15,\r\n131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\r\n190,  6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\r\n88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168,  68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\r\n77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\r\n102, 143, 54,  65, 25, 63, 161,  1, 216, 80, 73, 209, 76, 132, 187, 208,  89, 18, 169, 200, 196,\r\n135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186,  3, 64, 52, 217, 226, 250, 124, 123,\r\n5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\r\n223, 183, 170, 213, 119, 248, 152,  2, 44, 154, 163,  70, 221, 153, 101, 155, 167,  43, 172, 9,\r\n129, 22, 39, 253,  19, 98, 108, 110, 79, 113, 224, 232, 178, 185,  112, 104, 218, 246, 97, 228,\r\n251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241,  81, 51, 145, 235, 249, 14, 239, 107,\r\n49, 192, 214,  31, 181, 199, 106, 157, 184,  84, 204, 176, 115, 121, 50, 45, 127,  4, 150, 254,\r\n138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\r\n// To remove the need for index wrapping, double the permutation table length\r\nconst perm = new Array(512);\r\nconst gradP = new Array(512);\r\n\r\nconst F3 = 1 / 3;\r\nconst G3 = 1 / 6;\r\n\r\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\r\nconst G2 = (3 - Math.sqrt(3)) / 6;\r\n\r\n// This isn't a very good seeding function, but it works ok. It supports 2^16\r\n// different seed values. Write something better if you need more seeds.\r\nconst seed = (seed: number) => {\r\n  if (seed > 0 && seed < 1) {\r\n    // Scale the seed out\r\n    seed *= 65536;\r\n  }\r\n\r\n  seed = Math.floor(seed);\r\n  if (seed < 256) {\r\n    seed |= seed << 8;\r\n  }\r\n\r\n  for (let i = 0; i < 256; i++) {\r\n    let v;\r\n    if (i & 1) {\r\n      v = p[i] ^ (seed & 255);\r\n    } else {\r\n      v = p[i] ^ ((seed >> 8) & 255);\r\n    }\r\n\r\n    perm[i] = perm[i + 256] = v;\r\n    gradP[i] = gradP[i + 256] = grad3[v % 12];\r\n  }\r\n};\r\nseed(0);\r\n\r\n\r\nexport const perlin2 = (x: number, y: number) => {\r\n  // Find unit grid cell containing point\r\n  let X = Math.floor(x), Y = Math.floor(y);\r\n  // Get relative xy coordinates of point within that cell\r\n  x = x - X; y = y - Y;\r\n  // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n  X = X & 255; Y = Y & 255;\r\n\r\n  // Calculate noise contributions from each of the four corners\r\n  let n00 = gradP[X + perm[Y]].dot2(x, y);\r\n  let n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\r\n  let n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\r\n  let n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1);\r\n\r\n  // Compute the fade curve value for x\r\n  let u = fade(x);\r\n\r\n  // Interpolate the four results\r\n  return lerp(\r\n      lerp(n00, n10, u),\r\n      lerp(n01, n11, u),\r\n      fade(y));\r\n};\r\n\r\nexport const simplex2 = (xin: number, yin: number) => {\r\n  let n0, n1, n2; // Noise contributions from the three corners\r\n  // Skew the input space to determine which simplex cell we're in\r\n  let s = (xin + yin) * F2; // Hairy factor for 2D\r\n  let i = Math.floor(xin + s);\r\n  let j = Math.floor(yin + s);\r\n  let t = (i + j) * G2;\r\n  let x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n  let y0 = yin - j + t;\r\n  // For the 2D case, the simplex shape is an equilateral triangle.\r\n  // Determine which simplex we are in.\r\n  let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n  if (x0 > y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n    i1 = 1; j1 = 0;\r\n  } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n    i1 = 0; j1 = 1;\r\n  }\r\n  // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n  // c = (3-sqrt(3))/6\r\n  let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\r\n  let y1 = y0 - j1 + G2;\r\n  let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\r\n  let y2 = y0 - 1 + 2 * G2;\r\n  // Work out the hashed gradient indices of the three simplex corners\r\n  i &= 255;\r\n  j &= 255;\r\n  let gi0 = gradP[i + perm[j]];\r\n  let gi1 = gradP[i + i1 + perm[j + j1]];\r\n  let gi2 = gradP[i + 1 + perm[j + 1]];\r\n  // Calculate the contribution from the three corners\r\n  let t0 = 0.5 - x0 * x0 - y0 * y0;\r\n  if (t0 < 0) {\r\n    n0 = 0;\r\n  } else {\r\n    t0 *= t0;\r\n    n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\r\n  }\r\n  let t1 = 0.5 - x1 * x1 - y1 * y1;\r\n  if (t1 < 0) {\r\n    n1 = 0;\r\n  } else {\r\n    t1 *= t1;\r\n    n1 = t1 * t1 * gi1.dot2(x1, y1);\r\n  }\r\n  let t2 = 0.5 - x2 * x2 - y2 * y2;\r\n  if (t2 < 0) {\r\n    n2 = 0;\r\n  } else {\r\n    t2 *= t2;\r\n    n2 = t2 * t2 * gi2.dot2(x2, y2);\r\n  }\r\n  // Add contributions from each corner to get the final noise value.\r\n  // The result is scaled to return values in the interval [-1,1].\r\n  return 70 * (n0 + n1 + n2);\r\n};\r\n\r\nexport const perlin3 =  (x: number, y: number, z: number) => {\r\n  // Find unit grid cell containing point\r\n  let X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\r\n  // Get relative xyz coordinates of point within that cell\r\n  x = x - X; y = y - Y; z = z - Z;\r\n  // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n  X = X & 255; Y = Y & 255; Z = Z & 255;\r\n\r\n  // Calculate noise contributions from each of the eight corners\r\n  let n000 = gradP[X +  perm[Y +  perm[Z  ]]].dot3(x, y, z);\r\n  let n001 = gradP[X +  perm[Y +  perm[Z + 1]]].dot3(x, y, z - 1);\r\n  let n010 = gradP[X +  perm[Y + 1 + perm[Z  ]]].dot3(x, y - 1, z);\r\n  let n011 = gradP[X +  perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\r\n  let n100 = gradP[X + 1 + perm[Y +  perm[Z  ]]].dot3(x - 1, y, z);\r\n  let n101 = gradP[X + 1 + perm[Y +  perm[Z + 1]]].dot3(x - 1, y, z - 1);\r\n  let n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\r\n  let n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1);\r\n\r\n  // Compute the fade curve value for x, y, z\r\n  let u = fade(x);\r\n  let v = fade(y);\r\n  let w = fade(z);\r\n\r\n  // Interpolate\r\n  return lerp(\r\n      lerp(\r\n        lerp(n000, n100, u),\r\n        lerp(n001, n101, u), w),\r\n      lerp(\r\n        lerp(n010, n110, u),\r\n        lerp(n011, n111, u), w),\r\n      v);\r\n};\r\n\r\nexport const simplex3 = (xin: number, yin: number, zin: number) => {\r\n  let n0, n1, n2, n3; // Noise contributions from the four corners\r\n\r\n  // Skew the input space to determine which simplex cell we're in\r\n  let s = (xin + yin + zin) * F3; // Hairy factor for 2D\r\n  let i = Math.floor(xin + s);\r\n  let j = Math.floor(yin + s);\r\n  let k = Math.floor(zin + s);\r\n\r\n  let t = (i + j + k) * G3;\r\n  let x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n  let y0 = yin - j + t;\r\n  let z0 = zin - k + t;\r\n\r\n  // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n  // Determine which simplex we are in.\r\n  let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\r\n  let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\r\n  if (x0 >= y0) {\r\n    if (y0 >= z0)      { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n    else if (x0 >= z0) { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1; }\r\n    else               { i1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1; }\r\n  } else {\r\n    if (y0 < z0)      { i1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1; }\r\n    else if (x0 < z0) { i1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1; }\r\n    else              { i1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n  }\r\n  // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n  // c = 1/6.\r\n  let x1 = x0 - i1 + G3; // Offsets for second corner\r\n  let y1 = y0 - j1 + G3;\r\n  let z1 = z0 - k1 + G3;\r\n\r\n  let x2 = x0 - i2 + 2 * G3; // Offsets for third corner\r\n  let y2 = y0 - j2 + 2 * G3;\r\n  let z2 = z0 - k2 + 2 * G3;\r\n\r\n  let x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\r\n  let y3 = y0 - 1 + 3 * G3;\r\n  let z3 = z0 - 1 + 3 * G3;\r\n\r\n  // Work out the hashed gradient indices of the four simplex corners\r\n  i &= 255;\r\n  j &= 255;\r\n  k &= 255;\r\n  let gi0 = gradP[i +      perm[j +      perm[k   ]]];\r\n  let gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\r\n  let gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\r\n  let gi3 = gradP[i +  1 + perm[j +  1 + perm[k +  1]]];\r\n\r\n  // Calculate the contribution from the four corners\r\n  let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\r\n  if (t0 < 0) {\r\n    n0 = 0;\r\n  } else {\r\n    t0 *= t0;\r\n    n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\r\n  }\r\n  let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\r\n  if (t1 < 0) {\r\n    n1 = 0;\r\n  } else {\r\n    t1 *= t1;\r\n    n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\r\n  }\r\n  let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\r\n  if (t2 < 0) {\r\n    n2 = 0;\r\n  } else {\r\n    t2 *= t2;\r\n    n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\r\n  }\r\n  let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\r\n  if (t3 < 0) {\r\n    n3 = 0;\r\n  } else {\r\n    t3 *= t3;\r\n    n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\r\n  }\r\n  // Add contributions from each corner to get the final noise value.\r\n  // The result is scaled to return values in the interval [-1,1].\r\n  return 32 * (n0 + n1 + n2 + n3);\r\n\r\n};\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\nimport { SceneCreativeCoding } from '../..';\r\n// import { ColorUtility } from '../../../../../../../NJSCore/Core/NColor/Utility/ColorUtility';\r\nimport { simplex3 } from './Core/Perlin';\r\n\r\nexport class PerlinHeatmap extends DefinitionIndeCanvasCore {\r\n\r\n  public divText: HTMLElement;\r\n\r\n  public mouse: number[];\r\n  public pts: number[][];\r\n\r\n  public t = 0.0;\r\n  public interval = 1.0;\r\n  public res = 5;\r\n  public scale = 100;\r\n\r\n  public vecs: number[][] = [];\r\n\r\n  public emmiters: number[][] = [];\r\n  public xx = 1;\r\n  public yy = 1;\r\n\r\n  public img: HTMLImageElement;\r\n\r\n  constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n      super(SceneCreativeCoding);\r\n      this.init();\r\n      this.initUI();\r\n\r\n      this.indeCanvas.canvas.width = 300;\r\n      this.indeCanvas.canvas.height = 300;\r\n\r\n  }\r\n  public initUI() {\r\n    let divHost = document.createElement('div');\r\n    divHost.style.position = 'absolute';\r\n    divHost.style.left = '450px';\r\n    divHost.style.height = '50px';\r\n    this.indeCanvas.bodyDiv.divHost.appendChild(divHost);\r\n\r\n    let divBtn = document.createElement('button');\r\n    divBtn.textContent = 'Reset';\r\n    divBtn.style.width = '60px';\r\n    divBtn.style.height = '20px';\r\n    divBtn.onclick = () => {\r\n      this.init();\r\n    };\r\n    divHost.appendChild(divBtn);\r\n\r\n    let div5 = document.createElement('div');\r\n    div5.innerHTML = 'time';\r\n    div5.style.height = '50px';\r\n    div5.style.width = '100px';\r\n    divHost.appendChild(div5);\r\n\r\n    let sliderD = document.createElement('input');\r\n    sliderD.type = 'range';\r\n    sliderD.min = '0.001';\r\n    sliderD.max = '10.0';\r\n    sliderD.step = '0.0001';\r\n    sliderD.oninput = () => {\r\n        const val = +sliderD.value as number;\r\n        this.interval = val;\r\n        // console.log('this.fluid.visScale', this.fluid.visScale);\r\n    };\r\n    div5.appendChild(sliderD);\r\n\r\n    let div = document.createElement('div');\r\n    div.innerHTML = 'Res';\r\n    div.style.height = '50px';\r\n    div.style.width = '100px';\r\n    divHost.appendChild(div);\r\n\r\n    let sliderA = document.createElement('input');\r\n    sliderA.type = 'range';\r\n    sliderA.min = '1';\r\n    sliderA.max = '10';\r\n    sliderA.step = '1';\r\n    sliderA.oninput = () => {\r\n\r\n        this.res = +sliderA.value as number;\r\n        // this.fluid.visScale = val\r\n        // console.log('this.fluid.visScale', this.fluid.visScale);\r\n    };\r\n    div.appendChild(sliderA);\r\n\r\n    const div2 = document.createElement('div');\r\n    div2.innerHTML = 'Scale';\r\n    // div2.style.backgroundColor = '#ff0000';\r\n    div2.style.height = '50px';\r\n    div2.style.width = '100px';\r\n\r\n    divHost.appendChild(div2);\r\n\r\n    const sliderB = document.createElement('input');\r\n    sliderB.type = 'range';\r\n    sliderB.min = '1';\r\n    sliderB.max = '200';\r\n    sliderB.value = '100';\r\n    sliderB.step = '1';\r\n    sliderB.oninput = () => {\r\n        this.scale = +sliderB.value as number;\r\n        // this.fluid.visc = val\r\n        // console.log('this.fluid.visScale', this.fluid.visScale);\r\n    };\r\n    div2.appendChild(sliderB);\r\n\r\n    // const div3 = document.createElement('div');\r\n    // div3.innerHTML = 'rotation';\r\n    // // div3.style.backgroundColor = '#ff0000';\r\n    // div3.style.height = '50px';\r\n    // div3.style.width = '100px';\r\n\r\n    // divHost.appendChild(div3);\r\n\r\n    // const sliderC = document.createElement('input');\r\n    // sliderC.type = 'range';\r\n    // sliderC.min = '0.000000';\r\n    // sliderC.max = '360';\r\n    // sliderC.step = '0.0000001';\r\n    // sliderC.oninput = () => {\r\n    //     const val = +sliderC.value as number;\r\n    //     this.rotation(val);\r\n    //     console.log('val', val);\r\n    // };\r\n    // div3.appendChild(sliderC);\r\n\r\n    // const divText = document.createElement('div');\r\n    // divText.innerHTML = 'rotation';\r\n    // // divText.style.backgroundColor = '#ff0000';\r\n    // divText.style.height = '50px';\r\n    // divText.style.width = '100px';\r\n    // this.divText = divText;\r\n    // divHost.appendChild(divText);\r\n\r\n    // const divRefer = document.createElement('div');\r\n    // divRefer.innerHTML = 'Ref:<br>Fluid Simulation <br>By Daniel Shiffman';\r\n    // // divRefer.style.backgroundColor = '#ff0000';\r\n    // divRefer.style.height = '50px';\r\n    // divRefer.style.width = '300px';\r\n    // divRefer.style.fontSize = '14px';\r\n    // divHost.appendChild(divRefer);\r\n\r\n    // this.emmiters.push([Math.floor( 0.5 * this.fluid.N), Math.floor( 0.5 * this.fluid.N)]);\r\n  }\r\n  public init() {\r\n    // TODO\r\n  }\r\n  public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n    for (let y = 0; y < ctx.canvas.height; y += this.res) {\r\n      for (let x = 0; x < ctx.canvas.width; x += this.res) {\r\n        // const x = j;\r\n        // const z = i;\r\n        // const a = this.t\r\n\r\n        // var value = Math.round(Math.abs(simplex3(x/100, y/100, this.t*0.01))*10)/10;\r\n        var value = Math.round(Math.abs(simplex3(x / this.scale, y / this.scale, this.t * 0.01)) * 10) / 10;\r\n        const color = ('hsl(' + (180 - value * 180) + ',50%,50%)');\r\n        // console.log(color);\r\n        // const y = value*18;\r\n        // console.log(x, y, z, this.t);\r\n        // const value = Math.abs(simplex3(x * 0.1, y * 0.1, this.t*0.1));\r\n\r\n        // const col = ColorUtility.HSL2RGB(value, 0.5, 0.5);\r\n\r\n        // console.log(value, col);\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(x, y, this.res, this.res);\r\n        ctx.closePath();\r\n        ctx.fillStyle = color;\r\n        ctx.fill();\r\n\r\n      }\r\n\r\n    }\r\n\r\n    this.t += this.interval;\r\n    // console.log(this.t);\r\n  }\r\n  public MouseLeftClick(x: number, y: number) {\r\n\r\n  }\r\n  public MouseDrag(x: number, y: number) {\r\n\r\n  }\r\n  public rotation(angle: number) {\r\n\r\n  }\r\n  public MouseMove(x: number, y: number) {\r\n\r\n  }\r\n}","import { NVector3, CircularProjctionFromPoint } from '../../../../../../../../NJSCore/Core/CoreGeometry/NGeometry/NVector3';\r\n\r\nenum PointID {\r\n  Cp = 'cp',\r\n  L1 = 'l1',\r\n  L2 = 'l2',\r\n  R1 = 'r1',\r\n  R2 = 'r2',\r\n}\r\n\r\n\r\nexport class ColorPicker {\r\n  public canvasBase: HTMLCanvasElement;\r\n  public ctxBase: CanvasRenderingContext2D;\r\n  public canvas: HTMLCanvasElement;\r\n  public ctx: CanvasRenderingContext2D;\r\n  public img: HTMLImageElement;\r\n\r\n  public cp: CPoint;\r\n  public cpL1: CPoint;\r\n  public cpL2: CPoint;\r\n  public cpR1: CPoint;\r\n  public cpR2: CPoint;\r\n\r\n  public capture: Point | undefined = undefined;\r\n  public r: number;\r\n  public offset: number = 15;\r\n\r\n  public m = new NVector3(0, 0, 0);\r\n\r\n  constructor(div: HTMLDivElement) {\r\n    div.style.background = '#eeeeee';\r\n\r\n    this.canvasBase = document.createElement('canvas');\r\n    this.canvasBase.style.position = 'absolute';\r\n    div.append(this.canvasBase);\r\n    this.ctxBase = this.canvasBase.getContext('2d') as CanvasRenderingContext2D;\r\n    this.canvasBase.width = 300;\r\n    this.canvasBase.height = 300;\r\n    this.r = 150;\r\n    this.ctxBase.translate(this.r, this.r);\r\n    // this.img = new Image();\r\n    // this.img.src = 'https://raw.githubusercontent.com/NamjuLee/data/master/color/color-wheel.png';\r\n    // this.img.onload = () => {\r\n    //   this.canvasBase.width = this.img.width;\r\n    //   this.canvasBase.height = this.img.height;\r\n    //   this.ctxBase.drawImage(this.img, 0, 0);\r\n\r\n    //   this.canvas = document.createElement('canvas');\r\n    //   this.canvas.style.position = 'absolute';\r\n    //   this.canvas.width = this.canvasBase.width;\r\n    //   this.canvas.height = this.canvasBase.height;\r\n    //   this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    //   div.append(this.canvas);\r\n\r\n    //   this.r = (this.canvasBase.width * 0.5) - this.offset;\r\n    //   this.ctx.translate(this.r, this.r);\r\n    //   this.init();\r\n    // };\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.style.position = 'absolute';\r\n    this.canvas.width = this.canvasBase.width;\r\n    this.canvas.height = this.canvasBase.height;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.ctx.translate(this.r, this.r);\r\n\r\n\r\n    div.append(this.canvas);\r\n    this.initEvent();\r\n    this.init();\r\n  }\r\n  private initEvent() {\r\n    this.canvas.addEventListener('mousedown', e => {\r\n      const m = this.MousePostProcess(e);\r\n      this.mouseDown(m[0], m[1]);\r\n    });\r\n    this.canvas.addEventListener('mousemove', e => {\r\n      const m = this.MousePostProcess(e);\r\n      this.mouseMove(m[0], m[1]);\r\n    });\r\n    this.canvas.addEventListener('mouseup', e => {\r\n      const m = this.MousePostProcess(e);\r\n      this.mouseUp(m[0], m[1]);\r\n    });\r\n  }\r\n  private MousePostProcess(e: MouseEvent) {\r\n    const x = e.offsetX - this.r;\r\n    const y = e.offsetY - this.r;\r\n\r\n    // if (Math.sqrt(x * x + y * y) > this.r) {\r\n    //   return [this.m.x, this.m.y];\r\n    // }\r\n    this.m.x = x;\r\n    this.m.y = y;\r\n\r\n    return [x, y];\r\n  }\r\n\r\n  private init() {\r\n    this.cp = new CPoint(this, 0, 0, PointID.Cp);\r\n    this.cpL1 = new L1Point(this, 10, 10, PointID.L1);\r\n    this.cpL1.updatePosByRadian(3);\r\n    this.cpR1 = new R1Point(this, 10, 10, PointID.R1);\r\n    this.cpR1.updatePosByRadian(-3);\r\n\r\n\r\n    let radius = this.r;\r\n    let image = this.ctxBase.createImageData(2 * radius, 2 * radius);\r\n    let data = image.data;\r\n\r\n    for (let x = -radius; x < radius; x++) {\r\n      for (let y = -radius; y < radius; y++) {\r\n        let [r, phi] = xy2polar(x, y);\r\n\r\n        if (r > radius) {\r\n          // skip all (x,y) coordinates that are outside of the circle\r\n          continue;\r\n        }\r\n\r\n        let deg = rad2deg(phi);\r\n\r\n        // Figure out the starting index of this pixel in the image data array.\r\n        let rowLength = 2 * radius;\r\n        let adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let pixelWidth = 4; // each pixel requires 4 slots in the data array\r\n        let index = (adjustedX + adjustedY * rowLength) * pixelWidth;\r\n\r\n        let hue = deg;\r\n        let saturation = 1.0;\r\n        let value = 1.0;\r\n\r\n        let [red, green, blue] = hsv2rgb(hue, saturation, value);\r\n        let alpha = 255;\r\n\r\n        data[index] = red;\r\n        data[index + 1] = green;\r\n        data[index + 2] = blue;\r\n        data[index + 3] = alpha;\r\n      }\r\n    }\r\n\r\n    this.ctxBase.putImageData(image, 0, 0);\r\n\r\n    this.ctxBase.beginPath();\r\n    this.ctxBase.arc(0, 0, 1, 0, Math.PI * 2);\r\n    this.ctxBase.closePath();\r\n    this.ctxBase.fill();\r\n\r\n\r\n    this.render(this.ctx);\r\n  }\r\n  private render(ctx: CanvasRenderingContext2D) {\r\n    ctx.clearRect(-this.r, -this.r , this.r * 2, this.r * 2);\r\n    this.cp.render(ctx);\r\n    this.cpL1.render(ctx);\r\n    this.cpR1.render(ctx);\r\n\r\n  }\r\n  public mouseDrag(x: number, y: number) {\r\n    // this.cp.vec.x = x;\r\n    // this.cp.vec.y = y;\r\n    // console.log(x, y);\r\n    // this.render(this.ctx);\r\n  }\r\n  public mouseMove(x: number, y: number) {\r\n    if (this.capture) {\r\n      if (this.capture.id === PointID.Cp) {\r\n        const vec = new NVector3(x, y, 0);\r\n        let length = vec.Length();\r\n        length = length > this.r ? this.r : length;\r\n        const v = CircularProjctionFromPoint(vec, length );\r\n        this.capture.updatePos(v);\r\n      } else if (this.capture.id === PointID.L1) {\r\n        const vec = new NVector3(x, y, 0);\r\n        let length = vec.Length();\r\n        length = length > this.r ? this.r : length;\r\n        const v = CircularProjctionFromPoint(vec, length );\r\n        this.capture.updatePos(v);\r\n      } else if (this.capture.id === PointID.R1) {\r\n        const vec = new NVector3(x, y, 0);\r\n        let length = vec.Length();\r\n        length = length > this.r ? this.r : length;\r\n        const v = CircularProjctionFromPoint(vec, length );\r\n        this.capture.updatePos(v);\r\n      }\r\n    }\r\n\r\n    this.render(this.ctx);\r\n  }\r\n  public mouseDown(x: number, y: number) {\r\n    this.capture = this.GetPoint(x, y);\r\n  }\r\n  public mouseUp(x: number, y: number) {\r\n    this.capture = undefined;\r\n  }\r\n  public GetPoint(x: number, y: number): Point | undefined {\r\n    if (this.cp.getDistance(x, y) < this.cp.r) {\r\n      return this.cp;\r\n    }\r\n    if (this.cpL1.getDistance(x, y) < this.cp.r) {\r\n      return this.cpL1;\r\n    }\r\n    if (this.cpR1.getDistance(x, y) < this.cp.r) {\r\n      return this.cpR1;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Point {\r\n  colorPicker: ColorPicker;\r\n  vec: NVector3;\r\n  r: number = 15;\r\n  radian: number = 0;\r\n  radius: number = 10;\r\n  id: PointID;\r\n  color: string = '#ffffff';\r\n\r\n  constructor(colorPicker: ColorPicker, x: number, y: number, id: PointID) {\r\n    this.colorPicker = colorPicker;\r\n    this.vec = new NVector3(x, y, 0);\r\n    this.id = id;\r\n  }\r\n  public getRadian() {\r\n    this.radian = Math.atan2(this.vec.x , this.vec.y);\r\n    this.radian -= Math.PI * 0.5;\r\n    this.radian *= -1;\r\n    return this.radian;\r\n  }\r\n  public updatePosByRadian(radian: number) {\r\n    // console.log(radian);\r\n    this.vec.x = Math.cos(radian);\r\n    this.vec.y = Math.sin(radian);\r\n    this.vec.x *= this.radius;\r\n    this.vec.y *= this.radius;\r\n  }\r\n  public updatePos(v: NVector3) {\r\n    if (this.id === PointID.Cp) {\r\n      this.vec.x = v.x;\r\n      this.vec.y = v.y;\r\n      this.radius = this.vec.Length();\r\n      this.getRadian();\r\n\r\n      this.colorPicker.cpL1.radius = this.radius;\r\n      this.colorPicker.cpL1.updatePosByRadian(this.colorPicker.cpL1.radian +  this.colorPicker.cpL1.radian - this.radian );\r\n\r\n      this.colorPicker.cpR1.radius = this.radius;\r\n      // this.colorPicker.cpR1.updatePosByRadian(this.colorPicker.cpL1.radian -  this.colorPicker.cpL1.radian + this.radian);\r\n    }\r\n  }\r\n  public updateposByCPOffset(v: number) {\r\n\r\n  }\r\n  public getDistance(x: number, y: number) {\r\n    const dis = Math.sqrt((this.vec.x - x) * (this.vec.x - x) + (this.vec.y - y) * (this.vec.y - y));\r\n    // console.log(x, y, this.vec.x, this.vec.y, dis);\r\n    return dis;\r\n  }\r\n  public render(ctx: CanvasRenderingContext2D) {\r\n    const c: ImageData = this.colorPicker.ctxBase.getImageData(this.vec.x + this.colorPicker.r, this.vec.y + this.colorPicker.r, 2, 2);\r\n    this.color = `rgb(${c.data[0]}, ${c.data[1]}, ${c.data[2]})`;\r\n    // console.log(this.color);\r\n\r\n    ctx.strokeStyle = '#ffffff';\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(this.vec.x, this.vec.y);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.vec.x, this.vec.y, this.r, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nclass CPoint extends Point {\r\n  constructor(colorPicker: ColorPicker, x: number, y: number, id: PointID) {\r\n    super(colorPicker, x, y, id);\r\n  }\r\n}\r\nclass L1Point extends Point {\r\n\r\n  constructor(colorPicker: ColorPicker, x: number, y: number, id: PointID) {\r\n    super(colorPicker, x, y, id);\r\n  }\r\n  public updatePos(v: NVector3) {\r\n      this.vec.x = v.x;\r\n      this.vec.y = v.y;\r\n      this.radius = this.vec.Length();\r\n      this.getRadian();\r\n      console.log(-this.radius);\r\n\r\n      let offset = this.colorPicker.cp.radian;\r\n      this.colorPicker.cpR1.updatePosByRadian(-this.radian + offset * 2);\r\n  }\r\n  // }\r\n}\r\n\r\n\r\nclass R1Point extends Point {\r\n\r\n  constructor(colorPicker: ColorPicker, x: number, y: number, id: PointID) {\r\n    super(colorPicker, x, y, id);\r\n  }\r\n  public updatePos(v: NVector3) {\r\n      this.vec.x = v.x;\r\n      this.vec.y = v.y;\r\n      this.radius = this.vec.Length();\r\n      this.getRadian();\r\n      console.log(-this.radius);\r\n\r\n      let offset = this.colorPicker.cp.radian;\r\n      this.colorPicker.cpL1.updatePosByRadian(-this.radian + offset * 2);\r\n    }\r\n  public updateposByCPOffset(v: number) {\r\n      this.radian += v;\r\n      this.vec.x = Math.cos(this.radian);\r\n      this.vec.y = Math.sin(this.radian);\r\n      this.vec.x *= this.radius;\r\n      this.vec.y *= this.radius;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst xy2polar = (x: number, y: number) => {\r\n  let r = Math.sqrt(x * x + y * y);\r\n  let phi = Math.atan2(y, x);\r\n  return [r, phi];\r\n};\r\n\r\n// rad in [-π, π] range\r\n// return degree in [0, 360] range\r\nconst rad2deg = (rad: number) => {\r\n  return ((rad + Math.PI) / (2 * Math.PI)) * 360;\r\n};\r\n\r\n// // Utility functions (ignore mostly)\r\nconst hsv2rgb = (h: number, s: number, v: number) => {\r\n  var c = v * s;\r\n  var h1 = h / 60;\r\n  var x = c * (1 - Math.abs((h1 % 2) - 1));\r\n  var m = v - c;\r\n  var rgb: number[] = [0, 0, 0];\r\n\r\n  if (typeof h === 'undefined') rgb = [0, 0, 0];\r\n  else if (h1 < 1) rgb = [c, x, 0];\r\n  else if (h1 < 2) rgb = [x, c, 0];\r\n  else if (h1 < 3) rgb = [0, c, x];\r\n  else if (h1 < 4) rgb = [0, x, c];\r\n  else if (h1 < 5) rgb = [x, 0, c];\r\n  else if (h1 <= 6) rgb = [c, 0, x];\r\n\r\n  return [255 * (rgb[0] + m), 255 * (rgb[1] + m), 255 * (rgb[2] + m)];\r\n};\r\n// function hsv2rgbString(h: number,s: number,v: number) {\r\n//   var rgb = hsv2rgb(h,s,v);\r\n//   rgb = rgb.map(Math.round);\r\n//   return 'rgb('+rgb[0]+','+rgb[1]+','+rgb[2]+')';\r\n// }\r\n\r\n// // // Code\r\n// // var canvas = document.getElementById('picker');\r\n// // var context = canvas.getContext('2d');\r\n// // var rangeEl = document.getElementById('range');\r\n// // var x = canvas.width / 2;\r\n// // var y = canvas.height / 2;\r\n// // var borderWidth = 2;\r\n// // var totalRadius = canvas.width / 2 - borderWidth;\r\n// // var type = 'hsv';\r\n\r\n// // // To trigger anti aliasing, performance is poor even without it\r\n// // context.moveTo(x, y);\r\n\r\n// var drawPicker = function(context: CanvasRenderingContext2D) {\r\n//   context.clearRect (0, 0, 150, 150);\r\n//   context.lineWidth = 1;\r\n\r\n//   for (var i=0;i<totalRadius;i++) {\r\n//       var radius = totalRadius-i;\r\n//       if (type === 'hsl') {\r\n//           var saturation = Math.floor(radius/totalRadius*100)/100;\r\n//           var lightness = rangeEl.value;\r\n//       }else if (type === 'hsv') {\r\n//           var saturation = Math.floor(radius/totalRadius*100)/100;\r\n//           var value = rangeEl.value;\r\n//       }\r\n\r\n//       for (var angle=0; angle<=360; angle+=1) {\r\n//           var startAngle = (angle-1) * Math.PI/180;\r\n//           var endAngle = (angle+1) * Math.PI/180;\r\n//           context.beginPath();\r\n//           context.arc(x, y, radius, startAngle, endAngle, false);\r\n//           context.closePath();\r\n//           if (type === 'hsl') {\r\n//               context.strokeStyle = 'hsl('+angle+', '+saturation*100+'%, '+lightness*100+'%)';\r\n//           }else if (type === 'hsv') {\r\n//               context.strokeStyle = hsv2rgbString(angle,saturation,value);\r\n//           }\r\n//           context.stroke();\r\n//       }\r\n//   }\r\n//   // Draw the final black border\r\n//   context.strokeStyle = 'rgb(0,0,0)';\r\n//   context.lineWidth = borderWidth;\r\n//   context.beginPath();\r\n//   var borderRadius = totalRadius+borderWidth/2;\r\n//   context.arc(x, y, borderRadius, 0, 2*Math.PI, false);\r\n//   context.closePath();\r\n//   context.stroke();\r\n// }","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { ColorPicker } from './Core/ColorPicker';\r\n\r\nexport class ColorPickerApp extends DefinitionIndeCanvasCore {\r\n  public classColorPicker: ColorPicker;\r\n  constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n      super(SceneCreativeCoding);\r\n      this.indeCanvas.canvas.width = 300;\r\n      this.indeCanvas.canvas.height = 300;\r\n\r\n      const classColorPicker = new ColorPicker(this.indeCanvas.bodyDiv.divHost);\r\n      console.log(classColorPicker);\r\n\r\n  }\r\n  public initUI() {\r\n    // TODO\r\n  }\r\n  public init() {\r\n    // TODO\r\n  }\r\n  public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n  }\r\n  public MouseLeftClick(x: number, y: number) {\r\n\r\n  }\r\n  public MouseDrag(x: number, y: number) {\r\n\r\n  }\r\n  public rotation(angle: number) {\r\n\r\n  }\r\n  public MouseMove(x: number, y: number) {\r\n\r\n  }\r\n  public Mouseup(x: number, y: number) {\r\n\r\n  }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmMazeExit extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    map: PixelMap;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        // const array = [\r\n        //     [1, 1, 0, 1, 1, 0],\r\n        //     [1, 1, 0, 1, 1, 0],\r\n        //     [1, 1, 1, 1, 1, 1],\r\n        //     [1, 1, 1, 1, 0, 1]\r\n        // ];\r\n        // const array = [\r\n        //         [1, 0, 1, 1, 1, 1],\r\n        //         [1, 0, 1, 0, 1, 0],\r\n        //         [1, 0, 1, 0, 1, 1],\r\n        //         [1, 1, 1, 0, 1, 1]\r\n        //     ];\r\n        const array = [\r\n            [1, 0, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 0, 0, 0, 1],\r\n            [1, 0, 0, 0, 0, 0, 1],\r\n            [1, 0, 0, 0, 0, 0, 1],\r\n            [1, 0, 0, 0, 0, 0, 1],\r\n            [1, 0, 0, 0, 0, 0, 1],\r\n            [1, 1, 1, 1, 1, 1, 1],\r\n        ];\r\n        // const array = [\r\n        //     [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1],\r\n        //     [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1]\r\n        // ];\r\n        let before = performance.now();\r\n        this.map = new PixelMap(array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.map) { return; }\r\n        this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/5427\r\n\r\nclass Pixel {\r\n    map: PixelMap;\r\n    x: number = -1;\r\n    y: number = -1;\r\n    type: number;\r\n    scale: number = 50;\r\n    fill: boolean = false;\r\n    visited: boolean = false;\r\n    dist: number = -1;\r\n    start: boolean = false;\r\n    end: boolean = false;\r\n    connections: Pixel[] = [];\r\n    constructor(map: PixelMap, x: number, y: number, n: number) {\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.type = n;\r\n        if (this.type === 0) {\r\n            this.fill = true;\r\n        } else {\r\n            this.fill = false;\r\n        }\r\n    }\r\n    pushConnections(p: Pixel) {\r\n        if (p.fill) { return; }\r\n        this.connections.push(p);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        let xPos = (this.x + .5) * this.scale;\r\n        let yPos = (this.y + .5) * this.scale;\r\n\r\n        const dis = Math.sqrt((p[0] - xPos) * (p[0] - xPos) + (p[1] - yPos) * (p[1] - yPos));\r\n\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeStyle = '#ffffff';\r\n        ctx.beginPath();\r\n        ctx.rect(this.x * this.scale, this.y * this.scale, this.scale, this.scale);\r\n        ctx.closePath();\r\n        if (this.fill) {\r\n            ctx.fillStyle = 'rgba(0,0,0, 0.85)';\r\n        } else {\r\n            ctx.fillStyle = 'rgba(255,0,0, 0.5)';\r\n        }\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n        if (dis < 0.5 * this.scale) {\r\n            ctx.strokeStyle = '#ff0000';\r\n            ctx.lineWidth = 2;\r\n            for (let i = 0; i < this.connections.length; ++i) {\r\n                ctx.beginPath();\r\n                ctx.moveTo((this.x + .5) * this.scale, (this.y + .5) * this.scale);\r\n                ctx.lineTo((this.connections[i].x + .5) * this.scale, (this.connections[i].y + .5) * this.scale);\r\n                // ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n        if (this.start) {\r\n            ctx.fillStyle = '#0000ff';\r\n            ctx.beginPath();\r\n            ctx.arc((this.x + .5) * this.scale, (this.y + .5) * this.scale, 5, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        } else if (this.end) {\r\n            ctx.fillStyle = '#00ff00';\r\n            ctx.beginPath();\r\n            ctx.arc((this.x + .5) * this.scale, (this.y + .5) * this.scale, 5, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n}\r\nclass PixelMap {\r\n    pixels: Pixel[][] = [];\r\n    fires: Pixel[] = [];\r\n    start: Pixel;\r\n    exit: Pixel;\r\n    path: Pixel[] | undefined = [];\r\n    t = 0.0;\r\n    count = 1;\r\n    constructor(data: number[][]) {\r\n        for (let i = 0; i < data.length; ++i) {\r\n            const pixelsRow = [];\r\n            for (let j = 0; j < data[i].length; ++j) {\r\n                pixelsRow.push(new Pixel(this, j, i, data[i][j]));\r\n            }\r\n            this.pixels.push(pixelsRow);\r\n        }\r\n        this.InitConnections();\r\n        this.start = this.pixels[0][0];\r\n        this.exit = this.pixels[data.length - 1][data[0].length - 1];\r\n        this.start.start = true;\r\n        this.exit.end = true;\r\n        this.path = this.ComputePath(this.start, this.exit);\r\n    }\r\n    ComputePath(startP: Pixel, endP: Pixel) {\r\n        let queueForward = [startP];\r\n        while (queueForward.length > 0) {\r\n            let current = queueForward[0];\r\n            queueForward.shift();\r\n            current.visited = true;\r\n            console.log(current);\r\n            for (let i = 0; i < current.connections.length; ++i) {\r\n                if (!current.connections[i].fill && !current.connections[i].visited) {\r\n                    const newcost = this.ComputeCost(current, current.connections[i]);\r\n                    const newtemp = current.dist + newcost;\r\n                    if (current.connections[i].dist === -1.0 || newtemp < current.connections[i].dist) {\r\n                        current.connections[i].dist = newtemp;\r\n                        queueForward.push(current.connections[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(this);\r\n\r\n        let path = [];\r\n        if (endP.dist !== -1.0) {\r\n            path.push(endP);\r\n            let current = endP;\r\n            while (true) {\r\n\r\n                let smallest = current;\r\n                for (let i = 0; i < current.connections.length; ++i) {\r\n                    // if (!current.connections[i].fill) {\r\n                    if (current.connections[i].dist < smallest.dist) { smallest = current.connections[i]; }\r\n                    // }\r\n                }\r\n                // if (smallest === current) { break; }\r\n                current = smallest;\r\n                path.push(current);\r\n                if (current === startP) { break; }\r\n            }\r\n        }\r\n        console.log();\r\n        console.log('there are ', path.length, ' to exit');\r\n        return path;\r\n    }\r\n    ComputeCost(current: Pixel, target: Pixel): number {\r\n        return Math.sqrt((target.x - current.x) * (target.x - current.x) + (target.y - current.y) * (target.y - current.y));\r\n    }\r\n    InitConnections() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n                if (y !== 0 && y < this.pixels.length - 1 && x !== 0 && x < this.pixels[0].length - 1) {\r\n                    theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    theCell.pushConnections(this.pixels[y][x + 1]);\r\n                } else if (y === 0) {\r\n                    theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (y === this.pixels.length - 1) {\r\n                    theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (x === 0) {\r\n                    theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    }\r\n                } else if (x === this.pixels[0].length - 1) {\r\n                    theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                this.pixels[y][x].Render(ctx, p);\r\n            }\r\n        }\r\n\r\n        if (this.path && this.path.length > 0) {\r\n            this.RenderPath(ctx, this.path);\r\n        }\r\n\r\n    }\r\n    RenderPath(ctx: CanvasRenderingContext2D, path: Pixel[]) {\r\n        const scale = 50;\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.lineWidth = 5;\r\n        ctx.beginPath();\r\n        ctx.moveTo((path[0].x + 0.5) * scale, (path[0].y + 0.5) * scale);\r\n        for (let i = 1; i < path.length; ++i) {\r\n            ctx.lineTo((path[i].x + 0.5) * scale, (path[i].y + 0.5) * scale);\r\n        }\r\n        ctx.stroke();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmCabbage extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    map: PixelMap;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        const size = [10, 8];\r\n        const array = [\r\n            [0, 0],\r\n            [1, 0],\r\n            [1, 1],\r\n            [4, 2],\r\n            [4, 3],\r\n            [4, 5],\r\n            [2, 4],\r\n            [3, 4],\r\n            [7, 4],\r\n            [8, 4],\r\n            [9, 4],\r\n            [7, 5],\r\n            [8, 5],\r\n            [9, 5],\r\n            [7, 6],\r\n            [8, 6],\r\n            [9, 6]\r\n        ];\r\n        // const size = [10, 10];\r\n        // const array = [\r\n        //             [5, 5],\r\n        //             ];\r\n        let before = performance.now();\r\n        this.map = new PixelMap(size[0], size[1], array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/1012\r\n\r\nclass Pixel {\r\n    x: number = -1;\r\n    y: number = -1;\r\n    scale: number = 50;\r\n    fill: boolean = false;\r\n    visited: boolean = false;\r\n    connections: Pixel[] = [];\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        let xPos = (this.x + .5) * this.scale;\r\n        let yPos = (this.y + .5) * this.scale;\r\n\r\n        const dis = Math.sqrt((p[0] - xPos) * (p[0] - xPos) + (p[1] - yPos) * (p[1] - yPos));\r\n\r\n        ctx.lineWidth = 4;\r\n        ctx.beginPath();\r\n        ctx.rect(this.x * this.scale, this.y * this.scale, this.scale, this.scale);\r\n        ctx.closePath();\r\n        if (this.fill) {\r\n            if (this.visited) {\r\n                ctx.fillStyle = 'rgba(255,0,0, 0.5)';\r\n            } else {\r\n                ctx.fillStyle = 'rgba(0,255,0, 0.5)';\r\n            }\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n\r\n        if (dis < 0.5 * this.scale) {\r\n            ctx.lineWidth = 1;\r\n            for (let i = 0; i < this.connections.length; ++i) {\r\n                ctx.beginPath();\r\n                ctx.moveTo((this.x + .5) * this.scale, (this.y + .5) * this.scale);\r\n                ctx.lineTo((this.connections[i].x + .5) * this.scale, (this.connections[i].y + .5) * this.scale);\r\n                // ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n}\r\nclass PixelMap {\r\n    pixels: Pixel[][] = [];\r\n    constructor(xNum: number, yNum: number, num: number[][]) {\r\n        for (let y = 0; y < yNum; ++y) {\r\n            const pixelsRow = [];\r\n            for (let x = 0; x < xNum; ++x) {\r\n                pixelsRow.push(new Pixel(x, y));\r\n            }\r\n            this.pixels.push(pixelsRow);\r\n        }\r\n        this.InitFill(num);\r\n        this.InitConnections();\r\n        this.Compute(num);\r\n    }\r\n    Compute(num: number[][]) {\r\n        let count = 0;\r\n        for (let i = 0; i < num.length; ++i) {\r\n            let xx = num[i][0];\r\n            let yy = num[i][1];\r\n            let target = this.pixels[yy][xx];\r\n            if (target.visited) { continue; }\r\n\r\n            let queue = [target];\r\n            count++;\r\n            while (queue.length > 0) {\r\n                let pixel = queue[0];\r\n                // console.log(pixel);\r\n                pixel.visited = true;\r\n                queue.shift();\r\n\r\n                for (let i = 0; i < pixel.connections.length; ++i) {\r\n                    if (pixel.connections[i].fill && !pixel.connections[i].visited) {\r\n                        queue.push(pixel.connections[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log('there are ', count, ' group of cells');\r\n    }\r\n    InitFill(num: number[][]) {\r\n        for (let i = 0; i < num.length; ++i) {\r\n            let xx = num[i][0];\r\n            let yy = num[i][1];\r\n            this.pixels[yy][xx].fill = true;\r\n        }\r\n    }\r\n    InitConnections() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n                if (y !== 0 && y < this.pixels.length - 1 && x !== 0 && x < this.pixels[0].length - 1) {\r\n                    theCell.connections.push(this.pixels[y - 1][x]);\r\n                    theCell.connections.push(this.pixels[y + 1][x]);\r\n                    theCell.connections.push(this.pixels[y][x - 1]);\r\n                    theCell.connections.push(this.pixels[y][x + 1]);\r\n                } else if (y === 0) {\r\n                    theCell.connections.push(this.pixels[y + 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.connections.push(this.pixels[y][x - 1]);\r\n                        theCell.connections.push(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.connections.push(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.connections.push(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (y === this.pixels.length - 1) {\r\n                    theCell.connections.push(this.pixels[y - 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.connections.push(this.pixels[y][x - 1]);\r\n                        theCell.connections.push(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.connections.push(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.connections.push(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (x === 0) {\r\n                    theCell.connections.push(this.pixels[y][x + 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.connections.push(this.pixels[y - 1][x]);\r\n                        theCell.connections.push(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.connections.push(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.connections.push(this.pixels[y - 1][x]);\r\n                    }\r\n                } else if (x === this.pixels[0].length - 1) {\r\n                    theCell.connections.push(this.pixels[y][x - 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.connections.push(this.pixels[y - 1][x]);\r\n                        theCell.connections.push(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.connections.push(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.connections.push(this.pixels[y - 1][x]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                this.pixels[y][x].Render(ctx, p);\r\n            }\r\n        }\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmBaconsLaw extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        const exe = new Exe();\r\n        console.log(exe);\r\n    }\r\n    init() {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n/* data\r\n5 5\r\n1 3\r\n1 4\r\n4 5\r\n4 3\r\n3 2\r\n*/\r\n\r\nclass Person {\r\n    id: number = -1;\r\n    friends: Person[] = [];\r\n    dis: number = 0;\r\n    visited: boolean = false;\r\n    constructor(id: number) {\r\n        this.id = id;\r\n    }\r\n    push(friend: Person) {\r\n        for (let i = 0; i < this.friends.length; ++i) {\r\n            if (this.friends[i] === friend) { return; }\r\n        }\r\n        this.friends.push(friend);\r\n        friend.push(this);\r\n    }\r\n    Reset() {\r\n        this.visited = false;\r\n        this.dis = 0;\r\n    }\r\n    findPerson(id: number): number {\r\n        // let count = 1;\r\n        let list = [];\r\n        if (this.friends.length === 0) { return -1; }\r\n\r\n        this.visited = true;\r\n        list.push(this);\r\n\r\n        while (list.length > 0) {\r\n            let person: Person = list[0];\r\n            list.shift();\r\n\r\n            if (person) {\r\n                if (id === person.id) { return person.dis; }\r\n\r\n                for (let i = 0; i < person.friends.length; ++i) {\r\n                    if (person.friends[i] && !person.friends[i].visited) {\r\n                        person.friends[i].visited = true;\r\n                        person.friends[i].dis = person.dis + 1;\r\n                        list.push(person.friends[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\nclass Exe {\r\n    people: Person[] = [];\r\n    index: number = 0;\r\n    constructor() {\r\n        const numPeople = 5;\r\n        for (this.index = 0; this.index < numPeople; ++this.index) { this.people.push(new Person(this.index)); }\r\n        const data = [\r\n            [1, 3],\r\n            [1, 4],\r\n            [4, 5],\r\n            [4, 3],\r\n            [3, 2]\r\n        ];\r\n        for (this.index = 0; this.index < data.length; ++this.index) {\r\n            this.BuildRelationship(data[this.index][0] - 1, data[this.index][1] - 1);\r\n        }\r\n        this.PrintRelationship();\r\n        this.Compute(numPeople);\r\n    }\r\n    Reset() {\r\n        for (this.index = 0; this.index < this.people.length; ++this.index) {\r\n\r\n            this.people[this.index].visited = false;\r\n            this.people[this.index].dis = 0;\r\n        }\r\n    }\r\n    BuildRelationship(a: number, b: number) {\r\n        this.people[a].push(this.people[b]);\r\n    }\r\n    PrintRelationship() {\r\n        for (this.index = 0; this.index < this.people.length; ++this.index) {\r\n            let frendsindex = '';\r\n            for (let j = 0; j < this.people[this.index].friends.length; ++j) {\r\n                frendsindex += ` ${this.people[this.index].friends[j].id}`;\r\n            }\r\n\r\n            console.log('id: ', this.people[this.index].id, ', freindsID', frendsindex);\r\n        }\r\n    }\r\n    Compute(numPeople: number) {\r\n        for (let i = 0; i < numPeople; ++i) {\r\n            let sum = 0;\r\n            for (let j = 0; j < numPeople; ++j) {\r\n                if (i !== j) {\r\n                    let count = this.people[i].findPerson(j);\r\n                    sum += count;\r\n                    console.log(i, j, count);\r\n                    this.Reset();\r\n                }\r\n            }\r\n            console.log(i, sum);\r\n            console.log('------');\r\n            // break;\r\n        }\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmFireExit extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    map: PixelMap;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        // const array = [\r\n        //         '####',\r\n        //         '#*@.',\r\n        //         '####'\r\n        // ];\r\n        // const array = [\r\n        //     '###.###',\r\n        //     '#*#.#*#',\r\n        //     '#.....#',\r\n        //     '#.....#',\r\n        //     '#..@..#',\r\n        //     '#######'\r\n        //     ];\r\n        // const array = [\r\n        //         '###.###',\r\n        //         '#*#.#*#',\r\n        //         '#.....#',\r\n        //         '#.....#',\r\n        //         '#@....#',\r\n        //         '#######'\r\n        //         ];\r\n        const array = [\r\n            '###.######',\r\n            '#*#.#...*#',\r\n            '#.#......#',\r\n            '#........#',\r\n            '#.......@#',\r\n            '##########'\r\n        ];\r\n        // const array = [\r\n        //     '###.###',\r\n        //     '#....*#',\r\n        //     '#@....#',\r\n        //     '.######'\r\n        // ];\r\n        // const array = [\r\n        //         '.....',\r\n        //         '.***.',\r\n        //         '.*@*.',\r\n        //         '.***.',\r\n        //         '.....'\r\n        // ];\r\n        let before = performance.now();\r\n        this.map = new PixelMap(array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.map) { return; }\r\n        this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/5427\r\n\r\nclass Pixel {\r\n    map: PixelMap;\r\n    x: number = -1;\r\n    y: number = -1;\r\n    type: string;\r\n    scale: number = 50;\r\n    fill: boolean = false;\r\n    fire: boolean = false;\r\n    exit: boolean = false;\r\n    visited: boolean = false;\r\n    cost: number = 0;\r\n    temp: number = 0;\r\n    connections: Pixel[] = [];\r\n    constructor(map: PixelMap, x: number, y: number, char: string) {\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.type = char;\r\n        if (this.type === '#') {\r\n            this.fill = true;\r\n        } else if (this.type === '.') {\r\n            this.fill = false;\r\n        } else if (this.type === '*') {\r\n            this.fire = true;\r\n            this.map.fires.push(this);\r\n        } else if (this.type === '@') {\r\n            this.map.SetAgent(this);\r\n        }\r\n    }\r\n    pushConnections(p: Pixel) {\r\n        if (p.fill) { return; }\r\n        this.connections.push(p);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        let xPos = (this.x + .5) * this.scale;\r\n        let yPos = (this.y + .5) * this.scale;\r\n\r\n        const dis = Math.sqrt((p[0] - xPos) * (p[0] - xPos) + (p[1] - yPos) * (p[1] - yPos));\r\n\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeStyle = '#ffffff';\r\n        ctx.beginPath();\r\n        ctx.rect(this.x * this.scale, this.y * this.scale, this.scale, this.scale);\r\n        ctx.closePath();\r\n        if (this.fill) {\r\n            ctx.fillStyle = 'rgba(0,0,0, 0.85)';\r\n        } else if (this.fire) {\r\n            ctx.fillStyle = 'rgba(255,0,0, 0.5)';\r\n        } else {\r\n            ctx.fillStyle = 'rgba(255,255,0, 0.5)';\r\n        }\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n        if (dis < 0.5 * this.scale) {\r\n            ctx.lineWidth = 1;\r\n            for (let i = 0; i < this.connections.length; ++i) {\r\n                ctx.beginPath();\r\n                ctx.moveTo((this.x + .5) * this.scale, (this.y + .5) * this.scale);\r\n                ctx.lineTo((this.connections[i].x + .5) * this.scale, (this.connections[i].y + .5) * this.scale);\r\n                // ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n        if (this.exit) {\r\n            ctx.fillStyle = '#0000ff';\r\n            ctx.beginPath();\r\n            ctx.arc((this.x + .5) * this.scale, (this.y + .5) * this.scale, 5, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n}\r\nclass Agent {\r\n    current: Pixel;\r\n    constructor(current: Pixel) {\r\n        this.current = current;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#00ff00';\r\n        ctx.beginPath();\r\n        const r = Math.sin(this.current.map.t) + 1.1;\r\n        ctx.arc((this.current.x + .5) * this.current.scale, (this.current.y + .5) * this.current.scale, 6 * r + 2, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\nclass PixelMap {\r\n    pixels: Pixel[][] = [];\r\n    fires: Pixel[] = [];\r\n    exit: Pixel;\r\n    agent: Agent;\r\n    path: Pixel[] | undefined = [];\r\n    t = 0.0;\r\n    count = 1;\r\n    fail: boolean = false;\r\n    done: boolean = false;\r\n    constructor(data: string[]) {\r\n        for (let i = 0; i < data.length; ++i) {\r\n\r\n            const pixelsRow = [];\r\n            for (let j = 0; j < data[i].length; ++j) {\r\n                let char = data[i].charAt(j);\r\n                // console.log(char);\r\n                pixelsRow.push(new Pixel(this, j, i, char));\r\n            }\r\n            this.pixels.push(pixelsRow);\r\n        }\r\n        this.InitConnections();\r\n        this.ComputeExit();\r\n        console.log(this);\r\n    }\r\n    Update() {\r\n        this.ComputeFire();\r\n        this.ComputeAgent();\r\n    }\r\n    ComputeFire() {\r\n        let addition = [];\r\n        for (let i = 0; i < this.fires.length; ++i) {\r\n            for (let j = 0; j < this.fires[i].connections.length; ++j) {\r\n                if (!this.fires[i].connections[j].fill) {\r\n                    this.fires[i].connections[j].fire = true;\r\n                    addition.push(this.fires[i].connections[j]);\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < addition.length; ++i) {\r\n            this.fires.push(addition[i]);\r\n        }\r\n    }\r\n    ComputeAgent() {\r\n        if (this.agent.current === this.exit) {\r\n            console.log('Done! by ', this.count);\r\n            this.done = true;\r\n            return;\r\n        }\r\n        this.path = this.ComputePath(this.agent.current, this.exit);\r\n\r\n        if (this.path && this.path.length > 0) {\r\n            this.agent.current = this.path[this.path.length - 2];\r\n            console.log(this.path);\r\n            this.count++;\r\n        }\r\n    }\r\n    ComputeExit() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[y].length; ++x) {\r\n                if (this.pixels[y][x].connections.length < 3 && y === 0 || x === 0 || y === this.pixels.length - 1 || x === this.pixels[0].length - 1) {\r\n                    if (!this.pixels[y][x].fill) {\r\n                        let hasCon = false;\r\n                        for (let i = 0; i < this.pixels[y][x].connections.length; ++i) {\r\n                            if (this.pixels[y][x].connections[i].fill === false) {\r\n                                hasCon = true;\r\n                            }\r\n                        }\r\n                        if (hasCon) {\r\n                            this.pixels[y][x].exit = true;\r\n                            this.exit = this.pixels[y][x];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ResetCost() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[y].length; ++x) {\r\n                if (!this.pixels[y][x].fill && !this.pixels[y][x].fire) {\r\n                    this.pixels[y][x].cost = 0.0;\r\n                    this.pixels[y][x].temp = -1.0;\r\n                    this.pixels[y][x].visited = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ComputePath(startP: Pixel, endP: Pixel) {\r\n        this.ResetCost();\r\n\r\n        let queueForward = [startP];\r\n        while (queueForward.length > 0) {\r\n            let current = queueForward[0];\r\n            current.visited = true;\r\n            queueForward.shift();\r\n            for (let i = 0; i < current.connections.length; ++i) {\r\n                if (!current.connections[i].fill && !current.connections[i].visited) {\r\n                    const newcost = this.ComputeCost(current, current.connections[i]);\r\n                    const newtemp = current.temp + newcost;\r\n                    if (current.connections[i].temp === -1.0 || newtemp < current.connections[i].temp) {\r\n                        current.connections[i].temp = newtemp;\r\n                        queueForward.push(current.connections[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let path = [];\r\n        if (endP.temp !== -1.0) {\r\n            path.push(endP);\r\n            let current = endP;\r\n            while (true) {\r\n                let smallest = current;\r\n                for (let i = 0; i < current.connections.length; ++i) {\r\n                    if (!current.connections[i].fill) {\r\n                        if (current.connections[i].temp < smallest.temp) { smallest = current.connections[i]; }\r\n                    }\r\n                }\r\n                if (smallest === current) { this.fail = true; return undefined; }\r\n                current = smallest;\r\n                path.push(current);\r\n                if (current === startP) { break; }\r\n            }\r\n        }\r\n        return path;\r\n        // console.log('there are ', count, ' group of cells' );\r\n    }\r\n    ComputeCost(current: Pixel, target: Pixel): number {\r\n        return Math.sqrt((target.x - current.x) * (target.x - current.x) + (target.y - current.y) * (target.y - current.y));\r\n    }\r\n    SetAgent(current: Pixel) {\r\n        this.agent = new Agent(current);\r\n    }\r\n    InitConnections() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n                if (y !== 0 && y < this.pixels.length - 1 && x !== 0 && x < this.pixels[0].length - 1) {\r\n                    theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    theCell.pushConnections(this.pixels[y][x + 1]);\r\n                } else if (y === 0) {\r\n                    theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (y === this.pixels.length - 1) {\r\n                    theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (x === 0) {\r\n                    theCell.pushConnections(this.pixels[y][x + 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    }\r\n                } else if (x === this.pixels[0].length - 1) {\r\n                    theCell.pushConnections(this.pixels[y][x - 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.pushConnections(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.pushConnections(this.pixels[y - 1][x]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        if (!this.done) {\r\n            if ((this.agent && this.agent.current.fire) || this.fail) {\r\n                console.log('impossible'); return;\r\n            }\r\n        }\r\n\r\n        this.t += 0.1;\r\n        if (this.t > 10) {\r\n            // console.log(this.t);\r\n            this.t = 0.0;\r\n            if (!this.fail) { this.Update(); }\r\n        }\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                this.pixels[y][x].Render(ctx, p);\r\n            }\r\n        }\r\n        if (this.agent) {\r\n            this.agent.Render(ctx);\r\n        }\r\n\r\n        if (this.path && this.path.length > 0) {\r\n            this.RenderPath(ctx, this.path);\r\n        }\r\n\r\n    }\r\n    RenderPath(ctx: CanvasRenderingContext2D, path: Pixel[]) {\r\n        const scale = 50;\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.lineWidth = 5;\r\n        ctx.beginPath();\r\n        ctx.moveTo((path[0].x + 0.5) * scale, (path[0].y + 0.5) * scale);\r\n        for (let i = 1; i < path.length - 1; ++i) {\r\n            ctx.lineTo((path[i].x + 0.5) * scale, (path[i].y + 0.5) * scale);\r\n        }\r\n        ctx.stroke();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmNumOfArea extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    map: PixelMap;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        const size = [5, 7];\r\n        const array = [\r\n            [0, 2, 4, 4],\r\n            [1, 1, 2, 5],\r\n            [4, 0, 6, 2]\r\n        ];\r\n        let before = performance.now();\r\n        this.map = new PixelMap(size[1], size[0], array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/1012\r\n\r\nclass Pixel {\r\n    x: number = -1;\r\n    y: number = -1;\r\n    scale: number = 50;\r\n    fill: boolean = false;\r\n    visited: boolean = false;\r\n    connections: Pixel[] = [];\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        let xPos = (this.x + .5) * this.scale;\r\n        let yPos = (this.y + .5) * this.scale;\r\n\r\n        const dis = Math.sqrt((p[0] - xPos) * (p[0] - xPos) + (p[1] - yPos) * (p[1] - yPos));\r\n\r\n        ctx.lineWidth = 4;\r\n        ctx.beginPath();\r\n        ctx.rect(this.x * this.scale, this.y * this.scale, this.scale, this.scale);\r\n        ctx.closePath();\r\n        if (this.fill) {\r\n            if (this.visited) {\r\n                ctx.fillStyle = 'rgba(255,0,0, 0.5)';\r\n            } else {\r\n                ctx.fillStyle = 'rgba(0,255,0, 0.5)';\r\n            }\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n\r\n        if (dis < 0.5 * this.scale) {\r\n            ctx.lineWidth = 1;\r\n            for (let i = 0; i < this.connections.length; ++i) {\r\n                ctx.beginPath();\r\n                ctx.moveTo((this.x + .5) * this.scale, (this.y + .5) * this.scale);\r\n                ctx.lineTo((this.connections[i].x + .5) * this.scale, (this.connections[i].y + .5) * this.scale);\r\n                // ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n    Add(p: Pixel) {\r\n        if (p.fill) { return; }\r\n        this.connections.push(p);\r\n    }\r\n}\r\nclass PixelMap {\r\n    pixels: Pixel[][] = [];\r\n    constructor(xNum: number, yNum: number, num: number[][]) {\r\n        for (let y = 0; y < yNum; ++y) {\r\n            const pixelsRow = [];\r\n            for (let x = 0; x < xNum; ++x) {\r\n                pixelsRow.push(new Pixel(x, y));\r\n            }\r\n            this.pixels.push(pixelsRow);\r\n        }\r\n        this.InitFill(num);\r\n        this.InitConnections();\r\n        this.Compute();\r\n    }\r\n    Compute() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                let pixel = this.pixels[y][x];\r\n                if (!pixel.fill && !pixel.visited) {\r\n                    let count = this.PropagationBFS(pixel);\r\n                    console.log(count);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    PropagationBFS(p: Pixel) {\r\n        let queue = [p];\r\n        let count = 0;\r\n        while (queue.length > 0) {\r\n            let current = queue[0];\r\n            queue.shift();\r\n            if (current.visited) { continue; }\r\n            current.visited = true;\r\n            count++;\r\n            for (let i = 0; i < current.connections.length; ++i) {\r\n                if (!current.connections[i].visited) {\r\n                    queue.push(current.connections[i]);\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    InitFill(num: number[][]) {\r\n        for (let i = 0; i < num.length; ++i) {\r\n            let xMin = num[i][0];\r\n            let yMin = num[i][1];\r\n            let xMax = num[i][2];\r\n            let yMax = num[i][3];\r\n            for (let y = yMin; y < yMax; ++y) {\r\n                for (let x = xMin; x < xMax; ++x) {\r\n                    this.pixels[y][x].fill = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    InitConnections() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n                if (y !== 0 && y < this.pixels.length - 1 && x !== 0 && x < this.pixels[0].length - 1) {\r\n                    theCell.Add(this.pixels[y - 1][x]);\r\n                    theCell.Add(this.pixels[y + 1][x]);\r\n                    theCell.Add(this.pixels[y][x - 1]);\r\n                    theCell.Add(this.pixels[y][x + 1]);\r\n                } else if (y === 0) {\r\n                    theCell.Add(this.pixels[y + 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (y === this.pixels.length - 1) {\r\n                    theCell.Add(this.pixels[y - 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (x === 0) {\r\n                    theCell.Add(this.pixels[y][x + 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                    }\r\n                } else if (x === this.pixels[0].length - 1) {\r\n                    theCell.Add(this.pixels[y][x - 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                this.pixels[y][x].Render(ctx, p);\r\n            }\r\n        }\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmComputerFinder extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    graph: Graph;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        const data = [5, 4];\r\n        const array = [\r\n            [3, 1],\r\n            [3, 2],\r\n            [4, 3],\r\n            [5, 3]\r\n        ];\r\n        let before = performance.now();\r\n        this.graph = new Graph(data, array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/1325\r\n\r\nclass Node {\r\n    id: number = -1;\r\n    visited: boolean = false;\r\n    children: Node[] = [];\r\n    constructor(id: number) {\r\n        this.id = id;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        //\r\n    }\r\n}\r\nclass Graph {\r\n    nodes: Node[] = [];\r\n    constructor(data: number[], num: number[][]) {\r\n        for (let i = 0; i < data[0]; ++i) { this.nodes.push(new Node(i)); }\r\n        for (let i = 0; i < num.length; ++i) {\r\n            const id0 = num[i][0] - 1;\r\n            const id1 = num[i][1] - 1;\r\n            this.nodes[id1].children.push(this.nodes[id0]);\r\n        }\r\n        this.ComputeConnections();\r\n        console.log(this);\r\n    }\r\n    ComputeConnections() {\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            let count = this.BFS(this.nodes[i]);\r\n            this.Reset();\r\n            console.log(i + 1, count);\r\n        }\r\n    }\r\n    BFS(n: Node) {\r\n        let queue = [n];\r\n        let count = 0;\r\n        while (queue.length > 0) {\r\n            let current = queue[0];\r\n            queue.shift();\r\n            if (current.visited) { continue; }\r\n            current.visited = true;\r\n            count++;\r\n            for (let i = 0; i < current.children.length; ++i) {\r\n                if (!current.children[i].visited) {\r\n                    queue.push(current.children[i]);\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    Reset() {\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].visited = false;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        //\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmKoze extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    map: PixelMap;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        // const array = [\r\n        //     '...#..',\r\n        //     '.##v#.',\r\n        //     '#v.#.#',\r\n        //     '#.k#.#',\r\n        //     '.###.#',\r\n        //     '...###',\r\n        // ];\r\n        // const array = [\r\n        //         '.######.',\r\n        //         '#..k...#',\r\n        //         '#.####.#',\r\n        //         '#.#v.#.#',\r\n        //         '#.#.k#k#',\r\n        //         '#k.##..#',\r\n        //         '#.v..v.#',\r\n        //         '.######.'\r\n        // ];\r\n        const array = [\r\n            '.###.#####..',\r\n            '#.kk#...#v#.',\r\n            '#..k#.#.#.#.',\r\n            '#..##k#...#.',\r\n            '#.#v#k###.#.',\r\n            '#..#v#....#.',\r\n            '#...v#v####.',\r\n            '.####.#vv.k#',\r\n            '.......####.'\r\n        ];\r\n\r\n        let before = performance.now();\r\n        this.map = new PixelMap(array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/3187\r\n\r\nclass Pixel {\r\n    map: PixelMap;\r\n    x: number = -1;\r\n    y: number = -1;\r\n    scale: number = 50;\r\n    fill: boolean = false;\r\n    wolf: boolean = false;\r\n    sheep: boolean = false;\r\n    visited: boolean = false;\r\n    connections: Pixel[] = [];\r\n    type: string;\r\n    constructor(map: PixelMap, x: number, y: number, char: string) {\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.type = char;\r\n        if (this.type === '#') {\r\n            this.fill = true;\r\n        } else if (this.type === '.') {\r\n            this.map.pixelsComputedNeeded.push(this);\r\n        } else if (this.type === 'v') {\r\n            this.wolf = true;\r\n            this.map.pixelsComputedNeeded.push(this);\r\n        } else if (this.type === 'k') {\r\n            this.sheep = true;\r\n            this.map.pixelsComputedNeeded.push(this);\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        let xPos = (this.x + .5) * this.scale;\r\n        let yPos = (this.y + .5) * this.scale;\r\n\r\n        const dis = Math.sqrt((p[0] - xPos) * (p[0] - xPos) + (p[1] - yPos) * (p[1] - yPos));\r\n\r\n        ctx.lineWidth = 4;\r\n        ctx.beginPath();\r\n        ctx.rect(this.x * this.scale, this.y * this.scale, this.scale, this.scale);\r\n        ctx.closePath();\r\n        if (this.fill) {\r\n            if (this.visited) {\r\n                ctx.fillStyle = 'rgba(255,0,0, 0.5)';\r\n            } else {\r\n                ctx.fillStyle = 'rgba(0,255,0, 0.5)';\r\n            }\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n\r\n        if (this.wolf) {\r\n            ctx.fillStyle = '#ff0000';\r\n            ctx.beginPath();\r\n            ctx.arc((this.x + .5) * this.scale, (this.y + .5) * this.scale, 5, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        if (this.sheep) {\r\n            ctx.fillStyle = '#00ff00';\r\n            ctx.beginPath();\r\n            ctx.arc((this.x + .5) * this.scale, (this.y + .5) * this.scale, 5, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (dis < 0.5 * this.scale) {\r\n            ctx.lineWidth = 1;\r\n            for (let i = 0; i < this.connections.length; ++i) {\r\n                ctx.beginPath();\r\n                ctx.moveTo((this.x + .5) * this.scale, (this.y + .5) * this.scale);\r\n                ctx.lineTo((this.connections[i].x + .5) * this.scale, (this.connections[i].y + .5) * this.scale);\r\n                // ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n    Add(p: Pixel) {\r\n        if (p.fill) { return; }\r\n        this.connections.push(p);\r\n    }\r\n}\r\nclass Value {\r\n    s = 0;\r\n    w = 0;\r\n    constructor() {\r\n        //\r\n    }\r\n}\r\nclass PixelMap {\r\n    pixels: Pixel[][] = [];\r\n    pixelsComputedNeeded: Pixel[] = [];\r\n    s: number = 0;\r\n    w: number = 0;\r\n    constructor(data: string[]) {\r\n        for (let i = 0; i < data.length; ++i) {\r\n            const pixelsRow = [];\r\n            for (let j = 0; j < data[i].length; ++j) {\r\n                let char = data[i].charAt(j);\r\n                pixelsRow.push(new Pixel(this, j, i, char));\r\n            }\r\n            this.pixels.push(pixelsRow);\r\n        }\r\n        this.InitConnections();\r\n\r\n        let before = performance.now();\r\n        this.ComputeBFS();\r\n        let after = performance.now();\r\n        console.log('BFS time: ', after - before);\r\n\r\n        for (let i = 0; i < this.pixelsComputedNeeded.length; ++i) {\r\n            this.pixelsComputedNeeded[i].visited = false;\r\n        }\r\n\r\n        before = performance.now();\r\n        this.ComputeDFS();\r\n        after = performance.now();\r\n        console.log('DFS time: ', after - before);\r\n\r\n        for (let i = 0; i < this.pixelsComputedNeeded.length; ++i) {\r\n            this.pixelsComputedNeeded[i].visited = false;\r\n        }\r\n\r\n        before = performance.now();\r\n        this.ComputeDFSValue();\r\n        after = performance.now();\r\n        console.log('DFS by Value time: ', after - before);\r\n\r\n    }\r\n    ComputeDFSValue() {\r\n        let sTotal = 0, wTotal = 0;\r\n        for (let i = 0; i < this.pixelsComputedNeeded.length; ++i) {\r\n            if (this.pixelsComputedNeeded[i].visited) { continue; }\r\n            let value = new Value();\r\n            this.DFSValue(this.pixelsComputedNeeded[i], value);\r\n\r\n            if (value.s !== 0 || value.w !== 0) {\r\n                if (value.w < value.s) {\r\n                    sTotal += value.s;\r\n                } else {\r\n                    wTotal += value.w;\r\n                }\r\n            }\r\n\r\n        }\r\n        console.log('sheep : ', sTotal, ', wolf : ', wTotal);\r\n    }\r\n    private DFSValue(p: Pixel, v: Value) {\r\n        if (p.visited) { return; }\r\n        p.visited = true;\r\n\r\n        if (p.sheep) { v.s++; }\r\n        if (p.wolf) { v.w++; }\r\n\r\n        for (let i = 0; i < p.connections.length; ++i) {\r\n            this.DFSValue(p.connections[i], v);\r\n        }\r\n    }\r\n    ComputeDFS() {\r\n        let sTotal = 0, wTotal = 0;\r\n        for (let i = 0; i < this.pixelsComputedNeeded.length; ++i) {\r\n            if (this.pixelsComputedNeeded[i].visited) { continue; }\r\n            this.s = 0;\r\n            this.w = 0;\r\n            this.DFS(this.pixelsComputedNeeded[i]);\r\n\r\n            if (this.s !== 0 || this.w !== 0) {\r\n                if (this.w < this.s) {\r\n                    sTotal += this.s;\r\n                } else {\r\n                    wTotal += this.w;\r\n                }\r\n            }\r\n\r\n        }\r\n        console.log('sheep : ', sTotal, ', wolf : ', wTotal);\r\n    }\r\n    private DFS(p: Pixel) {\r\n        if (p.visited) { return; }\r\n        p.visited = true;\r\n\r\n        if (p.sheep) { this.s++; }\r\n        if (p.wolf) { this.w++; }\r\n\r\n        for (let i = 0; i < p.connections.length; ++i) {\r\n            this.DFS(p.connections[i]);\r\n        }\r\n    }\r\n    ComputeBFS() {\r\n        let sTotal = 0, wTotal = 0;\r\n        for (let i = 0; i < this.pixelsComputedNeeded.length; ++i) {\r\n            if (this.pixelsComputedNeeded[i].visited) { continue; }\r\n            let queue = [this.pixelsComputedNeeded[i]];\r\n            this.pixelsComputedNeeded[i].visited = true;\r\n\r\n            let s = 0, w = 0;\r\n            while (queue.length > 0) {\r\n                let current = queue[0];\r\n                queue.shift();\r\n\r\n                if (current.wolf) { w += 1; }\r\n                if (current.sheep) { s += 1; }\r\n\r\n                for (let i = 0; i < current.connections.length; ++i) {\r\n                    if (!current.connections[i].visited) {\r\n                        current.connections[i].visited = true;\r\n                        queue.push(current.connections[i]);\r\n                    }\r\n                }\r\n            }\r\n            if (s !== 0 || w !== 0) {\r\n                if (w < s) {\r\n                    sTotal += s;\r\n                } else {\r\n                    wTotal += w;\r\n                }\r\n            }\r\n        }\r\n        console.log('sheep : ', sTotal, ', wolf : ', wTotal);\r\n    }\r\n    InitConnections() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n                if (y !== 0 && y < this.pixels.length - 1 && x !== 0 && x < this.pixels[0].length - 1) {\r\n                    theCell.Add(this.pixels[y - 1][x]);\r\n                    theCell.Add(this.pixels[y + 1][x]);\r\n                    theCell.Add(this.pixels[y][x - 1]);\r\n                    theCell.Add(this.pixels[y][x + 1]);\r\n                } else if (y === 0) {\r\n                    theCell.Add(this.pixels[y + 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (y === this.pixels.length - 1) {\r\n                    theCell.Add(this.pixels[y - 1][x]);\r\n                    if (0 < x && x < this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        theCell.Add(this.pixels[y][x + 1]);\r\n                    } else if (x === this.pixels[0].length - 1) {\r\n                        theCell.Add(this.pixels[y][x - 1]);\r\n                    }\r\n                } else if (x === 0) {\r\n                    theCell.Add(this.pixels[y][x + 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                    }\r\n                } else if (x === this.pixels[0].length - 1) {\r\n                    theCell.Add(this.pixels[y][x - 1]);\r\n                    if (0 < y && y < this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        theCell.Add(this.pixels[y + 1][x]);\r\n                    } else if (y === this.pixels.length - 1) {\r\n                        theCell.Add(this.pixels[y - 1][x]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                this.pixels[y][x].Render(ctx, p);\r\n            }\r\n        }\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmUnitMoving extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    map: PixelMap;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        // const data = [10, 10, 2, 2, 5];\r\n        // const array = [\r\n        //     [2, 2],\r\n        //     [3, 2],\r\n        //     [3, 3],\r\n        //     [6, 4],\r\n        //     [1, 1],\r\n\r\n        //     [4, 1],\r\n        //     [1, 4]\r\n        // ];\r\n        const data = [10, 10, 3, 3, 5];\r\n        const array = [\r\n            [2, 2],\r\n            [3, 2],\r\n            [3, 3],\r\n            [6, 4],\r\n            [1, 1],\r\n\r\n            [4, 1],\r\n            [1, 4]\r\n        ];\r\n        // const data = [10, 10, 3, 3, 5];\r\n        // const array = [\r\n        //     [2, 2],\r\n        //     [3, 2],\r\n        //     [3, 3],\r\n        //     [6, 4],\r\n        //     // [5, 4],\r\n\r\n        //     [1, 1],\r\n\r\n        //     [4, 1],\r\n        //     [1, 4]\r\n        // ];\r\n        // const data = [10, 10, 2, 2, 5];\r\n        // const array = [\r\n        //     [2, 2],\r\n        //     [3, 2],\r\n        //     [3, 3],\r\n        //     [6, 4],\r\n\r\n        //     [1, 1],\r\n\r\n        //     [4, 1],\r\n        //     [1, 4]\r\n        // ];\r\n        // const data = [5, 5, 2, 2, 3];\r\n        // const array = [\r\n        //     [2, 2],\r\n        //     [3, 2],\r\n        //     [3, 3],\r\n        //     [4, 1],\r\n        //     [1, 4]\r\n        // ];\r\n        let before = performance.now();\r\n        this.map = new PixelMap(data, array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.map) { return; }\r\n        this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/5427\r\n\r\nclass Pixel {\r\n    map: PixelMap;\r\n    hover: boolean = false;\r\n    x: number = -1;\r\n    y: number = -1;\r\n    type: string;\r\n    scale: number = 50;\r\n    fill: boolean = false;\r\n    fire: boolean = false;\r\n    exit: boolean = false;\r\n    visited: boolean = false;\r\n    cost: number = 0;\r\n    temp: number = 0;\r\n    connections: Pixel[] = [];\r\n    constructor(map: PixelMap, x: number, y: number) {\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // let xPos = (this.x + .5);\r\n        // let yPos = (this.y + .5);\r\n\r\n        // const dis = Math.sqrt( (p[0] - xPos) * (p[0] - xPos) + (p[1] - yPos) * (p[1] - yPos));\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeStyle = '#ffffff';\r\n        ctx.beginPath();\r\n        ctx.rect(50 + this.x - (this.scale * 0.5), 50 + this.y - (this.scale * 0.5), this.scale, this.scale);\r\n        ctx.closePath();\r\n        if (this.fill) {\r\n            ctx.fillStyle = 'rgba(0,0,0, 0.85)';\r\n        } else if (this.hover) {\r\n            ctx.fillStyle = 'rgba(255,0,0, 0.8)';\r\n        } else {\r\n            ctx.fillStyle = 'rgba(255,255,0, 0.5)';\r\n        }\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = '#0000ff';\r\n        ctx.beginPath();\r\n        ctx.arc(50 + this.x, 50 + this.y, 3, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        // if (dis < 0.5 * this.scale) {\r\n        //     ctx.lineWidth = 1;\r\n        //     for (let i = 0 ; i < this.connections.length; ++i) {\r\n        //         ctx.beginPath();\r\n        //         ctx.moveTo((this.x + .5) * this.scale, (this.y + .5) * this.scale);\r\n        //         ctx.lineTo((this.connections[i].x + .5) * this.scale, (this.connections[i].y + .5) * this.scale);\r\n        //         // ctx.closePath();\r\n        //         ctx.stroke();\r\n        //     }\r\n        // }\r\n        // if (this.exit) {\r\n        //     ctx.fillStyle = '#0000ff';\r\n        //     ctx.beginPath();\r\n        //     ctx.arc((this.x + .5) * this.scale, (this.y + .5) * this.scale, 5, 0, 3.14 * 2);\r\n        //     ctx.closePath();\r\n        //     ctx.fill();\r\n        // }\r\n    }\r\n    RenderHover(ctx: CanvasRenderingContext2D) {\r\n        this.hover = true;\r\n        this.Render(ctx);\r\n    }\r\n}\r\n\r\nclass GhostPixel {\r\n    map: PixelMap;\r\n    pixels: Pixel[] = [];\r\n    connections: GhostPixel[] = [];\r\n    x: number;\r\n    y: number;\r\n    isPath: boolean = true;\r\n    visited: boolean = false;\r\n    scale = 50;\r\n    start: boolean = false;\r\n    end: boolean = false;\r\n    temp: number = -1;\r\n    constructor(map: PixelMap, x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.map = map;\r\n    }\r\n    Compute() {\r\n        for (let i = 0; i < this.pixels.length; ++i) {\r\n            if (this.pixels[i].fill) {\r\n                this.isPath = false;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    pushConnections(p: GhostPixel) {\r\n        if (!p.isPath) { return; }\r\n        this.connections.push(p);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        const dis = Math.sqrt((p[0] - this.x) * (p[0] - this.x) + (p[1] - this.y) * (p[1] - this.y));\r\n\r\n        if (this.isPath) {\r\n            ctx.fillStyle = 'rgba(0,0,0, 1)';\r\n        } else {\r\n            ctx.fillStyle = 'rgba(0,0,0, 0.3)';\r\n        }\r\n        for (let i = 0; i < this.pixels.length; ++i) {\r\n            if (dis < 10 && this.isPath) {\r\n                this.map.pixelsHover = this.pixels;\r\n            } else {\r\n                this.pixels[i].hover = false;\r\n            }\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, 9, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        // console.log(dis);\r\n        if (dis < 10) {\r\n            ctx.strokeStyle = '#000000';\r\n            ctx.lineWidth = 10;\r\n            for (let i = 0; i < this.connections.length; ++i) {\r\n                ctx.beginPath();\r\n                ctx.moveTo((this.x), (this.y));\r\n                ctx.lineTo((this.connections[i].x), (this.connections[i].y));\r\n                // ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        if (this.start) {\r\n            ctx.fillStyle = 'rgba(255,0,255 , 1)';\r\n            ctx.beginPath();\r\n            ctx.arc(this.x, this.y, 12, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        if (this.end) {\r\n            ctx.fillStyle = 'rgba(0,255,255, 1)';\r\n            ctx.beginPath();\r\n            ctx.arc(this.x, this.y, 12, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n}\r\nclass PixelMap {\r\n    connectionMap: GhostPixel[][] = [];\r\n    pixels: Pixel[][] = [];\r\n    pixelsHover: Pixel[] = [];\r\n    scale = 50;\r\n    fires: Pixel[] = [];\r\n    exit: Pixel;\r\n    path: GhostPixel[] | undefined = [];\r\n    t = 0.0;\r\n    count = 1;\r\n    fail: boolean = false;\r\n    done: boolean = false;\r\n    constructor(data: number[], array: number[][]) {\r\n        for (let i = 0; i < data[0]; ++i) {\r\n            const pixelsRow = [];\r\n            for (let j = 0; j < data[1]; ++j) {\r\n                pixelsRow.push(new Pixel(this, j * this.scale, i * this.scale));\r\n            }\r\n            this.pixels.push(pixelsRow);\r\n        }\r\n        for (let i = 0; i < array.length - 2; ++i) {\r\n            this.pixels[array[i][1]][array[i][0]].fill = true;\r\n        }\r\n        this.InitConnections(data[2], data[3]);\r\n        // this.ComputeExit();\r\n        // console.log(this);\r\n        const start = this.FindGhost(array[array.length - 2]);\r\n        if (start) {\r\n            start.start = true;\r\n        }\r\n        const end = this.FindGhost(array[array.length - 1]);\r\n        if (end) {\r\n            end.end = true;\r\n        }\r\n        if (start && end) {\r\n            this.path = this.ComputePath(start, end);\r\n        }\r\n        // console.log(this.path);\r\n    }\r\n    FindGhost(d: number[]) {\r\n        const p = this.pixels[d[0]][d[1]];\r\n        let gPixel: GhostPixel | undefined;\r\n        for (let y = 0; y < this.connectionMap.length; ++y) {\r\n            for (let x = 0; x < this.connectionMap[0].length; ++x) {\r\n                for (let i = 0; i < this.connectionMap[y][x].pixels.length; ++i) {\r\n                    if (this.connectionMap[y][x].pixels[i] === p && this.connectionMap[y][x].isPath) {\r\n                        gPixel = this.connectionMap[y][x];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (gPixel) {\r\n            return gPixel;\r\n        }\r\n        return undefined;\r\n    }\r\n    Update() {\r\n        // this.ComputeFire();\r\n        // this.ComputeAgent();\r\n    }\r\n    ComputeFire() {\r\n        let addition = [];\r\n        for (let i = 0; i < this.fires.length; ++i) {\r\n            for (let j = 0; j < this.fires[i].connections.length; ++j) {\r\n                if (!this.fires[i].connections[j].fill) {\r\n                    this.fires[i].connections[j].fire = true;\r\n                    addition.push(this.fires[i].connections[j]);\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < addition.length; ++i) {\r\n            this.fires.push(addition[i]);\r\n        }\r\n    }\r\n    ComputeExit() {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[y].length; ++x) {\r\n                if (this.pixels[y][x].connections.length < 3 && y === 0 || x === 0 || y === this.pixels.length - 1 || x === this.pixels[0].length - 1) {\r\n                    if (!this.pixels[y][x].fill) {\r\n                        let hasCon = false;\r\n                        for (let i = 0; i < this.pixels[y][x].connections.length; ++i) {\r\n                            if (this.pixels[y][x].connections[i].fill === false) {\r\n                                hasCon = true;\r\n                            }\r\n                        }\r\n                        if (hasCon) {\r\n                            this.pixels[y][x].exit = true;\r\n                            this.exit = this.pixels[y][x];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ResetCost() {\r\n        for (let y = 0; y < this.connectionMap.length; ++y) {\r\n            for (let x = 0; x < this.connectionMap[y].length; ++x) {\r\n                if (this.connectionMap[y][x].isPath) {\r\n                    this.connectionMap[y][x].temp = -1.0;\r\n                    this.connectionMap[y][x].visited = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ComputePath(startP: GhostPixel, endP: GhostPixel): GhostPixel[] | undefined {\r\n        this.ResetCost();\r\n\r\n        let queueForward = [startP];\r\n        while (queueForward.length > 0) {\r\n            let current = queueForward[0];\r\n            current.visited = true;\r\n            queueForward.shift();\r\n            for (let i = 0; i < current.connections.length; ++i) {\r\n                if (!current.connections[i].visited) {\r\n                    const newcost = this.ComputeCost(current, current.connections[i]);\r\n                    const newtemp = current.temp + newcost;\r\n                    if (current.connections[i].temp === -1.0 || newtemp < current.connections[i].temp) {\r\n                        current.connections[i].temp = newtemp;\r\n                        queueForward.push(current.connections[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let path: GhostPixel[] = [];\r\n        if (endP.temp !== -1.0) {\r\n            path.push(endP);\r\n            let current = endP;\r\n            while (true) {\r\n                let smallest = current;\r\n                for (let i = 0; i < current.connections.length; ++i) {\r\n                    if (current.connections[i].isPath) {\r\n                        if (current.connections[i].temp < smallest.temp) { smallest = current.connections[i]; }\r\n                    }\r\n                }\r\n                if (smallest === current) { this.fail = true; return null; }\r\n                current = smallest;\r\n                path.push(current);\r\n                if (current === startP) { break; }\r\n            }\r\n        }\r\n        return path;\r\n        // console.log('there are ', count, ' group of cells' );\r\n    }\r\n    ComputeCost(current: GhostPixel, target: GhostPixel): number {\r\n        return Math.sqrt((target.x - current.x) * (target.x - current.x) + (target.y - current.y) * (target.y - current.y));\r\n    }\r\n    InitConnections(xx: number, yy: number) {\r\n        this.connectionMap = [];\r\n        for (let y = 0; y < this.pixels.length - xx + 1; ++y) {\r\n            const yList = [];\r\n            for (let x = 0; x < this.pixels[0].length - yy + 1; ++x) {\r\n                const gp = new GhostPixel(this, x * this.scale + 75, y * this.scale + 75);\r\n                for (let j = 0; j < yy; ++j) {\r\n                    for (let i = 0; i < xx; ++i) {\r\n                        gp.pixels.push(this.pixels[y + j][x + i]);\r\n                    }\r\n                }\r\n                // gp.pixels.push(this.pixels[y][x]);\r\n                // for (let i = 1; i < xx; ++i) {\r\n                //     gp.pixels.push(this.pixels[y][x + i - 1]);\r\n                // }\r\n                // for (let i = 1; i < yy; ++i) {\r\n                //     gp.pixels.push(this.pixels[y + i - 1][x]);\r\n                // }\r\n                // gp.pixels.push(this.pixels[y + yy - 1][x + xx - 1]);\r\n                gp.Compute();\r\n                yList.push(gp);\r\n            }\r\n            this.connectionMap.push(yList);\r\n        }\r\n        for (let y = 0; y < this.connectionMap.length; ++y) {\r\n            for (let x = 0; x < this.connectionMap.length; ++x) {\r\n                const gp = this.connectionMap[y][x];\r\n                if (y !== 0 && y < this.connectionMap.length - 1 && x !== 0 && x < this.connectionMap[0].length - 1) {\r\n                    gp.pushConnections(this.connectionMap[y - 1][x]);\r\n                    gp.pushConnections(this.connectionMap[y + 1][x]);\r\n                    gp.pushConnections(this.connectionMap[y][x - 1]);\r\n                    gp.pushConnections(this.connectionMap[y][x + 1]);\r\n                } else if (y === 0) {\r\n                    gp.pushConnections(this.connectionMap[y + 1][x]);\r\n                    if (0 < x && x < this.connectionMap[0].length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y][x - 1]);\r\n                        gp.pushConnections(this.connectionMap[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        gp.pushConnections(this.connectionMap[y][x + 1]);\r\n                    } else if (x === this.connectionMap[0].length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y][x - 1]);\r\n                    }\r\n                } else if (y === this.connectionMap.length - 1) {\r\n                    gp.pushConnections(this.connectionMap[y - 1][x]);\r\n                    if (0 < x && x < this.connectionMap[0].length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y][x - 1]);\r\n                        gp.pushConnections(this.connectionMap[y][x + 1]);\r\n                    } else if (x === 0) {\r\n                        gp.pushConnections(this.connectionMap[y][x + 1]);\r\n                    } else if (x === this.connectionMap[0].length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y][x - 1]);\r\n                    }\r\n                } else if (x === 0) {\r\n                    gp.pushConnections(this.connectionMap[y][x + 1]);\r\n                    if (0 < y && y < this.connectionMap.length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y - 1][x]);\r\n                        gp.pushConnections(this.connectionMap[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        gp.pushConnections(this.connectionMap[y + 1][x]);\r\n                    } else if (y === this.connectionMap.length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y - 1][x]);\r\n                    }\r\n                } else if (x === this.connectionMap[0].length - 1) {\r\n                    gp.pushConnections(this.connectionMap[y][x - 1]);\r\n                    if (0 < y && y < this.connectionMap.length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y - 1][x]);\r\n                        gp.pushConnections(this.connectionMap[y + 1][x]);\r\n                    } else if (y === 0) {\r\n                        gp.pushConnections(this.connectionMap[y + 1][x]);\r\n                    } else if (y === this.connectionMap.length - 1) {\r\n                        gp.pushConnections(this.connectionMap[y - 1][x]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n\r\n        this.t += 0.1;\r\n        if (this.t > 10) {\r\n            // console.log(this.t);\r\n            this.t = 0.0;\r\n            if (!this.fail) { this.Update(); }\r\n        }\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                this.pixels[y][x].Render(ctx);\r\n            }\r\n        }\r\n\r\n        if (this.pixelsHover) {\r\n            for (let i = 0; i < this.pixelsHover.length; ++i) {\r\n                this.pixelsHover[i].RenderHover(ctx);\r\n            }\r\n        }\r\n\r\n        if (this.connectionMap) {\r\n            for (let i = 0; i < this.connectionMap.length; ++i) {\r\n                for (let j = 0; j < this.connectionMap.length; ++j) {\r\n                    this.connectionMap[i][j].Render(ctx, p);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.path && this.path.length > 0) {\r\n            this.RenderPath(ctx, this.path);\r\n            console.log('dddd');\r\n        }\r\n\r\n    }\r\n    RenderPath(ctx: CanvasRenderingContext2D, path: GhostPixel[]) {\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.lineWidth = 5;\r\n        ctx.beginPath();\r\n        ctx.moveTo((path[0].x), (path[0].y));\r\n        for (let i = 1; i < path.length; ++i) {\r\n            ctx.lineTo((path[i].x), (path[i].y));\r\n        }\r\n        ctx.stroke();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmTile extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    map: PixelMap;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        const num = 11;\r\n        const array = [\r\n            [5, 2],\r\n            [9, 7],\r\n            [4, 4],\r\n            [3, 9]\r\n        ];\r\n\r\n        let before = performance.now();\r\n        this.map = new PixelMap(num, array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/5556\r\n\r\nclass Pixel {\r\n    map: PixelMap;\r\n    x: number = -1;\r\n    y: number = -1;\r\n    connections: Pixel[] = [];\r\n    scale = 10;\r\n    r: boolean = false;\r\n    yC: boolean = false;\r\n    b: boolean = false;\r\n    selected: boolean = false;\r\n    constructor(map: PixelMap, x: number, y: number, scale: number) {\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scale = scale;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        ctx.strokeStyle = '#ffffff';\r\n        ctx.fillStyle = 'rgba(255,255,255, 1)';\r\n        ctx.lineWidth = 1;\r\n        ctx.beginPath();\r\n        ctx.rect(this.x, this.y, this.scale, this.scale);\r\n        ctx.closePath();\r\n        if (this.r) {\r\n            ctx.fillStyle = 'rgba(255,0,0, 1)';\r\n        } else if (this.yC) {\r\n            ctx.fillStyle = 'rgba(255,255,0, 1)';\r\n        } else if (this.b) {\r\n            ctx.fillStyle = 'rgba(0,0,255, 1)';\r\n        }\r\n        ctx.stroke();\r\n        ctx.fill();\r\n\r\n        if (this.selected) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.beginPath();\r\n            ctx.arc(this.x + this.scale * 0.5, this.y + this.scale * 0.5, 5, 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n}\r\nclass PixelMap {\r\n    scale: number = 15;\r\n    pixels: Pixel[][] = [];\r\n    pixelsComputedNeeded: Pixel[] = [];\r\n    s: number = 0;\r\n    w: number = 0;\r\n    constructor(n: number, data: number[][]) {\r\n        for (let y = 0; y < n; ++y) {\r\n            const pixelsRow = [];\r\n            for (let x = 0; x < n; ++x) {\r\n                pixelsRow.push(new Pixel(this, y * this.scale, x * this.scale, this.scale));\r\n            }\r\n            this.pixels.push(pixelsRow);\r\n        }\r\n        this.InitConnections();\r\n        this.ComputeData(data);\r\n    }\r\n    ComputeData(data: number[][]) {\r\n        for (let i = 0; i < data.length; ++i) {\r\n            const p = this.pixels[data[i][0] - 1][data[i][1] - 1];\r\n            p.selected = true;\r\n            if (p.r) {\r\n                console.log('red, 1');\r\n            } else if (p.yC) {\r\n                console.log('yellow, 3');\r\n            } else if (p.b) {\r\n                console.log('blue, 2');\r\n            }\r\n        }\r\n    }\r\n    InitConnections() {\r\n        // right up\r\n        for (let y = 0; y < this.pixels.length * 0.5; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length * 0.5; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n\r\n                let xxx = x % 3;\r\n                let yyy = y % 3;\r\n\r\n                if (xxx === 0 && y >= x) {\r\n                    theCell.r = true;\r\n                } else if (xxx === 1 && y >= x) {\r\n                    theCell.b = true;\r\n                } else if (xxx === 2 && y >= x) {\r\n                    theCell.yC = true;\r\n                }\r\n\r\n                if (yyy === 0 && x >= y) {\r\n                    theCell.r = true;\r\n                } else if (yyy === 1 && x >= y) {\r\n                    theCell.b = true;\r\n                } else if (yyy === 2 && x >= y) {\r\n                    theCell.yC = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // left bottom\r\n        for (let y = 0; y < this.pixels.length * 0.5; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length * 0.5; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n                let yi = y; // this.pixels.length - y - 1;\r\n                let xi = this.pixels[0].length - x - 1;\r\n                const otherCell = this.pixels[yi][xi];\r\n                otherCell.r = theCell.r;\r\n                otherCell.yC = theCell.yC;\r\n                otherCell.b = theCell.b;\r\n\r\n            }\r\n        }\r\n\r\n        // right\r\n        for (let y = 0; y < this.pixels.length * 0.5; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                const theCell = this.pixels[y][x];\r\n                let yi = this.pixels.length - y - 1;\r\n                let xi = x; // this.pixels[0].length - x - 1;\r\n                const otherCell = this.pixels[yi][xi];\r\n                otherCell.r = theCell.r;\r\n                otherCell.yC = theCell.yC;\r\n                otherCell.b = theCell.b;\r\n\r\n            }\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        for (let y = 0; y < this.pixels.length; ++y) {\r\n            for (let x = 0; x < this.pixels[0].length; ++x) {\r\n                this.pixels[y][x].Render(ctx, p);\r\n            }\r\n        }\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmOKVIRI extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n    }\r\n    init() {\r\n        const data = 'DOG';\r\n        let before = performance.now();\r\n        const t = new OKVIRI(data);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n        console.log(t);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n\r\n// https://www.acmicpc.net/problem/3054\r\n\r\nclass OKVIRI {\r\n    constructor(word: string) {\r\n        let length = word.length;\r\n        let xDim = 5 + ((length - 1) * 4);\r\n        console.log(xDim);\r\n        console.log(length);\r\n        for (let y = 0; y < 5; ++y) {\r\n            let words = '';\r\n            let index = 0;\r\n            for (let x = 0; x < xDim; ++x) {\r\n                if (y === 0 || y === 4) {\r\n                    if ((x % 4) === 2) {\r\n                        if (x < xDim - 5) {\r\n                            words += '#';\r\n                        } else {\r\n                            words += '*';\r\n                        }\r\n                    } else {\r\n                        words += '.';\r\n                    }\r\n                } else if (y === 1 || y === 3) {\r\n                    if ((x % 2) === 1) {\r\n                        if (x < xDim - 5) {\r\n                            words += '#';\r\n                        } else {\r\n                            words += '*';\r\n                        }\r\n                    } else {\r\n                        words += '.';\r\n                    }\r\n                } else {\r\n                    if ((x % 4) === 0) {\r\n                        if (x < xDim - 5) {\r\n                            words += '#';\r\n                        } else {\r\n                            words += '*';\r\n                        }\r\n                    } else if (x % 2 === 0) {\r\n                        words += word[index++];\r\n                    } else {\r\n                        words += '.';\r\n\r\n                    }\r\n                }\r\n            }\r\n            console.log(words);\r\n        }\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class AlgorithmDFSBFS extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    graph: Graph;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        const size = [4, 5, 1];\r\n        const array = [\r\n            [1, 2],\r\n            [1, 3],\r\n            [1, 4],\r\n            [2, 4],\r\n            [3, 4],\r\n        ];\r\n        // const size = [5, 5, 3];\r\n        // const array = [\r\n        //             [5, 4],\r\n        //             [5, 2],\r\n        //             [1, 2],\r\n        //             [3, 4],\r\n        //             [3, 1]\r\n        // ];\r\n        let before = performance.now();\r\n        this.graph = new Graph(size, array);\r\n        let after = performance.now();\r\n        console.log('time: ', after - before);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx, this.p);\r\n        this.RenderMouse(ctx);\r\n    }\r\n    RenderMouse(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\n// https://www.acmicpc.net/problem/1260\r\nclass Value {\r\n    visitedNum: number[] = [];\r\n    constructor() {\r\n        //\r\n    }\r\n    Add(id: number) {\r\n        this.visitedNum.push(id);\r\n    }\r\n    Print() {\r\n        for (let i = 0; i < this.visitedNum.length; ++i) {\r\n            console.log(this.visitedNum[i]);\r\n        }\r\n    }\r\n}\r\nclass Graph {\r\n    edges: Edge[] = [];\r\n    nodes: Node[] = [];\r\n    constructor(data: number[], connections: number[][]) {\r\n        for (let i = 0; i < data[0]; ++i) {\r\n            this.nodes.push(new Node(i));\r\n        }\r\n        for (let i = 0; i < connections.length; ++i) {\r\n            const cons = connections[i];\r\n            const n0 = this.nodes[cons[0] - 1];\r\n            const n1 = this.nodes[cons[1] - 1];\r\n            const e = new Edge(n0, n1);\r\n            this.edges.push(e);\r\n        }\r\n        let val = new Value();\r\n        this.ComputeDFS(data[data.length - 1] - 1, val);\r\n        val.Print();\r\n\r\n        for (let i = 0; i < this.nodes.length; ++i) { this.nodes[i].visited = false; }\r\n\r\n        val = new Value();\r\n        this.ComputeBFS(data[data.length - 1] - 1, val);\r\n        val.Print();\r\n    }\r\n    // ...............................................................\r\n    ComputeBFS(start: number, val: Value) {\r\n        this.BFS(this.nodes[start], val);\r\n    }\r\n    private BFS(n: Node, val: Value) {\r\n        let queue = [n];\r\n\r\n        while (queue.length > 0) {\r\n            let current = queue[0];\r\n            queue.shift();\r\n            if (current.visited) { continue; }\r\n            current.visited = true;\r\n            val.Add(current.id + 1);\r\n\r\n            // for (let i = 0; i < current.edges.length; ++i) {\r\n            //     if (!current.edges[i].n0.visited) { queue.push(current.edges[i].n0); }\r\n            //     if (!current.edges[i].n1.visited) { queue.push(current.edges[i].n1); }\r\n            // }\r\n            for (let i = current.edges.length - 1; i > - 1; --i) {\r\n                if (!current.edges[i].n0.visited) { queue.push(current.edges[i].n0); }\r\n                if (!current.edges[i].n1.visited) { queue.push(current.edges[i].n1); }\r\n            }\r\n        }\r\n    }\r\n    // ...............................................................\r\n    ComputeDFS(start: number, val: Value) {\r\n        this.DFS(this.nodes[start], val);\r\n    }\r\n    private DFS(n: Node, val: Value) {\r\n        if (n.visited) { return val; }\r\n        val.Add(n.id + 1);\r\n        n.visited = true;\r\n        // for (let i = 0; i < n.edges.length; ++i) {\r\n        //    this.DFS(n.edges[i].n0, val);\r\n        //    this.DFS(n.edges[i].n1, val);\r\n        // }\r\n        for (let i = n.edges.length - 1; i > -1; --i) {\r\n            this.DFS(n.edges[i].n0, val);\r\n            this.DFS(n.edges[i].n1, val);\r\n        }\r\n        return val;\r\n    }\r\n    // ...............................................................\r\n    Render(ctx: CanvasRenderingContext2D, p: number[]) {\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].Render(ctx);\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].Render(ctx);\r\n        }\r\n    }\r\n}\r\nclass Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    constructor(n0: Node, n1: Node) {\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n        this.n0.edges.push(this);\r\n        this.n1.edges.push(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.n0.x, this.n0.y);\r\n        ctx.lineTo(this.n1.x, this.n1.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}\r\nclass Node {\r\n    edges: Edge[] = [];\r\n    x: number = -1;\r\n    y: number = -1;\r\n    id: number = -1;\r\n    visited: boolean = false;\r\n    constructor(id: number) {\r\n        this.x = (Math.random() + 1) * 300;\r\n        this.y = (Math.random() + 1) * 300;\r\n        this.id = id;\r\n        console.log(this.x, this.y);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, 10, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        ctx.font = '15px Arial';\r\n        ctx.fillText((this.id + 1).toString(), this.x - 5, this.y + 5);\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\nimport { SceneCreativeCoding } from '..';\r\nexport class AlgorithmBuilding extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    myWork: MyWork;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.init();\r\n\r\n    }\r\n    init() {\r\n        let site = [\r\n            [10, 10],\r\n            [50, 15],\r\n            [45, 65],\r\n            [25, 80],\r\n            [9, 10],\r\n        ];\r\n        this.myWork = new MyWork(10, site);\r\n        this.myWork.toJson();\r\n        // const json = JSON.parse(JSON.stringify(this.myWork));\r\n        // console.log(json);\r\n        // let after = performance.now();\r\n        // console.log('time: ', after - before);\r\n        console.log('building run....');\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // this.map.Render(ctx, this.p);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}\r\nclass MyWork {\r\n    site: Site;\r\n    apts: APT[] = [];\r\n    sun: Sun;\r\n    constructor(num: number, site: number[][]) {\r\n        this.sun = new Sun();\r\n        this.init();\r\n        this.InitOpti();\r\n    }\r\n    init() {\r\n        this.site = new Site();\r\n        for (let i = 0; i < 10; ++i) {\r\n            this.apts.push(new APT());\r\n        }\r\n    }\r\n    InitOpti() {\r\n        //\r\n    }\r\n    toJson() {\r\n        for (let i = 0; i < 10; ++i) {\r\n            this.apts[i].toJson();\r\n        }\r\n    }\r\n}\r\nclass SunValue {\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n    update(t: number, v: number) {\r\n        //\r\n    }\r\n\r\n}\r\nclass Unit {\r\n    host: APT;\r\n    scoreBySun: SunValue;\r\n    constructor(host: APT) {\r\n        this.host = host;\r\n    }\r\n    getFloor() {\r\n\r\n        return [0, 0];\r\n    }\r\n    computeSVec(s: number[]) {\r\n        //\r\n        this.scoreBySun.update(12, 0.0);\r\n\r\n    }\r\n    toJson() {\r\n        //\r\n    }\r\n}\r\nclass APT {\r\n    unit: Unit[] = [];\r\n    constructor() {\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        for (let i = 0; i < 10; ++i) {\r\n            this.unit.push(new Unit(this));\r\n        }\r\n    }\r\n    toJson() {\r\n        for (let i = 0; i < this.unit.length; ++i) {\r\n            this.unit[i].toJson();\r\n        }\r\n    }\r\n\r\n}\r\nclass Site {\r\n    vecsSite: number[][] = [];\r\n    constructor() {\r\n        //\r\n    }\r\n    SiteInitByVecs(site: number[][]) {\r\n        this.vecsSite = site;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n}\r\n\r\nclass Sun {\r\n    vec: number[] = [0, 0, 0];\r\n    constructor() {\r\n        //\r\n    }\r\n    ComputeVAl(apt: APT) {\r\n        for (let i = 0; i < apt.unit.length; ++i) {\r\n            const u = apt.unit[i];\r\n            this.Compute(u);\r\n        }\r\n    }\r\n    Compute(u: Unit) {\r\n        u.computeSVec(this.vec);\r\n        //\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\nimport {\r\n    GetGrid, GridSystem,\r\n    CanvasDrawing, NVector3\r\n} from '../../../../../../../NJSCore';\r\n\r\n// import { DynamicSystem01 } from './DynamicSystem/DynamicSystem01';\r\n\r\nexport class GridOptiA extends DefinitionIndeCanvasCore {\r\n    mouse: NVector3 = new NVector3(0, 0);\r\n\r\n    gridSystem: GridSystem;\r\n    xNum: number = 10;\r\n    yNum: number = 10;\r\n    mode: number = 0;\r\n    connectivity: boolean = false;\r\n    distance: number = 0;\r\n    // DynamicSystem: DynamicSystem01;\r\n\r\n    p0: NVector3 = new NVector3(-1, -1);\r\n    p1: NVector3 = new NVector3(1, 1);\r\n\r\n    capture: NVector3 | undefined = undefined;\r\n\r\n    titleA: HTMLElement;\r\n    titleB: HTMLElement;\r\n    titleC: HTMLElement;\r\n    titleD: HTMLElement;\r\n    titleE: HTMLElement;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'GridOptiA';\r\n        // console.log('init GridOptiA');\r\n        this.init();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        div.style.position = 'absolute';\r\n        div.style.left = '650px';\r\n        div.style.height = '400px';\r\n        div.style.width = '200px';\r\n        div.style.marginTop = '10px';\r\n        div.style.paddingLeft = '10px';\r\n        div.style.background = '#aaaaaa';\r\n\r\n        this.titleA = document.createElement('p');\r\n        this.titleA.textContent = 'X axis: 20';\r\n        div.append(this.titleA);\r\n\r\n        const sliderA = document.createElement('input');\r\n        sliderA.type = 'range';\r\n        sliderA.min = '2';\r\n        sliderA.max = '20';\r\n        sliderA.oninput = () => {\r\n            const val = +sliderA.value as number;\r\n            this.xNum = val;\r\n            this.titleA.textContent = 'X axis: ' + val;\r\n            this.init();\r\n        };\r\n        div.append(sliderA);\r\n\r\n        this.titleB = document.createElement('p');\r\n        this.titleB.textContent = 'Y axis: 20';\r\n        div.append(this.titleB);\r\n\r\n        const sliderB = document.createElement('input');\r\n        sliderB.type = 'range';\r\n        sliderB.min = '2';\r\n        sliderB.max = '20';\r\n        sliderB.oninput = () => {\r\n            const val = +sliderB.value as number;\r\n            this.yNum = val;\r\n            this.titleB.textContent = 'Y axis: ' + val;\r\n            this.init();\r\n        };\r\n        div.append(sliderB);\r\n\r\n        this.titleC = document.createElement('p');\r\n        this.titleC.textContent = 'mode: 0';\r\n        div.append(this.titleC);\r\n\r\n        const sliderC = document.createElement('input');\r\n        sliderC.type = 'range';\r\n        sliderC.min = '0';\r\n        sliderC.max = '8';\r\n        sliderC.defaultValue = '0';\r\n        sliderC.oninput = () => {\r\n            const val = +sliderC.value as number;\r\n            // console.log(val);\r\n            this.mode = val;\r\n            this.titleC.textContent = 'mode: ' + val;\r\n            this.init();\r\n        };\r\n        div.append(sliderC);\r\n\r\n        this.titleD = document.createElement('p');\r\n        this.titleD.textContent = 'connectivity: false';\r\n        div.append(this.titleD);\r\n\r\n        const sliderD = document.createElement('input');\r\n        sliderD.type = 'checkbox';\r\n        // sliderD.min = '0';\r\n        // sliderD.max = '8';\r\n        // sliderD.defaultValue = 'false';\r\n        sliderD.oninput = () => {\r\n            const val = sliderD.checked;\r\n            // console.log(val);\r\n            this.connectivity = val;\r\n            this.titleD.textContent = 'connectivity: ' + val;\r\n            this.init();\r\n        };\r\n        div.append(sliderD);\r\n\r\n        this.titleE = document.createElement('p');\r\n        this.titleE.textContent = 'distance: 0';\r\n        div.append(this.titleE);\r\n\r\n        const sliderE = document.createElement('input');\r\n        sliderE.type = 'range';\r\n        sliderE.min = '0';\r\n        sliderE.max = '2000';\r\n        sliderE.defaultValue = '0';\r\n        sliderE.oninput = () => {\r\n            const val = +sliderE.value as number;\r\n            // console.log(val * 0.001);\r\n            this.distance = val * 0.001;\r\n            this.titleE.textContent = 'distance: ' + val;\r\n            this.init();\r\n        };\r\n        div.append(sliderE);\r\n\r\n        this.scene.canvas.hostDiv.append(div);\r\n    }\r\n    public init() {\r\n        this.gridSystem = GetGrid.GetGrid(this.xNum, this.yNum, this.p0.x, this.p0.y, this.p1.x, this.p1.y, this.mode);\r\n    }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        ctx.translate(this.width * 0.5, this.height * 0.5);\r\n        ctx.scale(100, 100);\r\n\r\n        ctx.beginPath();\r\n        ctx.fillStyle = '#ededed';\r\n        ctx.rect(-this.width * 0.5, -this.height * 0.5, this.width, this.height);\r\n        ctx.fill();\r\n\r\n        this.gridSystem.Update();\r\n\r\n        this.RenderLine(ctx);\r\n        this.RenderPoints(ctx);\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        if (this.connectivity) {\r\n            for (let i = 0; i < this.gridSystem.vs.length - 1; ++i) {\r\n                for (let j = i + 1; j < this.gridSystem.vs.length; ++j) {\r\n                    if (this.gridSystem.vs[j].Distance(this.gridSystem.vs[i]) < this.distance) {\r\n                        CanvasDrawing.LineByVecs(ctx, this.gridSystem.vs[i], this.gridSystem.vs[j], 0.002, 'rgba(0, 0, 255, 0.9)');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public RenderPoints(ctx: CanvasRenderingContext2D) {\r\n        CanvasDrawing.PointByNVec(ctx, this.gridSystem.v0, 0.05);\r\n        CanvasDrawing.PointByNVec(ctx, this.gridSystem.v1, 0.05);\r\n\r\n        for (let i = 0; i < this.gridSystem.vs.length; ++i) {\r\n            CanvasDrawing.PointByNVec(ctx, this.gridSystem.vs[i], 0.01);\r\n        }\r\n        // console.log(this.gridSystem.vs);\r\n        CanvasDrawing.Point(ctx, this.mouse.x, this.mouse.y, 0.01);\r\n        ctx.restore();\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        // let xr = ((x - this.scene.canvas.canvas.offsetLeft) - this.scene.canvas.canvas.width * 0.5) * 0.01;\r\n        // let yr = ((y - this.scene.canvas.canvas.offsetTop) - this.scene.canvas.canvas.height * 0.5) * 0.01;\r\n\r\n        // let xr = x * 0.01;\r\n        // let yr = y * 0.01;\r\n\r\n        let xr = (x - this.width * 0.5) * 0.01;\r\n        let yr = (y - this.height * 0.5) * 0.01;\r\n\r\n        // console.log(this.width * 0.5);\r\n        // xr += this.width * 0.5;\r\n        // yr += this.scene.canvas.canvas.height * 0.5;\r\n        // const xr = (x + (this.width * 0.5)) * 0.01;\r\n        // const yr = (y + (this.height * 0.5)) * 0.01;\r\n\r\n        this.mouse.x = xr;\r\n        this.mouse.y = yr;\r\n\r\n\r\n        // console.log(this.mouse);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        if (this.mouse.Distance(this.p0) < 0.1) {\r\n            // this.p0.x = xr;\r\n            // this.p0.y = yr;\r\n            this.capture = this.p0;\r\n            return;\r\n        }\r\n        if (this.mouse.Distance(this.p1) < 0.1) {\r\n            // this.p1.x = xr;\r\n            // this.p1.y = yr;\r\n            this.capture = this.p1;\r\n            return;\r\n        }\r\n        this.capture = undefined;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        let xr = (x - this.width * 0.5) * 0.01;\r\n        let yr = (y - this.height * 0.5) * 0.01;\r\n\r\n        this.mouse.x = xr;\r\n        this.mouse.y = yr;\r\n\r\n        if (this.capture) {\r\n            this.capture.x = xr;\r\n            this.capture.y = yr;\r\n            this.init();\r\n        }\r\n    }\r\n\r\n}\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\nimport { NVector3 } from '../../../../lib';\r\nimport { CanvasDrawing } from '../../../../../../../NJSCore';\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\nexport class CustomDynamicBin extends DefinitionIndeCanvasCore {\r\n    data: NVector3[] = [];\r\n    p: number[] = [0, 0];\r\n    pixelMap: CustomDynamicBinSystem;\r\n    captureVec: NVector3 | undefined = undefined;\r\n    dataHtml: HTMLElement;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n\r\n        this.init();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.textContent = 'ccc';\r\n        // div.style.background = '#ff0000';\r\n        div.style.position = 'absolute';\r\n        div.style.marginLeft = '10px';\r\n        // div.style.float = 'left';\r\n\r\n        let p = document.createElement('div');\r\n        if (!p) { return; } div.append(p);\r\n        // p.style.width = 'max-content';\r\n        p.style.cssFloat = 'left';\r\n        p.innerHTML = 'x res: ';\r\n\r\n        let input = document.createElement('input');\r\n        input.oninput = () => {\r\n            const val = +input.value as number;\r\n            this.pixelMap.rx = (Math.floor(val) % 2) === 0 ? Math.floor(val) : Math.floor(val) + 1;\r\n            // console.log((Math.floor(val) % 2) === 0 ? Math.floor(val) : Math.floor(val) + 1);\r\n            this.pixelMap.Init();\r\n        };\r\n        input.innerText = 'x res: ';\r\n        input.type = 'range';\r\n        input.min = '6';\r\n        input.max = '40';\r\n        input.value = '15';\r\n        input.style.cssFloat = 'left';\r\n        input.style.marginRight = '25px';\r\n        div.append(input);\r\n\r\n        p = document.createElement('div');\r\n        if (!p) { return; } div.append(p);\r\n        // p.style.width = 'max-content';\r\n        p.style.cssFloat = 'left';\r\n        p.innerHTML = 'y res: ';\r\n\r\n        let input2 = document.createElement('input');\r\n        input2.oninput = () => {\r\n            const val = +input2.value as number;\r\n            this.pixelMap.ry = (Math.floor(val) % 2) === 0 ? Math.floor(val) : Math.floor(val) + 1;\r\n            // console.log((Math.floor(val) % 2) === 0 ? Math.floor(val) : Math.floor(val) + 1);\r\n            this.pixelMap.Init();\r\n        };\r\n        input2.type = 'range';\r\n        input2.min = '6';\r\n        input2.max = '40';\r\n        input2.value = '15';\r\n        input2.style.cssFloat = 'left';\r\n        div.append(input2);\r\n\r\n        p = document.createElement('div');\r\n        if (!p) { return; } div.append(p);\r\n        // p.style.width = 'max-content';\r\n        p.style.cssFloat = 'left';\r\n        p.style.marginLeft = '10px';\r\n        p.innerHTML = 'Mode: ';\r\n\r\n        let input3 = document.createElement('input');\r\n        input3.oninput = () => {\r\n            const val = +input3.value as number;\r\n            this.pixelMap.mode = val;\r\n            this.pixelMap.Init();\r\n        };\r\n        input3.type = 'range';\r\n        input3.min = '0';\r\n        input3.max = '5';\r\n        input3.value = '0';\r\n        input3.style.cssFloat = 'left';\r\n        input3.style.width = '50px';\r\n        div.append(input3);\r\n\r\n        p = document.createElement('div');\r\n        if (!p) { return; } div.append(p);\r\n        // p.style.width = 'max-content';\r\n        p.style.cssFloat = 'left';\r\n        p.style.marginLeft = '10px';\r\n        p.innerHTML = 'data : ';\r\n        this.dataHtml = p;\r\n\r\n        this.scene.implementation.app.divHost.append(div);\r\n    }\r\n    public init() {\r\n        this.pixelMap = new CustomDynamicBinSystem(new NVector3(100, 100), new NVector3(400, 300));\r\n\r\n        const off = 5;\r\n        this.data = this.InitData(800, 0 + off, this.width - off, 20 + off, this.height - off, 0.5, 4);\r\n        // console.log(this.data);\r\n    }\r\n    public InitData(num: number, xMin: number, xMax: number, yMin: number, yMax: number, zMin: number, zMax: number) {\r\n        const data: NVector3[] = [];\r\n        for (let i = 0; i < num; ++i) {\r\n            const x = xMin + (Math.random() * xMax);\r\n            const y = yMin + (Math.random() * yMax);\r\n            const z = zMin + (Math.random() * zMax);\r\n            data.push(new NVector3(x, y, z));\r\n        }\r\n        return data;\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.captureVec = this.pixelMap.IsHover(x, y);\r\n    }\r\n    public MouseMove(x: number, y: number) {\r\n        this.pixelMap.MoveInspection(x, y);\r\n        if (this.pixelMap.selPixel) {\r\n            const d = (this.pixelMap.selPixel.data['num'] as number).toFixed(4);\r\n            this.dataHtml.innerText = 'data: ' + d;\r\n            return;\r\n        }\r\n        this.dataHtml.innerText = 'data: ';\r\n    }\r\n    public MouseDrag(x: number, y: number) {\r\n        if (this.captureVec) {\r\n            this.pixelMap.DragControlPoint(x, y);\r\n\r\n        }\r\n    }\r\n    public MouseUp(x: number, y: number) {\r\n        this.captureVec = undefined;\r\n    }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n\r\n        for (let i = 0; i < this.data.length; ++i) {\r\n            CanvasDrawing.PointByNVec(ctx, this.data[i], this.data[i].z, 'rgba(0, 0, 0, 0.5)');\r\n        }\r\n\r\n        this.pixelMap.UpdateData(this.data);\r\n\r\n        // for (let i = 0; i < this.pixelMap.pts.length; ++i) {\r\n        //     for (let j = 0; j < this.pixelMap.pts[i].length; ++j) {\r\n        //         CanvasDrawing.PointByNVec(ctx, this.pixelMap.pts[i][j], 4, 'rgba(0, 0, 0, 1)');\r\n        //     }\r\n        // }\r\n        this.pixelMap.RenderPixel(ctx);\r\n        this.pixelMap.RenderCorner(ctx);\r\n        this.pixelMap.RenderSelPixel(ctx);\r\n        // console.log(this.pixelMap.pts);\r\n    }\r\n}\r\n\r\n\r\nexport class CustomDynamicBinSystem {\r\n    v0: NVector3;\r\n    v1: NVector3;\r\n    rx: number;\r\n    ry: number;\r\n    ddx: number;\r\n    ddy: number;\r\n    pts: NVector3[][] = [];\r\n    ptList: NVector3[] = [];\r\n    listPixels: Pixel[] = [];\r\n    m: NVector3;\r\n    t: number = 0.0;\r\n    mode: number = 0;\r\n    selPixel: Pixel | undefined = undefined;\r\n    constructor(v0: NVector3, v1: NVector3) {\r\n        this.v0 = v0;\r\n        this.v1 = v1;\r\n        this.rx = 20;\r\n        this.ry = 20;\r\n        this.ddx = 0.0;\r\n        this.ddy = 0.0;\r\n        this.m = new NVector3(0, 0);\r\n        this.Init();\r\n    }\r\n    public IsHover(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (NVector3.Distance(this.m, p) < 8) { return p; }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (NVector3.Distance(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (NVector3.Distance(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (NVector3.Distance(this.m, p) < 8) { return p; }\r\n        return undefined;\r\n    }\r\n    public Move(x: number, y: number) {\r\n        this.MoveInspection(x, y);\r\n    }\r\n    public MoveInspection(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            // console.log('ddd');\r\n            if (NVector3.IsInsideOfVecs(this.m, this.listPixels[j].recVec)) {\r\n                this.selPixel = this.listPixels[j];\r\n                return;\r\n            } else {\r\n                this.selPixel = undefined;\r\n                // console.log('out');\r\n            }\r\n        }\r\n    }\r\n    public DragControlPoint(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (NVector3.Distance(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (NVector3.Distance(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (NVector3.Distance(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (NVector3.Distance(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        this.ddx = (this.v1.x - this.v0.x) / (this.rx - 1.0);\r\n        this.ddy = (this.v1.y - this.v0.y) / (this.ry - 1.0);\r\n        // console.log('ddx is ' + this.ddx + '. ddy is ' + this.ddx);\r\n        // console.log('Pixe Map was executed...');\r\n        this.pts = [];\r\n        this.ptList = [];\r\n        this.listPixels = [];\r\n\r\n        this.InitGrid();\r\n        // this.ComputeAtt();\r\n\r\n        switch (this.mode) {\r\n            case 0: this.ComputeRec(); break;\r\n            case 1: this.ComputeTriA(); break;\r\n            case 2: this.ComputeTriB(); break;\r\n            case 3: this.ComputeDia(); break;\r\n            case 4: this.ComputeLShape(); break;\r\n            default: this.ComputeHex(); break;\r\n        }\r\n\r\n    }\r\n    public UpdateData(vs: NVector3[]) {\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            this.listPixels[j].data['num'] = 0;\r\n        }\r\n        for (let i = 0; i < vs.length; ++i) {\r\n            const p = vs[i];\r\n            for (let j = 0; j < this.listPixels.length; ++j) {\r\n                if (NVector3.IsInsideOfVecs(p, this.listPixels[j].recVec)) {\r\n                    this.listPixels[j].data['num'] += p.z;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public InitGrid() {\r\n        this.pts = [];\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            let y = this.v0.y + j * this.ddy;\r\n            let xArray: NVector3[] = [];\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let x = this.v0.x + i * this.ddx;\r\n                const v = new NVector3(x, y, 0);\r\n                xArray.push(v);\r\n                this.ptList.push(v);\r\n            }\r\n            this.pts.push(xArray);\r\n        }\r\n    }\r\n    public ComputeRec() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriA() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeDia() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 2 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeLShape() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 3) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (i < this.rx - 2 && j < this.ry - 2) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    p.recVec.push(this.pts[j + 3][i]);\r\n                    p.recVec.push(this.pts[j + 3][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriB() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeHex() {\r\n        this.listPixels = [];\r\n        let alter = true;\r\n        for (let j = 0; j < this.ry; j += 2) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (alter) {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this);\r\n                        p.recVec.push(this.pts[j][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 2]);\r\n                        p.recVec.push(this.pts[j + 3][i + 1]);\r\n                        p.recVec.push(this.pts[j + 2][i]);\r\n                        p.recVec.push(this.pts[j + 1][i]);\r\n                        // p.recVec.push(this.pts[j][i+1]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                } else {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this);\r\n                        p.recVec.push(this.pts[j][i + 2]);\r\n                        p.recVec.push(this.pts[j + 1][i + 3]);\r\n                        p.recVec.push(this.pts[j + 2][i + 3]);\r\n                        p.recVec.push(this.pts[j + 3][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 1]);\r\n                        // p.vecs.push(this.pts[j][i+2]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                }\r\n            }\r\n            alter = !alter;\r\n        }\r\n        // console.log('done for grid');\r\n        // this.InitGridNeighbor();\r\n    }\r\n    RenderPixel(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.listPixels.length; ++i) {\r\n            this.listPixels[i].Render(ctx);\r\n        }\r\n    }\r\n    RenderCorner(ctx: CanvasRenderingContext2D) {\r\n        let p = this.pts[0][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        this.t += 0.07;\r\n    }\r\n    public RenderSelPixel(ctx: CanvasRenderingContext2D) {\r\n        if (this.selPixel) {\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = '#ffffff';\r\n            // ctx.fillStyle = `rgba(255, 0, 255, ${this.data['num'] * 0.05} )`;\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.selPixel.recVec[0].x, this.selPixel.recVec[0].y);\r\n            for (let i = 1; i < this.selPixel.recVec.length; ++i) {\r\n                ctx.lineTo(this.selPixel.recVec[i].x, this.selPixel.recVec[i].y);\r\n            }\r\n            ctx.closePath();\r\n\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Pixel {\r\n    static ID = 0;\r\n\r\n    map: CustomDynamicBinSystem;\r\n    vec: NVector3;\r\n    norV: NVector3;\r\n    nPix: Pixel[] = [];\r\n    recVec: NVector3[];\r\n    i: number = -1;\r\n    j: number = -1;\r\n    k: number = -1;\r\n    u: number = -1;\r\n    v: number = -1;\r\n    id: number;\r\n    color: number[] = [];\r\n    data: {};\r\n\r\n    static GetID() { return Pixel.ID++; }\r\n\r\n    constructor(map: CustomDynamicBinSystem, v: NVector3 = new NVector3(0, 0, 0)) {\r\n        this.map = map;\r\n        this.vec = v;\r\n        this.nPix = [];\r\n        this.recVec = [];\r\n        this.i = -1;\r\n        this.j = -1;\r\n        this.k = -1;\r\n        this.id = Pixel.GetID();\r\n        this.data = {};\r\n    }\r\n    ToString() {\r\n        let temp = 'Pixel' + this.id;\r\n        // console.log(temp);\r\n        return temp;\r\n    }\r\n    Update() {\r\n        /* */\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = `rgba(255, 0, 255, ${this.data['num'] * 0.05} )`;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.recVec[0].x, this.recVec[0].y);\r\n        for (let i = 1; i < this.recVec.length; ++i) {\r\n            ctx.lineTo(this.recVec[i].x, this.recVec[i].y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // }\r\n\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n    }\r\n    init() {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}","import { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\nimport { GeomeetryCommon } from './Core/GeometryCommon';\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\nimport { BallBounce } from './Definition/BallBounce';\r\nimport { BallBounceClass } from './Definition/BallBounceClass';\r\n// import { GaussianDistribution } from '../SceneVis/Definition/GaussianDistribution';\r\nimport { CircleGrid } from './Definition/CircleGrid';\r\nimport { CircleGridAttractors1 } from './Definition/CircleGridAttractors1';\r\nimport { CircleGridAttractors2 } from './Definition/CircleGridAttractors2';\r\n\r\nimport { DefinitionLine } from './Definition/DefinitionLine';\r\nimport { DefinitionLine2 } from './Definition/DefinitionLine2';\r\n\r\nimport { BoidSystem01 } from './Definition/BoidSystem/BoidSystem01';\r\nimport { BoidSystemWander0 } from './Definition/BoidSystem/BoidSystemWander0';\r\nimport { BoidSystemWander1 } from './Definition/BoidSystem/BoidSystemWander1';\r\nimport { BoidSystem04 } from './Definition/BoidSystem/BoidSystem04';\r\n\r\nimport { Dynamic01 } from './Definition/Dynamics/Dynamic01';\r\nimport { Dynamic02 } from './Definition/Dynamics/Dynamic02';\r\nimport { Dynamic03 } from './Definition/Dynamics/Dynamic03';\r\n\r\nimport { MatterSandbox } from './Definition/MatterSandbox';\r\n\r\nimport { OOP } from './Definition/OOP';\r\n\r\nimport { FluidSimulation } from './Definition/FluidSimulation';\r\nimport { PerlinHeatmap } from './Definition/PerlinHeatmap';\r\nimport { ColorPickerApp } from './Definition/ColorPicker';\r\n\r\nimport { AlgorithmMazeExit } from './Definition/AlgorithmMazeExit';\r\nimport { AlgorithmCabbage } from './Definition/AlgorithmCabbage';\r\nimport { AlgorithmBaconsLaw } from './Definition/AlgorithmBaconsLaw';\r\nimport { AlgorithmFireExit } from './Definition/AlgorithmFireExit';\r\nimport { AlgorithmNumOfArea } from './Definition/AlgorithmNumOfArea';\r\nimport { AlgorithmComputerFinder } from './Definition/AlgorithmComputerFinder';\r\nimport { AlgorithmKoze } from './Definition/AlgorithmKoze';\r\nimport { AlgorithmUnitMoving } from './Definition/AlgorithmUnitMoving';\r\nimport { AlgorithmTile } from './Definition/AlgorithmTile';\r\nimport { AlgorithmOKVIRI } from './Definition/AlgorithmOKVIRI';\r\nimport { AlgorithmDFSBFS } from './Definition/AlgorithmDFSBFS';\r\n\r\nimport { AlgorithmBuilding } from './Definition/AlgorithmBuilding';\r\n\r\nimport { GridOptiA } from './Definition/GridOpti/GridOptiA';\r\n\r\nimport { CustomDynamicBin } from './Definition/CustomDynamicBin';\r\n\r\nimport { Blank } from './Definition/Blank';\r\nimport { Implementation } from '..';\r\nexport class SceneCreativeCoding {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n    geomeetryCommon: GeomeetryCommon;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.geomeetryCommon = new GeomeetryCommon(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    LoadDefinition(v: string) {\r\n        // this.definitions = [];\r\n        if (v === 'Blank') { const d0 = new Blank(this); d0.Dummy(); }\r\n        // if (v === 'GaussianDistribution') { const d0 = new GaussianDistribution(this); d0.Dummy(); }\r\n        if (v === 'BallBounce') { const d0 = new BallBounce(this); d0.Dummy(); }\r\n        if (v === 'BallBounceClass') { const d0 = new BallBounceClass(this); d0.Dummy(); }\r\n        if (v === 'CircleGrid') { const d0 = new CircleGrid(this); d0.Dummy(); }\r\n        // if (v === 'CirclePopulate') { const d0 = new CirclePopulate(this); d0.Dummy(); }\r\n        if (v === 'CircleGridAttractors1') { const d0 = new CircleGridAttractors1(this); d0.Dummy(); }\r\n        if (v === 'CircleGridAttractors2') { const d0 = new CircleGridAttractors2(this); d0.Dummy(); }\r\n        if (v === 'Line') { const d0 = new DefinitionLine(this); d0.Dummy(); }\r\n        if (v === 'Line2') { const d0 = new DefinitionLine2(this); d0.Dummy(); }\r\n\r\n        if (v === 'BoidSystem01') { const d0 = new BoidSystem01(this); d0.Dummy(); }\r\n        if (v === 'BoidSystem02') { const d0 = new BoidSystemWander0(this); d0.Dummy(); }\r\n        if (v === 'BoidSystem03') { const d0 = new BoidSystemWander1(this); d0.Dummy(); }\r\n        if (v === 'BoidSystem04') { const d0 = new BoidSystem04(this); d0.Dummy(); }\r\n\r\n        if (v === 'DynamicSystem01') { const d0 = new Dynamic01(this); d0.Dummy(); }\r\n        if (v === 'DynamicSystem02') { const d0 = new Dynamic02(this); d0.Dummy(); }\r\n        if (v === 'DynamicSystem03') { const d0 = new Dynamic03(this); d0.Dummy(); }\r\n\r\n        if (v === 'MatterSandbox') { const d0 = new MatterSandbox(this); d0.Dummy(); }\r\n\r\n        if (v === 'OOP01') { const d0 = new OOP(this); d0.Dummy(); }\r\n\r\n        if (v === 'FireExit') { const d0 = new AlgorithmFireExit(this); d0.Dummy(); }\r\n        if (v === 'BaconsLaw') { const d0 = new AlgorithmBaconsLaw(this); d0.Dummy(); }\r\n        if (v === 'Cabbage') { const d0 = new AlgorithmCabbage(this); d0.Dummy(); }\r\n        if (v === 'NumOfArea') { const d0 = new AlgorithmNumOfArea(this); d0.Dummy(); }\r\n        if (v === 'ComputerFinder') { const d0 = new AlgorithmComputerFinder(this); d0.Dummy(); }\r\n        if (v === 'MazeExit') { const d0 = new AlgorithmMazeExit(this); d0.Dummy(); }\r\n\r\n        if (v === 'Koze') { const d0 = new AlgorithmKoze(this); d0.Dummy(); }\r\n        if (v === 'UnitMoving') { const d0 = new AlgorithmUnitMoving(this); d0.Dummy(); }\r\n        if (v === 'Tile') { const d0 = new AlgorithmTile(this); d0.Dummy(); }\r\n        if (v === 'OKVIRI') { const d0 = new AlgorithmOKVIRI(this); d0.Dummy(); }\r\n\r\n        if (v === 'AlgorithmDFSBFS') { const d0 = new AlgorithmDFSBFS(this); d0.Dummy(); }\r\n\r\n        if (v === 'GridOptiA') { const d0 = new GridOptiA(this); d0.Dummy(); }\r\n        if (v === 'FluidSimulation') { const d0 = new FluidSimulation(this); d0.Dummy(); }\r\n        if (v === 'PerlinHeatmap') { const d0 = new PerlinHeatmap(this); d0.Dummy(); }\r\n        if (v === 'ColorPicker') { const d0 = new ColorPickerApp(this); d0.Dummy(); }\r\n\r\n        if (v === 'temp') { const d0 = new AlgorithmMazeExit(this); d0.Dummy(); }\r\n        if (v === 'temp') { const d0 = new AlgorithmMazeExit(this); d0.Dummy(); }\r\n        if (v === 'temp') { const d0 = new AlgorithmMazeExit(this); d0.Dummy(); }\r\n        if (v === 'temp') { const d0 = new AlgorithmMazeExit(this); d0.Dummy(); }\r\n\r\n        if (v === 'Building') { const d0 = new AlgorithmBuilding(this); d0.Dummy(); }\r\n\r\n        if (v === 'customBinSystemA') { const d0 = new CustomDynamicBin(this); d0.Dummy(); }\r\n    }\r\n}","import { NVector3 } from '../../../../../';\r\nimport { MouseEventData } from '../../../../../IO/EventInteraction/MouseInteraction';\r\n\r\nimport { IndependentPanelWrapper } from '../../IndependentPanelWrapper';\r\nimport { ColorUtility } from '../../../../../Core/NColor/';\r\n\r\nimport { IndePanelPreset } from '../../Core/IndePanelPreset';\r\n\r\nimport { IndePanelBase } from './base/base/IndePanelBase';\r\n\r\nimport { BtnClose } from './base/BtnClose';\r\nimport { BtnMinimize } from './base/BtnMinimize';\r\nimport { BtnHam } from './base/BtnHam';\r\nimport { BtnResize } from './base/BtnResize';\r\n\r\nimport { BodyDiv } from './base/BodyDiv';\r\nimport { IndeSubPanel } from './base/IndeSubPanel';\r\n\r\nexport class IndependentPanelCanvas extends IndePanelBase {\r\n    independentPanelWrapper: IndependentPanelWrapper;\r\n    divInput: HTMLTextAreaElement;\r\n\r\n    btnClose: BtnClose;\r\n    btnMini: BtnMinimize;\r\n    btnHam: BtnHam;\r\n    btnResize: BtnResize;\r\n\r\n    bodyDiv: BodyDiv;\r\n    subMenu: IndeSubPanel;\r\n\r\n    subs: IndePanelBase[] = [];\r\n\r\n    _content: string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    isActive: boolean = true;\r\n\r\n    constructor(independentPanelWrapper: IndependentPanelWrapper, x: number = 0, y: number = 0, width: number = 300, height: number = 170, divNeeded: boolean = false) {\r\n        super(independentPanelWrapper);\r\n        this.independentPanelWrapper = independentPanelWrapper;\r\n        this.title = 'njslabSandbox V3';\r\n        this.width = width;\r\n        this.height = height;\r\n        if (x === 0 && y === 0) {\r\n            this.vec.x = (independentPanelWrapper.width * 0.5) - (this.width * 0.5);\r\n            this.vec.y = (independentPanelWrapper.height * 0.5) - (this.height * 0.5);\r\n        } else {\r\n            this.vec.x = x;\r\n            this.vec.y = y;\r\n        }\r\n        this.filletR = 7;\r\n        this.InitTop();\r\n        if (divNeeded) {\r\n            this.bodyDiv = new BodyDiv(this, this.vec.x, this.vec.y + this.HeadHeight, this.width, this.height - this.HeadHeight);\r\n            // this.bodyDiv.div.style.background = 'red';\r\n        }\r\n        this.InitCanvas(this.bodyDiv.div);\r\n    }\r\n\r\n    get IsMinimized() {\r\n        return this.isMinimized;\r\n    }\r\n    set IsMinimized(v: boolean) {\r\n        this.isMinimized = v;\r\n        this.btnResize.isHidden = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Hide(v); }\r\n    }\r\n    get Width() {\r\n        return this.width;\r\n    }\r\n    set Width(v: number) {\r\n        let off = v - this.width;\r\n        this.width = v;\r\n        this.btnHam.vec.x += off;\r\n        this.subMenu.vec.x += off;\r\n        if (this.bodyDiv) { this.bodyDiv.Width = v; }\r\n    }\r\n    get Height() {\r\n        return this.height;\r\n    }\r\n    set Height(v: number) {\r\n        this.height = v;\r\n        if (this.bodyDiv) { this.bodyDiv.Height = v; }\r\n        // this.subMenu\r\n    }\r\n    get content() {\r\n        return this._content;\r\n    }\r\n    set content(v: string) {\r\n        this._content = v;\r\n        if (this.bodyDiv) { this.bodyDiv.content = v; }\r\n    }\r\n    get HasSubMenu() {\r\n        return this.hasSubMenu;\r\n    }\r\n    set HasSubMenu(v: boolean) {\r\n        this.hasSubMenu = v;\r\n        this.subMenu.IsHidden = !v;\r\n    }\r\n    InitTop() {\r\n        this.btnClose = new BtnClose(this, this.vec.x, this.vec.y);\r\n        this.btnMini = new BtnMinimize(this, this.vec.x + 25, this.vec.y);\r\n        this.btnHam = new BtnHam(this, this.vec.x - 25 + this.width, this.vec.y);\r\n        this.btnResize = new BtnResize(this, this.vec.x + this.width - 10, this.vec.y + this.height - 10, 10, 10);\r\n\r\n        this.subMenu = new IndeSubPanel(this);\r\n        this.subs.push(this.btnClose, this.btnMini, this.btnHam);\r\n    }\r\n    Translate(e: MouseEventData): void {\r\n        if (!this.isMoveable) { return; }\r\n        let xo = e.x - e.preX;\r\n        let yo = e.y - e.preY;\r\n        this.vec.x += xo;\r\n        this.vec.y += yo;\r\n        for (let i = 0; i < this.boundarVecs.length; ++i) { this.boundarVecs[i].x += xo; this.boundarVecs[i].y += yo; }\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Translate(e); }\r\n        this.btnResize.vec.x += xo;\r\n        this.btnResize.vec.y += yo;\r\n        this.subMenu.Translate(xo, yo);\r\n        if (this.bodyDiv) { this.bodyDiv.Translate(xo, yo); }\r\n\r\n    }\r\n    Remove() {\r\n        this.RemovePost();\r\n        for (let i = 0; i < this.subs.length; ++i) { this.subs[i].Remove(); }\r\n        if (this.bodyDiv) { this.bodyDiv.Remove(); }\r\n        this.btnResize.Remove();\r\n        this.independentPanelWrapper.indePanelRender.Remove(this);\r\n    }\r\n    RenderPost(ctx: CanvasRenderingContext2D): void {\r\n        // console.log(IndePanelRender.length);\r\n        // this.vec.x = this.mainPanel.vec.x + this.xOff;\r\n        // this.vec.y = this.mainPanel.vec.y + this.yOff;\r\n        this.ComputeBoundary();\r\n\r\n        let color;\r\n        // if (this.isOver) {\r\n        //     color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuOver, this.transparent);\r\n        // } else {\r\n        color = ColorUtility.HexToCanvasColor(IndePanelPreset.theme.mainMenuNormal, this.transparent);\r\n        // }\r\n        if (this.isMinimized) {\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n\r\n        } else {\r\n            IndePanelPreset.RoundedRectFillWithColorMainMenu(ctx, this.title, this.boundarVecs, this.filletR, 0, this.isOver, this.isSelected, color);\r\n            IndePanelPreset.TopRoundedRectFill(ctx, this.title, NVector3.GetBoundaryByVecWidthHeight(this.vec, this.width, this.HeadHeight), this.filletR, 0, this.isOver, this.isSelected, this.theme.colSelectedBG, false);\r\n        }\r\n        this.RenderHeadTitle(ctx);\r\n        if (!this.isMinimized) {\r\n            this.RenderBodyContent(ctx);\r\n        }\r\n        if (this.hasSubMenu) {\r\n            this.subMenu.RenderPost(ctx);\r\n        }\r\n        this.RenderBtnHorizontal(ctx);\r\n    }\r\n    RenderBtnHorizontal(ctx: CanvasRenderingContext2D) {\r\n        /* */\r\n    }\r\n    RenderHeadTitle(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        // if (this.isOver) {\r\n        //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // } else {\r\n        ctx.fillStyle = '#ffffff';\r\n        // }\r\n        ctx.textBaseline = 'top';\r\n        ctx.textAlign = 'center';\r\n        ctx.font = '100 12px Arial';\r\n        ctx.shadowBlur = 0;\r\n        // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        ctx.shadowOffsetY = 0;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.fillText(this.title, this.vec.x + (this.width * 0.5), this.vec.y + (this.HeadHeight * 0.5) - 7);\r\n\r\n        ctx.restore();\r\n    }\r\n    RenderBodyContent(ctx: CanvasRenderingContext2D) {\r\n        // ctx.save();\r\n        // // if (this.isOver) {\r\n        // //     ctx.fillStyle = IndePanelPreset.theme.mainMenuNormal;\r\n        // // } else {\r\n        // ctx.fillStyle = '#000000';\r\n        // // }\r\n        // ctx.textBaseline = 'top';\r\n        // ctx.textAlign = 'center';\r\n        // ctx.font = '100 9px Sans-serif';\r\n        // ctx.fillText(this.content, this.vec.x + (this.width * 0.5), this.vec.y + (this.height * 0.5) - 5);\r\n\r\n        // ctx.shadowBlur = 0;\r\n        // // ctx.shadowColor = 'rgba(0,0,0,0.3)';\r\n        // ctx.shadowOffsetY = 0;\r\n        // ctx.shadowOffsetX = 0;\r\n\r\n        // ctx.restore();\r\n\r\n    }\r\n    RemovePost() {\r\n        this.isActive = false;\r\n    }\r\n    InitCanvas(hostDiv: HTMLElement) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.zIndex = '0';\r\n        hostDiv.appendChild(this.canvas);\r\n\r\n        this.canvas.id = 'NCanvasRenderer';\r\n        this.canvas.className = 'njslab-web-core-canvas-renderer';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.canvas.width = hostDiv.clientWidth; // hostDivForSize.clientWidth;\r\n        this.canvas.height = hostDiv.clientHeight; // hostDivForSize.clientHeight;\r\n\r\n        this.btnResize.ResizePropagation = (width: number, height: number) => {\r\n            this.canvas.width = width; // hostDivForSize.clientWidth;\r\n            this.canvas.height = height; // hostDivForSize.clientHeight;\r\n        };\r\n        this.LoopIndependentCanvas(this.ctx);\r\n    }\r\n    LoopIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        requestAnimationFrame(() => { this.LoopIndependentCanvas(ctx); });\r\n        this.RenderIndependentCanvas(ctx);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.canvas.width = width; // hostDivForSize.clientWidth;\r\n        this.canvas.height = height; // hostDivForSize.clientHeight;\r\n    }\r\n}"],"names":["ActiveCommandController","constructor","scene","this","MouseEventController","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","x","y","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","GeomeetryCommon","DefinitionIndeCanvasCore","SceneCreativeCoding","indeCanvas","mOffX","mOffY","definitions","push","InitIndeCanvas","implementation","app","needUI","IndependentPanelCanvas","viewController","NUIWrapper","NUI","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","Dummy","width","canvas","height","init","IsMouseInsidePanel","vec","HeadHeight","v","BallBounce","super","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","fillStyle","beginPath","rect","closePath","fill","arc","BallBounceClass","Balls","Ball","b","Render","static","RGBToHex","Math","round","random","r","g","map","hex","toString","length","join","color","GetRandomHex","CircleGrid","mouse","pts","xDis","yDis","j","i","p","col","dis","Distance","strokeStyle","stroke","x0","y0","x1","y1","sqrt","CircleGridAttractors1","attrs","strength","falloff","distance","Attractor","pt","attractor","Sub","dist","Length","exp","v0","v1","Unitize","len","CircleGridAttractors2","DefinitionLine","lines","Line","l","p1","p0","moveTo","lineTo","DefinitionLine2","shift","BPath","xMin","yMin","xMax","yMax","num","vs","MathUtility","NVector3","BoidContoller1","targets","boids","AddAgent","boid","Boid","InitTarget","Update","Col","b0","isRenderable","b1","GetPoint","forEach","maxForce","maxVelocity","maxSpeed","mass","target","targetID","desiredVelocity","steering","velocity","z","UpdateTarget","UpdateVecSlowDown2","UpdateVec0","UpdateVec1","UpdateVecSlowDown1","slowingRadius","RenderDesiredVelocity","RenderCurrentVelocity","RenderCircle","lineWidth","list","BoidSystem01","path","GetRandomPath","Circle","xx","cos","sin","yy","BoidContollerWander0","w","h","wanderAngle","CIRCLE_DISTANCE","CIRCLE_RADIUS","ANGLE_CHANGE","t","MAX_QUEUE_AHEAD","MAX_QUEUE_RADIUS","trajectory","timerTrajectory","Queue","Wander","console","log","circleCenter","Normalize","Scale","displacement","SetAngle","Add","value","GetNeighborAhead","ret","undefined","qa","Clone","ahead","neighbor","d","BoidSystemWander0","BoidContoller","dragTime","BoidContollerWander1","SEPARATION_RADIUS","MAX_SEPARATION","BrakingForceOverlap","brake","HardStop","BrakingForce","Separation","force","neighborCount","BoidSystemWander1","BoidSystem04","DNode","gravity","m","dt","damping","Mult","UpdateEdge","PI","MBox","isStatic","body","angle","position","Bodies","restitution","friction","World","world","DrawRectByCen","xOff","yOff","save","translate","rotate","restore","DynamicSystem01","Dynamic01","dNode","engine","MBoxes","ground","InitMatter","Matter","setInterval","DynamicSystem","Dynamic02","Dynamic03","MGeometryBase","MCircle","radius","DrawCircle","Scene","MatterSandbox","Core","sceneMatter","core","OOP","Point","age","weight","Compute","diffuse","diff","N","iter","ids","a","lin_solve","c","cRecip","IX","set_bnd","project","velocX","velocY","div","advect","d0","i0","i1","j0","j1","s0","s1","t0","t1","tmp1","tmp2","ifloat","jfloat","dtx","dty","Nfloat","floor","i0i","i1i","j0i","j1i","Fluid","diffusion","viscosity","SCALE","visScale","visc","s","density","Vx","Vy","Vx0","Vy0","cellFixed","Float32Array","step","addDensity","amount","index","addVelocity","amountX","amountY","renderD","getFalseColor","renderV","vx","vy","abs","FluidSimulation","divText","fluid","vecs","emmiters","img","initUI","Image","src","setAttribute","onload","document","createElement","getContext","drawImage","data","getImageData","divHost","style","left","bodyDiv","appendChild","divBtn","textContent","onclick","div5","innerHTML","sliderD","type","min","max","oninput","val","sliderA","div2","sliderB","div3","sliderC","rotation","divRefer","fontSize","k","cx","cy","theta","Grad","dot2","dot3","grad3","perm","Array","gradP","G3","seed","simplex3","xin","yin","zin","n0","n1","n2","n3","k1","i2","j2","k2","z0","z1","x2","y2","z2","x3","y3","z3","gi0","gi1","gi2","gi3","t2","t3","PerlinHeatmap","interval","res","scale","PointID","ColorPicker","canvasBase","ctxBase","cp","cpL1","cpL2","cpR1","cpR2","capture","offset","background","append","initEvent","addEventListener","MousePostProcess","mouseDown","mouseMove","mouseUp","offsetX","offsetY","CPoint","Cp","L1Point","L1","updatePosByRadian","R1Point","R1","image","createImageData","phi","xy2polar","hue","rad2deg","saturation","red","green","blue","hsv2rgb","alpha","putImageData","render","clearRect","mouseDrag","id","CircularProjctionFromPoint","updatePos","getDistance","colorPicker","radian","getRadian","atan2","updateposByCPOffset","h1","rgb","ColorPickerApp","classColorPicker","Mouseup","AlgorithmMazeExit","before","performance","now","PixelMap","after","Pixel","n","visited","start","end","connections","pushConnections","xPos","yPos","pixels","fires","exit","count","pixelsRow","InitConnections","ComputePath","startP","endP","queueForward","current","newcost","ComputeCost","newtemp","smallest","theCell","RenderPath","AlgorithmCabbage","size","xNum","yNum","InitFill","queue","pixel","AlgorithmBaconsLaw","exe","Exe","Person","friends","friend","Reset","findPerson","person","people","BuildRelationship","PrintRelationship","frendsindex","numPeople","sum","AlgorithmFireExit","char","fire","cost","temp","SetAgent","Agent","agent","fail","done","charAt","ComputeExit","ComputeFire","ComputeAgent","addition","hasCon","ResetCost","AlgorithmNumOfArea","PropagationBFS","AlgorithmComputerFinder","graph","Graph","Node","children","nodes","id0","id1","ComputeConnections","BFS","AlgorithmKoze","wolf","sheep","pixelsComputedNeeded","Value","ComputeBFS","ComputeDFS","ComputeDFSValue","sTotal","wTotal","DFSValue","DFS","AlgorithmUnitMoving","hover","RenderHover","GhostPixel","isPath","pixelsHover","array","connectionMap","FindGhost","gPixel","yList","gp","AlgorithmTile","yC","selected","ComputeData","xxx","yyy","yi","xi","otherCell","AlgorithmOKVIRI","OKVIRI","word","xDim","words","AlgorithmDFSBFS","RenderMouse","visitedNum","Print","edges","cons","Edge","font","fillText","AlgorithmBuilding","myWork","MyWork","toJson","site","apts","sun","Sun","InitOpti","Site","APT","Unit","host","scoreBySun","getFloor","computeSVec","update","unit","Init","vecsSite","SiteInitByVecs","ComputeVAl","apt","u","GridOptiA","gridSystem","mode","connectivity","titleA","titleB","titleC","titleD","titleE","InitUI","marginTop","paddingLeft","defaultValue","checked","sliderE","hostDiv","GetGrid","RenderLine","RenderPoints","CanvasDrawing","xr","yr","CustomDynamicBin","pixelMap","captureVec","dataHtml","marginLeft","cssFloat","input","rx","innerText","marginRight","input2","ry","input3","CustomDynamicBinSystem","InitData","zMin","zMax","IsHover","MoveInspection","selPixel","toFixed","DragControlPoint","UpdateData","RenderPixel","RenderCorner","RenderSelPixel","ddx","ddy","ptList","listPixels","Move","recVec","InitGrid","ComputeRec","ComputeTriA","ComputeTriB","ComputeDia","ComputeLShape","ComputeHex","xArray","alter","ID","norV","nPix","GetID","ToString","Blank","activeCommandController","geomeetryCommon","model","graphicsCoreWrapper","canvasWrapper","InitDefinition","Dispose","LoadDefinition","IndePanelBase","divNeeded","divInput","btnClose","btnResize","subMenu","subs","_content","isActive","filletR","InitTop","BodyDiv","InitCanvas","IsMinimized","isMinimized","Hide","Width","off","Height","content","HasSubMenu","hasSubMenu","IsHidden","BtnClose","BtnMinimize","BtnHam","BtnResize","IndeSubPanel","Translate","isMoveable","xo","preX","yo","preY","boundarVecs","Remove","RemovePost","indePanelRender","RenderPost","ComputeBoundary","ColorUtility","IndePanelPreset","transparent","isOver","isSelected","theme","colSelectedBG","RenderHeadTitle","RenderBodyContent","RenderBtnHorizontal","textBaseline","textAlign","shadowBlur","shadowOffsetY","shadowOffsetX","zIndex","className","pointerEvents","clientWidth","clientHeight","ResizePropagation","LoopIndependentCanvas","requestAnimationFrame","ResizeCanvas"],"sourceRoot":""}