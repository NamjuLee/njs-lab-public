{"version":3,"file":"static/js/611.b74734a3.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent05Interaction.ts"],"sourcesContent":["import { IndependentPanelCanvas } from '../../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent05Interaction extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Regression ';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(5));\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            //     const b = document.createElement('button');\r\n            //     b.textContent = 'run';\r\n            //     b.style.position = 'absolute';\r\n            //     b.style.left = '650px';\r\n            //     b.onclick = () => {\r\n            //         console.log(this);\r\n            //     };\r\n            //     this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // console.log(xx);\r\n                // console.log(yy);\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor(dim: number = 0) {\r\n        this.dim = dim;\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n        if (this.dim === 1) { return this.predict1d(x); }\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}"],"names":["DefinitionIndeCanvasCore","constructor","scene","width","height","indeCanvas","mOffX","mOffY","this","definitions","push","InitIndeCanvas","implementation","app","needUI","IndependentPanelCanvas","viewController","NUIWrapper","NUI","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","canvas","Init","MouseMove","x","y","MouseMovePre","IsMouseInsidePanel","vec","HeadHeight","MouseDown","MouseDownPre","MouseUp","MouseUpPre","MouseDrag","MouseDragPre","MouseLeftClick","MouseLeftClickPre","MouseMiddleClick","MouseMiddleClickPre","MouseRightClick","MouseRightClickPre","MouseDoubleClick","MouseDoubleClickPre","MouseWheel","v","MouseWheelPre","TFPolynomialRegressionGradientDescent05Interaction","tfProjct","super","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","selVec","undefined","col","tfLinearRegression","InitUI","PolynomialRegression","style","zIndex","TFDataUtility","then","d","div","document","createElement","position","left","color","t","textContent","append","marginTop","marginBottom","divHost","getElementById","m","NVector3","MapX","MapY","i","length","MathUtility","GridLine","strokeStyle","xInterval","yInterval","lineWidth","x0","y0","x1","y1","beginPath","moveTo","lineTo","stroke","fillStyle","rect","closePath","fill","xx","yy","train","RenderLine","arc","Math","PI","font","textAlign","fillText","toFixed","curveX","ys","tf","predict","curveY","dataSync","dispose","dim","weights","bias","leraningRate","optimizer","weight","random","print","predict1d","mul","add","predict2d","square","predict3d","pow","predict4d","predict5d","loss","pred","label","sub","mean","xVal","yVal","xs","minimize"],"sourceRoot":""}