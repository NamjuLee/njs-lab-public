{"version":3,"file":"static/js/3098.1f00fa74.chunk.js","mappings":"iJACO,MAAMA,EAETC,cAAkC,IAAtBC,EAAU,uDAAG,OAErB,MAAMC,EAAMC,SAASC,eAAeH,GAC9BI,EAAWH,EAAII,wBACfC,EAASJ,SAASK,cAAc,UACtCD,EAAOE,MAAQJ,EAASI,MACxBF,EAAOG,OAASL,EAASK,OACzBR,EAAIS,YAAYJ,GAEhBL,EAAIU,OAAOL,GACXM,QAAQC,IAAI,CAACZ,QAKb,IAAIa,EAAS,IAAIC,EAAAA,OAAeT,GAAQ,EAAM,CAAEU,uBAAuB,EAAMC,SAAS,IAuBlFC,EArBc,WAEd,IAAIA,EAAQ,IAAIH,EAAAA,MAAcD,GAE1BK,EAAS,IAAIJ,EAAAA,WAAmB,UAAW,IAAIA,EAAAA,QAAgB,EAAG,GAAI,IAAKG,GAE/EC,EAAOC,UAAUL,EAAAA,QAAAA,QAEjBI,EAAOE,cAAcf,GAAQ,GAEjB,IAAIS,EAAAA,iBAAyB,SAAU,IAAIA,EAAAA,QAAgB,EAAG,EAAG,GAAIG,GAEpEH,EAAAA,YAAAA,aAAiC,UAAW,CAAEO,SAAU,GAAIC,SAAU,EAAGC,gBAAiBT,EAAAA,KAAAA,WAA0BG,GAE1HO,SAASC,EAAI,EAEPX,EAAAA,YAAAA,aAAiC,UAAW,CAAEP,MAAO,EAAGC,OAAQ,EAAGkB,aAAc,EAAGC,WAAW,GAASV,GAErH,OAAOA,CACX,CAEYW,GAEZf,EAAOgB,eAAc,WACjBZ,EAAMa,QACV,IAEAC,OAAOC,iBAAiB,UAAU,WAC9BnB,EAAOoB,QACX,IAEAtB,QAAQC,IAAI,CAACC,UAEjB,E","sources":["njslab/LabStarter/Starter-Babylon/index.ts"],"sourcesContent":["import * as BABYLON from 'babylonjs';\r\nexport class Solution {\r\n\r\n    constructor(id: string = 'main') {\r\n\r\n        const div = document.getElementById(id);\r\n        const bounding = div.getBoundingClientRect();\r\n        const canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        canvas.width = bounding.width;\r\n        canvas.height = bounding.height;\r\n        div.appendChild(canvas);\r\n\r\n        div.append(canvas)\r\n        console.log({div})\r\n\r\n        // Get the canvas DOM element\r\n        // var canvas = document.getElementById('renderCanvas');\r\n        // Load the 3D engine\r\n        var engine = new BABYLON.Engine(canvas, true, { preserveDrawingBuffer: true, stencil: true });\r\n        // CreateScene function that creates and return the scene\r\n        var createScene = function () {\r\n            // Create a basic BJS Scene object\r\n            var scene = new BABYLON.Scene(engine);\r\n            // Create a FreeCamera, and set its position to {x: 0, y: 5, z: -10}\r\n            var camera = new BABYLON.FreeCamera('camera1', new BABYLON.Vector3(0, 5, -10), scene);\r\n            // Target the camera to scene origin\r\n            camera.setTarget(BABYLON.Vector3.Zero());\r\n            // Attach the camera to the canvas\r\n            camera.attachControl(canvas, false);\r\n            // Create a basic light, aiming 0, 1, 0 - meaning, to the sky\r\n            var light = new BABYLON.HemisphericLight('light1', new BABYLON.Vector3(0, 1, 0), scene);\r\n            // Create a built-in \"sphere\" shape using the SphereBuilder\r\n            var sphere = BABYLON.MeshBuilder.CreateSphere('sphere1', { segments: 16, diameter: 2, sideOrientation: BABYLON.Mesh.FRONTSIDE }, scene);\r\n            // Move the sphere upward 1/2 of its height\r\n            sphere.position.y = 1;\r\n            // Create a built-in \"ground\" shape;\r\n            var ground = BABYLON.MeshBuilder.CreateGround(\"ground1\", { width: 6, height: 6, subdivisions: 2, updatable: false }, scene);\r\n            // Return the created scene\r\n            return scene;\r\n        }\r\n        // call the createScene function\r\n        var scene = createScene();\r\n        // run the render loop\r\n        engine.runRenderLoop(function () {\r\n            scene.render();\r\n        });\r\n        // the canvas/window resize event handler\r\n        window.addEventListener('resize', function () {\r\n            engine.resize();\r\n        });\r\n\r\n        console.log({engine})\r\n\r\n    }\r\n\r\n}\r\n"],"names":["Solution","constructor","id","div","document","getElementById","bounding","getBoundingClientRect","canvas","createElement","width","height","appendChild","append","console","log","engine","BABYLON","preserveDrawingBuffer","stencil","scene","camera","setTarget","attachControl","segments","diameter","sideOrientation","position","y","subdivisions","updatable","createScene","runRenderLoop","render","window","addEventListener","resize"],"sourceRoot":""}