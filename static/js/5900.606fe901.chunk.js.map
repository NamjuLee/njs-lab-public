{"version":3,"file":"static/js/5900.606fe901.chunk.js","mappings":"sRAEaA,EAAQ,WAGjB,WAAYC,IAAe,oBAFpBA,aAAO,OACPC,cAAQ,EAEXC,KAAKF,QAAUA,EAGfE,KAAKF,QAAQG,MAAMC,QAAU,OAC7BF,KAAKF,QAAQG,MAAME,WAAa,SAEhC,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIH,MAAMM,WAAa,OACvBH,EAAIH,MAAMO,YAAc,OACxBJ,EAAIH,MAAMQ,gBAAkB,OAC5BL,EAAIH,MAAMS,MAAQ,SAClBN,EAAIH,MAAMU,OAAS,QAEnBX,KAAKF,QAAQc,YAAYR,GAKzBJ,KAAKD,SAAW,IAAIc,EAAST,EAKjC,CAMC,OANA,+BACD,WAEI,IADAJ,KAAKD,SAASe,UACPd,KAAKF,QAAQiB,kBAChBf,KAAKF,QAAQkB,YAAYhB,KAAKF,QAAQiB,iBAE9C,KAAC,EAjCgB,GAoCRF,EAAQ,0CAKjB,WAAYT,GAAW,IAAD,EAYL,OAZK,gBAClB,cAAMA,IAJVa,MAAgB,GAAG,EACnBC,SAAG,IACHC,EAAY,EAGR,EAAKC,OAAOnB,MAAMoB,SAAW,WAC7B,EAAKD,OAAOnB,MAAMS,MAAQ,OAC1B,EAAKU,OAAOnB,MAAMU,OAAS,OAG3B,EAAKO,IAAM,IAAII,EAAI,IAAIC,EAAAA,EAAQ,IAAK,IAAK,IACzC,EAAKN,MAAMO,KAAK,IAAIC,EAAK,IAAK,IAAK,IAAK,MACxC,EAAKR,MAAMO,KAAK,IAAIC,EAAK,IAAK,IAAK,IAAK,MACxC,EAAKR,MAAMO,KAAK,IAAIC,EAAK,IAAK,IAAK,IAAK,MAExC,EAAKC,QAAQ,CACjB,CAqCC,OArCA,iCACD,SAAiBC,EAAWC,GACxB5B,KAAKkB,IAAIW,gBAAgBF,EAAGC,EAChC,GAAC,oBACD,SAAcE,GACV9B,KAAKmB,GAAK,IACVnB,KAAK+B,OAAOD,GAEZ9B,KAAKiB,MAAMe,SAAQ,SAACC,GAAQA,EAAEC,KAAKJ,EAAM,IACzC9B,KAAKkB,IAAIgB,KAAKJ,EAAK9B,KAAKmB,EAC5B,GAAC,oBACD,SAAcW,GAGV,IADA,IAAMZ,EAAMlB,KAAKkB,IAAIiB,aACZC,EAAI,EAAGA,EAAIpC,KAAKiB,MAAMoB,SAAUD,EAAG,CACxC,IAAME,EAAIC,EAAkBrB,EAAIsB,GAAGb,EAAGT,EAAIsB,GAAGZ,EAAGV,EAAIuB,GAAGd,EAAGT,EAAIuB,GAAGb,EAAG5B,KAAKiB,MAAMmB,GAAGI,GAAGb,EAAG3B,KAAKiB,MAAMmB,GAAGI,GAAGZ,EAAG5B,KAAKiB,MAAMmB,GAAGK,GAAGd,EAAG3B,KAAKiB,MAAMmB,GAAGK,GAAGb,GACjJ,QAAUc,IAANJ,EAAiB,CACjB,IAAMK,EAAMC,EAAQ5C,KAAKkB,IAAI2B,OAAQ7C,KAAKiB,MAAMmB,GAAGU,MACnDhB,EAAIiB,YACJjB,EAAIkB,OAAOV,EAAEX,EAAGW,EAAEV,GAClBE,EAAImB,OAAOX,EAAEX,EAAIgB,EAAIhB,EAAGW,EAAEV,EAAIe,EAAIf,GAClCE,EAAIoB,YACJpB,EAAIqB,QACR,CAEJ,CAIA,IAFA,IAAMC,EAAMC,EAAanC,EAAKlB,KAAKiB,OAE1BmB,EAAI,EAAGA,EAAIgB,EAAIf,SAAUD,EAAG,CACjC,IAAME,EAAIc,EAAIhB,GACdN,EAAIiB,YACJjB,EAAIwB,IAAIhB,EAAEX,EAAGW,EAAEV,EAAG,EAAG,EAAa,EAAV2B,KAAKC,IAC7B1B,EAAIoB,YACJpB,EAAIqB,QACR,CAEJ,KAAC,EAvDgB,CAASM,EAAAA,IA0DxBJ,EAAe,SAACV,EAAK1B,GAOvB,IANA,IAEIyC,EAFAN,EAAM,GACNO,EAAS,IAKJvB,EAAI,EAAGA,EAAInB,EAAMoB,SAAUD,EAAG,CACnC,IAAMwB,EAAO3C,EAAMmB,GACbE,EAAIC,EAAkBI,EAAIH,GAAGb,EAAGgB,EAAIH,GAAGZ,EAAGe,EAAIF,GAAGd,EAAGgB,EAAIF,GAAGb,EAAGgC,EAAKpB,GAAGb,EAAGiC,EAAKpB,GAAGZ,EAAGgC,EAAKnB,GAAGd,EAAGiC,EAAKnB,GAAGb,GAC7G,QAAUc,IAANJ,EAAiB,CACjB,IAAMuB,EAAMC,EAAkBnB,EAAIH,GAAGb,EAAGgB,EAAIH,GAAGZ,EAAG,EAAGU,EAAEX,EAAGW,EAAEV,EAAG,GAC3DiC,EAAMF,IACND,EAAOpB,EACIsB,EACXD,EAASE,EAEjB,CACJ,CAMA,YAJanB,IAATgB,GACAN,EAAI5B,KAAKkC,GAGNN,CAEX,EAEMU,EAAoB,SAACC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GACnF,OAAOb,KAAKc,MAAMN,EAAKG,IAAOH,EAAKG,IAAOF,EAAKG,IAAOH,EAAKG,IAAOF,EAAKG,IAAOH,EAAKG,GACvF,EAEM9C,EAAG,WAIL,WAAYgD,IAAa,oBAHzBA,OAAC,OACDC,OAAS,IAAIhD,EAAAA,EAAQ,EAAG,EAAG,GAAG,KAC9BsB,OAAS,IAAItB,EAAAA,EAAQ,EAAG,EAAG,GAEvBvB,KAAKsE,EAAIA,CACb,CAoCC,OApCA,4BACD,SAAKxC,EAA+BX,GAChCW,EAAI0C,UAAY,GAChB1C,EAAIiB,YACJjB,EAAIkB,OAAOhD,KAAKsE,EAAE3C,EAAG3B,KAAKsE,EAAE1C,GAC5BE,EAAImB,OAAOjD,KAAKuE,OAAO5C,EAAG3B,KAAKuE,OAAO3C,GACtCE,EAAIqB,SAEJrB,EAAI0C,UAAY,GAChB1C,EAAIiB,YACJjB,EAAIkB,OAAOhD,KAAKsE,EAAE3C,EAAG3B,KAAKsE,EAAE1C,GAC5BE,EAAImB,OAAOjD,KAAKsE,EAAE3C,EAAoB,GAAhB3B,KAAK6C,OAAOlB,EAAQ3B,KAAKsE,EAAE1C,EAAoB,GAAhB5B,KAAK6C,OAAOjB,GACjEE,EAAIqB,SAEJrB,EAAI2C,UAAY,UAChB3C,EAAIiB,YACJjB,EAAIwB,IAAItD,KAAKsE,EAAE3C,EAAG3B,KAAKsE,EAAE1C,EAAG2B,KAAKmB,IAAI,EAAIvD,GAAK,EAAG,EAAa,EAAVoC,KAAKC,IACzD1B,EAAI6C,MACR,GAAC,6BACD,SAAgBhD,EAAWC,GACvB5B,KAAKuE,OAAO5C,EAAIA,EAChB3B,KAAKuE,OAAO3C,EAAIA,EAEhB5B,KAAK6C,OAAOlB,EAAI3B,KAAKsE,EAAE3C,EAAI3B,KAAKuE,OAAO5C,EACvC3B,KAAK6C,OAAOjB,EAAI5B,KAAKsE,EAAE1C,EAAI5B,KAAKuE,OAAO3C,EAEvC5B,KAAK6C,OAAOlB,EAAI3B,KAAKuE,OAAO5C,EAAI3B,KAAKsE,EAAE3C,EACvC3B,KAAK6C,OAAOjB,EAAI5B,KAAKuE,OAAO3C,EAAI5B,KAAKsE,EAAE1C,CAG3C,GAAC,wBACD,WACI,MAAO,CACHY,GAAIxC,KAAKsE,EACT7B,GAAI,IAAIlB,EAAAA,EAAQvB,KAAKsE,EAAE3C,EAAoB,IAAhB3B,KAAK6C,OAAOlB,EAAU3B,KAAKsE,EAAE1C,EAAoB,IAAhB5B,KAAK6C,OAAOjB,GAEhF,KAAC,EA1CI,GA6CHH,EAAI,WAIN,WAAYsC,EAAIC,EAAIE,EAAIC,IAAK,oBAH7B3B,QAAE,OACFC,QAAE,OACFK,UAAI,EAEA9C,KAAKwC,GAAK,IAAIjB,EAAAA,EAAQwC,EAAIC,GAC1BhE,KAAKyC,GAAK,IAAIlB,EAAAA,EAAQ2C,EAAIC,GAC1BnE,KAAK4E,eACT,CAYC,OAZA,4BACD,SAAK9C,GACDA,EAAI0C,UAAY,EAChB1C,EAAIiB,YACJjB,EAAIkB,OAAOhD,KAAKwC,GAAGb,EAAG3B,KAAKwC,GAAGZ,GAC9BE,EAAImB,OAAOjD,KAAKyC,GAAGd,EAAG3B,KAAKyC,GAAGb,GAC9BE,EAAIqB,QACR,GAAC,2BACD,WACI,IAAM0B,EAAM,IAAItD,EAAAA,EAAQvB,KAAKyC,GAAGd,EAAI3B,KAAKwC,GAAGb,EAAG3B,KAAKyC,GAAGb,EAAI5B,KAAKwC,GAAGZ,EAAG,GACtE5B,KAAK8C,MAAOgC,EAAAA,EAAAA,IAAaD,EAAK,IAAItD,EAAAA,EAAQ,EAAG,EAAG,IAChDvB,KAAK8C,MAAOiC,EAAAA,EAAAA,IAAU/E,KAAK8C,KAC/B,KAAC,EApBK,GAwBJF,EAAU,SAAC0B,EAAYU,GAA8B,IAAlBC,EAAQ,uDAAG,EAC1CC,EAAMC,EAAWb,EAAGU,GAC1B,OAAO,IAAIzD,EAAAA,GACN,EAAI2D,EAAMF,EAAErD,EAAI2C,EAAE3C,IAAMsD,GACxB,EAAIC,EAAMF,EAAEpD,EAAI0C,EAAE1C,IAAMqD,GACxB,EAAIC,EAAMF,EAAEI,EAAId,EAAEc,IAAMH,EAEjC,EACME,EAAa,SAACE,EAAaC,GAC7B,OAAOD,EAAG1D,EAAI2D,EAAG3D,EAAI0D,EAAGzD,EAAI0D,EAAG1D,EAAIyD,EAAGD,EAAIE,EAAGF,CACjD,EAQaG,EAAmB,SAACC,EAAYC,EAAY1B,EAAYC,EAAYE,EAAYC,GACzF,GAAIJ,IAAOG,EAAI,CACX,GAAIH,GAAMyB,GAAMA,GAAMtB,EAAM,OAAO,EACnC,GAAIH,GAAMyB,GAAMA,GAAMtB,EAAM,OAAO,CACvC,KAAO,CACH,GAAIF,GAAMyB,GAAMA,GAAMtB,EAAM,OAAO,EACnC,GAAIH,GAAMyB,GAAMA,GAAMtB,EAAM,OAAO,CACvC,CACA,OAAO,CACX,EAEM5B,EAAoB,SAAC2B,EAAYC,EAAYuB,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GAC3G,IAAMC,GAAUD,EAAKF,IAAOH,EAAKxB,IAAS4B,EAAKF,IAAOD,EAAKxB,GACrD8B,GAAUH,EAAKF,IAAOzB,EAAK0B,IAASE,EAAKF,IAAO3B,EAAK0B,GACrDM,GAAUR,EAAKxB,IAAOC,EAAK0B,IAASF,EAAKxB,IAAOD,EAAK0B,GAE3D,GAAc,IAAVI,EAAJ,CAOA,IAAMG,EAAKF,EAAQD,EACbI,EAAKF,EAAQF,EAEnB,OAAIG,GAAM,GAAKA,GAAM,GAAKC,GAAM,GAAKA,GAAM,EAC/B,CACJzE,EAAGuC,EAAMiC,GAAMT,EAAKxB,GACpBtC,EAAGuC,EAAMgC,GAAMR,EAAKxB,SAH5B,CALA,CAaJ,C","sources":["njslab/Tools/Raytracer/index.ts"],"sourcesContent":["import { RendererCanvas, Vector3, normalize, crossProduct } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    walls: Wall[] = [];\r\n    sun: Sun;\r\n    t: number = 0.0;\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n\r\n        this.sun = new Sun(new Vector3(300, 100, 0));\r\n        this.walls.push(new Wall(100, 200, 400, 500))\r\n        this.walls.push(new Wall(100, 500, 500, 600))\r\n        this.walls.push(new Wall(500, 100, 400, 400))\r\n\r\n        this.start();\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        this.sun.updateDirection(x, y);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.t += 0.01;\r\n        this.update(ctx);\r\n\r\n        this.walls.forEach((w) => { w.draw(ctx); });\r\n        this.sun.draw(ctx, this.t);\r\n    }\r\n    public update(ctx: CanvasRenderingContext2D) {\r\n\r\n        const sun = this.sun.getSunLine();\r\n        for (let i = 0; i < this.walls.length; ++i) {\r\n            const p = checkIntersection(sun.p0.x, sun.p0.y, sun.p1.x, sun.p1.y, this.walls[i].p0.x, this.walls[i].p0.y, this.walls[i].p1.x, this.walls[i].p1.y,)\r\n            if (p !== undefined) {\r\n                const ray = reflect(this.sun.rayVec, this.walls[i].nVec)\r\n                ctx.beginPath();\r\n                ctx.moveTo(p.x, p.y);\r\n                ctx.lineTo(p.x + ray.x, p.y + ray.y);\r\n                ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n\r\n        }\r\n\r\n        const pts = computeInter(sun, this.walls)\r\n\r\n        for (let i = 0; i < pts.length; ++i) {\r\n            const p = pts[i];\r\n            ctx.beginPath();\r\n            ctx.arc(p.x, p.y, 5, 0, Math.PI * 2.);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst computeInter = (ray, walls) => {\r\n    let pts = []\r\n    let theDis = 10000\r\n    let theP;\r\n    let wallNext;\r\n    let theRay;\r\n\r\n    for (let i = 0; i < walls.length; ++i) {\r\n        const wall = walls[i];\r\n        const p = checkIntersection(ray.p0.x, ray.p0.y, ray.p1.x, ray.p1.y, wall.p0.x, wall.p0.y, wall.p1.x, wall.p1.y);\r\n        if (p !== undefined) {\r\n            const dis = distanceEuclidean(ray.p0.x, ray.p0.y, 0, p.x, p.y, 0);\r\n            if (dis < theDis) {\r\n                theP = p;\r\n                wallNext = wall;\r\n                theDis = dis;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (theP !== undefined) {\r\n        pts.push(theP)\r\n    }\r\n\r\n    return pts\r\n\r\n}\r\n\r\nconst distanceEuclidean = (x0: number, y0: number, z0: number, x1: number, y1: number, z1: number) => {\r\n    return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1) + (z0 - z1) * (z0 - z1));\r\n}\r\n\r\nclass Sun {\r\n    v: Vector3;\r\n    target = new Vector3(0, 0, 0);\r\n    rayVec = new Vector3(0, 0, 0);;\r\n    constructor(v: Vector3) {\r\n        this.v = v;\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.lineWidth = 0.1;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.v.x, this.v.y);\r\n        ctx.lineTo(this.target.x, this.target.y);\r\n        ctx.stroke();\r\n\r\n        ctx.lineWidth = 0.5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.v.x, this.v.y);\r\n        ctx.lineTo(this.v.x + this.rayVec.x * 50, this.v.y + this.rayVec.y * 50);\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = '#FDB813'\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, Math.sin(9 * t) + 9, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    }\r\n    updateDirection(x: number, y: number) {\r\n        this.target.x = x;\r\n        this.target.y = y;\r\n\r\n        this.rayVec.x = this.v.x + this.target.x;\r\n        this.rayVec.y = this.v.y + this.target.y;\r\n\r\n        this.rayVec.x = this.target.x - this.v.x;\r\n        this.rayVec.y = this.target.y - this.v.y;\r\n\r\n        // this.rayVec = normalize(this.rayVec);\r\n    }\r\n    getSunLine() {\r\n        return {\r\n            p0: this.v,\r\n            p1: new Vector3(this.v.x + this.rayVec.x * 1000, this.v.y + this.rayVec.y * 1000)\r\n        }\r\n    }\r\n}\r\n\r\nclass Wall {\r\n    p0: Vector3;\r\n    p1: Vector3;\r\n    nVec: Vector3;\r\n    constructor(x0, y0, x1, y1) {\r\n        this.p0 = new Vector3(x0, y0);\r\n        this.p1 = new Vector3(x1, y1);\r\n        this.computeNormal();\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.stroke();\r\n    }\r\n    computeNormal() {\r\n        const dir = new Vector3(this.p1.x - this.p0.x, this.p1.y - this.p0.y, 0)\r\n        this.nVec = crossProduct(dir, new Vector3(0, 0, 1));\r\n        this.nVec = normalize(this.nVec);\r\n    }\r\n}\r\n\r\n\r\nconst reflect = (v: Vector3, n: Vector3, strength = 1) => {\r\n    const dot = dotProduct(v, n);\r\n    return new Vector3(\r\n        (2 * dot * n.x - v.x) * -strength,\r\n        (2 * dot * n.y - v.y) * -strength,\r\n        (2 * dot * n.z - v.z) * -strength\r\n    );\r\n}\r\nconst dotProduct = (v1: Vector3, v2: Vector3) => {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n}\r\nconst intersect = (ray: Vector3, v0: Vector3, v1: Vector3) => {\r\n    let x = ray.x;\r\n    let y = ray.y;\r\n    let xi = v0.x, yi = v0.y;\r\n    let xj = v1.x, yj = v1.y;\r\n    return ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n}\r\nexport const pointOnSegment2D = (px: number, py: number, x0: number, y0: number, x1: number, y1: number) => {\r\n    if (x0 !== x1) {\r\n        if (x0 <= px && px <= x1) { return true; }\r\n        if (x0 >= px && px >= x1) { return true; }\r\n    } else {\r\n        if (y0 <= py && py <= y1) { return true; }\r\n        if (y0 >= py && py >= y1) { return true; }\r\n    }\r\n    return false;\r\n}\r\n\r\nconst checkIntersection = (x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number) => {\r\n    const denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\r\n    const numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\r\n    const numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\r\n\r\n    if (denom === 0) {\r\n        if (numeA === 0 && numeB === 0) {\r\n            return undefined // COLINEAR;\r\n        }\r\n        return undefined // PARALLEL;\r\n    }\r\n\r\n    const uA = numeA / denom;\r\n    const uB = numeB / denom;\r\n\r\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\r\n        return ({\r\n            x: x1 + (uA * (x2 - x1)),\r\n            y: y1 + (uA * (y2 - y1))\r\n        });\r\n    }\r\n\r\n    return undefined;\r\n}"],"names":["Solution","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","walls","sun","t","canvas","position","Sun","Vector3","push","Wall","start","x","y","updateDirection","ctx","update","forEach","w","draw","getSunLine","i","length","p","checkIntersection","p0","p1","undefined","ray","reflect","rayVec","nVec","beginPath","moveTo","lineTo","closePath","stroke","pts","computeInter","arc","Math","PI","RendererCanvas","theP","theDis","wall","dis","distanceEuclidean","x0","y0","z0","x1","y1","z1","sqrt","v","target","lineWidth","fillStyle","sin","fill","computeNormal","dir","crossProduct","normalize","n","strength","dot","dotProduct","z","v1","v2","pointOnSegment2D","px","py","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB"],"sourceRoot":""}