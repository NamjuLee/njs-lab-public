{"version":3,"file":"static/js/7832.18b3712f.chunk.js","mappings":"2IACO,MAAMA,EAITC,cACI,ECLD,MAAMC,EAETD,YAAYE,GAA0B,KADtCA,SAAG,EAECC,KAAKD,IAAMA,CACf,E,qCCMG,IAAKE,ECTAC,GDaX,SAJWD,GAAAA,EAAW,0BAAXA,EAAW,4BAAXA,EAAW,gBAItB,CAJWA,IAAAA,EAAW,KAMhB,MAAME,EAoCTN,YAAYO,EAAqBC,EAAeC,GAA8D,IAA9CC,EAAiB,uDAAGN,EAAYO,YAAW,KAlC3GJ,YAAM,OACNK,aAAO,OACPC,aAAO,OACPC,cAAQ,OAERC,MAAgB,EAAE,KAClBC,MAAgB,EAAE,KAClBC,MAAgB,EAAE,KAClBC,MAAgB,EAAE,KAElBC,cAAQ,OACRC,cAAQ,OACRC,cAAQ,OACRC,cAAQ,OACRC,cAAQ,OAERC,WAAqB,IAAI,KACzBC,QAAkB,GAAG,KACrBC,SAAmB,IAAI,KAEvBC,WAAqB,EAAE,KAEvBC,YAAsB,KAAM,KAE5BlB,UAAI,OACJmB,YAAsB,EAAE,KAExBrB,WAAK,OACLC,YAAM,OACNqB,YAAsB,EAAK,KAG3BC,kBAAY,EAGR5B,KAAKI,OAASA,EACdJ,KAAKO,KAAOA,EACZP,KAAKK,MAAQA,EAAOL,KAAKM,OAASA,EAG9BN,KAAKO,OAASN,EAAYO,YAC1BR,KAAK6B,eAAe,EAAG,GAAI,IACpB7B,KAAKO,OAASN,EAAY6B,aACjC9B,KAAK+B,kBACE/B,KAAKO,OAASN,EAAY+B,QACjChC,KAAKiC,YAETjC,KAAK4B,aAAe,IAAIM,EAAAA,GAC5B,CACAD,YAGI,CAGAE,WAAOA,GACHnC,KAAKO,OAASN,EAAYO,YAC1BR,KAAKS,QAAQ0B,OAASA,GACfnC,KAAKO,KAASN,EAAY6B,aAGzC,CACIK,aACA,OAAOnC,KAAKK,MAAQL,KAAKM,MAC7B,CACI8B,aACA,OAAIpC,KAAKO,OAASN,EAAYO,YACnBR,KAAKS,QACLT,KAAKO,OAASN,EAAY6B,aAC1B9B,KAAKU,QAELV,KAAKS,OAEpB,CACAoB,iBAA6D,IAA9CQ,EAAS,uDAAG,EAAGC,EAAS,uDAAG,EAAGC,EAAS,uDAAG,EACrDvC,KAAKS,QAAU,IAAIyB,EAAAA,IAAwB,GAAIlC,KAAKK,MAAQL,KAAKM,OAAQ,IAAM,KAC/EN,KAAKS,QAAQ+B,SAASC,IAAIJ,EAAGC,EAAGC,GAChCvC,KAAK0C,qBACT,CACAX,kBACI/B,KAAKU,QAAU,IAAIwB,EAAAA,IAAyBlC,KAAKyB,YAAczB,KAAKmC,QAAW,EAAGnC,KAAKyB,YAAczB,KAAKmC,OAAS,EAAGnC,KAAKyB,YAAc,EAAGzB,KAAKyB,aAAgB,EAAG,IAAM,KAC1KzB,KAAKU,QAAQ8B,SAASC,IAAI,EAAG,EAAG,GAChCzC,KAAK0C,qBACT,CACAA,sBAEQ1C,KAAKO,OAASN,EAAYO,YAC1BR,KAAKW,SAAW,IAAIgC,EAAAA,cAAc3C,KAAKS,QAAST,KAAKI,OAAOwC,SAASC,YAC9D7C,KAAKO,OAASN,EAAY6B,eACjC9B,KAAKW,SAAW,IAAIgC,EAAAA,cAAc3C,KAAKU,QAASV,KAAKI,OAAOwC,SAASC,aAGzE7C,KAAKW,SAASmC,YAAc,IAC5B9C,KAAKW,SAASoC,YAAc,IAE5B/C,KAAKW,SAASqC,WAAY,EAC1BhD,KAAKW,SAASsC,YAAa,EAE3BjD,KAAKgB,SAAWhB,KAAKqB,WAAarB,KAAKK,MAAQ6C,KAAKC,GAAK,GACzDnD,KAAKiB,SAAWjB,KAAKqB,WAAarB,KAAKM,OAAS4C,KAAKC,GAAK,IAC1DnD,KAAKkB,SAAYlB,KAAKsB,QAAUtB,KAAKK,MAASL,KAAKwB,WACnDxB,KAAKmB,SAAYnB,KAAKsB,QAAUtB,KAAKM,OAAUN,KAAKwB,WACpDxB,KAAKoB,SAAWpB,KAAKuB,SAAWvB,KAAKM,MAIzC,CACA8C,cAAcC,GAAoC,IAAxBC,EAAc,uDAAG,IACvCtD,KAAKW,SAAS4C,cAAgBF,EAC9BrD,KAAKW,SAAS6C,cAAgBF,CAClC,CACAG,UAAUpB,EAAWC,GACjBtC,KAAKY,MAAQZ,KAAKc,MAAQuB,EAC1BrC,KAAKa,MAAQb,KAAKe,MAAQuB,CAC9B,CACAoB,UAAUrB,EAAWC,GAAoC,IAAzBqB,EAAc,wDAC1C,IAAK3D,KAAK2B,WAAc,OAGxB,MAAMiC,EAAKvB,EAAIrC,KAAKc,MACd+C,EAAKvB,EAAItC,KAAKe,MAGf4C,GAMD3D,KAAKW,SAASmD,QAAQF,EAAK5D,KAAKkB,SAAUlB,KAAKS,QAAQsD,QACvD/D,KAAKW,SAASqD,MAAMH,EAAK7D,KAAKmB,SAAUnB,KAAKS,QAAQsD,UANrD/D,KAAKW,SAASsD,WAAWL,EAAK5D,KAAKiB,UACnCjB,KAAKW,SAASuD,SAASL,EAAK7D,KAAKgB,WAWrChB,KAAKc,MAAQuB,EACbrC,KAAKe,MAAQuB,CAEjB,CACA6B,WAAWd,GAEPrD,KAAKW,SAASsC,YAAa,EAC3BI,GAAK,GAEL,MAAMe,EAAsC,IAAjCpE,KAAKS,QAAQ+B,SAAS6B,SAEjCrE,KAAKwB,WAAa4C,EAEdf,EAAI,GACJrD,KAAKS,QAAQ+B,SAASH,GAAK,GAC3BrC,KAAKS,QAAQ+B,SAASF,GAAK,GAC3BtC,KAAKS,QAAQ+B,SAASD,GAAK,KAE3BvC,KAAKS,QAAQ+B,SAASH,GAAK,IAC3BrC,KAAKS,QAAQ+B,SAASF,GAAK,IAC3BtC,KAAKS,QAAQ+B,SAASD,GAAK,IAGnC,CACA+B,cACItE,KAAK0B,cACoB,IAArB1B,KAAK0B,cAAqB1B,KAAK0B,YAAc,GACxB,IAArB1B,KAAK0B,YACL1B,KAAK6B,iBACuB,IAArB7B,KAAK0B,aACZ1B,KAAK+B,iBAEb,CACAwC,qBAAqBC,GACbA,EAAEC,aAAeA,EAAAA,GAAAA,MAAmBzE,KAAKyD,UAAUe,EAAEnC,EAAGmC,EAAElC,GAC1DkC,EAAEC,aAAeA,EAAAA,GAAAA,MAAmBzE,KAAK0D,UAAUc,EAAEnC,EAAGmC,EAAElC,EAAGkC,EAAEE,cAC/DF,EAAEC,aAAeA,EAAAA,GAAAA,OAAoBzE,KAAKmE,WAAWK,EAAEG,MAE/D,EE9LG,MAAMC,EAUT/E,YAAYgF,EAA8BC,GAAuB,KATjEA,aAAO,OACP1C,YAAM,OACN2C,WAAK,OACLnC,cAAQ,OAERiC,mBAAa,OACbG,WAAK,OACLC,GAAa,EAAS,KACtBC,UAAoB,EAEhBlF,KAAK6E,cAAgBA,EACrB7E,KAAK8E,QAAUA,EACf9E,KAAKmF,MACT,CACAA,OACI,MAAM9E,EAAQL,KAAK8E,QAAQM,YACrB9E,EAASN,KAAK8E,QAAQO,aAE5BrF,KAAK4C,SAAW,IAAIV,EAAAA,IAAoB,CAAEoD,WAAW,EAAMC,OAAO,IAClEvF,KAAK4C,SAAS4C,cAAcnF,EAAQC,GAEpCN,KAAKoC,OAAS,IAAIjC,EAAsBH,KAAMK,EAAOC,GACrDN,KAAK+E,MAAQ,IAAI7C,EAAAA,IAGjBlC,KAAK4C,SAASC,WAAW4C,GAAK,iBAC9BzF,KAAK4C,SAASC,WAAW6C,MAAMlD,SAAW,WAC1CxC,KAAK4C,SAASC,WAAW6C,MAAMC,cAAgB,OAE/C3F,KAAK4C,SAASgD,QAAQvF,EAAOC,GAC7BN,KAAK8E,QAAQe,YAAY7F,KAAK4C,SAASC,YACvC7C,KAAK8F,WAAW9F,KACpB,CACA8F,WAAW1F,GACFJ,KAAKkF,WACVa,uBAAsB,KAAQ/F,KAAK8F,WAAW9F,KAAK,IACnDA,KAAKgG,gBAELhG,KAAKoC,OAAOzB,SAASsF,SACrBjG,KAAK4C,SAASsD,OAAOlG,KAAK+E,MAAO/E,KAAKoC,OAAOA,QACjD,CACA4D,gBACIG,QAAQC,IAAI,wBAChB,CACAC,aAAahG,EAAeC,GACxBN,KAAKoC,OAAOD,OAAS9B,EAAQC,EAC7BN,KAAKoC,OAAOA,OAAOkE,yBACnBtG,KAAK4C,SAASgD,QAAQvF,EAAOC,EACjC,CACAiG,aAAalG,EAAeC,GACxB,CAEJkG,SACI,KAAOxG,KAAK+E,MAAM0B,SAASpC,QACvBrE,KAAK+E,MAAM2B,OAAO1G,KAAK+E,MAAM0B,SAAS,GAG9C,EC1DG,MAAME,EAIT9G,YAAY+G,GAA2C,KAHvDA,yBAAmB,OACnBC,iBAAW,EAGP7G,KAAK4G,oBAAsBA,EAE3B5G,KAAK6G,YAAc,IAAIjC,EAAY5E,KAAMA,KAAK4G,oBAAoB7G,IAAI+G,QAC1E,ECRG,MAAMC,EAGTlH,YAAYE,GAA0B,KAFtCA,SAAG,OACH8E,mBAAa,EAET7E,KAAKD,IAAMA,EACXC,KAAK6E,cAAgB,IAAI8B,EAAc3G,KAC3C,CACAgH,OAAO3G,EAAeC,GAClBN,KAAK6E,cAAcgC,YAAYR,aAAahG,EAAOC,EACvD,CACA2G,UACIjH,KAAK6E,cAAcgC,YAAY3B,UAAW,CAC9C,ECZG,MAAMgC,EAETrH,YAAYkF,GAAsB,KADlCA,WAAK,EAED/E,KAAK+E,MAAQA,CACjB,CACAR,qBAAqBC,GACjBxE,KAAK+E,MAAMhF,IAAI6G,oBAAoB/B,cAAcgC,YAAYzE,OAAOmC,qBAAqBC,GACrFA,EAAEC,aAAeA,EAAAA,GAAAA,KAEVD,EAAEC,aAAeA,EAAAA,GAAAA,OAEjBD,EAAEC,aAAeA,EAAAA,GAAAA,WAEjBD,EAAEC,aAAeA,EAAAA,GAAAA,OAEjBD,EAAEC,aAAeA,EAAAA,GAAAA,KAEjBD,EAAEC,aAAeA,EAAAA,GAAAA,KAEjBD,EAAEC,aAAeA,EAAAA,GAAAA,KAEjBD,EAAEC,aAAeA,EAAAA,GAAAA,IAAiBzE,KAAKmH,WAAW3C,GADzDxE,KAAKoH,aAAa5C,GAFlBxE,KAAKqH,aAAa7C,GAFlBxE,KAAKsH,aAAa9C,GAFlBxE,KAAKuH,oBAAoB/C,GAFzBxE,KAAKwH,mBAAmBhD,GAFxBxE,KAAKyH,oBAAoBjD,GAFzBxE,KAAK0H,kBAAkBlD,EAc/B,CAGAf,UAAUe,GAAyB,CACnC4C,aAAa5C,GACTxE,KAAK+E,MAAMtB,UAAUe,EAAEnC,EAAGmC,EAAElC,GAC5BtC,KAAKyD,UAAUe,EACnB,CACAmD,eAAenD,GAAyB,CACxCkD,kBAAkBlD,GAEdxE,KAAK2H,eAAenD,EACxB,CACAoD,iBAAiBpD,GAAyB,CAC1CiD,oBAAoBjD,GAEhBxE,KAAK4H,iBAAiBpD,EAC1B,CACAqD,gBAAgBrD,GAA0B,CAC1CgD,mBAAmBhD,GAEfxE,KAAK6H,gBAAgBrD,EACzB,CACAsD,QAAQtD,GAA0B,CAClC2C,WAAW3C,GACPxE,KAAK+E,MAAM+C,QAAQtD,EAAEnC,EAAGmC,EAAElC,GAC1BtC,KAAK8H,QAAQtD,EAEjB,CACAuD,iBAAiBvD,GAAyB,CAC1C+C,oBAAoB/C,GAEhBxE,KAAK+H,iBAAiBvD,EAC1B,CACAd,UAAUc,GAAyB,CACnC8C,aAAa9C,GACTxE,KAAK+E,MAAMrB,UAAUc,EAAEnC,EAAGmC,EAAElC,GAC5BtC,KAAK0D,UAAUc,EACnB,CACAwD,UAAUxD,GAAyB,CACnC6C,aAAa7C,GACTxE,KAAK+E,MAAMiD,UAAUxD,EAAEnC,EAAGmC,EAAElC,GAC5BtC,KAAKgI,UAAUxD,EACnB,EC1DG,MAAMyD,EAUTpI,YAAYkF,GAAsB,KATlCA,WAAK,OAGLmD,SAA6B,GAAG,KAEhCC,UAA6B,IAAIjG,EAAAA,IAAkB,KACnDkG,EAAmB,IAAIlG,EAAAA,IAAc,EAAG,GAAG,KAC3CmG,WAAK,EAGDrI,KAAK+E,MAAQA,EACb/E,KAAKmI,UAAUG,OAAOC,OAAS,CAAEC,UAAW,GAChD,CACAC,QAAQpG,EAAWC,EAAW4F,GAC1BlI,KAAKoI,EAAE/F,EAAKA,EAAIrC,KAAK+E,MAAMhF,IAAI6G,oBAAoB/B,cAAcgC,YAAYjE,SAASC,WAAWuC,YAAe,EAAI,EACpHpF,KAAKoI,EAAE9F,GAAOA,EAAItC,KAAK+E,MAAMhF,IAAI6G,oBAAoB/B,cAAcgC,YAAYjE,SAASC,WAAWwC,aAAgB,EAAI,EAEvHrF,KAAKmI,UAAUO,cAAc1I,KAAKoI,EAAGpI,KAAK+E,MAAMhF,IAAI6G,oBAAoB/B,cAAcgC,YAAYzE,OAAOA,QAOzG,MAAMuG,EAAa3I,KAAKmI,UAAUS,iBAAiBV,GACnD,GAAIS,EAAWtE,OAAS,EAAG,CACvB,MAAMwE,EAAIF,EAAW,GACrBxC,QAAQC,IAAIyC,EAAER,MAClB,CAoBJ,CACAS,aAAazG,EAAWC,EAAW4F,GAC/BlI,KAAKmI,UAAUG,OAAOC,OAAS,CAAEC,UAAW,GAC5CxI,KAAKoI,EAAE/F,EAAKA,EAAIrC,KAAK+E,MAAMhF,IAAI6G,oBAAoB/B,cAAcgC,YAAYjE,SAASC,WAAWuC,YAAe,EAAI,EACpHpF,KAAKoI,EAAE9F,GAAOA,EAAItC,KAAK+E,MAAMhF,IAAI6G,oBAAoB/B,cAAcgC,YAAYjE,SAASC,WAAWwC,aAAgB,EAAI,EAEvHrF,KAAKmI,UAAUO,cAAc1I,KAAKoI,EAAGpI,KAAK+E,MAAMhF,IAAI6G,oBAAoB/B,cAAcgC,YAAYzE,OAAOA,QAOzG,MAAMuG,EAAa3I,KAAKmI,UAAUS,iBAAiBV,GACnD,GAAIS,EAAWtE,OAAS,EAAG,CACvB,MAAMwE,EAAIF,EAAW,GACrB,MAAO,CAACE,EAAER,MAAMhG,EAAGwG,EAAER,MAAM/F,EAAGuG,EAAER,MAAM9F,EAC1C,CAoBA,OAAO,IACX,EC9FG,MAAMwG,EAITlJ,YAAYmJ,GAA6B,KAHzCA,kBAAY,OACZC,eAAS,OACTC,cAAQ,EAEJlJ,KAAKgJ,aAAeA,EACpBhJ,KAAKmF,MACT,CACAA,OAKInF,KAAKiJ,UAAY,IAAI/G,EAAAA,IAAsB,SAAU,SAAU,IAC/DlC,KAAKiJ,UAAUE,MAAMC,OAAO,GAAK,EAAG,IACpCpJ,KAAKiJ,UAAUI,YAAYD,OAAO,KAAO,EAAG,KAC5CpJ,KAAKiJ,UAAUzG,SAASC,IAAI,EAAG,GAAI,GACnCzC,KAAKgJ,aAAajE,MAAMuE,IAAItJ,KAAKiJ,WAKjCjJ,KAAKkJ,SAAW,IAAIhH,EAAAA,IAAuB,SAAU,GACrDlC,KAAKkJ,SAASC,MAAMC,OAAO,GAAK,EAAG,KACnCpJ,KAAKkJ,SAAS1G,SAASC,KAAM,EAAG,KAAM,GACtCzC,KAAKkJ,SAAS1G,SAAS+G,eAAe,IAEtCvJ,KAAKkJ,SAASM,YAAa,EAC3BxJ,KAAKkJ,SAASO,OAAOC,QAAQrJ,MAAQ,KACrCL,KAAKkJ,SAASO,OAAOC,QAAQpJ,OAAS,KAGtCN,KAAKkJ,SAASO,OAAOrH,OAAOuH,MADpB,GAER3J,KAAKkJ,SAASO,OAAOrH,OAAOwH,MAFpB,GAGR5J,KAAKkJ,SAASO,OAAOrH,OAAOyH,IAHpB,GAIR7J,KAAKkJ,SAASO,OAAOrH,OAAO0H,QAJpB,GAMR9J,KAAKkJ,SAASO,OAAOM,MAAS,KAE9B/J,KAAKkJ,SAASO,OAAOrH,OAAO4H,KAAO,KACnChK,KAAKkJ,SAASO,OAAOrH,OAAO6H,IAAM,IAElCjK,KAAKgJ,aAAajE,MAAMuE,IAAItJ,KAAKkJ,SAGrC,CACAjC,UACIjH,KAAKkJ,SAASgB,SAAU,EACxBlK,KAAKiJ,UAAUiB,SAAU,EAEzBlK,KAAKgJ,aAAajE,MAAM2B,OAAO1G,KAAKkJ,UACpClJ,KAAKgJ,aAAajE,MAAM2B,OAAO1G,KAAKiJ,UACxC,GN5CH,SATW/I,GAAAA,EAAAA,EAAI,uBAAJA,EAAAA,EAAI,+BAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,eAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,uCAAJA,EAAAA,EAAI,qBASf,CATWA,IAAAA,EAAI,KAWT,MAAMiK,EASFtK,YAAYuK,EAAeC,EAAeC,GAAgB,KAR1DC,EAAcC,EAAAA,GAAAA,SAAkB,KAChCC,EAAcD,EAAAA,GAAAA,SAAkB,KAChCE,EAAcF,EAAAA,GAAAA,SAAkB,KAChCpC,EAAY,EAAI,KAEhBuC,OAAiB,EAAM,KACvBC,WAAqB,EAGxB5K,KAAKuK,EAAI,IAAIC,EAAAA,GAASJ,EAAI/H,EAAG+H,EAAI9H,EAAG8H,EAAI7H,GACxCvC,KAAK0K,EAAI,IAAIF,EAAAA,GAASH,EAAIhI,EAAGgI,EAAI/H,EAAG+H,EAAI9H,GACxCvC,KAAKoI,EAAIkC,CACb,CACOO,KAAKC,EAAYC,GAAyC,IAAxBC,EAAe,uDAAG,EACnDhL,KAAK2K,QAUT3K,KAAK0K,EAAEO,KAAKF,GACZ/K,KAAK0K,EAAEQ,IAAIV,EAAAA,GAAAA,MAAexK,KAAKyK,EAAGK,EAAK9K,KAAKoI,IAC5CpI,KAAKuK,EAAEW,IAAIV,EAAAA,GAAAA,MAAexK,KAAK0K,EAAGI,IAE9B9K,KAAKuK,EAAEjI,EAAI0I,IACXhL,KAAKuK,EAAEjI,EAAI0I,EACPhL,KAAK0K,EAAEpI,EAAI,IAAOtC,KAAK0K,EAAEpI,GAAKtC,KAAK0K,EAAEpI,IAEjD,EAmBG,MAAM6I,EAOFtL,YAAYuL,EAAWC,GAAY,KANnCC,QAAE,OACFC,QAAE,OAEFC,aAAuB,EAAI,KAC3BC,eAAyB,GAG5BzL,KAAKsL,GAAKF,EACVpL,KAAKuL,GAAKF,EAEVrL,KAAKwL,aAAexL,KAAKsL,GAAGf,EAAEmB,SAAS1L,KAAKuL,GAAGhB,EAEnD,CACOoB,mBAYH,IAAIC,EAAKpB,EAAAA,GAAAA,IAAaxK,KAAKuL,GAAGhB,EAAGvK,KAAKsL,GAAGf,GACrCsB,EAAOD,EAAGE,SACdF,EAAGG,UAEH,MAAM1H,EAASmG,EAAAA,GAAAA,MAAeoB,GAAKC,EAAO7L,KAAKwL,cAAgBxL,KAAKyL,gBACpEzL,KAAKsL,GAAGb,EAAID,EAAAA,GAAAA,IAAaxK,KAAKsL,GAAGb,EAAGpG,GACpCrE,KAAKuL,GAAGd,EAAID,EAAAA,GAAAA,IAAaxK,KAAKuL,GAAGd,EAAGpG,EAExC,EAGG,MAAM2H,EAAO,cAAD,KAERC,MAAgB,GAAG,KACnBC,MAAgB,EAAG,CAEnBF,QACH,CAGGG,aAAaC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYlK,EAAWhC,GACnG,MAAMqD,GAAM4I,EAAKF,IAAOF,EAAK,GACvBvI,GAAM4I,EAAKF,IAAOF,EAAK,GAE7B,OAAQ9L,GACJ,KAAKL,EAAKwM,SACN,IAAK,IAAIC,EAAI,EAAGA,EAAIP,IAAMO,EACtB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAa,GAAJmC,EAAS,EAAK,GAAMnC,EAAAA,GAAAA,OAAiB,GAAU,GAAJmC,GAEzE,MACJ,KAAKzM,EAAK2M,OACN,IAAK,IAAIF,EAAI,EAAGA,EAAIP,IAAMO,EACtB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAa,GAAJmC,EAAS,EAAK,GAAMnC,EAAAA,GAAAA,OAAiB,GAEnE,IAAK,IAAImC,EAAI,EAAGA,EAAIP,EAAK,IAAKO,EAC1B3M,KAAK8M,QAAQ9M,KAAKiM,MAAMU,GAAI3M,KAAKiM,MAAMU,EAAI,IAE/C3M,KAAKiM,MAAMjM,KAAKiM,MAAM5H,OAAS,GAAGsG,OAAQ,EAC1C,MAEJ,KAAKzK,EAAK6M,KACN,IAAK,IAAIC,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EACtB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAS8B,EAAKK,EAAI/I,EAAI2I,EAAKS,EAAInJ,EAAItB,GAAIiI,EAAAA,GAAAA,OAAiB,GAGjF,MAEJ,KAAKtK,EAAK+M,OACN,IAAK,IAAID,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EACtB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAS8B,EAAKK,EAAI/I,EAAI2I,EAAKS,EAAInJ,EAAItB,GAAIiI,EAAAA,GAAAA,SAAmB,GAInF,IAAK,IAAIwC,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EAAG,CACzB,IAAIO,EAAIF,EAAIZ,EAAKO,EAEP,IAANA,GAAW3M,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAI,GAAIlN,KAAKiM,MAAMiB,IAChD,IAANF,GAAWhN,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAId,GAAKpM,KAAKiM,MAAMiB,GAC/D,CAEJ,MAEJ,KAAKhN,EAAKiN,QACN,IAAK,IAAIH,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EACtB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAS8B,EAAKK,EAAI/I,EAAI2I,EAAKS,EAAInJ,EAAItB,GAAIiI,EAAAA,GAAAA,OAAiB,GAIjF,IAAK,IAAIwC,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EAAG,CACzB,IAAIO,EAAIF,EAAIZ,EAAKO,EAEP,IAANA,GAAW3M,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAI,GAAIlN,KAAKiM,MAAMiB,IAChD,IAANF,GAAWhN,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAId,GAAKpM,KAAKiM,MAAMiB,IAEjD,IAANP,GAAiB,IAANK,GAAWhN,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAId,EAAK,GAAIpM,KAAKiM,MAAMiB,IAEhE,IAANP,GAAWK,IAAMX,EAAK,GAAKrM,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAId,EAAK,GAAIpM,KAAKiM,MAAMiB,GACnF,CAGJ,IAAK,IAAIF,EAAI,EAAGA,EAAIZ,IAAMY,EACtBhN,KAAKiM,MAAMe,GAAGrC,OAAQ,EAE1B,MAEJ,KAAKzK,EAAKkN,iBAEN,IAAK,IAAIJ,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EACtB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAS8B,EAAKK,EAAI/I,EAAI2I,EAAKS,EAAInJ,EAAItB,GAAIiI,EAAAA,GAAAA,OAAiB,GAIjF,IAAK,IAAIwC,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EAAG,CACzB,IAAIO,EAAIF,EAAIZ,EAAKO,EAEP,IAANA,GAAW3M,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAI,GAAIlN,KAAKiM,MAAMiB,IAChD,IAANF,GAAWhN,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAId,GAAKpM,KAAKiM,MAAMiB,IAEjD,IAANP,GAAiB,IAANK,GAAWhN,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAId,EAAK,GAAIpM,KAAKiM,MAAMiB,IAEhE,IAANP,GAAWK,IAAMX,EAAK,GAAKrM,KAAK8M,QAAQ9M,KAAKiM,MAAMiB,EAAId,EAAK,GAAIpM,KAAKiM,MAAMiB,GACnF,CAGJ,IAAK,IAAIF,EAAI,EAAGA,EAAIX,IAAMW,EACtBhN,KAAKiM,MAAMe,EAAIZ,GAAIzB,OAAQ,EAG/B3K,KAAKiM,MAAMG,EAAK,GAAGzB,OAAQ,EAC3B3K,KAAKiM,MAAMG,EAAK,GAAG7B,EAAEhI,EAAI,EACzBvC,KAAKiM,MAAMI,EAAKD,EAAK,GAAGzB,OAAQ,EAEhC3K,KAAKiM,MAAOG,EAAKC,EAAM,EAAID,EAAK,GAAGzB,OAAQ,EAC3C3K,KAAKiM,MAAOG,EAAKC,EAAM,EAAID,EAAK,GAAG7B,EAAEhI,EAAI,EAEzC,IAAK,IAAIiC,KAAKxE,KAAKkM,MACf1H,EAAEgH,aAAe,GAErB,MAEJ,KAAKtL,EAAKmN,QACN,IAAK,IAAIV,EAAI,EAAGA,EAAI,MAAOA,EACvB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAiC,GAAhBtH,KAAKoK,SAAZ,GAA6B,GAAuB,EAAhBpK,KAAKoK,SAAgB,GAAuB,EAAhBpK,KAAKoK,UAAiB9C,EAAAA,GAAAA,OAAiB,GAUtI,IAAK,IAAImC,EAAI,EAAGA,EAAI3M,KAAKiM,MAAM5H,SAAUsI,EACrC,IAAK,IAAIK,EAAIL,EAAI,EAAGK,EAAIhN,KAAKiM,MAAM5H,SAAU2I,EACzC,GAAI9J,KAAKoK,SAAW,GAAK,CACbtN,KAAK8M,QAAQ9M,KAAKiM,MAAMU,GAAI3M,KAAKiM,MAAMe,IAC7CxB,aAA+B,EAAhBtI,KAAKoK,SAAiB,EAI3C,EAOpB,CACOC,WAAWnB,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYlK,GACtF,MAAMqB,GAAM4I,EAAKF,IAAOF,EAAK,GACvBvI,GAAM4I,EAAKF,IAAOF,EAAK,GAEvBmB,EAAQxN,KAAKiM,MAAM5H,OACzB,IAAK,IAAI2I,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EACtB3M,KAAK4M,QAAQ,IAAIpC,EAAAA,GAAS8B,EAAKK,EAAI/I,EAAI2I,EAAKS,EAAInJ,EAAItB,GAAIiI,EAAAA,GAAAA,OAAiB,GAIjF,IAAK,IAAIwC,EAAI,EAAGA,EAAIX,IAAMW,EACtB,IAAK,IAAIL,EAAI,EAAGA,EAAIP,IAAMO,EAAG,CACzB,IAAIO,EAAIF,EAAIZ,EAAKO,EAEP,IAANA,GAAW3M,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQN,EAAI,GAAIlN,KAAKiM,MAAMuB,EAAQN,IAChE,IAANF,GAAWhN,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQN,EAAId,GAAKpM,KAAKiM,MAAMuB,EAAQN,IAEjE,IAANP,GAAiB,IAANK,GAAWhN,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQN,EAAId,EAAK,GAAIpM,KAAKiM,MAAMuB,EAAQN,IAEhF,IAANP,GAAWK,IAAMX,EAAK,GAAKrM,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQN,EAAId,EAAK,GAAIpM,KAAKiM,MAAMuB,EAAQN,GACnG,CAGR,CA8BOO,UAAUrB,EAAYsB,EAAcC,GACvC,MAAM7C,EAAK,GAAOsB,EAAK,GAEjBoB,EAAQxN,KAAKiM,MAAM5H,OAEzB,IAAK,IAAIsI,EAAI,EAAGA,EAAIP,IAAMO,EAAG,CACzB,MAAMpC,EAAcmD,EAAGE,QACvBrD,EAAElI,EAAIqL,EAAGrL,GAAKsL,EAAGtL,EAAIqL,EAAGrL,GAAKsK,EAAI7B,EAEjC9K,KAAK4M,QAAQrC,EAAGC,EAAAA,GAAAA,OAAiB,GAEjCD,EAAEjI,EAAIqL,EAAGrL,EACTtC,KAAK4M,QAAQrC,EAAGC,EAAAA,GAAAA,OAAiB,GAEjCD,EAAEhI,EAAIoL,EAAGpL,EACTvC,KAAK4M,QAAQrC,EAAGC,EAAAA,GAAAA,OAAiB,GAEjCD,EAAEjI,EAAIoL,EAAGpL,EACTtC,KAAK4M,QAAQrC,EAAGC,EAAAA,GAAAA,OAAiB,EACrC,CAEA,IAAK,IAAImC,EAAI,EAAGA,EAAIP,IAAMO,EAAG,CACzB,IAAIkB,EAAS,EAAJlB,EAGT3M,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,GAAK7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAC7D7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,IAG5D7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,GAAK7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAC7D7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAE7DlB,IAAMP,EAAK,IAEXpM,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,GAAK7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAC7D7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAGjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,GAAK7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAC7D7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAGjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,GAAK7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAC7D7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAGjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,GAAK7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAC7D7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IACjE7N,KAAK8M,QAAQ9M,KAAKiM,MAAMuB,EAAQK,EAAK,GAAI7N,KAAKiM,MAAMuB,EAAQK,EAAK,IAEzE,CAEA,IAAK,IAAIrJ,KAAKxE,KAAKkM,MACf1H,EAAEiH,eAAiB,EAEvBzL,KAAKiM,MAAM,GAAGtB,OAAQ,EACtB3K,KAAKiM,MAAM,GAAGtB,OAAQ,EACtB3K,KAAKiM,MAAM,GAAGtB,OAAQ,EACtB3K,KAAKiM,MAAM,GAAGtB,OAAQ,CAC1B,CACOmD,QACH9N,KAAKiM,MAAQ,GACbjM,KAAKkM,MAAQ,EACjB,CACOU,QAAQxC,EAAeC,EAAeC,GACzC,MAAMyD,EAAI,IAAI5D,EAAKC,EAAKC,EAAKC,GAE7B,OADAtK,KAAKiM,MAAM+B,KAAKD,GACTA,CACX,CACOjB,QAAQxB,EAAUC,GACrB,MAAM/G,EAAI,IAAI2G,EAAKG,EAAIC,GAEvB,OADAvL,KAAKkM,MAAM8B,KAAKxJ,GACTA,CACX,CACOqG,KAAKoD,EAAelD,EAAiBmD,EAAWpD,EAAYE,EAAiBmD,GAChF,IAAK,IAAIxB,EAAI,EAAGA,EAAIwB,IAAQxB,EAAG,CAC3B,IAAK,MAAMoB,KAAK/N,KAAKiM,MAAO,CAMxB,MAAMmC,EAAK5D,EAAAA,GAAAA,IAAayD,EAAKF,EAAExD,GACzB8D,EAAID,EAAGtC,SACbsC,EAAGrC,UACHgC,EAAEtD,EAAID,EAAAA,GAAAA,IAAaA,EAAAA,GAAAA,MAAe4D,EAA6B,GAAzBlL,KAAKoL,KAAK,GAAMD,EAAIA,IAAY7D,EAAAA,GAAAA,MAAeA,EAAAA,GAAAA,QAAkB0D,GAC3G,CAEA,IAAK,MAAM1J,KAAKxE,KAAKkM,MACjB1H,EAAEmH,mBAGN,IAAK,MAAMoC,KAAK/N,KAAKiM,MACjB8B,EAAElD,KAAKC,EAAIC,EAASC,EAE5B,CACJ,CACOuD,SAASlM,EAAWC,EAAWC,GAGlC,IAAK,IAAIoK,EAAI,EAAGA,EAAI3M,KAAKiM,MAAM5H,SAAUsI,EACrC,GAAI3M,KAAKiM,MAAMU,GAAGpC,EAAEmB,SAAS,IAAIlB,EAAAA,GAASnI,EAAGC,EAAGC,IAAM,EAClD,OAAOvC,KAAKiM,MAAMU,EAI9B,EO7ZG,MAAM6B,EAQT3O,YAAYkF,EAAoB1C,EAAWC,EAAWC,GAAY,KAP1DwC,WAAK,OACL0J,cAAQ,OACRC,cAAQ,OACRC,gBAAU,OACVC,mBAAa,OACbC,IAAc,IAGlB7O,KAAK+E,MAAQA,EACb/E,KAAK8O,eACL9O,KAAK+O,eACL/O,KAAKgP,iBACLhP,KAAKiP,gBAAgB5M,EAAGC,EAAGC,EAC/B,CAEQuM,eACJ9O,KAAKyO,SAAW,IAAIvM,EAAAA,IACpBlC,KAAK4O,cAAgB,IAAIM,aAAwB,EAAXlP,KAAK6O,KAC3C7O,KAAKyO,SAASU,aAAa,WAAY,IAAIjN,EAAAA,IAAsBlC,KAAK4O,cAAe,GACzF,CAEQG,eACJ/O,KAAK0O,SAAW,IAAIxM,EAAAA,IAAqB,CACrCiH,MAAO,SACPiG,KAAM,KACNC,QAAS,GACTC,aAAa,GAErB,CAEQN,iBACJhP,KAAK2O,WAAa,IAAIzM,EAAAA,IAAalC,KAAKyO,SAAUzO,KAAK0O,UACvD1O,KAAK+E,MAAMuE,IAAItJ,KAAK2O,WACxB,CAEQM,gBAAgB5M,EAAWC,EAAWC,GAC1CvC,KAAK4O,cAAc,GAAKvM,EACxBrC,KAAK4O,cAAc,GAAKtM,EACxBtC,KAAK4O,cAAc,GAAKrM,EACxBvC,KAAKuP,gBACT,CAEOC,QACHxP,KAAK6O,KAAO,IACZ1I,QAAQC,IAAIpG,KAAK6O,KAEjB,MAAMY,EAAmB,IAAIP,aAAwB,EAAXlP,KAAK6O,KAE/C,IAAK,IAAIlC,EAAI,EAAGA,EAAI3M,KAAK6O,IAAKlC,IAAK,CAC/B,MAAM+C,EAAY,EAAJ/C,EACd8C,EAAiBC,GAA0B,EAAhBxM,KAAKoK,SAAgB,EAChDmC,EAAiBC,EAAQ,GAAsB,EAAhBxM,KAAKoK,SAAgB,EACpDmC,EAAiBC,EAAQ,GAAsB,EAAhBxM,KAAKoK,SAAgB,CACxD,CAEAtN,KAAK4O,cAAgBa,EACrBzP,KAAKuP,gBACT,CAEQA,iBACJvP,KAAKyO,SAASU,aAAa,WAAY,IAAIjN,EAAAA,IAAsBlC,KAAK4O,cAAe,IACrF5O,KAAKyO,SAASkB,WAAWnN,SAASoN,aAAc,EAChD5P,KAAKyO,SAASoB,uBAClB,CAEOC,UACH9P,KAAK+E,MAAM2B,OAAO1G,KAAK2O,YACvB3O,KAAKyO,SAASqB,UACd9P,KAAK0O,SAASoB,SAClB,ECtEG,MAAMC,EAOTlQ,YAAYkF,GAAqB,KANzBA,WAAK,OACL0J,cAAQ,OACRC,cAAQ,OACRsB,kBAAY,OACZC,SAAqB,GAGzBjQ,KAAK+E,MAAQA,EACb/E,KAAK8O,eACL9O,KAAK+O,eACL/O,KAAKkQ,kBACT,CAEQpB,eACJ9O,KAAKyO,SAAW,IAAIvM,EAAAA,GACxB,CAEQ6M,eACJ/O,KAAK0O,SAAW,IAAIxM,EAAAA,IAAwB,CACxCiH,MAAO,SACPkG,QAAS,EACTC,aAAa,GAErB,CAEQY,mBACJlQ,KAAKgQ,aAAe,IAAI9N,EAAAA,IAAmBlC,KAAKyO,SAAUzO,KAAK0O,UAC/D1O,KAAK+E,MAAMuE,IAAItJ,KAAKgQ,aACxB,CAEO1G,IAAIjH,EAAWC,EAAWC,GAC7BvC,KAAKiQ,SAASjC,KAAK3L,EAAGC,EAAGC,GACzBvC,KAAKuP,gBACT,CAEOY,QAAQ3D,EAAYC,EAAY2D,EAAYC,EAAYC,EAAYC,GACvEvQ,KAAKiQ,SAASjC,KAAKxB,EAAIC,EAAI2D,EAAIC,EAAIC,EAAIC,GACvCvQ,KAAKuP,gBACT,CAEQA,iBACJ,MAAMX,EAAgB,IAAIM,aAAalP,KAAKiQ,UAC5CjQ,KAAKyO,SAASU,aAAa,WAAY,IAAIjN,EAAAA,IAAsB0M,EAAe,IAChF5O,KAAKyO,SAASkB,WAAWnN,SAASoN,aAAc,EAChD5P,KAAKyO,SAASoB,uBAClB,CAEOC,UACH9P,KAAK+E,MAAM2B,OAAO1G,KAAKgQ,cACvBhQ,KAAKyO,SAASqB,UACd9P,KAAK0O,SAASoB,SAClB,CAEOU,QACHxQ,KAAKiQ,SAAW,GAChBjQ,KAAKuP,gBACT,EC/CG,MAAMkB,EAiBT5Q,YAAYkF,GAAqB,KAhBjCA,WAAK,OAELiH,WAAK,OAEL3D,MAAiB,GAAG,KACpB0H,WAAK,OAELhF,QAAU,IAAK,KACf2F,SAAW,KAAM,KACjBC,SAAW,KAAM,KACjB3F,SAAW,KAAK,KAEhB4F,cAAQ,OAERxI,EAAc,IAAIoC,EAAAA,GAAS,EAAG,EAAG,GAG7BxK,KAAK+E,MAAQA,EACb/E,KAAKmF,MACT,CACAA,OACIgB,QAAQC,IAAIlG,GACZF,KAAKgM,MAAQ,IAAIA,EAKjBhM,KAAKgM,MAAMyB,UAAU,EAAG,IAAIjD,EAAAA,IAAU,GAAI,IAAK,GAAI,IAAIA,EAAAA,GAAS,GAAI,GAAI,IAUxE,IAAK,IAAImC,EAAI,EAAGA,EAAI3M,KAAKgM,MAAMC,MAAM5H,SAAUsI,EAAG,CAC9C,MAAMtJ,EAAIrD,KAAKgM,MAAMC,MAAMU,GAC3B3M,KAAKqI,MAAM2F,KAAK,IAAIQ,EAAMxO,KAAK+E,MAAO1B,EAAEkH,EAAElI,EAAGgB,EAAEkH,EAAEjI,EAAGe,EAAEkH,EAAEhI,GAC5D,CAEAvC,KAAK+P,MAAQ,IAAIA,EAAM/P,KAAK+E,OAC5B,IAAK,IAAI4H,EAAI,EAAGA,EAAI3M,KAAKgM,MAAME,MAAM7H,SAAUsI,EAAG,CAC9C,MAAMtJ,EAAIrD,KAAKgM,MAAME,MAAMS,GAC3B3M,KAAK+P,MAAM7E,IAAI7H,EAAEiI,GAAGf,EAAElI,EAAGgB,EAAEiI,GAAGf,EAAEjI,EAAGe,EAAEiI,GAAGf,EAAEhI,GAC1CvC,KAAK+P,MAAM7E,IAAI7H,EAAEkI,GAAGhB,EAAElI,EAAGgB,EAAEkI,GAAGhB,EAAEjI,EAAGe,EAAEkI,GAAGhB,EAAEhI,EAC9C,CACJ,CACIsO,cACA,OAAO7Q,KAAK4Q,QAChB,CACIC,YAAQxN,GAEJA,EACAA,EAAEuH,WAAY,EAEV5K,KAAK4Q,WAAY5Q,KAAK4Q,SAAShG,WAAY,GAGnD5K,KAAK4Q,SAAWvN,CACpB,CACAyN,qBACI,IAAIC,EAAM,GACV,IAAK,IAAIpE,EAAI,EAAGA,EAAI3M,KAAKqI,MAAMhE,SAAUsI,EACrCoE,EAAI/C,KAAKhO,KAAKqI,MAAMsE,GAAGgC,YAE3B,OAAOoC,CACX,CACAC,SACIhR,KAAKgM,MAAMnB,KAAK,IAAIL,EAAAA,GAAS,IAAK,GAAI,IAAKxK,KAAK+K,QAAS/K,KAAK0Q,QAAS1Q,KAAK2Q,SAAU3Q,KAAKgL,QAAS,GAqBpG,IAAK,IAAI2B,EAAI,EAAGA,EAAI3M,KAAKgM,MAAMC,MAAM5H,SAAUsI,EAAG,CAC9C,MAAMtJ,EAAIrD,KAAKgM,MAAMC,MAAMU,GAC3B3M,KAAKqI,MAAMsE,GAAG8B,SAASwB,SAAS,GAAG5N,EAAIgB,EAAEkH,EAAElI,EAC3CrC,KAAKqI,MAAMsE,GAAG8B,SAASwB,SAAS,GAAG3N,EAAIe,EAAEkH,EAAEjI,EAC3CtC,KAAKqI,MAAMsE,GAAG8B,SAASwB,SAAS,GAAG1N,EAAIc,EAAEkH,EAAEhI,EACvCvC,KAAKgM,MAAMC,MAAMU,GAAG/B,WACpB5K,KAAKqI,MAAMsE,GAAG+B,SAASvF,MAAM8H,EAAI,EACjCjR,KAAKqI,MAAMsE,GAAG+B,SAASvF,MAAM+E,EAAI,EACjClO,KAAKqI,MAAMsE,GAAG+B,SAASvF,MAAM+H,EAAI,IAEjClR,KAAKqI,MAAMsE,GAAG+B,SAASvF,MAAM8H,EAAI,EACjCjR,KAAKqI,MAAMsE,GAAG+B,SAASvF,MAAM+E,EAAI,EACjClO,KAAKqI,MAAMsE,GAAG+B,SAASvF,MAAM+H,EAAI,GAErClR,KAAKqI,MAAMsE,GAAG8B,SAAS0C,kBAAmB,EAC1CnR,KAAKqI,MAAMsE,GAAG8B,SAAS2C,oBAAqB,EAC5CpR,KAAKqI,MAAMsE,GAAG+B,SAASkB,aAAc,CACzC,CAIA,IAAK,IAAIjD,EAAI,EAAGA,EAAI3M,KAAKgM,MAAME,MAAM7H,SAAUsI,EAAG,CAC9C,MAAMtJ,EAAIrD,KAAKgM,MAAME,MAAMS,GAC3B3M,KAAK+P,MAAMtB,SAASwB,SAAa,EAAJtD,GAAOtK,EAAIgB,EAAEiI,GAAGf,EAAElI,EAC/CrC,KAAK+P,MAAMtB,SAASwB,SAAa,EAAJtD,GAAOrK,EAAIe,EAAEiI,GAAGf,EAAEjI,EAC/CtC,KAAK+P,MAAMtB,SAASwB,SAAa,EAAJtD,GAAOpK,EAAIc,EAAEiI,GAAGf,EAAEhI,EAC/CvC,KAAK+P,MAAMtB,SAASwB,SAAa,EAAJtD,EAAQ,GAAGtK,EAAIgB,EAAEkI,GAAGhB,EAAElI,EACnDrC,KAAK+P,MAAMtB,SAASwB,SAAa,EAAJtD,EAAQ,GAAGrK,EAAIe,EAAEkI,GAAGhB,EAAEjI,EACnDtC,KAAK+P,MAAMtB,SAASwB,SAAa,EAAJtD,EAAQ,GAAGpK,EAAIc,EAAEkI,GAAGhB,EAAEhI,CACvD,CACAvC,KAAK+P,MAAMtB,SAAS2C,oBAAqB,CAE7C,CACA1N,UAAUrB,EAAWC,EAAWC,GAExBvC,KAAK6Q,SACL1K,QAAQC,IAAIpG,KAAK6Q,QAEzB,CACA7I,UAAU3F,EAAWC,GAEbtC,KAAK6Q,UACL1K,QAAQC,IAAI/D,EAAGC,GACf6D,QAAQC,IAAIpG,KAAK6Q,SACjB7Q,KAAK6Q,QAAQtG,EAAElI,EAAIA,EACnBrC,KAAK6Q,QAAQtG,EAAEjI,EAAIA,EAE3B,CACAmB,UAAUpB,EAAWC,EAAWC,GAE5B,IAAI8O,EAAOrR,KAAKgM,MAAMuC,SAASlM,EAAGC,EAAGC,GAEjCvC,KAAK6Q,QADLQ,QAGeC,CAGvB,CACAxJ,UAEI9H,KAAK6Q,aAAUS,CACnB,CACArK,UACI,IAAK,IAAIiH,KAAKlO,KAAKqI,MAASrI,KAAK+E,MAAM2B,OAAOwH,EAAES,YAAaT,EAAEjH,UAC/DjH,KAAK+P,MAAM9I,SACf,ECnKG,MAAMsK,EAST1R,YAAYE,GAA0B,KARtCA,SAAG,OACHyR,6BAAuB,OACvBC,oBAAc,OACdC,wBAAkB,OAElB3M,WAAK,OACL4M,gBAAU,EAGN3R,KAAKD,IAAMA,EACXC,KAAKwR,wBAA0B,IAAItK,EAAwBlH,MAC3DA,KAAK+E,MAAQ/E,KAAKD,IAAI6G,oBAAoB/B,cAAcgC,YAAY9B,MACpE/E,KAAKD,IAAI6G,oBAAoB/B,cAAcgC,YAAYb,cAAgB,KAAQhG,KAAKgR,QAAQ,EAC5FhR,KAAK0R,mBAAqB,IAAI3I,EAAmB/I,MACjDA,KAAKyR,eAAiB,IAAIxJ,EAAejI,MACzCA,KAAKmF,MACT,CACAA,OACInF,KAAK2R,WAAa,IAAIlB,EAASzQ,KAAK+E,MACxC,CACAiM,SACIhR,KAAK2R,WAAWX,QACpB,CACAtN,UAAUrB,EAAWC,GAEjB,MAAMsP,EAAM5R,KAAKyR,eAAe3I,aAAazG,EAAGC,EAAGtC,KAAK2R,WAAWb,sBAC/Dc,GACA5R,KAAK2R,WAAWjO,UAAUkO,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAEtD,CACAnO,UAAUpB,EAAWC,GACjB,MAAMsP,EAAM5R,KAAKyR,eAAe3I,aAAazG,EAAGC,EAAGtC,KAAK2R,WAAWb,sBAC/Dc,IACA5R,KAAKD,IAAI6G,oBAAoB/B,cAAcgC,YAAYzE,OAAOT,YAAa,EAC3E3B,KAAK2R,WAAWlO,UAAUmO,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAEtD,CACA9J,QAAQzF,EAAWC,GACftC,KAAK2R,WAAW7J,UAChB9H,KAAKD,IAAI6G,oBAAoB/B,cAAcgC,YAAYzE,OAAOT,YAAa,CAC/E,CACAqG,UAAU3F,EAAWC,GACjB,MAAMsP,EAAM5R,KAAKyR,eAAe3I,aAAazG,EAAGC,EAAGtC,KAAK2R,WAAWb,sBAC/Dc,GACA5R,KAAK2R,WAAW3J,UAAU4J,EAAI,GAAIA,EAAI,GAG9C,CACA3K,UACIjH,KAAK2R,WAAW1K,SACpB,ECjDG,MAAM4K,EAqBXhS,YAAYE,GAA2B,KApBvCA,SAAG,OACHsC,GAAa,EAAE,KAACC,GAAa,EAAE,KAACC,GAAa,EAAE,KAC/CuP,MAAgB,EAAE,KAACC,MAAgB,EAAE,KAACC,MAAgB,EAAE,KACxDC,gBAAU,OAEVxN,WAAyBA,EAAAA,GAAAA,KAAgB,KACzCyN,QAAkB,EAAM,KACxBC,eAAyB,EAAM,KAC/BC,QAAkB,EAAM,KACxB1N,cAAwB,EAAM,KAC9B2N,YAAsB,EAAM,KAC5BC,aAAuB,EAAM,KAE7BC,KAAe,EAAE,KACjBC,MAAgB,EAAE,KAClB7N,MAAgB,EAAE,KAClB8N,SAAmB,EAAE,KACrBvN,UAAoB,EAAK,KAEzBwN,YAAM,EAEQ,OAAR3S,QAAwBuR,IAARvR,IAAqBC,KAAKD,IAAMA,EACtD,CACA4S,WACE,IAAIC,EAAS,IAAIf,EAAe7R,KAAKD,KASrC,OARA6S,EAAOvQ,EAAIrC,KAAKqC,EAAGuQ,EAAOtQ,EAAItC,KAAKsC,EAAGsQ,EAAOrQ,EAAIvC,KAAKuC,EAAGqQ,EAAOd,KAAO9R,KAAK8R,KAAMc,EAAOb,KAAO/R,KAAK+R,KAAMa,EAAOZ,KAAOhS,KAAKgS,KAC9HY,EAAOP,WAAarS,KAAKqS,WAAYO,EAAOlO,aAAe1E,KAAK0E,aAAckO,EAAON,YAActS,KAAKsS,YACxGM,EAAOT,cAAgBnS,KAAKmS,cAAeS,EAAOV,OAASlS,KAAKkS,OAAQU,EAAOR,OAASpS,KAAKoS,OAC7FQ,EAAOL,IAAMvS,KAAKuS,IAAKK,EAAOJ,KAAOxS,KAAKwS,KAAMI,EAAOjO,MAAQ3E,KAAK2E,MAAOiO,EAAOH,SAAWzS,KAAKyS,SAClGG,EAAOX,WAAajS,KAAKiS,WACzBW,EAAOnO,WAAazE,KAAKyE,WAEzBmO,EAAOF,OAAS1S,KAAK0S,OACdE,CACT,EAGK,MAAMC,EAeXhT,YAAYE,GAA0B,KAdtC+S,wBAAkB,OAClBC,kBAAoC,IAAIlB,EAAiB,KACzD9R,SAAG,OACHiT,UAAoB,EAAK,KACzBC,WAAqB,EAAE,KAEvBzD,OAAiB,EAAM,KACvB0D,SAAmB,EAAM,KACzBC,MAAgB,IAAI,KACpBC,WAAK,OACLC,MAAgB,EAAM,KACtB7O,OAAC,OACO8O,kBAA4B,EAGlCtT,KAAKD,IAAMA,CAGb,CACAwT,qBAAqBC,GACnBA,EAAIC,QAAWjP,IACbxE,KAAKkT,SAAU,EACflT,KAAKoT,MAAQM,YACX,KACO1T,KAAKkT,UACRlT,KAAK2T,WAAWnP,GAChBA,EAAEoP,mBAEJ5T,KAAKkT,SAAU,CAAK,GAEtBlT,KAAKmT,MAAM,EAEfK,EAAIK,WAAcrP,IAChBsP,aAAa9T,KAAKoT,OAClBpT,KAAKkT,SAAU,EACflT,KAAK+H,iBAAiBvD,EAAE,EAE1BgP,EAAIO,YAAevP,IAAoBxE,KAAKyD,UAAUe,GAAIA,EAAEoP,iBAAiB,EAC7EJ,EAAIQ,UAAaxP,IAAoBxE,KAAK8H,QAAQtD,GAAIA,EAAEoP,iBAAiB,EACzEJ,EAAIS,YAAezP,IAAoBxE,KAAK0D,UAAUc,GAAIA,EAAEoP,iBAAiB,EAC7EJ,EAAIU,iBAAiB,SAAU1P,IAAoBxE,KAAKmE,WAAWK,EAAGA,EAAE2P,QAAS3P,EAAEoP,iBAAiB,GACtG,CAEAnQ,UAAUe,GACRxE,KAAKwP,OAAQ,EACbxP,KAAKqT,MAAO,EACZ,IAAIT,EAAS5S,KAAKoU,mBAAmB5P,GACrCoO,EAAOnO,WAAaA,EAAAA,GAAAA,KACpBmO,EAAOV,QAAS,EAChBlS,KAAKqU,kBAAkBzB,EACzB,CACAe,WAAWnP,GACT,IAAKxE,KAAKwP,MAAS,OACnB,IAAIoD,EAAS5S,KAAKoU,mBAAmB5P,GACpB,IAAbA,EAAE8P,OACJ1B,EAAOnO,WAAaA,EAAAA,GAAAA,KACE,IAAbD,EAAE8P,OACX1B,EAAOnO,WAAaA,EAAAA,GAAAA,OACE,IAAbD,EAAE8P,SACX1B,EAAOnO,WAAaA,EAAAA,GAAAA,OAEtBzE,KAAKqU,kBAAkBzB,EACzB,CACA7K,iBAAiBvD,GACf,IAAIoO,EAAS5S,KAAKoU,mBAAmB5P,GACrCoO,EAAOnO,WAAaA,EAAAA,GAAAA,OACpBzE,KAAKqU,kBAAkBzB,EACzB,CACA5K,UAAUxD,GACRxE,KAAKwP,OAAQ,EACbxP,KAAKkT,SAAU,EACf,IAAIN,EAAS5S,KAAKoU,mBAAmB5P,GACrCoO,EAAOnO,WAAaA,EAAAA,GAAAA,KACpBmO,EAAOV,QAAS,EACE,IAAd1N,EAAE+P,QACJ3B,EAAOnO,WAAaA,EAAAA,GAAAA,KACG,IAAdD,EAAE+P,QACX3B,EAAOnO,WAAaA,EAAAA,GAAAA,YACG,IAAdD,EAAE+P,UACX3B,EAAOnO,WAAaA,EAAAA,GAAAA,YAEtBzE,KAAKqU,kBAAkBzB,EACzB,CACAlP,UAAUc,GACR,GAAIxE,KAAKqT,KAA2B,YAAnBrT,KAAKgI,UAAUxD,GAChC,IAAIoO,EAAS5S,KAAKoU,mBAAmB5P,GACrCoO,EAAOnO,WAAaA,EAAAA,GAAAA,KACpBmO,EAAOV,QAAS,EAChBlS,KAAKkT,SAAU,EACflT,KAAKqU,kBAAkBzB,EACzB,CACA9K,QAAQtD,GACNxE,KAAKqT,MAAO,EACZrT,KAAKwP,OAAQ,EACb,IAAIoD,EAAS5S,KAAKoU,mBAAmB5P,GACrCoO,EAAOnO,WAAaA,EAAAA,GAAAA,GACpBmO,EAAOV,QAAS,EAChBlS,KAAKqU,kBAAkBzB,EACzB,CACAzO,WAAWK,EAAenB,GACxB,IAAIuP,EAAS5S,KAAKoU,mBAAmB5P,GACrCoO,EAAOjO,MAAQtB,EACfuP,EAAOnO,WAAaA,EAAAA,GAAAA,MACpBzE,KAAKqU,kBAAkBzB,EACzB,CACAwB,mBAAmB5P,GACjB,IAAIoO,EAAyB,IAAIf,EAAe7R,KAAKD,KAgBrD,OAfA6S,EAAOd,KAAO9R,KAAK+S,kBAAkB1Q,EACrCuQ,EAAOb,KAAO/R,KAAK+S,kBAAkBzQ,EAGrCsQ,EAAOlO,aAAeF,EAAEgQ,SACxB5B,EAAOP,WAAa7N,EAAEiQ,OACtB7B,EAAON,YAAc9N,EAAEkQ,QAEvB9B,EAAOvQ,EAAImC,EAAEmQ,QACb/B,EAAOtQ,EAAIkC,EAAEoQ,QACbhC,EAAOH,SAAWzS,KAAK+S,kBAAkBpO,MACzCiO,EAAOjO,MAAQ,EACfiO,EAAOF,OAASlO,EAChBxE,KAAK+S,kBAAoBH,EACzB5S,KAAKwE,EAAIoO,EACFA,CACT,CACIgB,sBACF,OAAO5T,KAAKsT,gBACd,CACIM,oBAAgBvQ,GACdA,EACFrD,KAAKsT,iBAAmBjQ,EAExBqQ,YAAW,KAAQ1T,KAAKsT,iBAAmBjQ,CAAC,GAAK,IAGrD,CACAgR,kBAAkBQ,GAChB7U,KAAKD,IAAIwE,qBAAqBsQ,EAChC,ECtLK,MAAMC,EAGTjV,YAAYE,GAA0B,KAFtCA,SAAG,OACHgV,sBAAgB,EAEZ/U,KAAKD,IAAMA,EACXC,KAAK+U,iBAAmB,IAAIlC,EAAiB7S,KAAKD,KAClDC,KAAK+U,iBAAiBxB,qBAAqBvT,KAAKD,IAAI+G,QACxD,ECFG,MAAMkO,EAOT,YAAmBvP,GACf,IAAIuP,EAAmBvP,EAC3B,CACA5F,YAAY4F,GAAa,KATzBqB,aAAO,OACPmO,WAAK,OACLC,iBAAW,OACXtO,yBAAmB,OACnBoC,kBAAY,OACZmM,QAAE,EAKE,MAAM3B,EAAM4B,SAASC,eAAe5P,GAChC+N,IAAOxT,KAAK8G,QAAU0M,GAE1BxT,KAAKiV,MAAQ,IAAIrV,EACjBI,KAAKkV,YAAc,IAAIpV,EAAYE,MACnCA,KAAK4G,oBAAsB,IAAIG,EAAoB/G,MACnDA,KAAKgJ,aAAe,IAAIuI,EAAavR,MACrCA,KAAKmV,GAAK,IAAIL,EAAG9U,KACrB,CACAuE,qBAAqBC,GACjBxE,KAAKgJ,aAAawI,wBAAwBjN,qBAAqBC,EACnE,CACAwC,OAAO3G,EAAeC,GAClBN,KAAK4G,oBAAoBI,OAAO3G,EAAOC,EAC3C,CACA2G,UACIjH,KAAK4G,oBAAoBK,UACzBjH,KAAKgJ,aAAa/B,SACtB,CACAqO,QAAc,E","sources":["njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/Asset/index.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/ViewWrapper/index.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CoreThree/CameraController.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/Definition/dynamicCore.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/GraphicsCoreWrapper/CanvasWrapper/index.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/GraphicsCoreWrapper/index.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/ActiveCommand/ActiveCommandController.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/GeometryCommon/GeometryCommon.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/Light/LightingController.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/Definition/Points/Point.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/Definition/Points/Lines.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/Definition/index.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/SceneWrapper/index.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/IO/Mouseinteraction/MouseInteraction.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/IO/index.ts","njslab/app-legacy/Implementation/Demos/Demo9DynamicSpringTruss/index.ts"],"sourcesContent":["\r\nexport class Asset {\r\n    // tslint:disable-next-line:no-any\r\n    // rPoint: any;\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { DynamicSpringTruss } from '..';\r\nexport class ViewWrapper {\r\n    app: DynamicSpringTruss;\r\n    constructor(app: DynamicSpringTruss) {\r\n        this.app = app;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\nimport { CLICK_TYPE } from '../../../../../../../NJSCore';\r\nimport { CanvasThree } from '../CanvasThree';\r\nimport { MouseEventData } from '../../../../IO/Mouseinteraction/MouseInteraction';\r\n\r\n// const DeviceOrientationControls = require('../../lib/DeviceOrientationControls');\r\n// const StereoEffect = require('../../lib/StereoEffect');\r\n\r\n// import { StereoEffect } from '../lib/StereoEffect';\r\n\r\nexport enum CAMERA_TYPE {\r\n    PERSPECTIVE = 'PERSPECTIVE',\r\n    ORTHOGRAPHIC = 'ORTHOGRAPHIC',\r\n    STEREO = 'STEREO'\r\n}\r\n\r\nexport class CameraControllerThree {\r\n\r\n    canvas: CanvasThree;\r\n    cameraP: THREE.PerspectiveCamera; // Camera;\r\n    cameraO: THREE.OrthographicCamera; // Camera;\r\n    controls: OrbitControls;\r\n\r\n    initX: number = 0;\r\n    initY: number = 0;\r\n    prevX: number = 0;\r\n    prevY: number = 0;\r\n\r\n    yRotRate: number;\r\n    xRotRate: number;\r\n    xPanRate: number;\r\n    yPanRate: number;\r\n    zPanRate: number;\r\n\r\n    rotateRate: number = 150; // 0.000000001; // 150;\r\n    panRate: number = 50; // 0.000000001; // 400;\r\n    zoomRate: number = 200; // 0.000000001; // 200;\r\n\r\n    zoomFactor: number = 1;\r\n\r\n    frustumSize: number = 0.001; // 500;\r\n\r\n    type: CAMERA_TYPE;\r\n    cameraShift: number = 0;\r\n\r\n    width: number;\r\n    height: number;\r\n    ableToMove: boolean = true;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    stereoCamera: THREE.StereoCamera;\r\n\r\n    constructor(canvas: CanvasThree, width: number, height: number, type: CAMERA_TYPE = CAMERA_TYPE.PERSPECTIVE) {\r\n        this.canvas = canvas;\r\n        this.type = type;\r\n        this.width = width; this.height = height;\r\n        // this.aspect = width / height;\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.GetPerspective(0, 10, 50);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.GetOrthographic();\r\n        } else if (this.type === CAMERA_TYPE.STEREO) {\r\n            this.GetStereo();\r\n        }\r\n        this.stereoCamera = new THREE.StereoCamera(); // (this.canvas.renderer);\r\n    }\r\n    GetStereo() {\r\n\r\n        // console.log(StereoEffect);\r\n        // console.log(DeviceOrientationControls);\r\n\r\n    }\r\n    set aspect(aspect: number) {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.cameraP.aspect = aspect;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            //\r\n        }\r\n    }\r\n    get aspect() {\r\n        return this.width / this.height;\r\n    }\r\n    get camera() {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            return this.cameraP;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            return this.cameraO;\r\n        } else {\r\n            return this.cameraP;\r\n        }\r\n    }\r\n    GetPerspective(x: number = 0, y: number = 2, z: number = 2) {\r\n        this.cameraP = new THREE.PerspectiveCamera(45, this.width / this.height, 0.01, 10000);\r\n        this.cameraP.position.set(x, y, z);\r\n        this.InitOrbitController();\r\n    }\r\n    GetOrthographic() {\r\n        this.cameraO = new THREE.OrthographicCamera(this.frustumSize * this.aspect / - 2, this.frustumSize * this.aspect / 2, this.frustumSize / 2, this.frustumSize / - 2, 0.01, 50000);\r\n        this.cameraO.position.set(0, 1, 0);\r\n        this.InitOrbitController();\r\n    }\r\n    InitOrbitController() {\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.controls = new OrbitControls(this.cameraP, this.canvas.renderer.domElement);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.controls = new OrbitControls(this.cameraO, this.canvas.renderer.domElement);\r\n        }\r\n        // this.controls.panningMode = THREE.HorizontalPanning; // default is THREE.ScreenSpacePanning\r\n        this.controls.minDistance = 0.01;\r\n        this.controls.maxDistance = 500;\r\n        // this.controls.maxPolarAngle = Math.PI / 2;\r\n        this.controls.enablePan = true;\r\n        this.controls.enableZoom = true;\r\n\r\n        this.yRotRate = this.rotateRate / this.width * Math.PI / 90;\r\n        this.xRotRate = this.rotateRate / this.height * Math.PI / 180;\r\n        this.xPanRate = (this.panRate / this.width) * this.zoomFactor;\r\n        this.yPanRate = (this.panRate / this.height) * this.zoomFactor;\r\n        this.zPanRate = this.zoomRate / this.height;\r\n        // this.EnableDamping(true);\r\n\r\n        // this.controls.maxPolarAngle = 1.5; // ground\r\n    }\r\n    EnableDamping(v: boolean, factor: number = 0.35) {\r\n        this.controls.enableDamping = v; // an animation loop is required when either damping or auto-rotation are enabled\r\n        this.controls.dampingFactor = factor;\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.initX = this.prevX = x; // - this.offsetX;\r\n        this.initY = this.prevY = y; // - this.offsetY;\r\n    }\r\n    MouseMove(x: number, y: number, shift: boolean = false) {\r\n        if (!this.ableToMove) { return; }\r\n\r\n        // console.log(x,y)\r\n        const dx = x - this.prevX;\t\t// Difference since last mouse move\r\n        const dy = y - this.prevY;\r\n\r\n        // When shift is being helt down, we pan around else we rotate.\r\n        if (!shift) {\r\n            this.controls.rotateLeft(dx * this.xRotRate);\r\n            this.controls.rotateUp(dy * this.yRotRate);\r\n        } else {\r\n            // this.controls.pan(dx * this.xPanRate, dy * this.yPanRate);\r\n\r\n            this.controls.panLeft(dx * this.xPanRate, this.cameraP.matrix);\r\n            this.controls.panUp(dy * this.yPanRate, this.cameraP.matrix);\r\n\r\n            // this.camera.transform.position.x += -dx * this.xPanRate;\r\n            // this.camera.transform.position.y += dy * this.yPanRate;\r\n        }\r\n        // this.controls.panUp(0.001, this.camera.matrix);\r\n        this.prevX = x;\r\n        this.prevY = y;\r\n        // this.controls.update();\r\n    }\r\n    MouseWheel(v: number) {\r\n        // console.log(v);\r\n        this.controls.enableZoom = true;\r\n        v *= 0.1;\r\n\r\n        const dd = this.cameraP.position.length() * 100;\r\n\r\n        this.zoomFactor = dd;\r\n\r\n        if (v > 0) {\r\n            this.cameraP.position.x *= 0.9;\r\n            this.cameraP.position.y *= 0.9;\r\n            this.cameraP.position.z *= 0.9;\r\n        } else {\r\n            this.cameraP.position.x *= 1.1;\r\n            this.cameraP.position.y *= 1.1;\r\n            this.cameraP.position.z *= 1.1;\r\n        }\r\n\r\n    }\r\n    ShiftCamera() {\r\n        this.cameraShift++;\r\n        if (this.cameraShift === 2) { this.cameraShift = 0; }\r\n        if (this.cameraShift === 0) {\r\n            this.GetPerspective();\r\n        } else if (this.cameraShift === 1) {\r\n            this.GetOrthographic();\r\n        }\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DOWN) { this.MouseDown(e.x, e.y); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DRAG) { this.MouseMove(e.x, e.y, e.pressedShift); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) { this.MouseWheel(e.wheel); }\r\n\r\n    }\r\n}","import { NVector3 } from '../../../../../NJSCore';\r\n\r\nexport enum TYPE {\r\n    particle,\r\n    particleLine,\r\n    thread,\r\n    grid,\r\n    fabric,\r\n    curtain,\r\n    tensileStructure,\r\n    network\r\n}\r\n\r\nexport class Node {\r\n    public p: NVector3 = NVector3.Origin();\r\n    public f: NVector3 = NVector3.Origin();\r\n    public u: NVector3 = NVector3.Origin();\r\n    public m: number = 0.0;\r\n\r\n    public Fixed: boolean = false;\r\n    public isCapture: boolean = false;\r\n\r\n    public constructor(_p0: NVector3, _u0: NVector3, _mass: number) {\r\n        this.p = new NVector3(_p0.x, _p0.y, _p0.z);\r\n        this.u = new NVector3(_u0.x, _u0.y, _u0.z);\r\n        this.m = _mass;\r\n    }\r\n    public Move(dt: number, damping: number, groundZ: number = 0.0) {\r\n        if (this.Fixed) { return; }\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        // this.u = NVector3.Scale(this.u , damping );\r\n        // this.u = NVector3.Add( this.u,  NVector3.Scale(this.f, dt / this.m));\r\n        // this.p  = NVector3.Add(this.p, NVector3.Scale(this.u, dt));\r\n\r\n        this.u.Mult(damping);\r\n        this.u.Add(NVector3.Scale(this.f, dt / this.m));\r\n        this.p.Add(NVector3.Scale(this.u, dt));\r\n\r\n        if (this.p.y < groundZ) {\r\n            this.p.y = groundZ;\r\n            if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        }\r\n    }\r\n    // public DesiredDistanceTo( n2:Node) // dummy function\r\n    // {\r\n    //     let dh = 1.5;\r\n    //     let dw = 0.5;\r\n    //     let dg = 2;\r\n\r\n    //     // return Math.Sqrt(dh * dh);\r\n    //     // return Math.Sqrt(dh * dh + dw * dw);\r\n    //     //return Math.Sqrt(dh * dh + dw * dw + dg * dg) * 5.0;\r\n    //     return Math.sqrt(dh * dh + dw * dw + dg * dg * 3) * 5.0; // 슬라이더로 우선순위 조정 가능\r\n\r\n    //     //double dR = red - n2.red;\r\n    //     //double dG = green - n2.green;\r\n    //     //double dB = blue - n2.blue;\r\n\r\n    //     //return Math.Sqrt(dh * dh + dw * dw + dR * dR + dG * dG + dB * dB) * 5.0;\r\n    // }\r\n}\r\nexport class Edge {\r\n    public n0: Node;\r\n    public n1: Node;\r\n\r\n    public targetLength: number = 0.0;\r\n    public springConstant: number = 0.8;\r\n\r\n    public constructor(_n0: Node, _n1: Node) {\r\n        this.n0 = _n0;\r\n        this.n1 = _n1;\r\n\r\n        this.targetLength = this.n0.p.Distance(this.n1.p);\r\n        //  Console.WriteLine(targetLength);\r\n    }\r\n    public ApplySpringForce() {\r\n        // Vector3d dp = n1.p - n0.p;\r\n        // double dist = dp.Length;\r\n        // dp.Unitize();\r\n\r\n        // n0.f += dp * (dist - TargetLength) * SpringConstant;\r\n        // n1.f -= dp * (dist - TargetLength) * SpringConstant;\r\n\r\n        // const dp: NVector3 = NVector3.Sub(this.n1.p, this.n0.p);\r\n        // const dist:number = dp.Length();\r\n        // dp.Unitize();\r\n\r\n        let dp = NVector3.Sub(this.n1.p, this.n0.p);\r\n        let dist = dp.Length();\r\n        dp.Unitize();\r\n\r\n        const length = NVector3.Scale(dp, (dist - this.targetLength) * this.springConstant);\r\n        this.n0.f = NVector3.Add(this.n0.f, length);\r\n        this.n1.f = NVector3.Sub(this.n1.f, length);\r\n\r\n    }\r\n}\r\n\r\nexport class Graph {\r\n\r\n    public nodes: Node[] = [];\r\n    public edges: Edge[] = [];\r\n\r\n    public Graph() {\r\n        //\r\n    }\r\n\r\n    public InitTemplate(rx: number, ry: number, x0: number, y0: number, x1: number, y1: number, z: number, type: TYPE) {\r\n        const dx = (x1 - x0) / (rx - 1.0);\r\n        const dy = (y1 - y0) / (ry - 1.0);\r\n\r\n        switch (type) {\r\n            case TYPE.particle:\r\n                for (let i = 0; i < rx; ++i) {\r\n                    this.AddNode(new NVector3(i * 0.1, 0.0, 4.0), NVector3.Zero(), 0.2 + i * 0.1);\r\n                }\r\n                break;\r\n            case TYPE.thread:\r\n                for (let i = 0; i < rx; ++i) {\r\n                    this.AddNode(new NVector3(i * 0.1, 0.0, 4.0), NVector3.Zero(), 1.0);\r\n                }\r\n                for (let i = 0; i < rx - 1; ++i) {\r\n                    this.AddEdge(this.nodes[i], this.nodes[i + 1]);\r\n                }\r\n                this.nodes[this.nodes.length - 1].Fixed = true;\r\n                break;\r\n\r\n            case TYPE.grid:\r\n                for (let j = 0; j < ry; ++j) {\r\n                    for (let i = 0; i < rx; ++i) {\r\n                        this.AddNode(new NVector3(x0 + i * dx, y0 + j * dy, z), NVector3.Zero(), 1.0);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TYPE.fabric:\r\n                for (let j = 0; j < ry; ++j) {\r\n                    for (let i = 0; i < rx; ++i) {\r\n                        this.AddNode(new NVector3(x0 + i * dx, y0 + j * dy, z), NVector3.Origin(), 1.0);\r\n                    }\r\n                }\r\n\r\n                for (let j = 0; j < ry; ++j) {\r\n                    for (let i = 0; i < rx; ++i) {\r\n                        let k = j * rx + i;\r\n\r\n                        if (i !== 0) { this.AddEdge(this.nodes[k - 1], this.nodes[k]); }\r\n                        if (j !== 0) { this.AddEdge(this.nodes[k - rx], this.nodes[k]); }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TYPE.curtain:\r\n                for (let j = 0; j < ry; ++j) {\r\n                    for (let i = 0; i < rx; ++i) {\r\n                        this.AddNode(new NVector3(x0 + i * dx, y0 + j * dy, z), NVector3.Zero(), 1.0);\r\n                    }\r\n                }\r\n\r\n                for (let j = 0; j < ry; ++j) {\r\n                    for (let i = 0; i < rx; ++i) {\r\n                        let k = j * rx + i;\r\n\r\n                        if (i !== 0) { this.AddEdge(this.nodes[k - 1], this.nodes[k]); }\r\n                        if (j !== 0) { this.AddEdge(this.nodes[k - rx], this.nodes[k]); }\r\n\r\n                        if (i !== 0 && j !== 0) { this.AddEdge(this.nodes[k - rx - 1], this.nodes[k]); }\r\n\r\n                        if (i !== 0 && j !== ry - 1) { this.AddEdge(this.nodes[k + rx - 1], this.nodes[k]); }\r\n                    }\r\n                }\r\n\r\n                for (let j = 0; j < rx; ++j) {\r\n                    this.nodes[j].Fixed = true;\r\n                }\r\n                break;\r\n\r\n            case TYPE.tensileStructure:\r\n\r\n                for (let j = 0; j < ry; ++j) {\r\n                    for (let i = 0; i < rx; ++i) {\r\n                        this.AddNode(new NVector3(x0 + i * dx, y0 + j * dy, z), NVector3.Zero(), 1.0);\r\n                    }\r\n                }\r\n\r\n                for (let j = 0; j < ry; ++j) {\r\n                    for (let i = 0; i < rx; ++i) {\r\n                        let k = j * rx + i;\r\n\r\n                        if (i !== 0) { this.AddEdge(this.nodes[k - 1], this.nodes[k]); }\r\n                        if (j !== 0) { this.AddEdge(this.nodes[k - rx], this.nodes[k]); }\r\n\r\n                        if (i !== 0 && j !== 0) { this.AddEdge(this.nodes[k - rx - 1], this.nodes[k]); }\r\n\r\n                        if (i !== 0 && j !== ry - 1) { this.AddEdge(this.nodes[k + rx - 1], this.nodes[k]); }\r\n                    }\r\n                }\r\n\r\n                for (let j = 0; j < ry; ++j) {\r\n                    this.nodes[j * rx].Fixed = true;\r\n                }\r\n\r\n                this.nodes[rx - 1].Fixed = true;\r\n                this.nodes[rx - 1].p.z = 0.0;\r\n                this.nodes[ry * rx - 1].Fixed = true;\r\n\r\n                this.nodes[(rx * ry) / 2 + rx / 2].Fixed = true;\r\n                this.nodes[(rx * ry) / 2 + rx / 2].p.z = 0.0;\r\n\r\n                for (let e of this.edges) {\r\n                    e.targetLength = 0.1;\r\n                }\r\n                break;\r\n\r\n            case TYPE.network:\r\n                for (let i = 0; i < 200; ++i) {\r\n                    this.AddNode(new NVector3(-15.0 + Math.random() * 10.0, 13.0 + Math.random() * 5.0, 13.0 + Math.random() * 5.0), NVector3.Zero(), 1.0);\r\n                    //    n.height = 0.1 + Math.random() * 1.0;\r\n                    //    n.width = 0.1 + Math.random() * 1.0;\r\n                    //    n.grey = Math.random();\r\n\r\n                    //    n.red = Math.random();\r\n                    //    n.green = Math.random();\r\n                    //    n.blue = Math.random();\r\n                }\r\n\r\n                for (let i = 0; i < this.nodes.length; ++i) {\r\n                    for (let j = i + 1; j < this.nodes.length; ++j) {\r\n                        if (Math.random() < 0.1) {\r\n                            let e = this.AddEdge(this.nodes[i], this.nodes[j]);\r\n                            e.targetLength = Math.random() * 8.0 + 0.3;\r\n                            // e.TargetLength = 10.0/g.nodes[i].DesiredDistanceTo(g.nodes[j]); //attract to most different\r\n                            // e.TargetLength = nodes[i].DesiredDistanceTo(nodes[j]); //attract to most similar\r\n                            // e.TargetLength = 10 / g.nodes[i].DesiredDistanceTo(g.nodes[j]); //reverse attract to most similar\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    public InitGridXY(rx: number, ry: number, x0: number, y0: number, x1: number, y1: number, z: number) {\r\n        const dx = (x1 - x0) / (rx - 1.0);\r\n        const dy = (y1 - y0) / (ry - 1.0);\r\n\r\n        const nbase = this.nodes.length;\r\n        for (let j = 0; j < ry; ++j) {\r\n            for (let i = 0; i < rx; ++i) {\r\n                this.AddNode(new NVector3(x0 + i * dx, y0 + j * dy, z), NVector3.Zero(), 1.0);\r\n            }\r\n        }\r\n\r\n        for (let j = 0; j < ry; ++j) {\r\n            for (let i = 0; i < rx; ++i) {\r\n                let k = j * rx + i;\r\n\r\n                if (i !== 0) { this.AddEdge(this.nodes[nbase + k - 1], this.nodes[nbase + k]); }\r\n                if (j !== 0) { this.AddEdge(this.nodes[nbase + k - rx], this.nodes[nbase + k]); }\r\n\r\n                if (i !== 0 && j !== 0) { this.AddEdge(this.nodes[nbase + k - rx - 1], this.nodes[nbase + k]); }\r\n\r\n                if (i !== 0 && j !== ry - 1) { this.AddEdge(this.nodes[nbase + k + rx - 1], this.nodes[nbase + k]); }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // public void InitThread(int rx, NVector3 p0, NVector3 p1)\r\n    // {\r\n    //     double dt = 1.0 / (double)(rx - 1.0);\r\n\r\n    //     int nbase = nodes.length;\r\n    //     for (int i = 0; i < rx; ++i)\r\n    //     {\r\n    //         AddNode(NVector3.Plus(p0, NVector3.Sub(p1, p0).Mult(i).Mult(dt)), NVector3.Zero(), 1.0);\r\n    //     }\r\n\r\n    //     for (int i = 0; i < rx - 1; ++i)\r\n    //     {\r\n    //         AddEdge(nodes[nbase + i], nodes[nbase + i + 1]);\r\n\r\n    //     }\r\n    // }\r\n\r\n    // public void InitParticleLine(int rx, NVector3 p0, NVector3 p1)\r\n    // {\r\n    //     double dt = 1.0 / (double)(rx - 1.0);\r\n\r\n    //     for (int i = 0; i < rx; ++i)\r\n    //     {\r\n    //         AddNode(NVector3.Plus(p0 , NVector3.Sub(p1 , p0).Mult(i).Mult(dt)), NVector3.Zero(), 1.0);\r\n    //     }\r\n\r\n    // }\r\n\r\n    public InitTruss(rx: number, p0: NVector3, p1: NVector3) {\r\n        const dt = 1.0 / (rx - 1.0);\r\n\r\n        const nbase = this.nodes.length;\r\n\r\n        for (let i = 0; i < rx; ++i) {\r\n            const p: NVector3 = p0.Clone();\r\n            p.x = p0.x + (p1.x - p0.x) * i * dt;\r\n\r\n            this.AddNode(p, NVector3.Zero(), 1.0);\r\n\r\n            p.y = p1.y;\r\n            this.AddNode(p, NVector3.Zero(), 1.0);\r\n\r\n            p.z = p1.z;\r\n            this.AddNode(p, NVector3.Zero(), 1.0);\r\n\r\n            p.y = p0.y;\r\n            this.AddNode(p, NVector3.Zero(), 1.0);\r\n        }\r\n\r\n        for (let i = 0; i < rx; ++i) {\r\n            let ni = i * 4;\r\n\r\n            // secionts\r\n            this.AddEdge(this.nodes[nbase + ni], this.nodes[nbase + ni + 1]);\r\n            this.AddEdge(this.nodes[nbase + ni + 1], this.nodes[nbase + ni + 2]);\r\n            this.AddEdge(this.nodes[nbase + ni + 2], this.nodes[nbase + ni + 3]);\r\n            this.AddEdge(this.nodes[nbase + ni + 3], this.nodes[nbase + ni]);\r\n\r\n            // diagona in sections\r\n            this.AddEdge(this.nodes[nbase + ni], this.nodes[nbase + ni + 2]);\r\n            this.AddEdge(this.nodes[nbase + ni + 1], this.nodes[nbase + ni + 3]);\r\n\r\n            if (i !== rx - 1) {\r\n                // horizontal connectors along X\r\n                this.AddEdge(this.nodes[nbase + ni], this.nodes[nbase + ni + 4]);\r\n                this.AddEdge(this.nodes[nbase + ni + 1], this.nodes[nbase + ni + 5]);\r\n                this.AddEdge(this.nodes[nbase + ni + 2], this.nodes[nbase + ni + 6]);\r\n                this.AddEdge(this.nodes[nbase + ni + 3], this.nodes[nbase + ni + 7]);\r\n\r\n                // diagonal connectors along X\r\n                this.AddEdge(this.nodes[nbase + ni], this.nodes[nbase + ni + 5]);\r\n                this.AddEdge(this.nodes[nbase + ni + 1], this.nodes[nbase + ni + 6]);\r\n                this.AddEdge(this.nodes[nbase + ni + 2], this.nodes[nbase + ni + 7]);\r\n                this.AddEdge(this.nodes[nbase + ni + 3], this.nodes[nbase + ni + 4]);\r\n\r\n                // diagonal in volume\r\n                this.AddEdge(this.nodes[nbase + ni], this.nodes[nbase + ni + 6]);\r\n                this.AddEdge(this.nodes[nbase + ni + 1], this.nodes[nbase + ni + 7]);\r\n                this.AddEdge(this.nodes[nbase + ni + 2], this.nodes[nbase + ni + 4]);\r\n                this.AddEdge(this.nodes[nbase + ni + 3], this.nodes[nbase + ni + 5]);\r\n\r\n                // diagonal in volume\r\n                this.AddEdge(this.nodes[nbase + ni], this.nodes[nbase + ni + 7]);\r\n                this.AddEdge(this.nodes[nbase + ni + 1], this.nodes[nbase + ni + 4]);\r\n                this.AddEdge(this.nodes[nbase + ni + 2], this.nodes[nbase + ni + 5]);\r\n                this.AddEdge(this.nodes[nbase + ni + 3], this.nodes[nbase + ni + 6]);\r\n            }\r\n        }\r\n\r\n        for (let e of this.edges) {\r\n            e.springConstant = 2.0;\r\n        }\r\n        this.nodes[0].Fixed = true;\r\n        this.nodes[1].Fixed = true;\r\n        this.nodes[2].Fixed = true;\r\n        this.nodes[3].Fixed = true;\r\n    }\r\n    public Clear() {\r\n        this.nodes = [];\r\n        this.edges = [];\r\n    }\r\n    public AddNode(_p0: NVector3, _u0: NVector3, _mass: number): Node {\r\n        const n = new Node(_p0, _u0, _mass);\r\n        this.nodes.push(n);\r\n        return n;\r\n    }\r\n    public AddEdge(n0: Node, n1: Node): Edge {\r\n        const e = new Edge(n0, n1);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    public Move(atr: NVector3, damping: number, g: number, dt: number, groundZ: number, step: number) {\r\n        for (let i = 0; i < step; ++i) {\r\n            for (const n of this.nodes) {\r\n                // Vector3d dv = atr - n.p;\r\n                // double L = dv.Length;\r\n                // dv.Unitize();\r\n                // n.f = dv * Math.Exp(-0.1 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n\r\n                const dv = NVector3.Sub(atr, n.p);\r\n                const L = dv.Length();\r\n                dv.Unitize();\r\n                n.f = NVector3.Add(NVector3.Scale(dv, Math.exp(-0.1 * L * L) * 0.1), (NVector3.Scale(NVector3.YAxis(), g)));\r\n            }\r\n\r\n            for (const e of this.edges) {\r\n                e.ApplySpringForce();\r\n            }\r\n\r\n            for (const n of this.nodes) {\r\n                n.Move(dt, damping, groundZ);\r\n            }\r\n        }\r\n    }\r\n    public FindNode(x: number, y: number, z: number) {\r\n        // let node = undefined;\r\n        // let dis = 100000;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            if (this.nodes[i].p.Distance(new NVector3(x, y, z)) < 3) {\r\n                return this.nodes[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { CanvasWrapper } from '..';\r\nimport { CameraControllerThree } from './CoreThree/CameraController';\r\nexport class CanvasThree {\r\n    hostDiv: HTMLElement;\r\n    camera: CameraControllerThree;\r\n    scene: THREE.Scene;\r\n    renderer: THREE.WebGLRenderer;\r\n\r\n    canvasWrapper: CanvasWrapper;\r\n    vrBtn: HTMLElement;\r\n    bg: number = 0x000000;\r\n    isActive: boolean = true;\r\n    constructor(canvasWrapper: CanvasWrapper, hostDiv: HTMLElement) {\r\n        this.canvasWrapper = canvasWrapper;\r\n        this.hostDiv = hostDiv;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        const width = this.hostDiv.clientWidth;\r\n        const height = this.hostDiv.clientHeight;\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setPixelRatio(width / height);\r\n\r\n        this.camera = new CameraControllerThree(this, width, height);\r\n        this.scene = new THREE.Scene();\r\n        // this.scene.background = this.bg;\r\n\r\n        this.renderer.domElement.id = 'dynamic-spring';\r\n        this.renderer.domElement.style.position = 'absolute';\r\n        this.renderer.domElement.style.pointerEvents = 'none';\r\n\r\n        this.renderer.setSize(width, height);\r\n        this.hostDiv.appendChild(this.renderer.domElement);\r\n        this.RenderLoop(this);\r\n    }\r\n    RenderLoop(canvas: CanvasThree) {\r\n        if (!this.isActive) { return; }\r\n        requestAnimationFrame(() => { this.RenderLoop(this); });\r\n        this.UpdateBinding();\r\n\r\n        this.camera.controls.update();\r\n        this.renderer.render(this.scene, this.camera.camera);\r\n    }\r\n    UpdateBinding() {\r\n        console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.camera.aspect = width / height;\r\n        this.camera.camera.updateProjectionMatrix(); // updateMatrix(); // updateProjectionMatrix();\r\n        this.renderer.setSize(width, height);\r\n    }\r\n    ResizeEffect(width: number, height: number) {\r\n        // this.camera.effect.setSize(width, height);\r\n    }\r\n    Remove() {\r\n        while (this.scene.children.length) {\r\n            this.scene.remove(this.scene.children[0]);\r\n        }\r\n        // this.scene.background = 0x000000;\r\n    }\r\n\r\n}","import { GraphicsCoreWrapper } from '..';\r\nimport { CanvasThree } from './CanvasThree/CanvasThree';\r\n\r\nexport class CanvasWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    canvasThree: CanvasThree;\r\n\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n\r\n        this.canvasThree = new CanvasThree(this, this.graphicsCoreWrapper.app.divHost);\r\n    }\r\n}","\r\nimport { DynamicSpringTruss } from '..';\r\nimport { CanvasWrapper } from './CanvasWrapper';\r\nexport class GraphicsCoreWrapper {\r\n    app: DynamicSpringTruss;\r\n    canvasWrapper: CanvasWrapper;\r\n    constructor(app: DynamicSpringTruss) {\r\n        this.app = app;\r\n        this.canvasWrapper = new CanvasWrapper(this);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.canvasWrapper.canvasThree.ResizeCanvas(width, height);\r\n    }\r\n    Dispose() {\r\n        this.canvasWrapper.canvasThree.isActive = false;\r\n    }\r\n}","import { CLICK_TYPE } from '../../../../../NJSCore';\r\nimport { MouseEventData } from '../../IO/Mouseinteraction/MouseInteraction';\r\nimport { SceneWrapper } from '..';\r\nexport class ActiveCommandController {\r\n    scene: SceneWrapper;\r\n    constructor(scene: SceneWrapper) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.MouseEventController(e);\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n}","import { SceneWrapper } from '..';\r\nimport { NVector3 } from '../../../../../NJSCore';\r\nimport * as THREE from 'three';\r\nexport class PointInersection {\r\n    vec: NVector3;\r\n    data: THREE.Intersection;\r\n    constructor(x: number, y: number, z: number) {\r\n        this.vec = new NVector3(x, y, z);\r\n    }\r\n}\r\nexport class GeometryCommon {\r\n    scene: SceneWrapper;\r\n\r\n    // list: WallPaperBase[] = [];\r\n    listMesh: THREE.Object3D[] = [];\r\n\r\n    raycaster: THREE.Raycaster = new THREE.Raycaster();\r\n    m: THREE.Vector2 = new THREE.Vector2(0, 0);\r\n    point: PointInersection | undefined;\r\n\r\n    constructor(scene: SceneWrapper) {\r\n        this.scene = scene;\r\n        this.raycaster.params.Points = { threshold: 0.1 };\r\n    }\r\n    Raycast(x: number, y: number, listMesh: THREE.Object3D[]) {\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            console.log(d.point);\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n    }\r\n    RaycastPoint(x: number, y: number, listMesh: THREE.Points[]) {\r\n        this.raycaster.params.Points = { threshold: 5 };\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            return [d.point.x, d.point.y, d.point.z];\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n        return null;\r\n    }\r\n}","// import { LightUtility } from '../../../lib/NJSCore/GL/Libs/Three/Utility/LightUtility';\r\nimport * as THREE from 'three';\r\nimport { SceneWrapper } from '..';\r\nexport class LightingController {\r\n    sceneWrapper: SceneWrapper;\r\n    hemiLight: THREE.HemisphereLight;\r\n    dirLight: THREE.DirectionalLight;\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // this.scene.add( LightUtility.GetAmbientLight());\r\n        // this.scene.add( LightUtility.GetHemiLight());\r\n        // this.scene.scene.add( LightUtility.GetDirLight());\r\n\r\n        this.hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\r\n        this.hemiLight.color.setHSL(0.6, 1, 0.6);\r\n        this.hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n        this.hemiLight.position.set(0, 50, 0);\r\n        this.sceneWrapper.scene.add(this.hemiLight);\r\n\r\n        // const hemiLightHelper = new THREE.HemisphereLightHelper( this.hemiLight, 10 );\r\n        // this.scene.scene.add( hemiLightHelper );\r\n\r\n        this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        this.dirLight.color.setHSL(0.1, 1, 0.95);\r\n        this.dirLight.position.set(- 1, 1.75, 1);\r\n        this.dirLight.position.multiplyScalar(30);\r\n\r\n        this.dirLight.castShadow = true;\r\n        this.dirLight.shadow.mapSize.width = 2048 * 2;\r\n        this.dirLight.shadow.mapSize.height = 2048 * 2;\r\n\r\n        var d = 50;\r\n        this.dirLight.shadow.camera.left = - d;\r\n        this.dirLight.shadow.camera.right = d;\r\n        this.dirLight.shadow.camera.top = d;\r\n        this.dirLight.shadow.camera.bottom = - d;\r\n\r\n        this.dirLight.shadow.bias = - 0.0001;\r\n\r\n        this.dirLight.shadow.camera.near = 0.001;\r\n        this.dirLight.shadow.camera.far = 350;\r\n\r\n        this.sceneWrapper.scene.add(this.dirLight);\r\n        // this.dirLightHeper = new THREE.DirectionalLightHelper( this.dirLight, 10 );\r\n        // this.scene.scene.add( dirLightHeper );\r\n    }\r\n    Dispose() {\r\n        this.dirLight.visible = false;\r\n        this.hemiLight.visible = false;\r\n\r\n        this.sceneWrapper.scene.remove(this.dirLight);\r\n        this.sceneWrapper.scene.remove(this.hemiLight);\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nexport class Point {\r\n    private scene: THREE.Scene;\r\n    private geometry: THREE.BufferGeometry;\r\n    private material: THREE.PointsMaterial;\r\n    private pointCloud: THREE.Points;\r\n    private verticesArray: Float32Array;\r\n    private num: number = 100;\r\n\r\n    constructor(scene: THREE.Scene, x: number, y: number, z: number) {\r\n        this.scene = scene;\r\n        this.initGeometry();\r\n        this.initMaterial();\r\n        this.initPointCloud();\r\n        this.addInitialPoint(x, y, z);\r\n    }\r\n\r\n    private initGeometry(): void {\r\n        this.geometry = new THREE.BufferGeometry();\r\n        this.verticesArray = new Float32Array(this.num * 3);\r\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(this.verticesArray, 3));\r\n    }\r\n\r\n    private initMaterial(): void {\r\n        this.material = new THREE.PointsMaterial({\r\n            color: 0xff0000,\r\n            size: 1.15,\r\n            opacity: 0.5,\r\n            transparent: true\r\n        });\r\n    }\r\n\r\n    private initPointCloud(): void {\r\n        this.pointCloud = new THREE.Points(this.geometry, this.material);\r\n        this.scene.add(this.pointCloud);\r\n    }\r\n\r\n    private addInitialPoint(x: number, y: number, z: number): void {\r\n        this.verticesArray[0] = x;\r\n        this.verticesArray[1] = y;\r\n        this.verticesArray[2] = z;\r\n        this.updateGeometry();\r\n    }\r\n\r\n    public click(): void {\r\n        this.num += 100;\r\n        console.log(this.num);\r\n\r\n        const newVerticesArray = new Float32Array(this.num * 3);\r\n\r\n        for (let i = 0; i < this.num; i++) {\r\n            const index = i * 3;\r\n            newVerticesArray[index] = (Math.random() * 2) - 1;\r\n            newVerticesArray[index + 1] = (Math.random() * 2) - 1;\r\n            newVerticesArray[index + 2] = (Math.random() * 2) - 1;\r\n        }\r\n\r\n        this.verticesArray = newVerticesArray;\r\n        this.updateGeometry();\r\n    }\r\n\r\n    private updateGeometry(): void {\r\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(this.verticesArray, 3));\r\n        this.geometry.attributes.position.needsUpdate = true;\r\n        this.geometry.computeBoundingSphere();\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.scene.remove(this.pointCloud);\r\n        this.geometry.dispose();\r\n        this.material.dispose();\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nexport class Lines {\r\n    private scene: THREE.Scene;\r\n    private geometry: THREE.BufferGeometry;\r\n    private material: THREE.LineBasicMaterial;\r\n    private lineSegments: THREE.LineSegments;\r\n    private vertices: number[] = [];\r\n\r\n    constructor(scene: THREE.Scene) {\r\n        this.scene = scene;\r\n        this.initGeometry();\r\n        this.initMaterial();\r\n        this.initLineSegments();\r\n    }\r\n\r\n    private initGeometry(): void {\r\n        this.geometry = new THREE.BufferGeometry();\r\n    }\r\n\r\n    private initMaterial(): void {\r\n        this.material = new THREE.LineBasicMaterial({\r\n            color: 0xff0000,\r\n            opacity: 1,\r\n            transparent: true\r\n        });\r\n    }\r\n\r\n    private initLineSegments(): void {\r\n        this.lineSegments = new THREE.LineSegments(this.geometry, this.material);\r\n        this.scene.add(this.lineSegments);\r\n    }\r\n\r\n    public add(x: number, y: number, z: number): void {\r\n        this.vertices.push(x, y, z);\r\n        this.updateGeometry();\r\n    }\r\n\r\n    public addLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void {\r\n        this.vertices.push(x1, y1, z1, x2, y2, z2);\r\n        this.updateGeometry();\r\n    }\r\n\r\n    private updateGeometry(): void {\r\n        const verticesArray = new Float32Array(this.vertices);\r\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(verticesArray, 3));\r\n        this.geometry.attributes.position.needsUpdate = true;\r\n        this.geometry.computeBoundingSphere();\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.scene.remove(this.lineSegments);\r\n        this.geometry.dispose();\r\n        this.material.dispose();\r\n    }\r\n\r\n    public clear(): void {\r\n        this.vertices = [];\r\n        this.updateGeometry();\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { Graph, TYPE } from './dynamicCore';\r\n\r\nimport { Point } from './Points/Point';\r\n// import { Points } from './Points/Points';\r\nimport { Lines } from './Points/Lines';\r\n\r\nimport { NVector3 } from '../../../../../NJSCore';\r\n\r\nimport { Node } from './dynamicCore';\r\n\r\nexport class Dynamics {\r\n    scene: THREE.Scene;\r\n\r\n    Graph: Graph;\r\n    // points: Points;\r\n    point: Point[] = [];\r\n    Lines: Lines;\r\n\r\n    damping = 0.96;\r\n    gravity = -0.032;\r\n    timeStep = 0.316; // 0.18; // 0.26;\r\n    groundZ = -9.26;\r\n\r\n    _capture: Node | undefined;\r\n\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n\r\n    constructor(scene: THREE.Scene) {\r\n        this.scene = scene;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        console.log(TYPE);\r\n        this.Graph = new Graph();\r\n\r\n        // this.Graph.InitTemplate(10, 10, -10, -10, 0, 10, 10 , TYPE.tensileStructure);\r\n        // this.Graph.nodes[0].Fixed = true;\r\n\r\n        this.Graph.InitTruss(5, new NVector3(-20, 20, -5), new NVector3(20, 15, 5));\r\n\r\n        // this.Graph.InitGridXY(10,10, -10, -10, 10, 10, 2)\r\n        // this.Graph.nodes[0].Fixed = true; this.Graph.nodes[this.Graph.nodes.length-1].Fixed = true;\r\n\r\n        // this.points = new Points(this.scene);\r\n        // for (let i = 0; i < this.Graph.nodes.length; ++i) {\r\n        //     const v = this.Graph.nodes[i];\r\n        //     this.points.Add(v.p.x, v.p.y, v.p.z);\r\n        // }\r\n        for (let i = 0; i < this.Graph.nodes.length; ++i) {\r\n            const v = this.Graph.nodes[i];\r\n            this.point.push(new Point(this.scene, v.p.x, v.p.y, v.p.z));\r\n        }\r\n\r\n        this.Lines = new Lines(this.scene);\r\n        for (let i = 0; i < this.Graph.edges.length; ++i) {\r\n            const v = this.Graph.edges[i];\r\n            this.Lines.Add(v.n0.p.x, v.n0.p.y, v.n0.p.z);\r\n            this.Lines.Add(v.n1.p.x, v.n1.p.y, v.n1.p.z);\r\n        }\r\n    }\r\n    get capture(): Node | undefined {\r\n        return this._capture;\r\n    }\r\n    set capture(v: Node | undefined) {\r\n\r\n        if (v) {\r\n            v.isCapture = true;\r\n        } else {\r\n            if (this._capture) { this._capture.isCapture = false; }\r\n\r\n        }\r\n        this._capture = v;\r\n    }\r\n    GetPointForRaycast() {\r\n        let geo = [];\r\n        for (let i = 0; i < this.point.length; ++i) {\r\n            geo.push(this.point[i].pointCloud);\r\n        }\r\n        return geo;\r\n    }\r\n    Update() {\r\n        this.Graph.Move(new NVector3(100, 10, 10), this.damping, this.gravity, this.timeStep, this.groundZ, 1);\r\n\r\n        /*\r\n        for (let i = 0; i < this.Graph.nodes.length; ++i) {\r\n            const v = this.Graph.nodes[i];\r\n            this.points.geometry.vertices[i].x = v.p.x;\r\n            this.points.geometry.vertices[i].y = v.p.y;\r\n            this.points.geometry.vertices[i].z = v.p.z;\r\n           if (this.Graph.nodes[i].isCapture) {\r\n             this.points.geometry.colors[i].r = 1;\r\n             this.points.geometry.colors[i].g = 0;\r\n             this.points.geometry.colors[i].b = 0;\r\n            //  .vertexColors[i]\r\n             console.log(this.points);\r\n             console.log(this.points);\r\n            //  this.points.geometry.colorsNeedUpdate = true;\r\n           }\r\n        }\r\n        this.points.geometry.colorsNeedUpdate = true;\r\n        this.points.geometry.verticesNeedUpdate = true;\r\n        */\r\n        for (let i = 0; i < this.Graph.nodes.length; ++i) {\r\n            const v = this.Graph.nodes[i];\r\n            this.point[i].geometry.vertices[0].x = v.p.x;\r\n            this.point[i].geometry.vertices[0].y = v.p.y;\r\n            this.point[i].geometry.vertices[0].z = v.p.z;\r\n            if (this.Graph.nodes[i].isCapture) {\r\n                this.point[i].material.color.r = 1;\r\n                this.point[i].material.color.g = 1;\r\n                this.point[i].material.color.b = 1;\r\n            } else {\r\n                this.point[i].material.color.r = 1;\r\n                this.point[i].material.color.g = 0;\r\n                this.point[i].material.color.b = 0;\r\n            }\r\n            this.point[i].geometry.colorsNeedUpdate = true;\r\n            this.point[i].geometry.verticesNeedUpdate = true;\r\n            this.point[i].material.needsUpdate = true;\r\n        }\r\n        // this.points.geometry.colorsNeedUpdate = true;\r\n        // this.points.geometry.verticesNeedUpdate = true;\r\n\r\n        for (let i = 0; i < this.Graph.edges.length; ++i) {\r\n            const v = this.Graph.edges[i];\r\n            this.Lines.geometry.vertices[i * 2].x = v.n0.p.x;\r\n            this.Lines.geometry.vertices[i * 2].y = v.n0.p.y;\r\n            this.Lines.geometry.vertices[i * 2].z = v.n0.p.z;\r\n            this.Lines.geometry.vertices[i * 2 + 1].x = v.n1.p.x;\r\n            this.Lines.geometry.vertices[i * 2 + 1].y = v.n1.p.y;\r\n            this.Lines.geometry.vertices[i * 2 + 1].z = v.n1.p.z;\r\n        }\r\n        this.Lines.geometry.verticesNeedUpdate = true;\r\n\r\n    }\r\n    MouseMove(x: number, y: number, z: number) {\r\n        // console.log( 'move from dy',  x, y, z);\r\n        if (this.capture) {\r\n            console.log(this.capture);\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        // console.log( 'draggg from dy',  x, y);\r\n        if (this.capture) {\r\n            console.log(x, y);\r\n            console.log(this.capture);\r\n            this.capture.p.x = x;\r\n            this.capture.p.y = y;\r\n        }\r\n    }\r\n    MouseDown(x: number, y: number, z: number) {\r\n        // console.log( 'down from dy',  x, y, z);\r\n        let node = this.Graph.FindNode(x, y, z);\r\n        if (node) {\r\n            this.capture = node;\r\n        } else {\r\n            this.capture = undefined;\r\n        }\r\n\r\n    }\r\n    MouseUp() {\r\n        // console.log( 'up from dy' );\r\n        this.capture = undefined;\r\n    }\r\n    Dispose() {\r\n        for (let g of this.point) { this.scene.remove(g.pointCloud); g.Dispose(); }\r\n        this.Lines.Dispose();\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { DynamicSpringTruss } from '..';\r\nimport { ActiveCommandController } from './ActiveCommand/ActiveCommandController';\r\nimport { GeometryCommon } from './GeometryCommon/GeometryCommon';\r\nimport { LightingController } from './Light/LightingController';\r\nimport { Dynamics } from './Definition';\r\nexport class SceneWrapper {\r\n    app: DynamicSpringTruss;\r\n    activeCommandController: ActiveCommandController;\r\n    geometryCommon: GeometryCommon;\r\n    lightingController: LightingController;\r\n\r\n    scene: THREE.Scene;\r\n    definition: Dynamics;\r\n\r\n    constructor(app: DynamicSpringTruss) {\r\n        this.app = app;\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.scene = this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.scene;\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.UpdateBinding = () => { this.Update(); };\r\n        this.lightingController = new LightingController(this);\r\n        this.geometryCommon = new GeometryCommon(this);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.definition = new Dynamics(this.scene);\r\n    }\r\n    Update() {\r\n        this.definition.Update();\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        //    const pos =  this.geometryCommon.RaycastPoint(x, y, this.definition.points.pointCloud );\r\n        const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        if (pos) {\r\n            this.definition.MouseMove(pos[0], pos[1], pos[2]);\r\n        }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        if (pos) {\r\n            this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.ableToMove = false;\r\n            this.definition.MouseDown(pos[0], pos[1], pos[2]);\r\n        }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        this.definition.MouseUp();\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.ableToMove = true;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        if (pos) {\r\n            this.definition.MouseDrag(pos[0], pos[1]);\r\n        }\r\n        // this.definition.MouseDrag(x, y);\r\n    }\r\n    Dispose() {\r\n        this.definition.Dispose();\r\n    }\r\n}","import { CLICK_TYPE } from '../../../../../NJSCore';\r\n\r\n// import {IOWrapper} from '../'\r\nimport { DynamicSpringTruss } from '../..';\r\n\r\nexport interface IMouseInteractionMenu {\r\n  MouseInteractionMenu: (mouseEventData: MouseEventData) => void;\r\n}\r\nexport class MouseEventData {\r\n  app: DynamicSpringTruss;\r\n  x: number = -1; y: number = -1; z: number = -1;\r\n  preX: number = -1; preY: number = -1; preZ: number = -1;\r\n  yGLPicking: number;\r\n  // command: ActiveCommandBase; // = new CActiveCommandNone(this.app.activeCommands);\r\n  CLICK_TYPE: CLICK_TYPE = CLICK_TYPE.MOVE;\r\n  isDown: boolean = false;\r\n  isDoubleClick: boolean = false;\r\n  isMove: boolean = false;\r\n  pressedShift: boolean = false;\r\n  pressedAlt: boolean = false;\r\n  pressedCtrl: boolean = false;\r\n\r\n  lat: number = -1;\r\n  long: number = -1;\r\n  wheel: number = 0;\r\n  preWheel: number = 0;\r\n  isActive: boolean = true;\r\n  // premEvent: MouseEventData;\r\n  native: MouseEvent;\r\n  constructor(app?: DynamicSpringTruss) {\r\n    if (app !== null && app !== undefined) { this.app = app; }\r\n  }\r\n  DeepCopy() {\r\n    let mEvent = new MouseEventData(this.app);\r\n    mEvent.x = this.x; mEvent.y = this.y; mEvent.z = this.z; mEvent.preX = this.preX; mEvent.preY = this.preY; mEvent.preZ = this.preZ;\r\n    mEvent.pressedAlt = this.pressedAlt; mEvent.pressedShift = this.pressedShift; mEvent.pressedCtrl = this.pressedCtrl;\r\n    mEvent.isDoubleClick = this.isDoubleClick; mEvent.isDown = this.isDown; mEvent.isMove = this.isMove;\r\n    mEvent.lat = this.lat; mEvent.long = this.long; mEvent.wheel = this.wheel; mEvent.preWheel = this.preWheel;\r\n    mEvent.yGLPicking = this.yGLPicking;\r\n    mEvent.CLICK_TYPE = this.CLICK_TYPE;\r\n    // mEvent.command = this.command;\r\n    mEvent.native = this.native;\r\n    return mEvent;\r\n  }\r\n}\r\n\r\nexport class MouseInteraction {\r\n  mouseInteractionUI: IMouseInteractionMenu;\r\n  mouseEventDataPre: MouseEventData = new MouseEventData();\r\n  app: DynamicSpringTruss;\r\n  isEnable: boolean = true;\r\n  clickCount: number = 0;\r\n\r\n  click: boolean = false;\r\n  prevent: boolean = false;\r\n  delay: number = 250;\r\n  timer: NodeJS.Timer | number;\r\n  down: boolean = false;\r\n  e: MouseEventData;\r\n  private _stopPropagation: boolean = false;\r\n\r\n  constructor(app: DynamicSpringTruss) {\r\n    this.app = app;\r\n    // this.mouseEventDataPre = new MouseEventData();\r\n\r\n  }\r\n  InitNativeMouseEvent(div: HTMLElement) {\r\n    div.onclick = (e: MouseEvent) => {\r\n      this.prevent = false;\r\n      this.timer = setTimeout(\r\n        () => {\r\n          if (!this.prevent) {\r\n            this.MouseClick(e);\r\n            e.stopPropagation();\r\n          }\r\n          this.prevent = false;\r\n        },\r\n        this.delay);\r\n    };\r\n    div.ondblclick = (e: MouseEvent) => {\r\n      clearTimeout(this.timer as number);\r\n      this.prevent = true;\r\n      this.MouseDoubleClick(e);\r\n    };\r\n    div.onmousedown = (e: MouseEvent) => { this.MouseDown(e); e.stopPropagation(); };\r\n    div.onmouseup = (e: MouseEvent) => { this.MouseUp(e); e.stopPropagation(); };\r\n    div.onmousemove = (e: MouseEvent) => { this.MouseMove(e); e.stopPropagation(); };\r\n    div.addEventListener('wheel', (e: WheelEvent) => { this.MouseWheel(e, e.deltaY); e.stopPropagation(); });\r\n  }\r\n\r\n  MouseDown(e: MouseEvent) {\r\n    this.click = true;\r\n    this.down = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOWN;\r\n    mEvent.isDown = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseClick(e: MouseEvent) {\r\n    if (!this.click) { return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    if (e.button === 0) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.LEFT;\r\n    } else if (e.button === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.MIDDLE;\r\n    } else if (e.button === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDoubleClick(e: MouseEvent) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOUBLE;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDrag(e: MouseEvent) {\r\n    this.click = false;\r\n    this.prevent = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    mEvent.isDown = true;\r\n    if (e.buttons === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    } else if (e.buttons === 4) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_MIDDLE;\r\n    } else if (e.buttons === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseMove(e: MouseEvent) {\r\n    if (this.down) { this.MouseDrag(e); return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    mEvent.isDown = true;\r\n    this.prevent = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseUp(e: MouseEvent) {\r\n    this.down = false;\r\n    this.click = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.UP;\r\n    mEvent.isDown = false;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseWheel(e: MouseEvent, v: number) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.wheel = v;\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.WHEEL;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  CommonEventBuilder(e: MouseEvent): MouseEventData {\r\n    let mEvent: MouseEventData = new MouseEventData(this.app);\r\n    mEvent.preX = this.mouseEventDataPre.x;\r\n    mEvent.preY = this.mouseEventDataPre.y;\r\n    // mEvent.premEvent = this.mouseEventDataPre;\r\n\r\n    mEvent.pressedShift = e.shiftKey;\r\n    mEvent.pressedAlt = e.altKey;\r\n    mEvent.pressedCtrl = e.ctrlKey;\r\n\r\n    mEvent.x = e.offsetX;\r\n    mEvent.y = e.offsetY;\r\n    mEvent.preWheel = this.mouseEventDataPre.wheel;\r\n    mEvent.wheel = 0;\r\n    mEvent.native = e;\r\n    this.mouseEventDataPre = mEvent;\r\n    this.e = mEvent;\r\n    return mEvent;\r\n  }\r\n  get stopPropagation() {\r\n    return this._stopPropagation;\r\n  }\r\n  set stopPropagation(v: boolean) {\r\n    if (v) {\r\n      this._stopPropagation = v;\r\n    } else {\r\n      setTimeout(() => { this._stopPropagation = v; }, 500);\r\n      // this._stopPropagation = v;\r\n    }\r\n  }\r\n  MouseEvenEmitting(mouseEventData: MouseEventData) {\r\n    this.app.MouseEventController(mouseEventData);\r\n  }\r\n}","import { DynamicSpringTruss } from '..';\r\nimport { MouseInteraction } from './Mouseinteraction/MouseInteraction';\r\nexport class IO {\r\n    app: DynamicSpringTruss;\r\n    mouseInteraction: MouseInteraction;\r\n    constructor(app: DynamicSpringTruss) {\r\n        this.app = app;\r\n        this.mouseInteraction = new MouseInteraction(this.app);\r\n        this.mouseInteraction.InitNativeMouseEvent(this.app.divHost);\r\n    }\r\n}","import { MouseEventData } from './IO/Mouseinteraction/MouseInteraction';\r\nimport { Asset } from './Asset';\r\nimport { ViewWrapper } from './ViewWrapper';\r\nimport { GraphicsCoreWrapper } from './GraphicsCoreWrapper';\r\nimport { SceneWrapper } from './SceneWrapper';\r\nimport { IO } from './IO';\r\n\r\nexport class DynamicSpringTruss {\r\n    divHost: HTMLElement;\r\n    asset: Asset;\r\n    viewWrapper: ViewWrapper;\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    sceneWrapper: SceneWrapper;\r\n    io: IO;\r\n    public static Init(id: string) {\r\n        new DynamicSpringTruss(id);\r\n    }\r\n    constructor(id: string) {\r\n        const div = document.getElementById(id);\r\n        if (div) { this.divHost = div; }\r\n\r\n        this.asset = new Asset();\r\n        this.viewWrapper = new ViewWrapper(this);\r\n        this.graphicsCoreWrapper = new GraphicsCoreWrapper(this);\r\n        this.sceneWrapper = new SceneWrapper(this);\r\n        this.io = new IO(this);\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.sceneWrapper.activeCommandController.MouseEventController(e);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.graphicsCoreWrapper.Resize(width, height);\r\n    }\r\n    Dispose() {\r\n        this.graphicsCoreWrapper.Dispose();\r\n        this.sceneWrapper.Dispose();\r\n    }\r\n    Dummy() {/* */ }\r\n}"],"names":["Asset","constructor","ViewWrapper","app","this","CAMERA_TYPE","TYPE","CameraControllerThree","canvas","width","height","type","PERSPECTIVE","cameraP","cameraO","controls","initX","initY","prevX","prevY","yRotRate","xRotRate","xPanRate","yPanRate","zPanRate","rotateRate","panRate","zoomRate","zoomFactor","frustumSize","cameraShift","ableToMove","stereoCamera","GetPerspective","ORTHOGRAPHIC","GetOrthographic","STEREO","GetStereo","THREE","aspect","camera","x","y","z","position","set","InitOrbitController","OrbitControls","renderer","domElement","minDistance","maxDistance","enablePan","enableZoom","Math","PI","EnableDamping","v","factor","enableDamping","dampingFactor","MouseDown","MouseMove","shift","dx","dy","panLeft","matrix","panUp","rotateLeft","rotateUp","MouseWheel","dd","length","ShiftCamera","MouseEventController","e","CLICK_TYPE","pressedShift","wheel","CanvasThree","canvasWrapper","hostDiv","scene","vrBtn","bg","isActive","Init","clientWidth","clientHeight","antialias","alpha","setPixelRatio","id","style","pointerEvents","setSize","appendChild","RenderLoop","requestAnimationFrame","UpdateBinding","update","render","console","log","ResizeCanvas","updateProjectionMatrix","ResizeEffect","Remove","children","remove","CanvasWrapper","graphicsCoreWrapper","canvasThree","divHost","GraphicsCoreWrapper","Resize","Dispose","ActiveCommandController","MouseUpPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseDrag","GeometryCommon","listMesh","raycaster","m","point","params","Points","threshold","Raycast","setFromCamera","intersects","intersectObjects","d","RaycastPoint","LightingController","sceneWrapper","hemiLight","dirLight","color","setHSL","groundColor","add","multiplyScalar","castShadow","shadow","mapSize","left","right","top","bottom","bias","near","far","visible","Node","_p0","_u0","_mass","p","NVector3","f","u","Fixed","isCapture","Move","dt","damping","groundZ","Mult","Add","Edge","_n0","_n1","n0","n1","targetLength","springConstant","Distance","ApplySpringForce","dp","dist","Length","Unitize","Graph","nodes","edges","InitTemplate","rx","ry","x0","y0","x1","y1","particle","i","AddNode","thread","AddEdge","grid","j","fabric","k","curtain","tensileStructure","network","random","InitGridXY","nbase","InitTruss","p0","p1","Clone","ni","Clear","n","push","atr","g","step","dv","L","exp","FindNode","Point","geometry","material","pointCloud","verticesArray","num","initGeometry","initMaterial","initPointCloud","addInitialPoint","Float32Array","setAttribute","size","opacity","transparent","updateGeometry","click","newVerticesArray","index","attributes","needsUpdate","computeBoundingSphere","dispose","Lines","lineSegments","vertices","initLineSegments","addLine","z1","x2","y2","z2","clear","Dynamics","gravity","timeStep","_capture","capture","GetPointForRaycast","geo","Update","r","b","colorsNeedUpdate","verticesNeedUpdate","node","undefined","SceneWrapper","activeCommandController","geometryCommon","lightingController","definition","pos","MouseEventData","preX","preY","preZ","yGLPicking","isDown","isDoubleClick","isMove","pressedAlt","pressedCtrl","lat","long","preWheel","native","DeepCopy","mEvent","MouseInteraction","mouseInteractionUI","mouseEventDataPre","isEnable","clickCount","prevent","delay","timer","down","_stopPropagation","InitNativeMouseEvent","div","onclick","setTimeout","MouseClick","stopPropagation","ondblclick","clearTimeout","onmousedown","onmouseup","onmousemove","addEventListener","deltaY","CommonEventBuilder","MouseEvenEmitting","button","buttons","shiftKey","altKey","ctrlKey","offsetX","offsetY","mouseEventData","IO","mouseInteraction","DynamicSpringTruss","asset","viewWrapper","io","document","getElementById","Dummy"],"sourceRoot":""}