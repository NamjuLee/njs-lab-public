{"version":3,"file":"static/js/5425.074ccdcb.chunk.js","mappings":"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","sources":["njslab/Tools/BezierCurve/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    p0: Vector;\r\n    p1: Vector;\r\n    p2: Vector;\r\n    p3: Vector;\r\n\r\n    N = 10;\r\n\r\n    m: Vector = new Vector(0,0);\r\n\r\n    down = false;\r\n    capture = undefined;\r\n\r\n    ptsList: Vector[] = [];\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n        this.p0 = new Vector(80, 120);\r\n        this.p1 = new Vector(50, 50);\r\n        this.p2 = new Vector(180, 50);\r\n        this.p3 = new Vector(250, 120);\r\n        this.ptsList = [this.p0, this.p1, this.p2, this.p3];\r\n\r\n        const slider = getSlider('N', 1, 10);\r\n        this.divHost.appendChild(slider.div);\r\n        slider.slider.oninput = () => {\r\n            this.N = +slider.slider.value\r\n            // console.log(slider.slider.value)\r\n            slider.text.innerText = 'N: ' + this.N;\r\n        }\r\n        // const log = document.getElementById('log');\r\n        // const slider = document.getElementById('myRange');\r\n        // slider.inpu\r\n        // slider.oninput = () => {\r\n        //     this.N = +slider.value;\r\n        //     // render();\r\n        //     log.innerHTML = 'N: ' + N;\r\n        //     // console.log(N)\r\n        // }\r\n\r\n        this.start();\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        // this.down = true;\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let i = 0; i < this.ptsList.length; ++i) {\r\n\r\n            const dis = this.ptsList[i].distanceTo(this.m);\r\n\r\n            if (dis < 10) {\r\n                this.capture = this.ptsList[i];\r\n                // console.log(this.ptsList[i]);\r\n            }\r\n\r\n        }\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.capture = undefined;\r\n        // this.down = false;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        if (this.capture) {\r\n            this.capture.x = x;\r\n            this.capture.y = y;\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n\r\n        this.p0.draw(ctx);\r\n        this.p1.draw(ctx);\r\n        this.p2.draw(ctx);\r\n        this.p3.draw(ctx);\r\n\r\n\r\n        let pts = [];\r\n\r\n        let interval = 1.0 / this.N;\r\n        for (let i = 0; i <= this.N; ++i) {\r\n            let theInterval = interval * i;\r\n            let v = DeCasteljausAlgorithm(this.p0, this.p1, this.p2, this.p3, interval * i);\r\n            pts.push(v);\r\n        }\r\n\r\n        ctx.strokeStyle = '#00ffff';\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        for (let i = 0; i < pts.length - 1; ++i) {\r\n            ctx.moveTo(pts[i].x, pts[i].y)\r\n            ctx.lineTo(pts[1 + i].x, pts[1 + i].y)\r\n        }\r\n        ctx.stroke();\r\n\r\n\r\n        ctx.strokeStyle = '#000';\r\n        ctx.lineWidth = 1;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p2.x, this.p2.y);\r\n        ctx.lineTo(this.p3.x, this.p3.y);\r\n        ctx.stroke();\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n\r\n}\r\n\r\n\r\n// https://codepen.io/NJStudio/pen/zYwZmEL?editors=1010\r\nclass Vector {\r\n    x = 0;\r\n    y = 0;\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    distanceTo(other: Vector) {\r\n        return Math.sqrt((other.x - this.x) * (other.x - this.x) + (other.y - this.y) * (other.y - this.y));\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, 5.0, 0.0, 3.14159 * 2)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\nconst interpolation = (p0: Vector, p1: Vector, t0: number, t1: number) => {\r\n    return new Vector(\r\n        t1 * p0.x + t0 * p1.x,\r\n        t1 * p0.y + t0 * p1.y\r\n    );\r\n};\r\nconst DeCasteljausAlgorithm = (p0: Vector, p1: Vector, p2: Vector, p3: Vector, t0: number) => {\r\n    //Linear interpolation = lerp = (1 - t) * A + t * B\r\n    let t1 = 1.0 - t0;\r\n    //Layer 1 \r\n    let QVector = interpolation(p0, p1, t0, t1);\r\n    let RVector = interpolation(p1, p2, t0, t1);\r\n    let SVector = interpolation(p2, p3, t0, t1);\r\n\r\n    //Layer 2\r\n    let PVector = interpolation(QVector, RVector, t0, t1);\r\n    let TVector = interpolation(RVector, SVector, t0, t1);\r\n\r\n    //Final interpolated position\r\n    return interpolation(PVector, TVector, t0, t1);\r\n};\r\n\r\n// ..\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.innerText = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider, text\r\n    };\r\n};"],"names":["Solution","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","p0","p1","p2","p3","N","m","Vector","down","capture","undefined","ptsList","canvas","position","slider","getSlider","oninput","value","text","innerText","start","x","y","i","length","distanceTo","ctx","clearRect","draw","pts","interval","v","DeCasteljausAlgorithm","push","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","RendererCanvas","other","Math","sqrt","fillStyle","arc","closePath","fill","interpolation","t0","t1","QVector","RVector","SVector","PVector","TVector","title","min","max","type","color"],"sourceRoot":""}