{"version":3,"file":"static/js/1874.deb00ca9.chunk.js","mappings":"+OAEaA,EAAQ,WAGjB,WAAYC,IAAe,oBAFpBA,aAAO,OACPC,cAAQ,EAEXC,KAAKF,QAAUA,EAGfE,KAAKF,QAAQG,MAAMC,QAAU,OAC7BF,KAAKF,QAAQG,MAAME,WAAa,SAEhC,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIH,MAAMM,WAAa,OACvBH,EAAIH,MAAMO,YAAc,OACxBJ,EAAIH,MAAMQ,gBAAkB,OAC5BL,EAAIH,MAAMS,MAAQ,SAClBN,EAAIH,MAAMU,OAAS,QAEnBX,KAAKF,QAAQc,YAAYR,GAKzBJ,KAAKD,SAAW,IAAIc,EAAST,EAKjC,CAMC,OANA,+BACD,WAEI,IADAJ,KAAKD,SAASe,UACPd,KAAKF,QAAQiB,kBAChBf,KAAKF,QAAQkB,YAAYhB,KAAKF,QAAQiB,iBAE9C,KAAC,EAjCgB,GAoCRF,EAAQ,0CAEjB,WAAYT,GAAW,IAAD,EAWL,OAXK,gBAClB,cAAMA,IACDa,OAAOhB,MAAMiB,SAAW,WAC7B,EAAKD,OAAOhB,MAAMS,MAAQ,OAC1B,EAAKO,OAAOhB,MAAMU,OAAS,OAO3B,EAAKQ,QAAQ,CACjB,CAQC,OARA,8BACD,SAAcC,GAMV,KACH,EAtBgB,CAASC,EAAAA,G","sources":["njslab/Tools/DijkstrasAlgorithm/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(divHost: any) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        // console.log(this.renderer);\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n\r\n}"],"names":["Solution","divHost","renderer","this","style","display","alignItems","div","document","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","destroy","lastElementChild","removeChild","canvas","position","start","ctx","RendererCanvas"],"sourceRoot":""}