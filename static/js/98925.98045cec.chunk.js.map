{"version":3,"file":"static/js/98925.98045cec.chunk.js","mappings":"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","sources":["njslab/app-legacy/Implementation/Envs/AppThreeEnv/IO/Mouseinteraction/MouseInteraction.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/IO/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/Asset/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/ViewWrapper/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CoreThree/CameraController.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/GraphicsCoreWrapper/CanvasWrapper/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/GraphicsCoreWrapper/ThemeWrapper/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/GraphicsCoreWrapper/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/Base/GeometryGlobeBase.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/RPointThreeGlobe.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/LineThreeGlobe.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/LineSpikeThreeGlobe.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/ArcSpikeThreeGlobe.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/CircleTrajectoryThreeGlobe.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/CircleThreeGlobe.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryGlobe/PolylineThreeGlobe.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/ActiveCommand/ActiveCommandImplementation.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/ActiveCommand/ActiveCommandController.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/GeometryCommon/GeometryCommon.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/Light/LightingController.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/SceneWrapper/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/NUIWrapper/index.ts","njslab/app-legacy/Implementation/Envs/AppThreeEnv/index.ts"],"sourcesContent":["import { CLICK_TYPE, ActiveCommandBase } from '../../../../../NJSCore';\r\n\r\n// import {IOWrapper} from '../'\r\nimport { AppThreeEnv } from '../..';\r\n\r\nexport interface IMouseInteractionMenu {\r\n  MouseInteractionMenu: (mouseEventData: MouseEventData) => void;\r\n}\r\n\r\nexport class MouseEventData {\r\n  model: AppThreeEnv;\r\n  x: number = -1; y: number = -1; z: number = -1;\r\n  preX: number = -1; preY: number = -1; preZ: number = -1;\r\n  yGLPicking: number;\r\n  command: ActiveCommandBase; // = new CActiveCommandNone(this.app.activeCommands);\r\n  CLICK_TYPE: CLICK_TYPE = CLICK_TYPE.MOVE;\r\n  isDown: boolean = false;\r\n  isDoubleClick: boolean = false;\r\n  isMove: boolean = false;\r\n  pressedShift: boolean = false;\r\n  pressedAlt: boolean = false;\r\n  pressedCtrl: boolean = false;\r\n\r\n  lat: number = -1;\r\n  long: number = -1;\r\n  wheel: number = 0;\r\n  preWheel: number = 0;\r\n  isActive: boolean = true;\r\n  // premEvent: MouseEventData;\r\n  native: MouseEvent;\r\n  constructor(model?: AppThreeEnv) {\r\n    if (model !== null && model !== undefined) { this.model = model; }\r\n  }\r\n  DeepCopy() {\r\n    let mEvent = new MouseEventData(this.model);\r\n    mEvent.x = this.x; mEvent.y = this.y; mEvent.z = this.z; mEvent.preX = this.preX; mEvent.preY = this.preY; mEvent.preZ = this.preZ;\r\n    mEvent.pressedAlt = this.pressedAlt; mEvent.pressedShift = this.pressedShift; mEvent.pressedCtrl = this.pressedCtrl;\r\n    mEvent.isDoubleClick = this.isDoubleClick; mEvent.isDown = this.isDown; mEvent.isMove = this.isMove;\r\n    mEvent.lat = this.lat; mEvent.long = this.long; mEvent.wheel = this.wheel; mEvent.preWheel = this.preWheel;\r\n    mEvent.yGLPicking = this.yGLPicking;\r\n    mEvent.CLICK_TYPE = this.CLICK_TYPE;\r\n    mEvent.command = this.command;\r\n    mEvent.native = this.native;\r\n    return mEvent;\r\n  }\r\n}\r\n\r\nexport class MouseInteraction {\r\n  mouseInteractionUI: IMouseInteractionMenu;\r\n  mouseEventDataPre: MouseEventData = new MouseEventData();\r\n  model: AppThreeEnv;\r\n\r\n  isEnable: boolean = true;\r\n\r\n  clickCount: number = 0;\r\n\r\n  click: boolean = false;\r\n  prevent: boolean = false;\r\n  delay: number = 250;\r\n  timer: NodeJS.Timer | number;\r\n  down: boolean = false;\r\n  e: MouseEventData;\r\n  private _stopPropagation: boolean = false;\r\n\r\n  constructor(model: AppThreeEnv) {\r\n    this.model = model;\r\n    // this.mouseEventDataPre = new MouseEventData();\r\n\r\n  }\r\n  InitNativeMouseEvent(div: HTMLElement) {\r\n    div.onclick = (e: MouseEvent) => {\r\n      this.prevent = false;\r\n      this.timer = setTimeout(\r\n        () => {\r\n          if (!this.prevent) {\r\n            this.MouseClick(e);\r\n            e.stopPropagation();\r\n          }\r\n          this.prevent = false;\r\n        },\r\n        this.delay);\r\n    };\r\n    div.ondblclick = (e: MouseEvent) => {\r\n      clearTimeout(this.timer as number);\r\n      this.prevent = true;\r\n      this.MouseDoubleClick(e);\r\n    };\r\n    div.onmousedown = (e: MouseEvent) => { this.MouseDown(e); e.stopPropagation(); };\r\n    div.onmouseup = (e: MouseEvent) => { this.MouseUp(e); e.stopPropagation(); };\r\n    div.onmousemove = (e: MouseEvent) => { this.MouseMove(e); e.stopPropagation(); };\r\n    div.addEventListener('wheel', (e: WheelEvent) => { this.MouseWheel(e, e.deltaY); e.stopPropagation(); });\r\n  }\r\n\r\n  MouseDown(e: MouseEvent) {\r\n    this.click = true;\r\n    this.down = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOWN;\r\n    mEvent.isDown = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseClick(e: MouseEvent) {\r\n    if (!this.click) { return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    if (e.button === 0) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.LEFT;\r\n    } else if (e.button === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.MIDDLE;\r\n    } else if (e.button === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDoubleClick(e: MouseEvent) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOUBLE;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDrag(e: MouseEvent) {\r\n    this.click = false;\r\n    this.prevent = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    mEvent.isDown = true;\r\n    if (e.buttons === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    } else if (e.buttons === 4) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_MIDDLE;\r\n    } else if (e.buttons === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseMove(e: MouseEvent) {\r\n    if (this.down) { this.MouseDrag(e); return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    mEvent.isDown = true;\r\n    this.prevent = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseUp(e: MouseEvent) {\r\n    this.down = false;\r\n    this.click = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.UP;\r\n    mEvent.isDown = false;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseWheel(e: MouseEvent, v: number) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.wheel = v;\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.WHEEL;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  CommonEventBuilder(e: MouseEvent): MouseEventData {\r\n    let mEvent: MouseEventData = new MouseEventData(this.model);\r\n    mEvent.preX = this.mouseEventDataPre.x;\r\n    mEvent.preY = this.mouseEventDataPre.y;\r\n    // mEvent.premEvent = this.mouseEventDataPre;\r\n\r\n    mEvent.pressedShift = e.shiftKey;\r\n    mEvent.pressedAlt = e.altKey;\r\n    mEvent.pressedCtrl = e.ctrlKey;\r\n\r\n    mEvent.x = e.offsetX;\r\n    mEvent.y = e.offsetY;\r\n    mEvent.preWheel = this.mouseEventDataPre.wheel;\r\n    mEvent.wheel = 0;\r\n    mEvent.native = e;\r\n    this.mouseEventDataPre = mEvent;\r\n    this.e = mEvent;\r\n    return mEvent;\r\n  }\r\n  get stopPropagation() {\r\n    return this._stopPropagation;\r\n  }\r\n  set stopPropagation(v: boolean) {\r\n    if (v) {\r\n      this._stopPropagation = v;\r\n    } else {\r\n      setTimeout(() => { this._stopPropagation = v; }, 500);\r\n      // this._stopPropagation = v;\r\n    }\r\n  }\r\n  MouseEvenEmitting(mouseEventData: MouseEventData) {\r\n    this.model.graphicsCoreWrapper.app.MouseEventController(mouseEventData);\r\n  }\r\n}","import { AppThreeEnv } from '..';\r\n\r\nimport { MouseInteraction } from './Mouseinteraction/MouseInteraction';\r\n\r\nexport class IO {\r\n    app: AppThreeEnv;\r\n    mouseInteraction: MouseInteraction;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n\r\n        this.mouseInteraction = new MouseInteraction(this.app);\r\n        if (!this.app.isVR) { this.mouseInteraction.InitNativeMouseEvent(this.app.divHost); }\r\n    }\r\n}","\r\nconst rPoint = require('./obj/rPoint.json');\r\n\r\nexport class Asset {\r\n\r\n    // tslint:disable-next-line:no-any\r\n    rPoint: any;\r\n\r\n    constructor() {\r\n        this.rPoint = rPoint;\r\n    }\r\n}","import { AppThreeEnv } from '..';\r\n\r\n\r\n// import { IndependentPanel } from '../../../../../NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanel';\r\n\r\nexport class ViewWrapper {\r\n    app: AppThreeEnv;\r\n    // independentPanel: IndependentPanel;\r\n    div: HTMLElement;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n        if (this.app.isVR) {\r\n            // this.div = this.app.nUI.divHost;\r\n        } else {\r\n            // this.independentPanel = new IndependentPanel(this.app.nUI.independentPanelWrapper, 100, 100, 450, 350, true);\r\n            // this.independentPanel.title = 'Globe Network B ';\r\n            // this.independentPanel.btnHam.isHidden = true;\r\n            // this.independentPanel.btnMini.isHidden = true;\r\n            // this.independentPanel.setTopColorTheme(this.app.nUI.themeType);\r\n            // this.div = this.independentPanel.bodyDiv.div;\r\n\r\n            // this.independentPanel.RemovePost = () => this.app.Dispose();\r\n            // this.independentPanel.btnResize.ResizePropagation = (width: number, height: number) => { this.app.Resize(width, height); };\r\n        }\r\n        // this.div.style.pointerEvents = 'auto';\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\nimport { MouseEventData, CLICK_TYPE } from '../../../../../../../NJSCore';\r\nimport { CanvasThree } from '../CanvasThree';\r\nexport enum CAMERA_TYPE {\r\n    PERSPECTIVE = 'PERSPECTIVE',\r\n    ORTHOGRAPHIC = 'ORTHOGRAPHIC',\r\n    STEREO = 'STEREO'\r\n}\r\nexport class CameraControllerThree {\r\n\r\n    canvas: CanvasThree;\r\n    cameraP: THREE.PerspectiveCamera; // Camera;\r\n    cameraO: THREE.OrthographicCamera; // Camera;\r\n    controls: OrbitControls;\r\n\r\n    initX: number = 0;\r\n    initY: number = 0;\r\n    prevX: number = 0;\r\n    prevY: number = 0;\r\n\r\n    yRotRate: number;\r\n    xRotRate: number;\r\n    xPanRate: number;\r\n    yPanRate: number;\r\n    zPanRate: number;\r\n\r\n    rotateRate: number = 150; // 0.000000001; // 150;\r\n    panRate: number = 50; // 0.000000001; // 400;\r\n    zoomRate: number = 200; // 0.000000001; // 200;\r\n\r\n    zoomFactor: number = 1;\r\n\r\n    frustumSize: number = 0.001; // 500;\r\n\r\n    type: CAMERA_TYPE;\r\n    cameraShift: number = 0;\r\n\r\n    width: number;\r\n    height: number;\r\n    ableToMove: boolean = true;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    stereoCamera: THREE.StereoCamera;\r\n\r\n    constructor(canvas: CanvasThree, width: number, height: number, type: CAMERA_TYPE = CAMERA_TYPE.PERSPECTIVE) {\r\n        this.canvas = canvas;\r\n        this.type = type;\r\n        this.width = width; this.height = height;\r\n        // this.aspect = width / height;\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.GetPerspective(0, 2.3, 4);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.GetOrthographic();\r\n        } else if (this.type === CAMERA_TYPE.STEREO) {\r\n            this.GetStereo();\r\n        }\r\n        this.stereoCamera = new THREE.StereoCamera(); // (this.canvas.renderer);\r\n    }\r\n    GetStereo() {\r\n\r\n        // console.log(StereoEffect);\r\n        // console.log(DeviceOrientationControls);\r\n\r\n    }\r\n    set aspect(aspect: number) {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.cameraP.aspect = aspect;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            //\r\n        }\r\n    }\r\n    get aspect() {\r\n        return this.width / this.height;\r\n    }\r\n    get camera() {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            return this.cameraP;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            return this.cameraO;\r\n        } else {\r\n            return this.cameraP;\r\n        }\r\n    }\r\n    GetPerspective(x: number = 0, y: number = 2, z: number = 2) {\r\n        this.cameraP = new THREE.PerspectiveCamera(45, this.width / this.height, 0.01, 10000);\r\n        this.cameraP.position.set(x, y, z);\r\n        this.InitOrbitController();\r\n    }\r\n    GetOrthographic() {\r\n        this.cameraO = new THREE.OrthographicCamera(this.frustumSize * this.aspect / - 2, this.frustumSize * this.aspect / 2, this.frustumSize / 2, this.frustumSize / - 2, 0.01, 50000);\r\n        this.cameraO.position.set(0, 1, 0);\r\n        this.InitOrbitController();\r\n    }\r\n    InitOrbitController() {\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.controls = new OrbitControls(this.cameraP, this.canvas.renderer.domElement);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.controls = new OrbitControls(this.cameraO, this.canvas.renderer.domElement);\r\n        }\r\n        // this.controls.panningMode = THREE.HorizontalPanning; // default is THREE.ScreenSpacePanning\r\n        this.controls.minDistance = 0.01;\r\n        this.controls.maxDistance = 500;\r\n        // this.controls.maxPolarAngle = Math.PI / 2;\r\n        this.controls.enablePan = true;\r\n        this.controls.enableZoom = true;\r\n\r\n        this.yRotRate = this.rotateRate / this.width * Math.PI / 90;\r\n        this.xRotRate = this.rotateRate / this.height * Math.PI / 180;\r\n        this.xPanRate = (this.panRate / this.width) * this.zoomFactor;\r\n        this.yPanRate = (this.panRate / this.height) * this.zoomFactor;\r\n        this.zPanRate = this.zoomRate / this.height;\r\n        // this.EnableDamping(true);\r\n\r\n        // this.controls.maxPolarAngle = 1.5; // ground\r\n    }\r\n    EnableDamping(v: boolean, factor: number = 0.35) {\r\n        this.controls.enableDamping = v; // an animation loop is required when either damping or auto-rotation are enabled\r\n        this.controls.dampingFactor = factor;\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.initX = this.prevX = x; // - this.offsetX;\r\n        this.initY = this.prevY = y; // - this.offsetY;\r\n    }\r\n    MouseMove(x: number, y: number, shift: boolean = false) {\r\n        if (!this.ableToMove) { return; }\r\n\r\n        // console.log(x,y)\r\n        const dx = x - this.prevX;\t\t// Difference since last mouse move\r\n        const dy = y - this.prevY;\r\n\r\n        // When shift is being helt down, we pan around else we rotate.\r\n        if (!shift) {\r\n            this.controls.rotateLeft(dx * this.xRotRate);\r\n            this.controls.rotateUp(dy * this.yRotRate);\r\n        } else {\r\n            // this.controls.pan(dx * this.xPanRate, dy * this.yPanRate);\r\n\r\n            this.controls.panLeft(dx * this.xPanRate, this.cameraP.matrix);\r\n            this.controls.panUp(dy * this.yPanRate, this.cameraP.matrix);\r\n\r\n            // this.camera.transform.position.x += -dx * this.xPanRate;\r\n            // this.camera.transform.position.y += dy * this.yPanRate;\r\n        }\r\n        // this.controls.panUp(0.001, this.camera.matrix);\r\n        this.prevX = x;\r\n        this.prevY = y;\r\n        // this.controls.update();\r\n    }\r\n    MouseWheel(v: number) {\r\n        // console.log(v);\r\n        this.controls.enableZoom = true;\r\n        v *= 0.1;\r\n\r\n        const dd = this.cameraP.position.length() * 100;\r\n\r\n        this.zoomFactor = dd;\r\n\r\n        if (v > 0) {\r\n            this.cameraP.position.x *= 0.9;\r\n            this.cameraP.position.y *= 0.9;\r\n            this.cameraP.position.z *= 0.9;\r\n        } else {\r\n            this.cameraP.position.x *= 1.1;\r\n            this.cameraP.position.y *= 1.1;\r\n            this.cameraP.position.z *= 1.1;\r\n        }\r\n\r\n    }\r\n    ShiftCamera() {\r\n        this.cameraShift++;\r\n        if (this.cameraShift === 2) { this.cameraShift = 0; }\r\n        if (this.cameraShift === 0) {\r\n            this.GetPerspective();\r\n        } else if (this.cameraShift === 1) {\r\n            this.GetOrthographic();\r\n        }\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DOWN) { this.MouseDown(e.x, e.y); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DRAG) { this.MouseMove(e.x, e.y, e.pressedShift); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) { this.MouseWheel(e.wheel); }\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { CanvasWrapper } from '..';\r\nimport { CameraControllerThree } from './CoreThree/CameraController';\r\n\r\nexport class CanvasThree {\r\n    hostDiv: HTMLElement;\r\n    camera: CameraControllerThree;\r\n    scene: THREE.Scene;\r\n    renderer: THREE.WebGLRenderer;\r\n\r\n    canvasWrapper: CanvasWrapper;\r\n\r\n    vrBtn: HTMLElement;\r\n    bg: number = 0x000000;\r\n    isActive: boolean = true;\r\n\r\n    constructor(canvasWrapper: CanvasWrapper, hostDiv: HTMLElement) {\r\n        this.canvasWrapper = canvasWrapper;\r\n        this.hostDiv = hostDiv;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        const width = this.hostDiv.clientWidth;\r\n        const height = this.hostDiv.clientHeight;\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setPixelRatio(width / height);\r\n\r\n        this.camera = new CameraControllerThree(this, width, height);\r\n        this.scene = new THREE.Scene();\r\n\r\n        this.renderer.domElement.id = 'THREE_WALLPAPER';\r\n        this.renderer.domElement.style.position = 'absolute';\r\n        this.renderer.domElement.style.pointerEvents = 'none';\r\n\r\n        this.renderer.setSize(width, height);\r\n        this.hostDiv.appendChild(this.renderer.domElement);\r\n\r\n        this.RenderLoop(this);\r\n    }\r\n    RenderLoop(canvas: CanvasThree) {\r\n        if (!this.isActive) { return; }\r\n        requestAnimationFrame(() => { this.RenderLoop(this); });\r\n        this.UpdateBinding();\r\n\r\n        this.camera.controls.update();\r\n        this.renderer.render(this.scene, this.camera.camera);\r\n    }\r\n    UpdateBinding() {\r\n        console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.camera.aspect = width / height;\r\n        this.camera.camera.updateProjectionMatrix(); // updateMatrix(); // updateProjectionMatrix();\r\n        this.renderer.setSize(width, height);\r\n    }\r\n    ResizeEffect(width: number, height: number) {\r\n        // this.camera.effect.setSize(width, height);\r\n    }\r\n    Remove() {\r\n        while (this.scene.children.length) {\r\n            this.scene.remove(this.scene.children[0]);\r\n        }\r\n    }\r\n\r\n}","import { GraphicsCoreWrapper } from '..';\r\nimport { CanvasThree } from './CanvasThree/CanvasThree';\r\n\r\nexport class CanvasWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    canvasThree: CanvasThree;\r\n\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n\r\n        this.canvasThree = new CanvasThree(this, this.graphicsCoreWrapper.app.divHost);\r\n    }\r\n}","import { GraphicsCoreWrapper } from '..';\r\n\r\nexport class ThemeWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n    }\r\n}","\r\nimport { AppThreeEnv } from '..';\r\n\r\nimport { CanvasWrapper } from './CanvasWrapper';\r\nimport { ThemeWrapper } from './ThemeWrapper';\r\n\r\nexport class GraphicsCoreWrapper {\r\n    app: AppThreeEnv;\r\n    canvasWrapper: CanvasWrapper;\r\n    themeWrapper: ThemeWrapper;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n        this.canvasWrapper = new CanvasWrapper(this);\r\n        this.themeWrapper = new ThemeWrapper(this);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.canvasWrapper.canvasThree.ResizeCanvas(width, height);\r\n    }\r\n    Dispose() {\r\n        this.canvasWrapper.canvasThree.isActive = false;\r\n    }\r\n}","export class GeometryGlobeBase {\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { MouseEventData } from '../../../../../../NJSCore';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class RPointThreeGlobe extends GeometryGlobeBase {\r\n    sceneWrapper: SceneWrapper;\r\n    geometry: THREE.BufferGeometry;\r\n    material: THREE.MeshPhongMaterial;\r\n    mesh: THREE.Mesh;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const p = new RPointThreeGlobe(sceneWrapper, e.x, e.y);\r\n        console.log(p);\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n\r\n        const json = this.sceneWrapper.app.asset.rPoint;\r\n\r\n        const vertices = new Float32Array(json['v'].flat());\r\n        const faces = new Uint32Array(json['f'].flat());\r\n        const colors = new Float32Array(json['vc'].flat());\r\n\r\n        this.geometry = new THREE.BufferGeometry();\r\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n        this.geometry.setIndex(new THREE.BufferAttribute(faces, 1));\r\n        this.geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\r\n        // Applying transformations\r\n        const scaleMatrix = new THREE.Matrix4().makeScale(0.03, 0.03, 0.03);\r\n        this.geometry.applyMatrix4(scaleMatrix);\r\n\r\n        this.geometry.computeVertexNormals();\r\n        this.geometry.computeBoundingBox();\r\n\r\n        this.material = new THREE.MeshPhongMaterial({ color: 0x00ff00, vertexColors: true });\r\n\r\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n        this.mesh.castShadow = true;\r\n        this.mesh.receiveShadow = true;\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        this.mesh.applyMatrix4(matrix);\r\n\r\n        this.sceneWrapper.scene.add(this.mesh);\r\n    }\r\n}\r\n","import { MouseEventData } from '../../../../../../NJSCore';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class LineThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01);\r\n        this.vs.push(v);\r\n        console.log(this.vs);\r\n        if (this.vs.length > 1) {\r\n            const m = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', false);\r\n            sceneWrapper.scene.add(m);\r\n            this.vs = [];\r\n        }\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static setArc3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // Calculate normal\r\n        let cb = new THREE.Vector3();\r\n        let ab = new THREE.Vector3();\r\n        let normal = new THREE.Vector3();\r\n\r\n        cb.subVectors(new THREE.Vector3(), pointEnd);\r\n        ab.subVectors(pointStart, pointEnd);\r\n        cb.cross(ab);\r\n        normal.copy(cb).normalize();\r\n\r\n        // Get angle between vectors\r\n        let angle = pointStart.angleTo(pointEnd);\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        let angleDelta = angle / (smoothness - 1);\r\n\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            vertices.push(...pointStart.clone().applyAxisAngle(normal, angleDelta * i).toArray());\r\n        }\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        const material = new THREE.LineBasicMaterial({ color: color });\r\n        const arc = new THREE.Line(geometry, material);\r\n        return arc;\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData, ColorUtility } from '../../../../../../NJSCore';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class LineSpikeThreeGlobe extends GeometryGlobeBase {\r\n\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v1 = new THREE.Vector3(0, 0, 0);\r\n        v1.applyMatrix4(matrix);\r\n        v1.multiplyScalar(1.01);\r\n        console.log(v1);\r\n\r\n        const v2 = v1.clone();\r\n        v2.multiplyScalar(Math.random() * 2 + 1.1);\r\n\r\n        const col = ColorUtility.GetRandomHex();\r\n\r\n        const m = this.LineSpike(v1, v2, col);\r\n        sceneWrapper.scene.add(m);\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: col });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static LineSpike(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, color: string) {\r\n        const vertices = new Float32Array([\r\n            pointStart.x, pointStart.y, pointStart.z,\r\n            pointEnd.x, pointEnd.y, pointEnd.z,\r\n        ]);\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        return new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: color }));\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData, ColorUtility } from '../../../../../../NJSCore';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class ArcSpikeThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        const col = ColorUtility.GetRandomColor();\r\n        v.applyMatrix4(matrix);\r\n        this.vs.push(v);\r\n\r\n        if (this.vs.length > 1) {\r\n            const p0 = this.vs[0].clone();\r\n            const p3 = this.vs[1].clone();\r\n\r\n            const p1 = p0.clone().multiplyScalar(2.4);\r\n            const p2 = p3.clone().multiplyScalar(2.4);\r\n\r\n            const p9 = new THREE.Vector3().addVectors(p1, p2).multiplyScalar(0.5);\r\n\r\n            const curve = new THREE.QuadraticBezierCurve3(p0, p9, p3);\r\n            const points = curve.getPoints(50);\r\n            const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n            const material = new THREE.LineBasicMaterial({ color: col });\r\n            const curveObject = new THREE.Line(geometry, material);\r\n\r\n            sceneWrapper.scene.add(curveObject);\r\n            this.vs = [];\r\n        }\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData, ColorUtility } from '../../../../../../NJSCore';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class CircleTrajectoryThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        const col = ColorUtility.GetRandomColor();\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01 + Math.random());\r\n        this.vs.push(v);\r\n\r\n        if (this.vs.length > 1) {\r\n            const m0 = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, col, false);\r\n            const m1 = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, col, true);\r\n            sceneWrapper.scene.add(m0);\r\n            sceneWrapper.scene.add(m1);\r\n            this.vs = [];\r\n        }\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static setArc3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // calculate normal\r\n        let cb = new THREE.Vector3();\r\n        let ab = new THREE.Vector3();\r\n        let normal = new THREE.Vector3();\r\n\r\n        cb.subVectors(new THREE.Vector3(), pointEnd);\r\n        ab.subVectors(pointStart, pointEnd);\r\n        cb.cross(ab);\r\n        normal.copy(cb).normalize();\r\n\r\n        // get angle between vectors\r\n        let angle = pointStart.angleTo(pointEnd);\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        let angleDelta = angle / (smoothness - 1);\r\n\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            vertices.push(pointStart.clone().applyAxisAngle(normal, angleDelta * i).toArray());\r\n        }\r\n\r\n        const flatVertices = vertices.flat();\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(flatVertices, 3));\r\n\r\n        return new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: color }));\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData } from '../../../../../../NJSCore';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class CircleThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01);\r\n        this.vs.push(v);\r\n\r\n        if (this.vs.length > 1) {\r\n            const m0 = this.setCircle3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', false);\r\n            const m1 = this.setCircle3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', true);\r\n            sceneWrapper.scene.add(m0);\r\n            sceneWrapper.scene.add(m1);\r\n            this.vs = [];\r\n        }\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    static setCircle3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // calculate center point\r\n        const center = new THREE.Vector3().addVectors(pointStart, pointEnd).multiplyScalar(0.5);\r\n\r\n        // calculate normal vector\r\n        const normal = new THREE.Vector3().subVectors(pointEnd, pointStart).normalize();\r\n\r\n        // get angle between vectors\r\n        let angle = Math.PI;\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        const angleDelta = angle / (smoothness - 1);\r\n\r\n        // create vertices for the circle\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            const angle = angleDelta * i;\r\n            const x = center.x + normal.x * Math.cos(angle) - normal.y * Math.sin(angle);\r\n            const y = center.y + normal.y * Math.cos(angle) + normal.x * Math.sin(angle);\r\n            const z = center.z;\r\n            vertices.push(x, y, z);\r\n        }\r\n\r\n        // create BufferGeometry\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        // create line mesh\r\n        const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: color }));\r\n\r\n        return line;\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n        mesh.applyMatrix4(matrix);\r\n\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { MouseEventData } from '../../../../../../NJSCore';\r\nimport { GeometryGlobeBase } from './Base/GeometryGlobeBase';\r\nimport { SceneWrapper } from '../..';\r\nimport * as THREE from 'three';\r\n\r\nexport class PolylineThreeGlobe extends GeometryGlobeBase {\r\n    static vs: THREE.Vector3[] = [];\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    public static MouseLeftClick(sceneWrapper: SceneWrapper, e: MouseEventData) {\r\n        const matrix = sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(e.x, e.y);\r\n        const v = new THREE.Vector3(0, 0, 0);\r\n        v.applyMatrix4(matrix);\r\n        v.multiplyScalar(1.01);\r\n        this.vs.push(v);\r\n        console.log(this.vs);\r\n        if (this.vs.length > 1) {\r\n            const m = this.setArc3D(this.vs[this.vs.length - 2], this.vs[this.vs.length - 1], 100, '#00ff00', false);\r\n            sceneWrapper.scene.add(m);\r\n        }\r\n\r\n        const sphere = new THREE.SphereGeometry(0.01);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(sphere, material);\r\n        mesh.applyMatrix4(matrix);\r\n        mesh.position.multiplyScalar(1.01);\r\n        sceneWrapper.scene.add(mesh);\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/42663182/draw-curved-line-in-three-js-from-vector3-to-vector3-on-surface-of-spheregeometr\r\n    // https://jsfiddle.net/prisoner849/b7tfxg8r/\r\n    static setArc3D(pointStart: THREE.Vector3, pointEnd: THREE.Vector3, smoothness: number, color: string, clockWise: boolean) {\r\n        // Calculate normal\r\n        let cb = new THREE.Vector3();\r\n        let ab = new THREE.Vector3();\r\n        let normal = new THREE.Vector3();\r\n\r\n        cb.subVectors(new THREE.Vector3(), pointEnd);\r\n        ab.subVectors(pointStart, pointEnd);\r\n        cb.cross(ab);\r\n        normal.copy(cb).normalize();\r\n\r\n        // Get angle between vectors\r\n        let angle = pointStart.angleTo(pointEnd);\r\n        if (clockWise) { angle = angle - Math.PI * 2; }\r\n        let angleDelta = angle / (smoothness - 1);\r\n\r\n        const vertices = [];\r\n        for (let i = 0; i < smoothness; i++) {\r\n            vertices.push(...pointStart.clone().applyAxisAngle(normal, angleDelta * i).toArray());\r\n        }\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n        const material = new THREE.LineBasicMaterial({ color: color, linewidth: 3 });\r\n        const arc = new THREE.Line(geometry, material);\r\n        return arc;\r\n    }\r\n\r\n    constructor(sceneWrapper: SceneWrapper, sx: number, sy: number) {\r\n        super();\r\n        this.sceneWrapper = sceneWrapper;\r\n        const d = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const mesh = new THREE.Mesh(d, material);\r\n        const matrix = this.sceneWrapper.geometryCommon.getMatrixAtScreenCoordinates(sx, sy);\r\n\r\n        mesh.applyMatrix4(matrix);\r\n        this.sceneWrapper.scene.add(mesh);\r\n    }\r\n}\r\n","import { CLICK_TYPE, MouseEventData } from '../../../../../NJSCore';\r\n\r\nimport { ActiveCommandController } from './ActiveCommandController';\r\n\r\nimport { RPointThreeGlobe } from '../GeometryCommon/GeometryGlobe/RPointThreeGlobe';\r\nimport { LineThreeGlobe } from '../GeometryCommon/GeometryGlobe/LineThreeGlobe';\r\nimport { LineSpikeThreeGlobe } from '../GeometryCommon/GeometryGlobe/LineSpikeThreeGlobe';\r\nimport { ArcSpikeThreeGlobe } from '../GeometryCommon/GeometryGlobe/ArcSpikeThreeGlobe';\r\nimport { CircleTrajectoryThreeGlobe } from '../GeometryCommon/GeometryGlobe/CircleTrajectoryThreeGlobe';\r\nimport { CircleThreeGlobe } from '../GeometryCommon/GeometryGlobe/CircleThreeGlobe';\r\nimport { PolylineThreeGlobe } from '../GeometryCommon/GeometryGlobe/PolylineThreeGlobe';\r\n\r\nexport class ActiveCommandCommon {\r\n    acs: ActiveCommandController;\r\n    num = 0;\r\n    constructor(acs: ActiveCommandController) {\r\n        // super();\r\n        this.acs = acs;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n\r\n        this.MouseDrag(e);\r\n    }\r\n\r\n}\r\n\r\n// ..............................................................\r\nexport class ActiveCommandNone extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n}\r\nexport class ActiveCommandRPoint extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        RPointThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        // APolyline.MouseMove(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        // APolyline.MouseDoubleClick(this.acs.annotationInstance.scene, e);\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        // APolyline.MouseDown(this.acs.annotationInstance.scene, e);\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        // APolyline.Undo(this.acs.annotationInstance.scene, this.acs.m);\r\n    }\r\n}\r\nexport class ActiveCommandLine extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        LineThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class ActiveCommandArcSpike extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        ArcSpikeThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandLineSpike extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        LineSpikeThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandCircleTrajectory extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        CircleTrajectoryThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandCircle extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        CircleThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}\r\nexport class ActiveCommandPolyline extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    MouseLeftClick(e: MouseEventData) {\r\n        PolylineThreeGlobe.MouseLeftClick(this.acs.sceneWrapper, e);\r\n    }\r\n    MouseMove(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {\r\n        //\r\n    }\r\n    MouseDown(e: MouseEventData) {\r\n        //\r\n    }\r\n    // keydown(k: KeyboardEventData) {\r\n    //     // if (k.keyCode === 27) { APolyline.Cancel(this.acs.annotationInstance.scene); }\r\n    //     // if (k.keyCode === 81 || k.keyCode === 13) { APolyline.DoneByKeyboard(this.acs.annotationInstance.scene); }\r\n    // }\r\n    Undo() {\r\n        //\r\n    }\r\n}","import { MouseEventData, ACTIVECOMMAND_MODE } from '../../../../../NJSCore';\r\n\r\nimport {\r\n    ActiveCommandNone,\r\n    ActiveCommandCommon,\r\n    ActiveCommandRPoint,\r\n    ActiveCommandLine,\r\n    ActiveCommandCircleTrajectory,\r\n    ActiveCommandLineSpike,\r\n    ActiveCommandArcSpike,\r\n    ActiveCommandCircle,\r\n    ActiveCommandPolyline\r\n} from './ActiveCommandImplementation';\r\n\r\nimport { SceneWrapper } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    commands: {};\r\n    activeCommand: ActiveCommandCommon;\r\n    type: ACTIVECOMMAND_MODE = ACTIVECOMMAND_MODE.NONE;\r\n    m: MouseEventData;\r\n\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.commands = {\r\n            // ........................................................................................................................ drawing annotation\r\n            POINT_REGULAR: new ActiveCommandRPoint(this),\r\n\r\n            // ARROW_SINGLE: new CActiveCommandArrow(this), ARROW_DOUBLE: new CActiveCommandArrowDouble(this),\r\n            // CURVE_OPEN: new CActiveCommandANCurve(this), CURVE_CLOSE: new CActiveCommandANCurveClosed(this),\r\n\r\n            CIRCLE: new ActiveCommandCircle(this),\r\n            // CIRCLE_CONSTRAINT_AREA: new CActiveANCommandCircleConstraintArea(this), CIRCLE_CONSTRAINT_CIRCUMFERENCE: new CActiveANCommandCircleConstraintCircumference(this),\r\n            // RECTANGLE: new CActiveANCommandRect(this),\r\n            // POLYLINE: new CActiveANCommandPolyline(this), POLYLINE_CONSTRAINT: new CActiveANCommandPolylineConstraint(this),\r\n            // POLYLINE_BENDING: new CActiveANCommandBendingPolylineGraph(this),\r\n            // LINE_GRAPH: new CActiveANCommandLineGraph(this),\r\n\r\n            LINE: new ActiveCommandLine(this),\r\n            LINE_SPIKE: new ActiveCommandLineSpike(this), ARC_SPIKE: new ActiveCommandArcSpike(this),\r\n            CIRCLE_TRAJECTORY: new ActiveCommandCircleTrajectory(this),\r\n            POLYLINE: new ActiveCommandPolyline(this),\r\n            // POLYGON_CONSTRAINT: new CActiveANCommandPolygonConstraint(this),\r\n            // POLYGON_MULTIPLE: new CActiveANCommandPolygonMultiple(this),\r\n\r\n            // TEXT: new CActiveCommandText(this),\r\n            // TEXT_LEADERLINE: new CActiveCommandTextLederline(this),\r\n\r\n            // FREEHAND_POLYLINE: new CActiveCommandANFHPolyline(this), FREEHAND_CURVE: new CActiveCommandANFHCurve(this),\r\n\r\n            // SMARTDRAWING: new CActiveCommandANSmartDrawing(this), SMARTDRAWING_DEEPLEARNING: new CActiveCommandANSmartDrawingDeepLearning(this),\r\n            // LINE: new CActiveCommandANLine(this),\r\n\r\n            // ........................................................................................................................ drawing graphic\r\n\r\n            // NONE: new CActiveCommandNone(this), SELECT: new CActiveCommandSelection(this),\r\n            // REMOVE: new CActiveCommandRemove(this),\r\n            // SELECT_RECT: new CActiveCommandSelectionRect(this), SELECT_LASSO: new CActiveCommandSelectionLasso(this),\r\n            // MOVE_EASEING: new CActiveCommandMoveEasing(this), UNDO: new CActiveCommandUndo(this), REDO: new CActiveCommandRedo(this),\r\n            NONE: new ActiveCommandNone(this)\r\n        };\r\n        this.type = ACTIVECOMMAND_MODE.SELECT;\r\n        this.m = new MouseEventData();\r\n        this.activeCommand = new ActiveCommandNone(this);\r\n    }\r\n    SetActiveCommand(theAC: ACTIVECOMMAND_MODE) {\r\n\r\n        this.CancelAC();\r\n        // AText.ESC();\r\n        // this.activeCommand = this.commands[theAC];\r\n        // this.type = theAC;\r\n        // if (this.type === ACTIVECOMMAND_MODE.TEXT) {\r\n        //     document.body.style.cursor = 'text';\r\n        // } else { document.body.style.cursor = 'auto'; }\r\n\r\n        this.activeCommand = this.commands[theAC];\r\n        return;\r\n\r\n        // if (this.type === ACTIVECOMMAND_MODE.SELECT_LASSO || this.type === ACTIVECOMMAND_MODE.SELECT_RECT) { ASelection.isTooltipRenderable = true; }\r\n        // if (this.type === ACTIVECOMMAND_MODE.FREEHAND_CURVE || this.type === ACTIVECOMMAND_MODE.FREEHAND_POLYLINE) { AFreehand.isTooltipRenderable = true; }\r\n        // if (this.type === ACTIVECOMMAND_MODE.SMARTDRAWING) { AFreehandSmartDrawing.isTooltipRenderable = true; }\r\n\r\n        // if (this.type === ACTIVECOMMAND_MODE.POINT_REGULAR || this.type === ACTIVECOMMAND_MODE.POINT_ICON || this.type === ACTIVECOMMAND_MODE.POINT_NUMBERED || this.type === ACTIVECOMMAND_MODE.LINE) {\r\n        //     this.showTooltipPoint = true;\r\n        // } else {\r\n        //     this.showTooltipPoint = false;\r\n        // }\r\n    }\r\n    CancelAC() {\r\n        // if (this.annotationInstance.app.app.model.appCoreWrapper.appAccessibility.mode === INTERACTION_MODE.OBSERVE_VIEWER) { return; }\r\n        // APolylineGraph.Cancel(); APolygon.Cancel(); ACircle.Cancel(); ARectangle.Cancel();\r\n        // CPolyline.Cancel(); CPolygon.Cancel(); CCircle.Cancel(); CNGon.Cancel(); CCurve.Cancel();\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.sceneWrapper.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.MouseEventController(e);\r\n        this.activeCommand.MouseEventController(e);\r\n    }\r\n    ShiftMap() {\r\n        console.log(this.sceneWrapper);\r\n        this.sceneWrapper.definition.ShiftShader(); // .sceneWrapper.definition.ShiftShader();\r\n    }\r\n    ShiftBasemap() {\r\n        this.sceneWrapper.ShiftBasemap();\r\n    }\r\n}","import { NVector3 } from '../../../../../NJSCore';\r\n\r\nimport { CanvasThree } from '../../GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree';\r\n\r\nimport { WallPaperBase } from '../Definition/Base/WallPaperBase';\r\n\r\n// import { Ground } from '../Scene/Ground';\r\n// import { Grid } from '../Scene/Grid';\r\n\r\n// import { GeometryWrapperBase } from '../Geometry/BaseClass/GeometryWrapperBase';\r\n\r\n// import { GlobeWrapperThree } from '../Geometry/GeometryThreeWrapper/GlobeWrapperThree';\r\n// import { TerrainMapThree } from '../Geometry/GeometryThreeWrapper/TerrainMapThree';\r\n\r\n// import {GeometryWrapperBase} from '../Geometry/BaseClass/GeometryWrapperBase';\r\n\r\n// import { createHashHistory } from 'history';\r\nimport * as THREE from 'three';\r\n\r\nexport class PointInersection {\r\n    vec: NVector3;\r\n    data: THREE.Intersection;\r\n    constructor(x: number, y: number, z: number) {\r\n        this.vec = new NVector3(x, y, z);\r\n    }\r\n}\r\n\r\nexport class GeometryCommon {\r\n\r\n    static list: WallPaperBase[] = [];\r\n    static listMesh: THREE.Object3D[] = [];\r\n\r\n    canvas: CanvasThree;\r\n\r\n    raycaster: THREE.Raycaster;\r\n    m: THREE.Vector2;\r\n    m3: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\r\n    point: PointInersection | undefined;\r\n\r\n    capture: WallPaperBase;\r\n\r\n    constructor(canvas: CanvasThree) {\r\n        this.canvas = canvas;\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.raycaster.params.Points = { threshold: 0.1 };\r\n\r\n        // if (this.raycaster.params.Points) {\r\n        //     this.raycaster.params.Points.threshold = 0.1;\r\n        //     console.log('==================');\r\n        // }\r\n\r\n        this.m = new THREE.Vector2();\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // this.grid = new Grid(this);\r\n        // this.ground = new Ground(this, 0, 0, 0);\r\n\r\n    }\r\n    get Capture() {\r\n        // if (this.capture) { return this.capture; } else { return this.capture; }\r\n        return this.capture;\r\n    }\r\n    set Capture(v: WallPaperBase) {\r\n        // if (this.capture !== undefined) {\r\n        //     this.capture.isSelected = false;\r\n        // }\r\n        this.capture = v;\r\n        // this.capture.isSelected = true;\r\n\r\n        // console.log(this.capture.uuid);\r\n    }\r\n    Add(g: WallPaperBase) {\r\n        GeometryCommon.list.push(g);\r\n        GeometryCommon.listMesh.push(g.mesh);\r\n        this.canvas.scene.add(g.mesh);\r\n        // console.log(this.canvas.scene);\r\n    }\r\n    Remove(g: WallPaperBase) {\r\n        this.canvas.scene.remove(g.mesh);\r\n        g.geometry.dispose();\r\n        GeometryCommon.listMesh.splice(GeometryCommon.listMesh.indexOf(g.mesh), 1);\r\n        GeometryCommon.list.splice(GeometryCommon.list.indexOf(g), 1);\r\n    }\r\n    Update() {\r\n        let i = GeometryCommon.list.length;\r\n        while (i--) { GeometryCommon.list[i].Update(); }\r\n        // GeometryWrapperBase.Update();\r\n    }\r\n    RaycastForVec(x: number, y: number) {\r\n        this.m.x = (x / this.canvas.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.canvas.renderer.domElement.clientHeight) * 2 + 1;\r\n        this.raycaster.setFromCamera(this.m, this.canvas.camera.camera);\r\n        const intersects = this.raycaster.intersectObjects(GeometryCommon.listMesh);\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n\r\n            this.m3 = new THREE.Vector3(this.point.vec.x, this.point.vec.y, this.point.vec.z);\r\n\r\n            console.log(this.point);\r\n            return this.point.vec;\r\n        }\r\n        return undefined;\r\n    }\r\n    Raycast(x: number, y: number) {\r\n        console.log(GeometryCommon.listMesh);\r\n        this.m.x = (x / this.canvas.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.canvas.renderer.domElement.clientHeight) * 2 + 1;\r\n        this.raycaster.setFromCamera(this.m, this.canvas.camera.camera);\r\n        // let i = GeometryCommon.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n        const intersects = this.raycaster.intersectObjects(GeometryCommon.listMesh);\r\n\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            console.log(this.point);\r\n            this.m3 = new THREE.Vector3(this.point.vec.x, this.point.vec.y, this.point.vec.z);\r\n\r\n            // tslint:disable-next-line:no-string-literal\r\n            let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            this.Capture = geo;\r\n            // helper.position.set(0, 0, 0);\r\n            // helper.lookAt(intersects[0].face.normal);\r\n            // helper.position.copy(intersects[0].point);\r\n            return this.Capture;\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n    }\r\n    // RaycastHover(x: number, y: number) {\r\n    //     this.m.x = (x / this.canvas.renderer.domElement.clientWidth) * 2 - 1;\r\n    //     this.m.y = - (y / this.canvas.renderer.domElement.clientHeight) * 2 + 1;\r\n    //     this.raycaster.setFromCamera(this.m, this.canvas.camera.camera);\r\n    //     const intersects = this.raycaster.intersectObjects(GeometryCommon.listMesh);\r\n\r\n    //     if (intersects.length > 0) {\r\n    //         // tslint:disable-next-line:no-string-literal\r\n    //         let geo = intersects[0].object['geo'] as WallPaperBase;\r\n    //         geo.isHover = true;\r\n    //     }\r\n    // }\r\n\r\n    // ...............................................................\r\n\r\n    // InitLighting() {\r\n    //     this.canvas.scene.add(new THREE.AmbientLight(0xf0f0f0));\r\n    //     let light = new THREE.SpotLight(0xffffff, 1.5);\r\n    //     light.position.set(0, 1500, 200);\r\n    //     light.castShadow = true;\r\n    //     // light.shadow  // shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(70, 1, 200, 2000));\r\n    //     light.shadow.bias = -0.000222;\r\n    //     light.shadow.mapSize.width = 1024;\r\n    //     light.shadow.mapSize.height = 1024;\r\n    //     this.canvas.scene.add(light);\r\n    //     // spotlight = light;\r\n\r\n    // }\r\n    RemoveAllMesh() {\r\n        let i = GeometryCommon.list.length;\r\n        while (i--) { this.Remove(GeometryCommon.list[i]); }\r\n        // i = GeometryWrapperBase.list.length;\r\n        // while (i--) { GeometryWrapperBase.list[i].Remove(); }\r\n    }\r\n\r\n    getMatrixAtScreenCoordinates(x: number, y: number) {\r\n        let p = this.getPointAtScreenCoordinates(x, y) || this.m3;\r\n        let px0 = this.getPointAtScreenCoordinates(x - 1, y) || p;\r\n        let px1 = this.getPointAtScreenCoordinates(x + 1, y) || p;\r\n\r\n        let py0 = this.getPointAtScreenCoordinates(x, y - 1) || p;\r\n        let py1 = this.getPointAtScreenCoordinates(x, y + 1) || p;\r\n\r\n        px1.sub(px0);\r\n        py1.sub(py0);\r\n\r\n        let normal = new THREE.Vector3().crossVectors(px1, py1);\r\n        normal.normalize();\r\n\r\n        let tp = new THREE.Vector3().addVectors(p, normal);\r\n        let matrix = new THREE.Matrix4().lookAt(p, tp, new THREE.Vector3(0, 1, 0));\r\n        matrix.setPosition(p);\r\n\r\n        return matrix;\r\n    }\r\n    private getPointAtScreenCoordinates(x: number, y: number) {\r\n        let intersects = this.getIntersectionAtScreenCoordinates(x, y);\r\n        if (intersects) { return intersects.point; }\r\n        return undefined;\r\n    }\r\n    private getIntersectionAtScreenCoordinates(x: number, y: number) {\r\n\r\n\r\n\r\n        const recursiveFlag = false;\r\n\r\n        this.m.x = (x / this.canvas.canvasWrapper.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.canvas.canvasWrapper.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        let vector = new THREE.Vector3(this.m.x, this.m.y, 0.5);\r\n\r\n        this.raycaster.setFromCamera(vector, this.canvas.camera.camera);\r\n\r\n        let intersects = this.raycaster.intersectObjects(GeometryCommon.listMesh, recursiveFlag);\r\n\r\n        // const camera = this.canvas.canvasWrapper.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.cameraP;\r\n        // const projector = new THREE.Projector();\r\n        // projector.unprojectVector(vector, camera);\r\n        // let raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\r\n\r\n        // let intersects = raycaster.intersectObjects(GeometryCommon.listMesh);\r\n\r\n        if (intersects.length > 0) { return intersects[0]; }\r\n        return undefined;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport { SceneWrapper } from '..';\r\nexport class LightingController {\r\n\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    hemiLight: THREE.HemisphereLight;\r\n    dirLight: THREE.DirectionalLight;\r\n\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // this.scene.add( LightUtility.GetAmbientLight());\r\n        // this.scene.add( LightUtility.GetHemiLight());\r\n        // this.scene.scene.add( LightUtility.GetDirLight());\r\n\r\n        this.hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\r\n        this.hemiLight.color.setHSL(0.6, 1, 0.6);\r\n        this.hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n        this.hemiLight.position.set(0, 50, 0);\r\n        this.sceneWrapper.scene.add(this.hemiLight);\r\n\r\n        // const hemiLightHelper = new THREE.HemisphereLightHelper( this.hemiLight, 10 );\r\n        // this.scene.scene.add( hemiLightHelper );\r\n\r\n        this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        this.dirLight.color.setHSL(0.1, 1, 0.95);\r\n        this.dirLight.position.set(- 1, 1.75, 1);\r\n        this.dirLight.position.multiplyScalar(30);\r\n\r\n        this.dirLight.castShadow = true;\r\n        this.dirLight.shadow.mapSize.width = 2048 * 2;\r\n        this.dirLight.shadow.mapSize.height = 2048 * 2;\r\n\r\n        var d = 50;\r\n        this.dirLight.shadow.camera.left = - d;\r\n        this.dirLight.shadow.camera.right = d;\r\n        this.dirLight.shadow.camera.top = d;\r\n        this.dirLight.shadow.camera.bottom = - d;\r\n\r\n        this.dirLight.shadow.bias = - 0.0001;\r\n\r\n        this.dirLight.shadow.camera.near = 0.001;\r\n        this.dirLight.shadow.camera.far = 350;\r\n\r\n        this.sceneWrapper.scene.add(this.dirLight);\r\n        // this.dirLightHeper = new THREE.DirectionalLightHelper( this.dirLight, 10 );\r\n        // this.scene.scene.add( dirLightHeper );\r\n    }\r\n    Dispose() {\r\n        this.dirLight.visible = false;\r\n        this.hemiLight.visible = false;\r\n\r\n        this.sceneWrapper.scene.remove(this.dirLight);\r\n        this.sceneWrapper.scene.remove(this.hemiLight);\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { AppThreeEnv } from '..';\r\n\r\nimport { ActiveCommandController } from './ActiveCommand/ActiveCommandController';\r\nimport { GeometryCommon } from './GeometryCommon/GeometryCommon';\r\nimport { LightingController } from './Light/LightingController';\r\n\r\nimport { WallPaperBase } from './Definition/Base/WallPaperBase';\r\n\r\n// import { GlobeWrapperThreeDark } from './Definition/Globe/GlobeWrapperThreeDark';\r\n// import { GlobeLowPoly } from './Definition/GlobeLowPoly';\r\n// import { GlobePixel } from './Definition/GlobePixel';\r\n\r\nexport class SceneWrapper {\r\n    app: AppThreeEnv;\r\n    activeCommandController: ActiveCommandController;\r\n    geometryCommon: GeometryCommon;\r\n    lightingController: LightingController;\r\n\r\n    scene: THREE.Scene;\r\n\r\n    definition: WallPaperBase | any;\r\n    numBasemap = 0;\r\n\r\n    constructor(app: AppThreeEnv, baseMap: string = 'map') {\r\n        this.app = app;\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.scene = this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.scene;\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.UpdateBinding = () => { this.Update(); };\r\n        this.lightingController = new LightingController(this);\r\n        this.geometryCommon = new GeometryCommon(this.app.graphicsCoreWrapper.canvasWrapper.canvasThree);\r\n        this.Init(baseMap);\r\n    }\r\n    Init(baseMap: string) {\r\n        // this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.shadowMap.enabled = true;\r\n\r\n        // if (baseMap === 'map') { this.definition = new GlobeWrapperThreeDark(this.scene); return; }\r\n        // if (baseMap === 'low') { this.definition = new GlobeLowPoly(this.scene); return; }\r\n        // if (baseMap === 'pixel') { this.definition = new GlobePixel(this.scene); return; }\r\n    }\r\n    Update() {\r\n        this.definition.Update();\r\n    }\r\n    ShiftBasemap() {\r\n        this.definition.Dispose();\r\n        this.numBasemap++;\r\n\r\n        // if (this.numBasemap % 3 === 0) {\r\n        //     this.definition = new GlobeWrapperThreeDark(this.scene); return;\r\n        // } if (this.numBasemap % 3 === 1) {\r\n        //     this.definition = new GlobePixel(this.scene); return;\r\n        // } if (this.numBasemap % 3 === 2) {\r\n        //     this.definition = new GlobeLowPoly(this.scene); return;\r\n        // }\r\n\r\n    }\r\n    Dispose() {\r\n        this.lightingController.Dispose();\r\n        this.definition.Dispose();\r\n    }\r\n}","import { NUI } from '../../../../NJSCore';\r\nimport { AppThreeEnv } from '..';\r\n\r\nexport class NUIWrapper {\r\n    nUI: NUI;\r\n    app: AppThreeEnv;\r\n    constructor(app: AppThreeEnv) {\r\n        this.app = app;\r\n        this.nUI = new NUI(app.divHost);\r\n        // this.nUI.BindingStoppropagation = this.StopPropagation.bind(this);\r\n        this.nUI.BindingStoppropagation = (v: boolean) => (this.BindingStoppropagation(v));\r\n        this.nUI.BindingActiveCommandController('appThreeEnv', this.app.sceneWrapper.activeCommandController);\r\n    }\r\n    BindingStoppropagation(v: boolean) {\r\n        // console.log(v);\r\n        // console.log('========================================');\r\n        this.app.stopPropagation = v;\r\n        // console.log(this);\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    PushUI(app: string, ac: any) {\r\n        this.nUI.BindingActiveCommandController(app, ac);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.nUI.Resize(width, height);\r\n    }\r\n}","import { MouseEventData } from '../../../NJSCore';\r\n\r\nimport { IO } from './IO';\r\nimport { Asset } from './Asset';\r\nimport { ViewWrapper } from './ViewWrapper';\r\nimport { GraphicsCoreWrapper } from './GraphicsCoreWrapper';\r\nimport { SceneWrapper } from './SceneWrapper';\r\nimport { NUIWrapper } from './NUIWrapper';\r\n\r\nexport class AppThreeEnv {\r\n    divHost: HTMLElement;\r\n    asset: Asset;\r\n    viewWrapper: ViewWrapper;\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    sceneWrapper: SceneWrapper;\r\n    io: IO;\r\n    nUIWrapper: NUIWrapper;\r\n\r\n    isVR: boolean;\r\n    stopPropagation: boolean = false;\r\n    public static Init(id: string) {\r\n        new AppThreeEnv(id);\r\n    }\r\n    constructor(id: string) {\r\n        const divHost = document.getElementById(id);\r\n        if (divHost) { this.divHost = divHost; }\r\n        this.stopPropagation = false;\r\n        this.asset = new Asset();\r\n        this.viewWrapper = new ViewWrapper(this);\r\n        this.graphicsCoreWrapper = new GraphicsCoreWrapper(this);\r\n        this.sceneWrapper = new SceneWrapper(this);\r\n        this.io = new IO(this);\r\n        this.nUIWrapper = new NUIWrapper(this);\r\n        // this.nUIWrapper.nUI.ShiftTheme(this.nUIWrapper.themeType);\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.nUIWrapper.nUI.MouseInteractionMenu(e);\r\n        if (!this.stopPropagation) { this.sceneWrapper.activeCommandController.MouseEventController(e); }\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.graphicsCoreWrapper.Resize(width, height);\r\n        this.nUIWrapper.Resize(width, height);\r\n    }\r\n    Dispose() {\r\n        this.graphicsCoreWrapper.Dispose();\r\n        this.sceneWrapper.Dispose();\r\n    }\r\n    Dummy() {/* */ }\r\n}"],"names":["MouseEventData","constructor","model","x","y","z","preX","preY","preZ","yGLPicking","command","CLICK_TYPE","isDown","isDoubleClick","isMove","pressedShift","pressedAlt","pressedCtrl","lat","long","wheel","preWheel","isActive","native","undefined","this","DeepCopy","mEvent","MouseInteraction","mouseInteractionUI","mouseEventDataPre","isEnable","clickCount","click","prevent","delay","timer","down","e","_stopPropagation","InitNativeMouseEvent","div","onclick","setTimeout","MouseClick","stopPropagation","ondblclick","clearTimeout","MouseDoubleClick","onmousedown","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","addEventListener","MouseWheel","deltaY","CommonEventBuilder","MouseEvenEmitting","button","MouseDrag","buttons","v","shiftKey","altKey","ctrlKey","offsetX","offsetY","mouseEventData","graphicsCoreWrapper","app","MouseEventController","IO","mouseInteraction","isVR","divHost","rPoint","require","Asset","ViewWrapper","CAMERA_TYPE","CameraControllerThree","canvas","width","height","type","PERSPECTIVE","cameraP","cameraO","controls","initX","initY","prevX","prevY","yRotRate","xRotRate","xPanRate","yPanRate","zPanRate","rotateRate","panRate","zoomRate","zoomFactor","frustumSize","cameraShift","ableToMove","stereoCamera","GetPerspective","ORTHOGRAPHIC","GetOrthographic","STEREO","GetStereo","THREE","aspect","camera","position","set","InitOrbitController","OrbitControls","renderer","domElement","minDistance","maxDistance","enablePan","enableZoom","Math","PI","EnableDamping","factor","enableDamping","dampingFactor","shift","dx","dy","panLeft","matrix","panUp","rotateLeft","rotateUp","dd","length","ShiftCamera","CanvasThree","canvasWrapper","hostDiv","scene","vrBtn","bg","Init","clientWidth","clientHeight","antialias","alpha","setPixelRatio","id","style","pointerEvents","setSize","appendChild","RenderLoop","requestAnimationFrame","UpdateBinding","update","render","console","log","ResizeCanvas","updateProjectionMatrix","ResizeEffect","Remove","children","remove","CanvasWrapper","canvasThree","ThemeWrapper","GraphicsCoreWrapper","themeWrapper","Resize","Dispose","GeometryGlobeBase","RPointThreeGlobe","sceneWrapper","p","sx","sy","super","geometry","material","mesh","json","asset","vertices","Float32Array","flat","faces","Uint32Array","colors","setAttribute","setIndex","scaleMatrix","makeScale","applyMatrix4","computeVertexNormals","computeBoundingBox","color","vertexColors","castShadow","receiveShadow","geometryCommon","getMatrixAtScreenCoordinates","add","LineThreeGlobe","multiplyScalar","vs","push","m","setArc3D","sphere","static","pointStart","pointEnd","smoothness","clockWise","cb","ab","normal","subVectors","cross","copy","normalize","angle","angleTo","angleDelta","i","clone","applyAxisAngle","toArray","d","LineSpikeThreeGlobe","v1","v2","random","col","ColorUtility","LineSpike","ArcSpikeThreeGlobe","p0","p3","p1","p2","p9","addVectors","points","getPoints","setFromPoints","curveObject","CircleTrajectoryThreeGlobe","m0","m1","flatVertices","CircleThreeGlobe","setCircle3D","center","cos","sin","PolylineThreeGlobe","linewidth","ActiveCommandCommon","acs","num","MouseUpPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseLeftClick","MouseMiddleClick","MouseRightClick","ActiveCommandNone","ActiveCommandRPoint","Undo","ActiveCommandLine","ActiveCommandArcSpike","ActiveCommandLineSpike","ActiveCommandCircleTrajectory","ActiveCommandCircle","ActiveCommandPolyline","ActiveCommandController","commands","activeCommand","ACTIVECOMMAND_MODE","POINT_REGULAR","CIRCLE","LINE","LINE_SPIKE","ARC_SPIKE","CIRCLE_TRAJECTORY","POLYLINE","NONE","SetActiveCommand","theAC","CancelAC","ShiftMap","definition","ShiftShader","ShiftBasemap","PointInersection","vec","data","NVector3","GeometryCommon","raycaster","m3","point","capture","params","Points","threshold","Capture","Add","g","list","listMesh","dispose","splice","indexOf","Update","RaycastForVec","setFromCamera","intersects","intersectObjects","Raycast","geo","object","RemoveAllMesh","getPointAtScreenCoordinates","px0","px1","py0","py1","sub","crossVectors","tp","lookAt","setPosition","getIntersectionAtScreenCoordinates","vector","LightingController","hemiLight","dirLight","setHSL","groundColor","shadow","mapSize","left","right","top","bottom","bias","near","far","visible","SceneWrapper","baseMap","activeCommandController","lightingController","numBasemap","NUIWrapper","nUI","NUI","BindingStoppropagation","BindingActiveCommandController","PushUI","ac","AppThreeEnv","viewWrapper","io","nUIWrapper","document","getElementById","MouseInteractionMenu","Dummy"],"sourceRoot":""}