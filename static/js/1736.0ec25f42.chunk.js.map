{"version":3,"file":"static/js/1736.0ec25f42.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/TSNE-Viz/Graph.ts","njslab/Workshop/workshop-ml/TSNE-Viz/index.ts","njslab/Workshop/workshop-ml/TSNE-Viz/ui.ts"],"sourcesContent":["import { NVector3 } from '../../../../lib/NJSCore';\r\n\r\nexport class Graph {\r\n\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    dt: number = 0.0;\r\n\r\n    mouse: NVector3 = new NVector3(0, 0);\r\n\r\n    damping = 0.96;\r\n    gravity = -0.032;\r\n    timeStep = 0.16; // 0.316; // 0.18; // 0.26;\r\n    groundZ = -9.26;\r\n\r\n    capture: Node | undefined = undefined;\r\n\r\n    constructor() {\r\n    }\r\n    Init(width: number, height: number) {\r\n        this.InitGridR(width, height);\r\n        this.nodes[0].fixed = true;\r\n        this.nodes[9].fixed = true;\r\n        this.nodes[this.nodes.length - 1].fixed = true;\r\n        this.nodes[this.nodes.length - 1 - 9].fixed = true;\r\n    }\r\n    updateOptionA(v: number) {\r\n        this.damping = v * 0.1;\r\n        console.log(this.damping, 'damping');\r\n    }\r\n    updateOptionB(v: number) {\r\n        this.timeStep = v * 0.05;\r\n        console.log(this.timeStep, 'timeStep');\r\n    }\r\n    updateOptionC(v: number) {\r\n        // this.gravity = v * 0.1;\r\n        // console.log(this.gravity, 'gravity');\r\n    }\r\n    shrinkage(id: number) {\r\n        this.nodes[id].fixed = true;\r\n        for (let i = 0; i < this.nodes[id].edge.length; ++i) {\r\n            this.nodes[id].edge[i].targetLength *= 0.8\r\n        }\r\n    }\r\n    InitGridR(width: number, height: number, xNum: number = 10, yNum: number = 10) {\r\n        const xOff = 0;\r\n        const yOff = 0;\r\n        const xInterval = (width / xNum) + 1;\r\n        const yInterval = (height / yNum) + 1;\r\n        const nbase = this.nodes.length;\r\n        for (let i = 0; i < yNum; ++i) {\r\n            for (let j = 0; j < xNum; ++j) {\r\n                let x = xOff + xInterval * j - width * 0.5;\r\n                let y = yOff + yInterval * i - height * 0.5;\r\n                this.AddNode(x, 0, y, NVector3.Zero(), 1.0);\r\n                // this.nodes.push(new Node(new NVector3(x, y), new NVector3(0, 0), 1));\r\n            }\r\n        }\r\n        for (let j = 0; j < yNum; ++j) {\r\n            for (let i = 0; i < xNum; ++i) {\r\n                let k = j * xNum + i;\r\n\r\n                if (i !== 0) { this.AddEdge(this.nodes[nbase + k - 1], this.nodes[nbase + k]); }\r\n                if (j !== 0) { this.AddEdge(this.nodes[nbase + k - xNum], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== 0) {this.AddEdge(this.nodes[nbase + k - xNum - 1], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== yNum - 1) {this.AddEdge(this.nodes[nbase + k + xNum - 1], this.nodes[nbase + k]); }\r\n            }\r\n        }\r\n    }\r\n    public Clear() {\r\n        this.nodes = [];\r\n        this.edges = [];\r\n    }\r\n    public AddNode(x: number, y: number, z: number, _u0: NVector3 = new NVector3(0, 0, 0), _mass: number = 1): Node {\r\n        const n = new Node(new NVector3(x, y, z), _u0, _mass);\r\n        this.nodes.push(n);\r\n        n.id = this.nodes.length - 1;\r\n        return n;\r\n    }\r\n    public AddEdge(n0: Node, n1: Node): Edge {\r\n        const e = new Edge(n0, n1);\r\n        n0.edge.push(e);\r\n        n1.edge.push(e);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        console.log('move', x, y);\r\n    }\r\n    MouseDClick(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        const n = this.FindNode(this.mouse);\r\n        if (n) {\r\n            n.fixed = !n.fixed;\r\n        }\r\n        console.log('click', x, y);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        this.capture = this.FindNode(this.mouse);\r\n        if (this.capture) {\r\n            this.capture.fixed = true;\r\n            this.capture.isCapture = true;\r\n        }\r\n        console.log('down', x, y, this.capture);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        console.log('click', x, y, this.capture);\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.isCapture = false;\r\n            this.capture = undefined;\r\n        }\r\n        console.log('up', x, y);\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n        console.log('drag', x, y);\r\n    }\r\n    Render(ctx?: CanvasRenderingContext2D) {\r\n\r\n        this.dt += 0.1;\r\n        this.Move(this.mouse.x, this.mouse.y, this.mouse.z, this.damping, 0, this.timeStep, this.groundZ, 1);\r\n\r\n        // for (let e of this.edges) { e.Render(ctx); }\r\n        // for (let n of this.nodes) { n.Render(ctx, this.mouse); }\r\n    }\r\n    FindNode(mv: NVector3) {\r\n        for (let n of this.nodes) {\r\n            if (n.v.Distance(mv) < n.m + 3) {\r\n                return n;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    public Move(x: number, y: number, z: number, damping: number, g: number = 0, dt: number = 0.01, groundZ: number = -10, step: number = 1) {\r\n        const atr = new NVector3(x, y, z);\r\n        for (let i = 0; i < step; ++i) {\r\n            for (const n of this.nodes) {\r\n\r\n                // const dv: NVector3 = atr - n.p;\r\n                //  L = dv.Length;\r\n                // dv.Unitize();\r\n                // n.f = dv * Math.Exp(-0.1 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n\r\n                const dv = NVector3.Sub(atr, n.v);\r\n                const L = dv.Length();\r\n                dv.Unitize();\r\n                n.f = NVector3.Add(NVector3.Scale(dv, Math.exp(-0.1 * L * L) * 0.1), (NVector3.Scale(NVector3.YAxis(), g)));\r\n            }\r\n            for (const e of this.edges) { e.ApplySpringForce(); }\r\n            for (const n of this.nodes) { n.Move(dt, damping, groundZ); }\r\n        }\r\n    }\r\n}\r\nexport class Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 0.0;\r\n    public springConstant: number = 0.8; // 1; // 0.8;\r\n    constructor(n0: Node, n1: Node) {\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n        this.targetLength = this.n0.v.Distance(this.n1.v) * 0.95;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#ff0000';\r\n\r\n        if (NVector3.Distance(this.n0.v, this.n1.v) < this.targetLength * 2) {\r\n\r\n            ctx.strokeStyle = '#0000ff';\r\n            // this.n0.isShort = true;\r\n            // this.n1.isShort = true;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.n0.v.x, this.n0.v.y);\r\n        ctx.lineTo(this.n1.v.x, this.n1.v.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public ApplySpringForce() {\r\n        // Vector3d dp = n1.p - n0.p;\r\n        // double dist = dp.Length;\r\n        // dp.Unitize();\r\n\r\n        // n0.f += dp * (dist - TargetLength) * SpringConstant;\r\n        // n1.f -= dp * (dist - TargetLength) * SpringConstant;\r\n\r\n        // const dp: NVector3 = NVector3.Sub(this.n1.p, this.n0.p);\r\n        // const dist:number = dp.Length();\r\n        // dp.Unitize();\r\n\r\n        let dp = NVector3.Sub(this.n1.v, this.n0.v);\r\n        let dist = dp.Length();\r\n        dp.Unitize();\r\n\r\n        const length = NVector3.Scale(dp, (dist - this.targetLength) * this.springConstant);\r\n        this.n0.f = NVector3.Add(this.n0.f, length);\r\n        this.n1.f = NVector3.Sub(this.n1.f, length);\r\n\r\n    }\r\n}\r\nexport class Node {\r\n    public id: number = -1;\r\n    public edge: Edge[] = [];\r\n    public nNodes: Node[] = [];\r\n    public v: NVector3 = NVector3.Origin();\r\n    public f: NVector3 = NVector3.Origin();\r\n    public u: NVector3 = NVector3.Origin();\r\n    public m: number = 0.0;\r\n\r\n    public fixed: boolean = false;\r\n    public isCapture: boolean = false;\r\n    constructor(_p0: NVector3, _u0: NVector3, _mass: number) {\r\n        this.v = new NVector3(_p0.x, _p0.y, _p0.z);\r\n        this.u = new NVector3(_u0.x, _u0.y, _u0.z);\r\n        this.m = _mass;\r\n    }\r\n    public Move(dt: number, damping: number, groundZ: number = 0.0) {\r\n        if (this.fixed || this.isCapture) { return; }\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        // this.u = NVector3.Scale(this.u , damping );\r\n        // this.u = NVector3.Add( this.u,  NVector3.Scale(this.f, dt / this.m));\r\n        // this.p  = NVector3.Add(this.p, NVector3.Scale(this.u, dt));\r\n\r\n        this.u.Mult(damping);\r\n        this.u.Add(NVector3.Scale(this.f, dt / this.m));\r\n\r\n        const v = NVector3.Scale(this.u, dt);\r\n        // this.v.Add( );\r\n        this.v.x += v.x;\r\n        this.v.y += v.y;\r\n\r\n        // if (this.p.y < groundZ) {\r\n        //     this.p.y = groundZ;\r\n        //     if (this.u.y < 0.0) {this.u.y = -this.u.y; }\r\n        // }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, m: NVector3) {\r\n        ctx.beginPath();\r\n\r\n        if (m.Distance(this.v) < this.m + 3) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 6, 0.0, Math.PI * 2);\r\n        } else {\r\n            ctx.fillStyle = '#f90000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 3, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        if (this.fixed) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 7.5, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { RendererThree, getCSVFromURL, getJSONFromURL } from '../../../../lib';\r\nimport { NVector3, } from '../../../../lib/NJSCore';\r\nimport { UI } from './ui';\r\nimport { Graph } from './Graph';\r\n\r\nexport class Solution extends RendererThree {\r\n\r\n    pointLight: THREE.PointLight;\r\n    pointer = new THREE.Vector2();\r\n    raycaster = new THREE.Raycaster();\r\n    sphere: THREE.Mesh;\r\n\r\n    lines: THREE.LineSegments[] = [];\r\n    linesIndex: number[] = [];\r\n\r\n    mesh: THREE.Points;\r\n\r\n    lookupClass = [];\r\n    lookupTable = {};\r\n\r\n    graph: Graph;\r\n\r\n    needInterpolation: boolean = true;\r\n\r\n    preSelLine: THREE.LineSegments;\r\n\r\n    ui: UI;\r\n\r\n    idLookupTable;\r\n\r\n    cameraAni = new THREE.Vector3(0, 100, 100);\r\n\r\n    constructor(id: string = 'main') {\r\n        super(id)\r\n\r\n        this.ui = new UI(this);\r\n\r\n        this.camera.position.set(0, 400, 400);\r\n\r\n        const ambientLight = new THREE.AmbientLight(0xcccccc, 0.25);\r\n        this.scene.add(ambientLight);\r\n\r\n        this.pointLight = new THREE.PointLight(0xffffff, 0.75);\r\n        this.pointLight.position.x = 10;\r\n        this.pointLight.castShadow = true;\r\n        this.scene.add(this.pointLight);\r\n\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.raycaster.params.Points.threshold = 0.4;\r\n        this.raycaster.far = 1000;\r\n\r\n        const sphereGeometry = new THREE.SphereGeometry(0.1, 32, 32);\r\n        const sphereMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\r\n        const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n        this.sphere = sphere;\r\n        this.scene.add(sphere);\r\n\r\n        this.graph = new Graph();\r\n\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/smDataViz.csv').then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n\r\n            const vertices = [];\r\n            const color = [];\r\n\r\n\r\n            const lookupClass = []\r\n            const lookupTable = {}\r\n\r\n\r\n            for (let i = 0; i < line.length; ++i) {\r\n\r\n                const pos = line[i].split(',')\r\n\r\n\r\n                const x = +pos[0] * 0.1;\r\n                const y = +pos[1] * 0.1;\r\n                const z = +pos[2] * 0.1;\r\n                vertices.push(x, y, z);\r\n\r\n                this.graph.AddNode(x, y, z);\r\n\r\n                color.push(0.5, 0.5, 0.5);\r\n\r\n                const classN = pos[3];\r\n                lookupClass.push(classN)\r\n\r\n                const neighbor = {};\r\n                for (let j = 4; j < pos.length; j += 2) {\r\n                    const keyword = pos[j].split('(')[1].replaceAll(\"'\", \"\");\r\n                    const prob = +pos[j + 1].split(')')[0];\r\n                    // console.log(keyword, prob)\r\n                    neighbor[keyword] = prob;\r\n                }\r\n\r\n                lookupTable[classN] = {\r\n                    id: i,\r\n                    pos: [x, y, z],\r\n                    neighbor,\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            for (let i = 0; i < lookupClass.length; ++i) {\r\n                const neighbors = lookupTable[lookupClass[i]].neighbor;\r\n                const n0 = this.graph.nodes[i];\r\n                for (let key in neighbors) {\r\n                    // console.log(key)\r\n                    const node = lookupTable[key]\r\n                    const n1 = this.graph.nodes[node.id];\r\n                    this.graph.AddEdge(n0, n1);\r\n                    // break;\r\n                }\r\n            }\r\n\r\n            // console.log(this.graph)\r\n\r\n            // console.log(lookupTable)\r\n            this.lookupClass = lookupClass;\r\n            this.lookupTable = lookupTable;\r\n\r\n\r\n\r\n\r\n            const geometry = new THREE.BufferGeometry();\r\n\r\n            geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n            geometry.setAttribute('color', new THREE.Float32BufferAttribute(color, 3));\r\n            const material = new THREE.PointsMaterial({\r\n                // color: 0x00fff0 , \r\n                vertexColors: true,\r\n                size: 2,\r\n            });\r\n            const points = new THREE.Points(geometry, material);\r\n            geometry.computeBoundingSphere();\r\n            this.scene.add(points);\r\n            this.mesh = points;\r\n\r\n\r\n\r\n            for (let i = 0; i < this.graph.nodes.length; ++i) {\r\n                const e = this.graph.nodes[i].edge;\r\n\r\n                const geometryLine = new THREE.BufferGeometry();\r\n                // const materialLine = new THREE.LineBasicMaterial({  linewidth: 0.0001,  opacity: 0.01 });\r\n                const materialLine = new THREE.LineDashedMaterial({ color: 0x333333, dashSize: 0.071, gapSize: 0.5, opacity: 0.0001 });\r\n\r\n                const positions = [];\r\n                const colorLine = [0.2, 0.0, 0.2]\r\n\r\n                for (let j = 0; j < e.length; j++) {\r\n                    const n0 = e[j].n0;\r\n                    const n1 = e[j].n1;\r\n\r\n                    positions.push(n0.v.x, n0.v.y, n0.v.z)\r\n                    positions.push(n1.v.x, n1.v.y, n1.v.z)\r\n                }\r\n\r\n                // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n                // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n\r\n                geometryLine.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n\r\n                geometryLine.computeBoundingSphere();\r\n\r\n                const ln = new THREE.LineSegments(geometryLine, materialLine);\r\n                ln.computeLineDistances();\r\n                this.scene.add(ln);\r\n                this.lines.push(ln)\r\n            }\r\n\r\n            getJSONFromURL(process.env.PUBLIC_URL + '/static/data/smIDLookUpTable.json').then((d2) => {\r\n                this.idLookupTable = JSON.parse(JSON.stringify(d2));\r\n\r\n                this.start();\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n    public mouseMove(e: MouseEvent): void {\r\n        this.pointer.x = (e.offsetX / this.hostDiv.clientWidth) * 2 - 1;\r\n        this.pointer.y = - (e.offsetY / this.hostDiv.clientHeight) * 2 + 1;\r\n    }\r\n    public mouseDown(e: MouseEvent): void {\r\n        this.pointer.x = (e.offsetX / this.hostDiv.clientWidth) * 2 - 1;\r\n        this.pointer.y = - (e.offsetY / this.hostDiv.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.pointer, this.camera);\r\n        const intersections = this.raycaster.intersectObjects([this.mesh], false);\r\n        const intersection = (intersections.length) > 0 ? intersections[0] : null;\r\n\r\n        if (intersection !== null) {\r\n            // console.log(intersection.index);\r\n            this.sphere.position.set(intersection.point.x, intersection.point.y + 1, intersection.point.z);\r\n            // this.mesh.geometry.attributes.position.setXYZ(intersection.index ,intersection.point.x, intersection.point.y + 1, intersection.point.z);\r\n            this.graph.shrinkage(intersection.index);\r\n            \r\n            const className = this.lookupClass[intersection.index];\r\n            this.ui.updateSubID(this.idLookupTable[className])\r\n        }\r\n        // this.mesh.geometry.attributes.position.needsUpdate = true;\r\n        // this.mesh.geometry.attributes.color.needsUpdate = true;\r\n        // this.mesh.geometry.computeVertexNormals();\r\n        // console.log('click')\r\n\r\n    }\r\n    public mouseClick(e: MouseEvent): void {\r\n        this.needInterpolation = true;\r\n    }\r\n    public update(scene: THREE.Scene) {\r\n        // this.graph.Move(this.sphere.position.x, this.sphere.position.y, this.sphere.position.z, 0.999, 0, 0.0001);\r\n        this.graph.Render();\r\n\r\n        let numVertices = this.mesh.geometry.attributes.position.count;\r\n        for (let i = 0; i < numVertices; i++) {\r\n            let o = this.mesh.geometry.attributes.position;\r\n            // let x = o.getX(i);\r\n            // let y = o.getY(i);\r\n            // let z = o.getZ(i)\r\n            let x = this.graph.nodes[i].v.x;\r\n            let y = this.graph.nodes[i].v.y;\r\n            let z = this.graph.nodes[i].v.z;\r\n\r\n            // y = Math.sin(9 * x * z + this.t * 5)\r\n            // y = y < 0 ? 0 : y;\r\n            // let p = new THREE.Vector3(x, y, z);\r\n\r\n            this.mesh.geometry.attributes.position.setXYZ(i, x, y, z);\r\n            // this.mesh.geometry.attributes.size.\r\n            this.mesh.geometry.attributes.color.setXYZ(i, 0.3, 0.3, 0.3);\r\n        }\r\n\r\n        this.raycaster.setFromCamera(this.pointer, this.camera);\r\n        const intersections = this.raycaster.intersectObjects([this.mesh], false);\r\n        const intersection = (intersections.length) > 0 ? intersections[0] : null;\r\n\r\n\r\n\r\n        if (intersection !== null) {\r\n            // console.log(intersection.index);\r\n            this.sphere.position.set(intersection.point.x, intersection.point.y, intersection.point.z);\r\n\r\n            const className = this.lookupClass[intersection.index];\r\n            const data = this.lookupTable[className];\r\n            // console.log(className, data);\r\n\r\n            this.ui.divTitle.textContent = 'Keyword: ' + className;\r\n            this.ui.updateSub(data.neighbor);\r\n\r\n            this.mesh.geometry.attributes.color.setXYZ(intersection.index, 0, 1, 1);\r\n\r\n            for (let key in data.neighbor) {\r\n                const d = this.lookupTable[key]; \r\n                // console.log(d, key);\r\n                this.mesh.geometry.attributes.color.setXYZ(d.id, 1, 1, 0);\r\n            }\r\n\r\n        }\r\n        this.mesh.geometry.attributes.position.needsUpdate = true;\r\n        this.mesh.geometry.attributes.color.needsUpdate = true;\r\n        this.mesh.geometry.computeVertexNormals();\r\n\r\n\r\n\r\n\r\n\r\n        for (let i = 0; i < this.graph.nodes.length; ++i) {\r\n            const e = this.graph.nodes[i].edge;\r\n            const ln: THREE.LineSegments = this.lines[i];\r\n            const positions = [];\r\n            for (let j = 0; j < e.length; j++) {\r\n                const n0 = e[j].n0;\r\n                const n1 = e[j].n1;\r\n\r\n                positions.push(n0.v.x, n0.v.y, n0.v.z)\r\n                positions.push(n1.v.x, n1.v.y, n1.v.z)\r\n\r\n            }\r\n\r\n            let count = 0;\r\n            for (let j = 0; j < positions.length; j += 6) {\r\n\r\n                ln.geometry.attributes.position.setXYZ(count++, positions[j], positions[j + 1], positions[j + 2])\r\n                ln.geometry.attributes.position.setXYZ(count++, positions[j + 3], positions[j + 4], positions[j + 5]);\r\n            }\r\n            // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n            // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n            ln.geometry.attributes.position.needsUpdate = true;\r\n\r\n        }\r\n\r\n        if (intersection !== null) {\r\n            if (this.preSelLine !== undefined) {\r\n                const mat = this.preSelLine.material as THREE.LineDashedMaterial;\r\n                mat.color.setRGB(0.3, 0.3, 0.3);\r\n                this.preSelLine = undefined;\r\n            }\r\n\r\n            const id = intersection.index;\r\n            const mat = this.lines[id].material as THREE.LineDashedMaterial;\r\n            mat.linewidth = 1;\r\n            mat.dashSize = 0.3;\r\n            this.lines[id].computeLineDistances();\r\n            mat.color.setRGB(0, 1, 1);\r\n\r\n            this.preSelLine = this.lines[id];\r\n\r\n        } else {\r\n            if (this.preSelLine !== undefined) {\r\n                const mat = this.preSelLine.material as THREE.LineDashedMaterial;\r\n\r\n                mat.dashSize = 0.071\r\n                mat.linewidth = 0.1;\r\n                this.preSelLine.computeLineDistances();\r\n                mat.color.setRGB(0.3, 0.3, 0.3);\r\n                this.preSelLine = undefined;\r\n            }\r\n\r\n        }\r\n\r\n        this.CameraInterpolation();\r\n\r\n\r\n    }\r\n    CameraInterpolation() {\r\n        if (this.needInterpolation) {\r\n\r\n            const v = easingMotion(this.camera.position, this.cameraAni)\r\n            this.camera.position.set(v.x, v.y, v.z);\r\n\r\n            // const v2 = easingMotion(this.controls.target, this.cameraAni)\r\n            // this.controls.target.set(v2.x, v2.y, v2.z);\r\n\r\n            if (this.camera.position.distanceTo(this.cameraAni) < 1) {\r\n                this.needInterpolation = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const easingMotion = (v1: THREE.Vector3, v2: THREE.Vector3, speed: number = 0.15) => {\r\n    const v = new THREE.Vector3(v2.x - v1.x, v2.y - v1.y, v2.z - v1.z)\r\n    return new THREE.Vector3(\r\n        v1.x + v.x * speed,\r\n        v1.y + v.y * speed,\r\n        v1.z + v.z * speed,\r\n    );\r\n};","import { Solution } from '.';\r\n\r\nexport class UI {\r\n    solution: Solution;\r\n\r\n    divTitle: HTMLDivElement;\r\n    divSub: HTMLDivElement;\r\n    divSubs: HTMLDivElement[] = [];\r\n    \r\n    divSubID: HTMLDivElement;\r\n    divSubIDs: HTMLDivElement[] = [];\r\n    constructor(solution: Solution) {\r\n        this.solution = solution;\r\n        this.initUI();\r\n    }\r\n    public initUI() {\r\n\r\n        this.divTitle = document.createElement('div');\r\n        this.solution.hostDiv.insertBefore(this.divTitle, this.solution.renderer.domElement);\r\n        this.divTitle.textContent = 'Storymaps Metrics from Jan 24-2020';\r\n        this.divTitle.style.color = '#fff';\r\n        this.divTitle.style.fontSize = '64px';\r\n        this.divTitle.style.position = 'absolute';\r\n        \r\n        this.divTitle.style.padding = '20px'\r\n        this.divTitle.style.zIndex = '1';\r\n        this.divTitle.style.paddingBottom = '10px';\r\n\r\n\r\n        const div = document.createElement('div');\r\n        this.solution.hostDiv.appendChild(div);\r\n        div.style.position = 'absolute';\r\n        div.style.padding = '20px';\r\n        div.style.padding = '20px';\r\n        div.style.marginTop = '100px';\r\n\r\n        this.divTitle = document.createElement('div');\r\n        div.appendChild(this.divTitle);\r\n        this.divTitle.textContent = 'TSNE Visualization ';\r\n        this.divTitle.style.fontSize = '20px';\r\n        this.divTitle.style.pointerEvents = 'none';\r\n        this.divTitle.style.paddingBottom = '10px';\r\n\r\n        this.divTitle = document.createElement('div');\r\n        div.appendChild(this.divTitle);\r\n        this.divTitle.textContent = 'Keyword: ';\r\n        this.divTitle.style.color = '#0ff';\r\n        this.divTitle.style.fontSize = '38px';\r\n        this.divTitle.style.pointerEvents = 'none';\r\n        this.divTitle.style.paddingBottom = '10px';\r\n\r\n        this.divSub = document.createElement('div');\r\n        div.appendChild(this.divSub);\r\n        this.divSub.textContent = 'Neighbors:';\r\n        this.divSub.style.paddingTop = '5px';\r\n        this.divSub.style.paddingBottom = '18px';\r\n\r\n        for(let i = 0 ; i < 10; ++i) {\r\n            const subs = document.createElement('div');\r\n            subs.textContent = ''\r\n            subs.style.pointerEvents = 'none';\r\n            \r\n            subs.style.paddingTop = '5px';\r\n            subs.style.color = '#cc0';\r\n            this.divSubs.push(subs);\r\n            this.divSub.appendChild(subs);\r\n        }\r\n\r\n\r\n\r\n        this.divSubID = document.createElement('div');\r\n        div.appendChild(this.divSubID);\r\n        this.divSubID.textContent = 'Storymaps ID:';\r\n        this.divSubID.style.paddingTop = '8px';\r\n        this.divSubID.style.paddingBottom = '8px';\r\n\r\n        for(let i = 0 ; i < 10; ++i) {\r\n            const subs = document.createElement('div');\r\n            subs.textContent = ''\r\n              this.divSubIDs.push(subs);\r\n            this.divSubID.appendChild(subs);\r\n        }\r\n\r\n    }\r\n    public updateSub(data) {\r\n        // console.log(data);\r\n        let count = 0;\r\n        for (let key in data) {\r\n\r\n            this.divSubs[count++].textContent = key;\r\n            // console.log(d, key);\r\n            // this.mesh.geometry.attributes.color.setXYZ(d.id, 1, 0, 1);\r\n        }\r\n    }\r\n    public updateSubID(data) {\r\n        // console.log(data);\r\n        try {\r\n            let count = 0;\r\n            for (let i = 0; i < data.length; ++i) {\r\n                this.divSubIDs[count++].innerHTML = `<a href=\"https://storymaps.arcgis.com/stories/${data[i]}\" style=\"font-size: 14px;\" target=\"_blank\" > ID: ${data[i]}</a>`\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n}"],"names":["Graph","nodes","edges","dt","mouse","NVector3","damping","gravity","timeStep","groundZ","capture","undefined","width","height","this","InitGridR","fixed","length","v","console","log","id","i","edge","targetLength","xNum","yNum","xOff","yOff","xInterval","yInterval","nbase","j","x","y","AddNode","k","AddEdge","z","_u0","_mass","n","Node","push","n0","n1","e","Edge","FindNode","isCapture","ctx","Move","mv","Distance","m","g","step","atr","dv","L","Length","Unitize","f","Math","exp","ApplySpringForce","springConstant","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","dp","dist","_p0","nNodes","u","Mult","Add","fillStyle","arc","PI","fill","Solution","pointLight","pointer","THREE","raycaster","sphere","lines","linesIndex","mesh","lookupClass","lookupTable","graph","needInterpolation","preSelLine","ui","idLookupTable","cameraAni","UI","camera","position","set","ambientLight","scene","add","castShadow","params","Points","threshold","far","sphereGeometry","sphereMaterial","color","getCSVFromURL","process","then","d","line","split","vertices","pos","classN","neighbor","keyword","replaceAll","prob","neighbors","key","node","geometry","setAttribute","material","vertexColors","size","points","computeBoundingSphere","geometryLine","materialLine","dashSize","gapSize","opacity","positions","ln","computeLineDistances","getJSONFromURL","d2","JSON","parse","stringify","start","offsetX","hostDiv","clientWidth","offsetY","clientHeight","setFromCamera","intersections","intersectObjects","intersection","point","shrinkage","index","className","updateSubID","Render","numVertices","attributes","count","setXYZ","data","divTitle","textContent","updateSub","needsUpdate","computeVertexNormals","setRGB","mat","linewidth","CameraInterpolation","easingMotion","distanceTo","RendererThree","v1","v2","speed","solution","divSub","divSubs","divSubID","divSubIDs","initUI","document","createElement","insertBefore","renderer","domElement","style","fontSize","padding","zIndex","paddingBottom","div","appendChild","marginTop","pointerEvents","paddingTop","subs","innerHTML","error"],"sourceRoot":""}