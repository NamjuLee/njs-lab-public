{"version":3,"file":"static/js/75488.3eb6d662.chunk.js","mappings":"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","sources":["../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/projections/eqearth.js","../node_modules/proj4/lib/projections/bonne.js","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../node_modules/array-source/index.js","../node_modules/path-source/fetch.js","../node_modules/path-source/request.js","../node_modules/path-source/index.js","../node_modules/stream-source/index.js","../node_modules/array-source/read.js","../node_modules/array-source/cancel.js","../node_modules/slice-source/empty.js","../node_modules/slice-source/concat.js","../node_modules/slice-source/index.js","../node_modules/shapefile/dbf/number.js","../node_modules/slice-source/read.js","../node_modules/slice-source/slice.js","../node_modules/slice-source/cancel.js","../node_modules/shapefile/dbf/read.js","../node_modules/shapefile/dbf/string.js","../node_modules/shapefile/dbf/date.js","../node_modules/shapefile/dbf/boolean.js","../node_modules/shapefile/view.js","../node_modules/shapefile/dbf/index.js","../node_modules/shapefile/shp/multipoint.js","../node_modules/shapefile/shp/point.js","../node_modules/shapefile/shp/polygon.js","../node_modules/shapefile/shp/polyline.js","../node_modules/shapefile/shp/concat.js","../node_modules/shapefile/dbf/cancel.js","../node_modules/shapefile/shp/index.js","../node_modules/shapefile/shp/null.js","../node_modules/shapefile/shapefile/cancel.js","../node_modules/shapefile/shapefile/index.js","../node_modules/shapefile/shp/read.js","../node_modules/shapefile/shp/cancel.js","../node_modules/shapefile/index.js","../node_modules/shapefile/shapefile/read.js"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.militargeographische_institut = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Militar-Geographische Institut\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","import array_cancel from \"./cancel\";\nimport array_read from \"./read\";\n\nexport default function array(array) {\n  return new ArraySource(array instanceof Uint8Array ? array : new Uint8Array(array));\n}\n\nfunction ArraySource(array) {\n  this._array = array;\n}\n\nArraySource.prototype.read = array_read;\nArraySource.prototype.cancel = array_cancel;\n","import array from \"array-source\";\n\nexport default function(url) {\n  return fetch(url).then(function(response) {\n    return response.body && response.body.getReader\n        ? response.body.getReader()\n        : response.arrayBuffer().then(array);\n  });\n}\n","import array from \"array-source\";\n\nexport default function(url) {\n  return new Promise(function(resolve, reject) {\n    var request = new XMLHttpRequest;\n    request.responseType = \"arraybuffer\";\n    request.onload = function() { resolve(array(request.response)); };\n    request.onerror = reject;\n    request.ontimeout = reject;\n    request.open(\"GET\", url, true);\n    request.send();\n  });\n}\n","import fetchPath from \"./fetch\";\nimport requestPath from \"./request\";\n\nexport default function path(path) {\n  return (typeof fetch === \"function\" ? fetchPath : requestPath)(path);\n}\n","export default function stream(source) {\n  return typeof source.read === \"function\" ? source : source.getReader();\n}\n","export default function() {\n  var array = this._array;\n  this._array = null;\n  return Promise.resolve(array ? {done: false, value: array} : {done: true, value: undefined});\n}\n","export default function() {\n  this._array = null;\n  return Promise.resolve();\n}\n","export default new Uint8Array(0);\n","export default function concat(a, b) {\n  if (!a.length) return b;\n  if (!b.length) return a;\n  var c = new Uint8Array(a.length + b.length);\n  c.set(a);\n  c.set(b, a.length);\n  return c;\n}\n","import empty from \"./empty\";\nimport slice_cancel from \"./cancel\";\nimport slice_read from \"./read\";\nimport slice_slice from \"./slice\";\n\nexport default function slice(source) {\n  return typeof source.slice === \"function\" ? source :\n      new SliceSource(typeof source.read === \"function\" ? source\n          : source.getReader());\n}\n\nfunction SliceSource(source) {\n  this._source = source;\n  this._array = empty;\n  this._index = 0;\n}\n\nSliceSource.prototype.read = slice_read;\nSliceSource.prototype.slice = slice_slice;\nSliceSource.prototype.cancel = slice_cancel;\n","export default function(value) {\n  return !(value = value.trim()) || isNaN(value = +value) ? null : value;\n}\n","import concat from \"./concat\";\nimport empty from \"./empty\";\n\nexport default function() {\n  var that = this, array = that._array.subarray(that._index);\n  return that._source.read().then(function(result) {\n    that._array = empty;\n    that._index = 0;\n    return result.done ? (array.length > 0\n        ? {done: false, value: array}\n        : {done: true, value: undefined})\n        : {done: false, value: concat(array, result.value)};\n  });\n}\n","import empty from \"./empty\";\n\nexport default function(length) {\n  if ((length |= 0) < 0) throw new Error(\"invalid length\");\n  var that = this, index = this._array.length - this._index;\n\n  // If the request fits within the remaining buffer, resolve it immediately.\n  if (this._index + length <= this._array.length) {\n    return Promise.resolve(this._array.subarray(this._index, this._index += length));\n  }\n\n  // Otherwise, read chunks repeatedly until the request is fulfilled.\n  var array = new Uint8Array(length);\n  array.set(this._array.subarray(this._index));\n  return (function read() {\n    return that._source.read().then(function(result) {\n\n      // When done, it’s possible the request wasn’t fully fullfilled!\n      // If so, the pre-allocated array is too big and needs slicing.\n      if (result.done) {\n        that._array = empty;\n        that._index = 0;\n        return index > 0 ? array.subarray(0, index) : null;\n      }\n\n      // If this chunk fulfills the request, return the resulting array.\n      if (index + result.value.length >= length) {\n        that._array = result.value;\n        that._index = length - index;\n        array.set(result.value.subarray(0, length - index), index);\n        return array;\n      }\n\n      // Otherwise copy this chunk into the array, then read the next chunk.\n      array.set(result.value, index);\n      index += result.value.length;\n      return read();\n    });\n  })();\n}\n","export default function() {\n  return this._source.cancel();\n}\n","import readBoolean from \"./boolean\";\nimport readDate from \"./date\";\nimport readNumber from \"./number\";\nimport readString from \"./string\";\n\nvar types = {\n  B: readNumber,\n  C: readString,\n  D: readDate,\n  F: readNumber,\n  L: readBoolean,\n  M: readNumber,\n  N: readNumber\n};\n\nexport default function() {\n  var that = this, i = 1;\n  return that._source.slice(that._recordLength).then(function(value) {\n    return value && (value[0] !== 0x1a) ? {done: false, value: that._fields.reduce(function(p, f) {\n      p[f.name] = types[f.type](that._decode(value.subarray(i, i += f.length)));\n      return p;\n    }, {})} : {done: true, value: undefined};\n  });\n}\n","export default function(value) {\n  return value.trim() || null;\n}\n","export default function(value) {\n  return new Date(+value.substring(0, 4), value.substring(4, 6) - 1, +value.substring(6, 8));\n}\n","export default function(value) {\n  return /^[nf]$/i.test(value) ? false\n      : /^[yt]$/i.test(value) ? true\n      : null;\n}\n","export default function(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\n","import slice from \"slice-source\";\nimport dbf_cancel from \"./cancel\";\nimport dbf_read from \"./read\";\nimport view from \"../view\";\n\nexport default function(source, decoder) {\n  source = slice(source);\n  return source.slice(32).then(function(array) {\n    var head = view(array);\n    return source.slice(head.getUint16(8, true) - 32).then(function(array) {\n      return new Dbf(source, decoder, head, view(array));\n    });\n  });\n}\n\nfunction Dbf(source, decoder, head, body) {\n  this._source = source;\n  this._decode = decoder.decode.bind(decoder);\n  this._recordLength = head.getUint16(10, true);\n  this._fields = [];\n  for (var n = 0; body.getUint8(n) !== 0x0d; n += 32) {\n    for (var j = 0; j < 11; ++j) if (body.getUint8(n + j) === 0) break;\n    this._fields.push({\n      name: this._decode(new Uint8Array(body.buffer, body.byteOffset + n, j)),\n      type: String.fromCharCode(body.getUint8(n + 11)),\n      length: body.getUint8(n + 16)\n    });\n  }\n}\n\nvar prototype = Dbf.prototype;\nprototype.read = dbf_read;\nprototype.cancel = dbf_cancel;\n","export default function(record) {\n  var i = 40, j, n = record.getInt32(36, true), coordinates = new Array(n);\n  for (j = 0; j < n; ++j, i += 16) coordinates[j] = [record.getFloat64(i, true), record.getFloat64(i + 8, true)];\n  return {type: \"MultiPoint\", coordinates: coordinates};\n};\n","export default function(record) {\n  return {type: \"Point\", coordinates: [record.getFloat64(4, true), record.getFloat64(12, true)]};\n};\n","export default function(record) {\n  var i = 44, j, n = record.getInt32(36, true), m = record.getInt32(40, true), parts = new Array(n), points = new Array(m), polygons = [], holes = [];\n  for (j = 0; j < n; ++j, i += 4) parts[j] = record.getInt32(i, true);\n  for (j = 0; j < m; ++j, i += 16) points[j] = [record.getFloat64(i, true), record.getFloat64(i + 8, true)];\n\n  parts.forEach(function(i, j) {\n    var ring = points.slice(i, parts[j + 1]);\n    if (ringClockwise(ring)) polygons.push([ring]);\n    else holes.push(ring);\n  });\n\n  holes.forEach(function(hole) {\n    polygons.some(function(polygon) {\n      if (ringContainsSome(polygon[0], hole)) {\n        polygon.push(hole);\n        return true;\n      }\n    }) || polygons.push([hole]);\n  });\n\n  return polygons.length === 1\n      ? {type: \"Polygon\", coordinates: polygons[0]}\n      : {type: \"MultiPolygon\", coordinates: polygons};\n};\n\nfunction ringClockwise(ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0, n, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area >= 0;\n}\n\nfunction ringContainsSome(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) {\n    if (c = ringContains(ring, hole[i])) {\n      return c > 0;\n    }\n  }\n  return false;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1],\n        pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) {\n      return 0;\n    }\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) {\n      contains = -contains;\n    }\n  }\n  return contains;\n}\n\nfunction segmentContains(p0, p1, p2) {\n  var x20 = p2[0] - p0[0], y20 = p2[1] - p0[1];\n  if (x20 === 0 && y20 === 0) return true;\n  var x10 = p1[0] - p0[0], y10 = p1[1] - p0[1];\n  if (x10 === 0 && y10 === 0) return false;\n  var t = (x20 * x10 + y20 * y10) / (x10 * x10 + y10 * y10);\n  return t < 0 || t > 1 ? false : t === 0 || t === 1 ? true : t * x10 === x20 && t * y10 === y20;\n}\n","export default function(record) {\n  var i = 44, j, n = record.getInt32(36, true), m = record.getInt32(40, true), parts = new Array(n), points = new Array(m);\n  for (j = 0; j < n; ++j, i += 4) parts[j] = record.getInt32(i, true);\n  for (j = 0; j < m; ++j, i += 16) points[j] = [record.getFloat64(i, true), record.getFloat64(i + 8, true)];\n  return n === 1\n      ? {type: \"LineString\", coordinates: points}\n      : {type: \"MultiLineString\", coordinates: parts.map(function(i, j) { return points.slice(i, parts[j + 1]); })};\n};\n","export default function(a, b) {\n  var ab = new Uint8Array(a.length + b.length);\n  ab.set(a, 0);\n  ab.set(b, a.length);\n  return ab;\n}\n","export default function() {\n  return this._source.cancel();\n}\n","import slice from \"slice-source\";\nimport view from \"../view\";\nimport shp_cancel from \"./cancel\";\nimport parseMultiPoint from \"./multipoint\";\nimport parseNull from \"./null\";\nimport parsePoint from \"./point\";\nimport parsePolygon from \"./polygon\";\nimport parsePolyLine from \"./polyline\";\nimport shp_read from \"./read\";\n\nvar parsers = {\n  0: parseNull,\n  1: parsePoint,\n  3: parsePolyLine,\n  5: parsePolygon,\n  8: parseMultiPoint,\n  11: parsePoint, // PointZ\n  13: parsePolyLine, // PolyLineZ\n  15: parsePolygon, // PolygonZ\n  18: parseMultiPoint, // MultiPointZ\n  21: parsePoint, // PointM\n  23: parsePolyLine, // PolyLineM\n  25: parsePolygon, // PolygonM\n  28: parseMultiPoint // MultiPointM\n};\n\nexport default function(source) {\n  source = slice(source);\n  return source.slice(100).then(function(array) {\n    return new Shp(source, view(array));\n  });\n};\n\nfunction Shp(source, header) {\n  var type = header.getInt32(32, true);\n  if (!(type in parsers)) throw new Error(\"unsupported shape type: \" + type);\n  this._source = source;\n  this._type = type;\n  this._index = 0;\n  this._parse = parsers[type];\n  this.bbox = [header.getFloat64(36, true), header.getFloat64(44, true), header.getFloat64(52, true), header.getFloat64(60, true)];\n}\n\nvar prototype = Shp.prototype;\nprototype.read = shp_read;\nprototype.cancel = shp_cancel;\n","export default function() {\n  return null;\n};\n","function noop() {}\n\nexport default function() {\n  return Promise.all([\n    this._dbf && this._dbf.cancel(),\n    this._shp.cancel()\n  ]).then(noop);\n}\n","import dbf from \"../dbf/index\";\nimport shp from \"../shp/index\";\nimport shapefile_cancel from \"./cancel\";\nimport shapefile_read from \"./read\";\n\nexport default function(shpSource, dbfSource, decoder) {\n  return Promise.all([\n    shp(shpSource),\n    dbfSource && dbf(dbfSource, decoder)\n  ]).then(function(sources) {\n    return new Shapefile(sources[0], sources[1]);\n  });\n}\n\nfunction Shapefile(shp, dbf) {\n  this._shp = shp;\n  this._dbf = dbf;\n  this.bbox = shp.bbox;\n}\n\nvar prototype = Shapefile.prototype;\nprototype.read = shapefile_read;\nprototype.cancel = shapefile_cancel;\n","import concat from \"./concat\";\nimport view from \"../view\";\n\nexport default function() {\n  var that = this;\n  ++that._index;\n  return that._source.slice(12).then(function(array) {\n    if (array == null) return {done: true, value: undefined};\n    var header = view(array);\n\n    // If the record starts with an invalid shape type (see #36), scan ahead in\n    // four-byte increments to find the next valid record, identified by the\n    // expected index, a non-empty content length and a valid shape type.\n    function skip() {\n      return that._source.slice(4).then(function(chunk) {\n        if (chunk == null) return {done: true, value: undefined};\n        header = view(array = concat(array.slice(4), chunk));\n        return header.getInt32(0, false) !== that._index ? skip() : read();\n      });\n    }\n\n    // All records should have at least four bytes (for the record shape type),\n    // so an invalid content length indicates corruption.\n    function read() {\n      var length = header.getInt32(4, false) * 2 - 4, type = header.getInt32(8, true);\n      return length < 0 || (type && type !== that._type) ? skip() : that._source.slice(length).then(function(chunk) {\n        return {done: false, value: type ? that._parse(view(concat(array.slice(8), chunk))) : null};\n      });\n    }\n\n    return read();\n  });\n}\n","export default function cancel() {\n  return this._source.cancel();\n}\n","import path from \"path-source\";\nimport array from \"array-source\";\nimport stream from \"stream-source\";\nimport dbf from \"./dbf/index\";\nimport shapefile from \"./shapefile/index\";\nimport shp from \"./shp/index\";\n\nexport function open(shp, dbf, options) {\n  if (typeof dbf === \"string\") {\n    if (!/\\.dbf$/.test(dbf)) dbf += \".dbf\";\n    dbf = path(dbf, options);\n  } else if (dbf instanceof ArrayBuffer || dbf instanceof Uint8Array) {\n    dbf = array(dbf);\n  } else if (dbf != null) {\n    dbf = stream(dbf);\n  }\n  if (typeof shp === \"string\") {\n    if (!/\\.shp$/.test(shp)) shp += \".shp\";\n    if (dbf === undefined) dbf = path(shp.substring(0, shp.length - 4) + \".dbf\", options).catch(function() {});\n    shp = path(shp, options);\n  } else if (shp instanceof ArrayBuffer || shp instanceof Uint8Array) {\n    shp = array(shp);\n  } else {\n    shp = stream(shp);\n  }\n  return Promise.all([shp, dbf]).then(function(sources) {\n    var shp = sources[0], dbf = sources[1], encoding = \"windows-1252\";\n    if (options && options.encoding != null) encoding = options.encoding;\n    return shapefile(shp, dbf, dbf && new TextDecoder(encoding));\n  });\n}\n\nexport function openShp(source, options) {\n  if (typeof source === \"string\") {\n    if (!/\\.shp$/.test(source)) source += \".shp\";\n    source = path(source, options);\n  } else if (source instanceof ArrayBuffer || source instanceof Uint8Array) {\n    source = array(source);\n  } else {\n    source = stream(source);\n  }\n  return Promise.resolve(source).then(shp);\n}\n\nexport function openDbf(source, options) {\n  var encoding = \"windows-1252\";\n  if (options && options.encoding != null) encoding = options.encoding;\n  encoding = new TextDecoder(encoding);\n  if (typeof source === \"string\") {\n    if (!/\\.dbf$/.test(source)) source += \".dbf\";\n    source = path(source, options);\n  } else if (source instanceof ArrayBuffer || source instanceof Uint8Array) {\n    source = array(source);\n  } else {\n    source = stream(source);\n  }\n  return Promise.resolve(source).then(function(source) {\n    return dbf(source, encoding);\n  });\n}\n\nexport function read(shp, dbf, options) {\n  return open(shp, dbf, options).then(function(source) {\n    var features = [], collection = {type: \"FeatureCollection\", features: features, bbox: source.bbox};\n    return source.read().then(function read(result) {\n      if (result.done) return collection;\n      features.push(result.value);\n      return source.read().then(read);\n    });\n  });\n}\n","export default function() {\n  var that = this;\n  return Promise.all([\n    that._dbf ? that._dbf.read() : {value: {}},\n    that._shp.read()\n  ]).then(function(results) {\n    var dbf = results[0], shp = results[1];\n    return shp.done ? shp : {\n      done: false,\n      value: {\n        type: \"Feature\",\n        properties: dbf.value,\n        geometry: shp.value\n      }\n    };\n  });\n};\n"],"names":["PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ft","to_meter","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","txt","parser","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","d2r","input","wkt","lisp","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","projStr","testProj","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","len","n","start","get","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","militargeographische_institut","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","ep2","datum_type","grids","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","sphere_","Ellipsoid","dc_sphere","ecc","a2","b2","dc_eccentricity","getNadgrids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","outer","subgrids","j","jj","subgrid","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","checkProj","oProj","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","projectionName","isTypeA","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","beta","authlat","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","f_df","max_err","iters","upd","newton_rapshon","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","EPS10","e_fwd","am1","e_inv","s_fwd","cphi1","s_inv","proj4","Proj","common","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","nadgrid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne","includedProjections","ArraySource","_array","url","fetch","then","response","body","getReader","arrayBuffer","Promise","resolve","reject","request","XMLHttpRequest","responseType","onload","onerror","ontimeout","open","send","path","fetchPath","requestPath","stream","read","done","cancel","SliceSource","_source","empty","_index","subarray","types","readNumber","Date","byteOffset","byteLength","decoder","head","getUint16","Dbf","_decode","_recordLength","_fields","getUint8","coordinates","parts","points","polygons","holes","ring","ringClockwise","hole","polygon","ringContains","ringContainsSome","contains","xi","yi","pj","xj","yj","segmentContains","p0","p1","p2","x20","y20","x10","y10","parsers","parsePoint","parsePolyLine","parsePolygon","parseMultiPoint","Shp","_type","_parse","noop","Shapefile","shp","dbf","_shp","_dbf","skip","chunk","options","ArrayBuffer","catch","all","sources","encoding","shpSource","dbfSource","shapefile","TextDecoder","features","collection","results","properties","geometry"],"sourceRoot":""}