{"version":3,"file":"static/js/5.009eeb16.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/04_PolynomialRegression/index.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs'\r\nimport '@tensorflow/tfjs-backend-webgl';\r\n\r\nimport { RendererCanvas, Vector3, remap, PolynomialRegression } from '../../../../lib';\r\n\r\nexport class Solution extends RendererCanvas {\r\n    t = 0.0;\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: Vector3[] = [];\r\n    selVec: Vector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    container: HTMLDivElement;\r\n\r\n    constructor(id: string) {\r\n        const divHost = document.getElementById(id);\r\n    \r\n        const container = document.createElement('div');\r\n        super(container);\r\n\r\n        divHost.appendChild(container);\r\n        container.id = 'container-lab'\r\n        container.style.alignItems = 'center';\r\n        container.style.marginTop = '50px';\r\n        container.style.marginLeft = 'auto';\r\n        container.style.marginRight = 'auto';\r\n        container.style.width = '600px';\r\n        container.style.height = '600px';\r\n        this.container = container;\r\n        this.canvas.width = 600;\r\n        this.canvas.height = 600;\r\n\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n\r\n        getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vs.push(new Vector3(\r\n                    remap(x, xMin, xMax, -0.9, 0.9),\r\n                    remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n        this.initUI();\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public destroy(): void {\r\n    //     console.log('???');\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.container.parentElement) {\r\n                this.container.parentElement.removeChild(this.container);\r\n            }\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        this.RenderIndependentCanvas(ctx);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        const m = new Vector3(this.mapX(x), this.mapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (Vector3.distanceTo(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new Vector3(this.mapX(x), this.mapY(y)));\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.mapX(x);\r\n            this.selVec.y = this.mapY(y);\r\n        }\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        const m = new Vector3(this.mapX(x), this.mapY(y));\r\n        this.vs.push(new Vector3(m.x, m.y))\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        let selVec: undefined | Vector3 = undefined;\r\n        const m = new Vector3(this.mapX(x), this.mapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = Vector3.distanceTo(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    public keyDown(k: KeyboardEvent): void {\r\n        // TODO\r\n    }\r\n    mapX(v: number) {\r\n        return remap(v, 0, this.canvas.width, -1, 1);\r\n    }\r\n    mapY(v: number) {\r\n        return remap(v, 0, this.canvas.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.canvas.width / 20 - 1;\r\n        const yInterval = this.canvas.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.canvas.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.canvas.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.t += 5\r\n    //     console.log(this.t)\r\n        const len = Math.floor(this.t) < this.vs.length ? Math.floor(this.t) : this.vs.length;\r\n\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#222';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < len; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                remap(this.vs[i].x, -1, 1, 0, this.canvas.width),\r\n                remap(this.vs[i].y, -1, 1, this.canvas.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                remap(this.selVec.x, -1, 1, 0, this.canvas.width),\r\n                remap(this.selVec.y, -1, 1, this.canvas.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(remap(curveX[0], -1, 1, 0, this.canvas.width), remap(curveY[0], -1, 1, this.canvas.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(remap(curveX[i], -1, 1, 0, this.canvas.width), remap(curveY[i], -1, 1, this.canvas.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    public initUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.marginTop = '600px';\r\n        // div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n        // div.style.background = '#000';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        this.divHost.append(div);\r\n    }\r\n}\r\n\r\nconst getData = async () => {\r\n    const carsDataResponse = await fetch('https://storage.googleapis.com/tfjs-tutorials/carsData.json');\r\n    const carsData = await carsDataResponse.json();\r\n    const cleaned = carsData.map(car => ({\r\n      mpg: car.Miles_per_Gallon,\r\n      horsepower: car.Horsepower,\r\n    }))\r\n    .filter(car => (car.mpg != null && car.horsepower != null));\r\n  \r\n    return cleaned;\r\n};"],"names":["Solution","id","divHost","document","getElementById","container","createElement","t","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","selVec","undefined","col","tfLinearRegression","appendChild","style","alignItems","marginTop","marginLeft","marginRight","width","height","canvas","push","PolynomialRegression","getData","then","d","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","map","data","x","y","Vector3","remap","initUI","start","this","isStatic","parentElement","removeChild","lastElementChild","error","ctx","RenderIndependentCanvas","m","mapX","mapY","i","length","k","v","strokeStyle","xInterval","yInterval","lineWidth","x0","y0","x1","y1","beginPath","moveTo","lineTo","stroke","len","Math","floor","fillStyle","rect","closePath","fill","GridLine","xx","yy","train","RenderLine","arc","PI","font","textAlign","fillText","toFixed","curveX","ys","tf","predict","curveY","dataSync","dispose","div","position","color","textContent","append","marginBottom","RendererCanvas","fetch","carsDataResponse","json","carsData","cleaned","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter"],"sourceRoot":""}