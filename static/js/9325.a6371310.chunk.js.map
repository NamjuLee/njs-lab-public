{"version":3,"file":"static/js/9325.a6371310.chunk.js","mappings":"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","sources":["njslab/Project/Project_03_SlowZone/UI/index.ts","njslab/Project/Project_03_SlowZone/DataProcessTweets/TweetData/index.ts","njslab/Project/Project_03_SlowZone/DataProcessTweets/index.ts","njslab/Project/Project_03_SlowZone/Tint/FilterGLViewDarkForDarken.ts","njslab/Project/Project_03_SlowZone/index.ts"],"sourcesContent":["import { Solution } from '../';\r\nexport class UI {\r\n    solution: Solution;\r\n    hostDiv: HTMLElement;\r\n\r\n    isActive_high_low_connectedness_user = false;\r\n    isActive_Paris_main_st = true;\r\n    isActive_treated_st = false;\r\n    isActive_control_st = false;\r\n    isActive_zones_30 = false;\r\n\r\n\r\n    month: number = -1;\r\n\r\n    constructor(solution: Solution) {\r\n        this.solution = solution;\r\n        this.hostDiv = solution.hostDiv;\r\n        this.appendUI();\r\n    }\r\n    public appendUI(){\r\n\r\n        const mainMenu = document.createElement('div');\r\n        mainMenu.style.position = 'absolute';\r\n        this.hostDiv.append(mainMenu);\r\n\r\n        let checkBoxUIA = getCheckBox('high_low_connectedness_user');\r\n        mainMenu.append(checkBoxUIA.div);\r\n        checkBoxUIA.checkBox.onchange = () => {\r\n            if (checkBoxUIA.checkBox.checked === true){\r\n                this.isActive_high_low_connectedness_user = true;\r\n\r\n            } else {\r\n                this.isActive_high_low_connectedness_user = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUIB = getCheckBox('main street');\r\n        mainMenu.append(checkBoxUIB.div);\r\n        checkBoxUIB.checkBox.checked = true;\r\n        checkBoxUIB.checkBox.onchange = () => {\r\n            if (checkBoxUIB.checkBox.checked === true){\r\n                this.isActive_Paris_main_st = true;\r\n            } else {\r\n                this.isActive_Paris_main_st = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUIC = getCheckBox('treated street');\r\n        mainMenu.append(checkBoxUIC.div);\r\n        checkBoxUIC.checkBox.onchange = () => {\r\n            if (checkBoxUIC.checkBox.checked === true){\r\n                this.isActive_treated_st = true;\r\n            } else {\r\n                this.isActive_treated_st = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUID = getCheckBox('control street');\r\n        mainMenu.append(checkBoxUID.div);\r\n        checkBoxUID.checkBox.onchange = () => {\r\n            if (checkBoxUID.checkBox.checked === true){\r\n                this.isActive_control_st = true;\r\n            } else {\r\n                this.isActive_control_st = false;\r\n            }\r\n        }\r\n\r\n        \r\n        let checkBoxUIE = getCheckBox('zones 30');\r\n        mainMenu.append(checkBoxUIE.div);\r\n        checkBoxUIE.checkBox.onchange = () => {\r\n            if (checkBoxUIE.checkBox.checked === true){\r\n                this.isActive_zones_30 = true;\r\n            } else {\r\n                this.isActive_zones_30 = false;\r\n            }\r\n        }\r\n\r\n        let slider = getSlider('Month') \r\n        mainMenu.append(slider.div);\r\n\r\n        slider.slider.onchange = () => {\r\n           this.month = +slider.slider.value;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst getCheckBox = (title: string) => {\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const checkBox = document.createElement('input');\r\n    checkBox.type = 'checkbox';\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(checkBox);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, checkBox\r\n    }\r\n};\r\n\r\nconst getSlider = (title: string) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = '0';\r\n    slider.max = '12';\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider\r\n    }\r\n};","\r\nexport class TweetData {\r\n    t: number = 0.1;\r\n    color: string = 'rgba(10, 250, 10, 0.8)';\r\n    lon: number;\r\n    lat: number;\r\n    userID: number;\r\n    streetID: number;\r\n    year: number;\r\n    month: number;\r\n    day: number;\r\n    constructor(lon: number, lat: number, userID: number, streetID: number, year: number, month: number, day: number) {\r\n        this.lon = lon;\r\n        this.lat = lat;\r\n        this.userID = userID;\r\n        this.streetID = streetID;\r\n        this.year = year;\r\n        this.month = month;\r\n        this.day = day;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, toScreen: (x: number, y: number)=> number[]) {\r\n        this.t += 0.1;\r\n\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n\r\n        const projected = toScreen(this.lon, this.lat);\r\n        ctx.arc(projected[0], projected[1], (Math.sin(this.t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n\r\n        ctx.fill();\r\n    }\r\n}","import { Solution } from '..';\r\nimport { getCSVFromURL } from 'njscore';\r\nimport { TweetData } from './TweetData';\r\nexport class DataProcessTweets {\r\n    solution: Solution;\r\n\r\n    domains;\r\n\r\n    tweetDataArray: TweetData[] = [];\r\n    active = false;\r\n    constructor(solution: Solution, path) {\r\n        this.solution = solution;\r\n\r\n        this.domains = {\r\n            userID: new Domain('user-id'),\r\n            streetID: new Domain('street-id'),\r\n            year: new Domain('year'),\r\n            month: new Domain('month'),\r\n            day: new Domain('day'),\r\n        }\r\n\r\n        getCSVFromURL(path).then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            console.log(line)\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                // console.log(values[5])\r\n                const lon = parseFloat(values[5].replaceAll('\"', ''));\r\n                const lat = parseFloat(values[6].replaceAll('\"', ''));\r\n\r\n                const userID = parseFloat(values[8].replaceAll('\"', ''));\r\n                const streetID = parseFloat(values[3].replaceAll('\"', ''));\r\n                const year = parseFloat(values[9].replaceAll('\"', ''));\r\n                const month = parseFloat(values[10].replaceAll('\"', ''));\r\n                const day = parseFloat(values[11].replaceAll('\"', ''));\r\n\r\n                this.domains.userID.compute(userID);\r\n                this.domains.streetID.compute(streetID);\r\n                this.domains.year.compute(year);\r\n                this.domains.month.compute(month);\r\n                this.domains.day.compute(day);\r\n\r\n                console.log(lat, lon, userID, year, month, day, streetID)\r\n                if (lon !== 0 || lat !== 0) {\r\n                    let tweetData = new TweetData(lon, lat, userID, streetID, year, month, day);\r\n                    this.tweetDataArray.push(tweetData)\r\n                }\r\n                this.active = true;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    public process() {\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        if (!this.active) { return; } \r\n        this.tweetDataArray.map( (d: TweetData) => {\r\n\r\n            if(d.month === this.solution.ui.month || this.solution.ui.month < 1) {\r\n                d.render(ctx, this.solution.toScreen);\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\n\r\n\r\nclass Domain {\r\n    title: string;\r\n    min: number = Number.MAX_VALUE\r\n    max: number = Number.MIN_VALUE\r\n    constructor(titie: string) {\r\n        this.title = titie;\r\n    }\r\n    public compute(value: number) {\r\n        this.min = value < this.min ? value : this.min; \r\n        this.max = value > this.max ? value : this.max; \r\n    }\r\n}\r\n","import { NVector3, GLShaderCommon } from '../../../../lib/NJSCore';\n\n// import { Mat3 } from '../../AppCore/GLUtility/Mat3';\n\nexport class FilterGLViewDarkForDarken {\n\n    gl: WebGLRenderingContext;\n    program: WebGLProgram;\n    fragmentShader: WebGLShader;\n    vertexShader: WebGLShader;\n    matrixLocation: WebGLProgram;\n    posBuffer: WebGLBuffer;\n    colBuffer: WebGLBuffer;\n    vertexs: Float32Array;\n\n    posLocAtt: number;\n    colLocAtt: number;\n    matLoc: WebGLUniformLocation;\n    colLoc: WebGLUniformLocation;\n    cVecLoc: WebGLUniformLocation;\n    mouseLoc: WebGLUniformLocation;\n    timeGL: WebGLUniformLocation;\n    // startTime: number;\n    // randomSeed: number;\n\n    vShader: WebGLShader;\n    fShader: WebGLShader;\n\n    v = `\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    \n    varying vec4 f_color;\n\n    void main() {\n\n        vec2 mouse_distance = vec2(0,0) - (a_position.xy /vec2(2,2));\n        float red = 1.0 - length(mouse_distance);\n        f_color = vec4(a_position, 0, 1.0);\n    \n        // float dis = distance(vec2(a_position.xy), vec2(0,0));\n\n        // f_color = vec4(dis * 0.6, 0,0,1);\n        gl_Position = vec4( a_position, 0, 1);\n    }\n    `;\n\n    f = `\n    precision highp float;\n\n    varying vec4 f_color;\n    \n    void main() {\n        vec2 mouse_distance = vec2(0,0) - (f_color.xy /vec2(5,5));\n\n        float col =  length(mouse_distance*5.);\n        float val = 1.0 - length(mouse_distance*8.);\n        \n        gl_FragColor = vec4(0.19,0.19,0.19, col);\n\n    }\n    `;\n\n    positionAttribLocation: WebGLProgram;\n    colorAttribLocation: WebGLProgram;\n    translation: NVector3;\n    color: number[];\n    colArray: Float32Array;\n\n    constructor(gl: WebGLRenderingContext, xt: number = 100, yt: number = 100, zt: number = 0, xs: number = 1, ys: number = 1, zs: number = 1) {\n        this.gl = gl;\n        // this.translation = new NVector3(xt, yt, zt);\n        // this.angleInRadians = 0;\n        // this.scale = new NVector3(xs, ys, zs);\n        this.color = [Math.random(), Math.random(), Math.random(), 1];\n        this.InitShader();\n    }\n    InitShader() {\n        // let vShader = GLUtility.CreateShaderFromPath(this.gl, this.gl.VERTEX_SHADER,'/shader/vsCanvas.glsl');\n        // let fShader = GLUtility.CreateShaderFromPath(this.gl, this.gl.FRAGMENT_SHADER, '/shader/fsColor.glsl');\n\n        let vShader = GLShaderCommon.CreateShader(this.gl, this.gl.VERTEX_SHADER, this.v); // '/shader/vsCanvas.glsl');\n        let fShader = GLShaderCommon.CreateShader(this.gl, this.gl.FRAGMENT_SHADER, this.f); // '/shader/fsColor.glsl');\n\n        if (vShader && fShader) {\n            this.vShader = vShader;\n            this.fShader = fShader;\n            let program = GLShaderCommon.CreateProgram(this.gl, vShader, fShader);\n            if (program) { this.program = program; }\n        }\n\n        // this.InitVerext();\n    }\n    Render(gl: WebGLRenderingContext) {\n\n        let col = [0.1, 0, 0, 1];\n\n        this.vertexs = new Float32Array([\n            // left column\n            -1, -1, 1, 1, 1, 1,\n            - 1, 1, col[0], col[1], col[2], col[3],\n            1, -1, col[0], col[1], col[2], col[3],\n\n            -1, 1, 1, 1, 1, 1,\n            1, -1, col[0], col[1], col[2], col[3],\n            1, 1, col[0], col[1], col[2], col[3],\n\n        ]);\n\n        this.posBuffer = this.gl.createBuffer() as WebGLBuffer;\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.posBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(this.vertexs), gl.STATIC_DRAW);\n\n        this.posLocAtt = this.gl.getAttribLocation(this.program, 'a_position');\n        // Tell the attribute how to get data out of posBuffer (ARRAY_BUFFER)\n        let size = 2;          // 2 components per iteration\n        let type = gl.FLOAT;   // the data is 32bit floats\n        let normalize = false; // don't normalize the data\n        let stride = 6 * Float32Array.BYTES_PER_ELEMENT; // 0 = move forward size * sizeof(type) each iteration to get the next position\n        let offset = 0;        // start at the beginning of the buffer\n        gl.vertexAttribPointer(this.posLocAtt, size, type, normalize, stride, offset);\n        gl.enableVertexAttribArray(this.posLocAtt);\n\n        // this.colLocAtt = this.gl.getAttribLocation(this.program, 'a_color');\n        // size = 4;          // 2 components per iteration\n        // type = gl.FLOAT;   // the data is 32bit floats\n        // normalize = false; // don't normalize the data\n        // stride = 6 * Float32Array.BYTES_PER_ELEMENT; // 0 = move forward size * sizeof(type) each iteration to get the next position\n        // offset = 2 * Float32Array.BYTES_PER_ELEMENT;        // start at the beginning of the buffer\n        // gl.vertexAttribPointer(this.colLocAtt, size, type, normalize, stride, offset);\n        // gl.enableVertexAttribArray(this.colLocAtt);\n\n        gl.useProgram(this.program);\n        let primitiveType = gl.TRIANGLES; // LINE_LOOP; // gl.TRIANGLE_STRIP;\n        offset = 0;\n        let count = 6; // this.vertexs.length * 0.5;\n        gl.drawArrays(primitiveType, offset, count);\n\n    }\n}","import { RendererJSAPI } from '../../../lib';\r\nimport { getCSVFromURL, getJSONFromURL } from 'njscore';\r\nimport { UI } from './UI';\r\nimport { DataProcessTweets } from './DataProcessTweets';\r\n\r\nimport { FilterGLViewDarkForDarken } from './Tint/FilterGLViewDarkForDarken';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: number[][] = [];\r\n\r\n    routesMain: any = [];\r\n    routesTreated: any = [];\r\n    routesControl: any = [];\r\n    zones30: any = [];\r\n\r\n    ui: UI\r\n\r\n    dataProcessTweets: DataProcessTweets;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        \r\n        const canvasGL = document.createElement('canvas');\r\n        canvasGL.style.position = 'absolute';\r\n        canvasGL.style.pointerEvents = 'none';\r\n        canvasGL.style.mixBlendMode = 'overlay';\r\n        canvasGL.width = this.mView.container.clientWidth;\r\n        canvasGL.height = this.mView.container.clientHeight;\r\n        this.mView.container.appendChild(canvasGL);\r\n        const glCtx = canvasGL.getContext('webgl');\r\n        const d = new FilterGLViewDarkForDarken(glCtx, 0.5, 5)\r\n        d.Render(glCtx);\r\n\r\n\r\n        \r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.id = 'layer';\r\n        canvas.width = this.mView.container.clientWidth;\r\n        canvas.height = this.mView.container.clientHeight;\r\n        canvas.style.background = 'rgba(0, 15, 0, 0.4)';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.pointerEvents = 'none';\r\n        this.mView.container.appendChild(canvas);\r\n\r\n\r\n        this.ui = new UI(this);\r\n\r\n        const path = '/static/research/slow-zone/'\r\n\r\n\r\n        this.dataProcessTweets = new DataProcessTweets(this, process.env.PUBLIC_URL + path + 'tweets_10pct_lat-lon_sample.csv');\r\n\r\n\r\n\r\n        getCSVFromURL(process.env.PUBLIC_URL + path + 'high_low_connectedness_user.csv').then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            // console.log(line)\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                const lon = +values[3];\r\n                const lat = +values[4];\r\n                if (lon !== 0 || lat !== 0) {\r\n                    this.pts.push([lon, lat]);\r\n                }\r\n            }\r\n            // console.log(this.pts);\r\n            this.center(2.3375387, 48.8606701);\r\n            this.zoom(12);\r\n        });\r\n\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'Paris-main-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesMain.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'treated-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesTreated.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'control-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesControl.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL(process.env.PUBLIC_URL + path + 'zones-30.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.zones30.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n            console.log(this.zones30)\r\n            this.start();\r\n        });\r\n\r\n\r\n\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.globalCompositeOperation = 'screen'; //'lighten';\r\n\r\n        if (this.ui.isActive_zones_30) {\r\n            renderMultiPolygon(ctx, this.zones30, '#0000ff39', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_Paris_main_st) {\r\n            renderLine(ctx, this.routesMain, '#00FFFF', 0.5, this.toScreen);\r\n        }\r\n\r\n        if (this.ui.isActive_control_st) {\r\n            renderLine(ctx, this.routesControl, '#ff0000', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_treated_st) {\r\n            renderLine(ctx, this.routesTreated, '#00ff00', 0.5, this.toScreen);\r\n        }\r\n\r\n        if (this.ui.isActive_high_low_connectedness_user) {\r\n            // for (let i = 0; i < this.pts.length; ++i) {\r\n            //     const projected = this.toScreen(this.pts[i][0], this.pts[i][1]);\r\n            //     renderPoint(ctx, projected[0], projected[1], this.time + 3, 'rgba(255, 0, 0, 0.85)');\r\n            // }\r\n\r\n            this.dataProcessTweets.render(ctx);\r\n        }\r\n\r\n        // this.isStatic = true;\r\n    }\r\n    keyDown(k: KeyboardEvent): void {\r\n        console.log('key pressed', k);\r\n    }\r\n    mouseDown(x: number, y: number): void {\r\n        console.log('mouse down')\r\n    }\r\n    mouseUp(x: number, y: number): void {\r\n        console.log('mouse up')\r\n    }\r\n    mouseClick(x: number, y: number): void {\r\n        console.log(x, y)\r\n        const mapProjected = this.toMap(x, y);\r\n        this.pts.push(mapProjected);\r\n    }\r\n    mouseMove(x: number, y: number) {\r\n\r\n    }\r\n}\r\n\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n}\r\n\r\nconst renderLine = (ctx: CanvasRenderingContext2D, paths: any, color: string, lineWidth: number, toScreen: (x: number, y: number) => number[]) => {\r\n    ctx.strokeStyle = color;\r\n    for (let i = 0; i < paths.length; ++i) {\r\n        const route = paths[i]\r\n\r\n        for (let j = 0; j < route.length; ++j) {\r\n\r\n            let projected = toScreen(route[j][0][0], route[j][0][1]);\r\n            const path = new Path2D();\r\n            path.moveTo(projected[0], projected[1]);\r\n\r\n            for (let k = 1; k < route[j].length; ++k) {\r\n                projected = toScreen(route[j][k][0], route[j][k][1]);\r\n                path.lineTo(projected[0], projected[1]);\r\n            }\r\n\r\n            ctx.lineWidth = lineWidth; // Math.sin(lineWidth * 1.5) + 1.15;\r\n            ctx.stroke(path);\r\n        }\r\n    }\r\n};\r\n\r\nconst renderMultiPolygon = (ctx: CanvasRenderingContext2D, multiPolygons: any, color: string, lineWidth: number, toScreen: (x: number, y: number) => number[]) => {\r\n    // if (multiPolygons === undefined) return;\r\n\r\n    ctx.fillStyle = color;\r\n    for (let multi = 0; multi < multiPolygons.length; ++multi) {\r\n        const multiPolygon = multiPolygons[multi];\r\n\r\n        for (let polyI = 0; polyI < multiPolygon.length; ++polyI) {\r\n            const polygon = multiPolygon[polyI];\r\n\r\n            if (polygon.length === 1) {\r\n                const thePolygon = polygon[0];\r\n\r\n                let pl = thePolygon[0];\r\n                // console.log('pl', pl)\r\n                let lon = pl[0];\r\n                let lat = pl[1];\r\n                let projected = toScreen(lon, lat);\r\n\r\n                ctx.beginPath();\r\n                ctx.moveTo(projected[0], projected[1]);\r\n\r\n                for (let i = 1; i < thePolygon.length; ++i) {\r\n\r\n                    pl = thePolygon[i];\r\n                    lon = pl[0];\r\n                    lat = pl[1];\r\n                    projected = toScreen(lon, lat);\r\n                    ctx.lineTo(projected[0], projected[1]);\r\n                }\r\n                ctx.closePath();\r\n                ctx.fill();\r\n\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n"],"names":["UI","solution","hostDiv","isActive_high_low_connectedness_user","isActive_Paris_main_st","isActive_treated_st","isActive_control_st","isActive_zones_30","month","this","appendUI","mainMenu","document","createElement","style","position","append","checkBoxUIA","getCheckBox","div","checkBox","onchange","checked","checkBoxUIB","checkBoxUIC","checkBoxUID","checkBoxUIE","slider","getSlider","value","title","display","type","text","textContent","color","appendChild","min","max","TweetData","lon","lat","userID","streetID","year","day","t","ctx","toScreen","fillStyle","beginPath","projected","arc","Math","sin","PI","closePath","fill","DataProcessTweets","path","domains","tweetDataArray","active","Domain","getCSVFromURL","then","d","line","split","console","log","i","length","values","parseFloat","replaceAll","compute","tweetData","push","map","ui","render","titie","Number","MAX_VALUE","MIN_VALUE","FilterGLViewDarkForDarken","gl","program","fragmentShader","vertexShader","matrixLocation","posBuffer","colBuffer","vertexs","posLocAtt","colLocAtt","matLoc","colLoc","cVecLoc","mouseLoc","timeGL","vShader","fShader","v","f","positionAttribLocation","colorAttribLocation","translation","colArray","random","InitShader","GLShaderCommon","VERTEX_SHADER","FRAGMENT_SHADER","col","Float32Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","getAttribLocation","FLOAT","stride","BYTES_PER_ELEMENT","offset","vertexAttribPointer","enableVertexAttribArray","useProgram","primitiveType","TRIANGLES","drawArrays","Solution","view","pts","routesMain","routesTreated","routesControl","zones30","dataProcessTweets","canvasGL","pointerEvents","mixBlendMode","width","mView","container","clientWidth","height","clientHeight","glCtx","getContext","Render","canvas","id","background","process","center","zoom","getJSONFromURL","data","start","globalCompositeOperation","renderMultiPolygon","renderLine","k","x","y","mapProjected","toMap","RendererJSAPI","paths","lineWidth","strokeStyle","route","j","Path2D","moveTo","lineTo","stroke","multiPolygons","multi","multiPolygon","polyI","polygon","thePolygon","pl"],"sourceRoot":""}